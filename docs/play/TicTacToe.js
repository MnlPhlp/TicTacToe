/* Generated by the Nim Compiler v0.20.0 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI206085 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211139 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211104 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI206031 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI148673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211740 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211738 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211736 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211734 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211730 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211732 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211828 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211815 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211802 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211789 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211776 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211763 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI207147 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI204662 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3886 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI86832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI89647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3830 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3844 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI172587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI190211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI166297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI166298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI171761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171150 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI171713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI171701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI171714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI171705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI162448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI162227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI162565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI190207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI190209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI162283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI20156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3914 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3908 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI203041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI203033 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI203036 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI203034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI211020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211019 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI211018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
NTI211020.base = NTI104;
NTI211019.base = NTI211020;
var NNI211018 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI211019, name: "field", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI104, name: "size", sons: null}, 
{kind: 1, offset: "winCount", len: 0, typ: NTI104, name: "winCount", sons: null}]};
NTI211018.node = NNI211018;
var NNI203041 = {kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null};
NTI203041.node = NNI203041;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI203041.base = NTI3808;
NTI203033.base = NTI203041;
NTI203036.base = NTI203033;
var NNI203034 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "player_count", len: 0, typ: NTI104, name: "player_count", sons: null}, 
{kind: 1, offset: "players", len: 0, typ: NTI203036, name: "players", sons: null}, 
{kind: 1, offset: "current_player_number", len: 0, typ: NTI104, name: "current_player_number", sons: null}, 
{kind: 1, offset: "winner_player_number", len: 0, typ: NTI104, name: "winner_player_number", sons: null}]};
NTI203034.node = NNI203034;
NTI203034.base = NTI3808;
NTI211018.base = NTI203034;
NTI3908.base = NTI3826;
NTI3914.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3908, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3914, name: "up", sons: null}]};
NTI3826.node = NNI3826;
NTI3826.base = NTI3808;
var NNI20156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI20156.node = NNI20156;
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3828.base = NTI3826;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
NTI3858.base = NTI3828;
var NNI162283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI162283.node = NNI162283;
NTI162283.base = NTI3808;
var NNI190207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI190207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI190207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI190207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI190207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI190207, name: "pkDetach", len: 0, sons: null}}};
NTI190207.node = NNI190207;
NTI162561.base = NTI162229;
NTI162563.base = NTI162229;
NTI162565.base = NTI162229;
var NNI162227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI162227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI162227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI162227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI162227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI162227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI162227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI162227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI162227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI162227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI162227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI162227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI162227, name: "NotationNode", len: 0, sons: null}}};
NTI162227.node = NNI162227;
NTI162281.base = NTI162283;
var NNI162231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI162561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI162563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI162565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI162229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI162229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI162229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI162227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI162229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI162229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI162281, name: "style", sons: null}]};
NTI162231.node = NNI162231;
var NNI162205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI162372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI162376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI162380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI162384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI162388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI162392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI162396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI162400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI162404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI162408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI162412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI162416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI162420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI162424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI162428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI162432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI162436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI162440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI162444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI162448, name: "onunload", sons: null}]};
NTI162205.node = NNI162205;
NTI162205.base = NTI3808;
NTI162231.base = NTI162205;
NTI162229.base = NTI162231;
var NNI171028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI171028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI171028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI171028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI171028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI171028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI171028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI171028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI171028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI171028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI171028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI171028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI171028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI171028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI171028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI171028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI171028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI171028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI171028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI171028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI171028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI171028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI171028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI171028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI171028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI171028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI171028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI171028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI171028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI171028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI171028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI171028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI171028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI171028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI171028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI171028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI171028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI171028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI171028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI171028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI171028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI171028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI171028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI171028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI171028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI171028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI171028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI171028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI171028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI171028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI171028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI171028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI171028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI171028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI171028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI171028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI171028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI171028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI171028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI171028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI171028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI171028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI171028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI171028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI171028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI171028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI171028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI171028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI171028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI171028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI171028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI171028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI171028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI171028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI171028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI171028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI171028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI171028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI171028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI171028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI171028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI171028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI171028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI171028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI171028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI171028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI171028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI171028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI171028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI171028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI171028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI171028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI171028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI171028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI171028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI171028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI171028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI171028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI171028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI171028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI171028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI171028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI171028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI171028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI171028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI171028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI171028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI171028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI171028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI171028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI171028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI171028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI171028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI171028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI171028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI171028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI171028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI171028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI171028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI171028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI171028, name: "menu", len: 0, sons: null}}};
NTI171028.node = NNI171028;
NTI171720.base = NTI171705;
NTI171722.base = NTI140;
var NNI171150 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI171150, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI171150, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI171150, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI171150, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI171150, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI171150, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI171150, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI171150, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI171150, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI171150, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI171150, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI171150, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI171150, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI171150, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI171150, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI171150, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI171150, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI171150, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI171150, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI171150, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI171150, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI171150, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI171150, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI171150, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI171150, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI171150, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI171150, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI171150, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI171150, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI171150, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI171150, name: "onkeyuplater", len: 0, sons: null}}};
NTI171150.node = NNI171150;
var NNI171713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI171150, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI171757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI171761, name: "Field2", sons: null}]};
NTI171713.node = NNI171713;
NTI171701.base = NTI171713;
var NNI166297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI166297.node = NNI166297;
NTI166298.base = NTI166297;
var NNI171714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI171028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI171720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI171722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI171701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI166298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI162229, name: "dom", sons: null}]};
NTI171714.node = NNI171714;
NTI171714.base = NTI3808;
NTI171705.base = NTI171714;
var NNI190209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI190207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI162229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI162229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI171705, name: "n", sons: null}]};
NTI190209.node = NNI190209;
var NNI190211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI171705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI171705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI190211.node = NNI190211;
NTI172587.base = NTI140;
var NNI3844 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3844.node = NNI3844;
NTI3844.base = NTI3842;
var NNI3852 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3852.node = NNI3852;
var NNI3830 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3830.node = NNI3830;
NTI3830.base = NTI3826;
NTI3852.base = NTI3830;
var NNI3862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3862.node = NNI3862;
NTI3862.base = NTI3828;
var NNI89647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI86832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI89647.node = NNI89647;
var NNI3860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3860.node = NNI3860;
NTI3860.base = NTI3828;
var NNI3886 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3886.node = NNI3886;
NTI3886.base = NTI3828;
NTI204662.base = NTI138;
var NNI207147 = {kind: 1, offset: "depth", len: 0, typ: NTI104, name: "depth", sons: null};
NTI207147.node = NNI207147;
NTI207147.base = NTI203041;
NTI211763.base = NTI104;
NTI211776.base = NTI104;
NTI211789.base = NTI104;
NTI211802.base = NTI104;
NTI211815.base = NTI104;
NTI211828.base = NTI104;
NTI211732.base = NTI104;
NTI211730.base = NTI104;
NTI211734.base = NTI104;
NTI211736.base = NTI104;
NTI211738.base = NTI104;
NTI211740.base = NTI104;
NTI148673.base = NTI138;
NTI206031.base = NTI203033;
NTI211104.base = NTI104;
NTI211139.base = NTI211104;
NTI206085.base = NTI138;

function cstrToNimstr(c_22275) {
		  var ln = c_22275.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_22275.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_22275.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_23227, src_23228, ti_23229) {
	var result_23419 = null;

		switch (ti_23229.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_23201(ti_23229))) {
			result_23419 = src_23228;
			}
			else {
				result_23419 = [src_23228[0], src_23228[1]];
			}
			
			break;
		case 19:
			      if (dest_23227 === null || dest_23227 === undefined) {
        dest_23227 = {};
      }
      else {
        for (var key in dest_23227) { delete dest_23227[key]; }
      }
      for (var key in src_23228) { dest_23227[key] = src_23228[key]; }
      result_23419 = dest_23227;
    
			break;
		case 18:
		case 17:
			if (!((ti_23229.base == null))) {
			result_23419 = nimCopy(dest_23227, src_23228, ti_23229.base);
			}
			else {
			if ((ti_23229.kind == 17)) {
			result_23419 = (dest_23227 === null || dest_23227 === undefined) ? {m_type: ti_23229} : dest_23227;
			}
			else {
				result_23419 = (dest_23227 === null || dest_23227 === undefined) ? {} : dest_23227;
			}
			}
			nimCopyAux(result_23419, src_23228, ti_23229.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_23228 === null) {
        result_23419 = null;
      }
      else {
        if (dest_23227 === null || dest_23227 === undefined) {
          dest_23227 = new Array(src_23228.length);
        }
        else {
          dest_23227.length = src_23228.length;
        }
        result_23419 = dest_23227;
        for (var i = 0; i < src_23228.length; ++i) {
          result_23419[i] = nimCopy(result_23419[i], src_23228[i], ti_23229.base);
        }
      }
    
			break;
		case 28:
			      if (src_23228 !== null) {
        result_23419 = src_23228.slice(0);
      }
    
			break;
		default: 
			result_23419 = src_23228;
			break;
		}

	return result_23419;

}

function makeNimstrLit(c_22258) {
		  var ln = c_22258.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_22258.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_23486, value_23487, typ_23488) {
		    var result = new Array(len_23486);
    for (var i = 0; i < len_23486; ++i) result[i] = nimCopy(null, value_23487, typ_23488);
    return result;
  

	
}

function toJSStr(s_22292) {
		  if (s_22292 === null) return "";
  var len = s_22292.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_22292[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_22292[i] < 128)
      asciiPart[i] = fcc(s_22292[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_20618, ename_20619) {
		e_20618.name = ename_20619;
		if ((excHandler == 0)) {
		unhandledException(e_20618);
		}
		
		e_20618.trace = nimCopy(null, raw_write_stack_trace_20468(), NTI138);
		throw e_20618;

	
}

function addInt(a_22603, b_22604) {
		    var result = a_22603 + b_22604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_171689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_23505, a_23506, b_23507) {
			var Tmp1;

	var result_23508 = 0;

	BeforeRet: do {
			if (!(a_23506 <= i_23505)) Tmp1 = false; else {				Tmp1 = (i_23505 <= b_23507);			}		if (Tmp1) {
		result_23508 = i_23505;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_23505, a_23506, b_23507);
		}
		
	} while (false);

	return result_23508;

}

function subInt(a_22621, b_22622) {
		    var result = a_22621 - b_22622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_171695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_22940, b_22941) {
		var Tmp1;

	var result_22942 = 0;

	BeforeRet: do {
		if ((a_22940 <= b_22941)) {
		Tmp1 = a_22940;
		}
		else {
		Tmp1 = b_22941;
		}
		
		result_22942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_22942;

}

function eqStrings(a_22487, b_22488) {
		    if (a_22487 == b_22488) return true;
    if (a_22487 === null && b_22488.length == 0) return true;
    if (b_22488 === null && a_22487.length == 0) return true;
    if ((!a_22487) || (!b_22488)) return false;
    var alen = a_22487.length;
    if (alen != b_22488.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_22487[i] != b_22488[i]) return false;
    return true;
  

	
}
		var to_style_attr_name_167663 = ["alignContent", "alignItems", "alignSelf", "animation", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationTimingFunction", "animationPlayState", "background", "backgroundAttachment", "backgroundColor", "backgroundImage", "backgroundPosition", "backgroundRepeat", "backgroundClip", "backgroundOrigin", "backgroundSize", "backfaceVisibility", "border", "borderBottom", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStyle", "borderBottomWidth", "borderCollapse", "borderColor", "borderImage", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeft", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRadius", "borderRight", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderSpacing", "borderStyle", "borderTop", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStyle", "borderTopWidth", "borderWidth", "bottom", "boxDecorationBreak", "boxShadow", "boxSizing", "captionSide", "clear", "clip", "color", "columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columns", "columnSpan", "columnWidth", "content", "counterIncrement", "counterReset", "cursor", "direction", "display", "emptyCells", "filter", "flex", "flexBasis", "flexDirection", "flexFlow", "flexGrow", "flexShrink", "flexWrap", "cssFloat", "font", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "hangingPunctuation", "height", "hyphens", "icon", "imageOrientation", "justifyContent", "left", "letterSpacing", "lineHeight", "listStyle", "listStyleImage", "listStylePosition", "listStyleType", "margin", "marginBottom", "marginLeft", "marginRight", "marginTop", "maxHeight", "maxWidth", "minHeight", "minWidth", "navDown", "navIndex", "navLeft", "navRight", "navUp", "opacity", "order", "orphans", "outline", "outlineColor", "outlineOffset", "outlineStyle", "outlineWidth", "overflow", "overflowX", "overflowY", "padding", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "pageBreakAfter", "pageBreakBefore", "pageBreakInside", "perspective", "perspectiveOrigin", "pointerEvents", "position", "quotes", "resize", "right", "scrollbar3dLightColor", "scrollbarArrowColor", "scrollbarBaseColor", "scrollbarDarkshadowColor", "scrollbarFaceColor", "scrollbarHighlightColor", "scrollbarShadowColor", "scrollbarTrackColor", "tableLayout", "tabSize", "textAlign", "textAlignLast", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationStyle", "textIndent", "textJustify", "textOverflow", "textShadow", "textTransform", "top", "transform", "transformOrigin", "transformStyle", "transition", "transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction", "unicodeBidi", "userSelect", "verticalAlign", "visibility", "whiteSpace", "width", "wordBreak", "wordSpacing", "wordWrap", "widows", "zIndex"];

function mnewString(len_22309) {
		    return new Array(len_22309);
  

	
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function divInt(a_22657, b_22658) {
		    if (b_22658 == 0) raiseDivByZero();
    if (b_22658 == -1 && a_22657 == 2147483647) raiseOverflow();
    return Math.trunc(a_22657 / b_22658);
  

	
}

function mulInt(a_22639, b_22640) {
		    var result = a_22639 * b_22640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function chckRange(i_23524, a_23525, b_23526) {
			var Tmp1;

	var result_23527 = 0;

	BeforeRet: do {
			if (!(a_23525 <= i_23524)) Tmp1 = false; else {				Tmp1 = (i_23524 <= b_23526);			}		if (Tmp1) {
		result_23527 = i_23524;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_23527;

}

function modInt(a_22675, b_22676) {
		    if (b_22676 == 0) raiseDivByZero();
    if (b_22676 == -1 && a_22675 == 2147483647) raiseOverflow();
    return Math.trunc(a_22675 % b_22676);
  

	
}

function nimCharToStr(x_20062) {
	var result_20063 = null;

		result_20063 = nimCopy(null, mnewString(1), NTI138);
		result_20063[0] = x_20062;

	return result_20063;

}

function addChar(x_23699, c_23700) {
		x_23699.push(c_23700);

	
}
										var desc_211056 = [makeNimstrLit(" "), makeNimstrLit("X"), makeNimstrLit("0")];

function isObj(obj_23658, subclass_23659) {
	var result_23660 = false;

	BeforeRet: do {
		var x_23661 = obj_23658;
		if ((x_23661 == subclass_23659)) {
		result_23660 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_23661 == subclass_23659))) break L2;
					if ((x_23661 == null)) {
					result_23660 = false;
					break BeforeRet;
					}
					
					x_23661 = x_23661.base;
				}
		} while(false);
		result_23660 = true;
		break BeforeRet;
	} while (false);

	return result_23660;

}
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr(0, 125);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([65, 90]);

function nimMax(a_22958, b_22959) {
		var Tmp1;

	var result_22960 = 0;

	BeforeRet: do {
		if ((b_22959 <= a_22958)) {
		Tmp1 = a_22958;
		}
		else {
		Tmp1 = b_22959;
		}
		
		result_22960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_22960;

}
var ConstSet13 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr(13, 10);
var nim_program_result = 0;
var global_raise_hook_17618 = [null];
var local_raise_hook_17623 = [null];
var out_of_mem_hook_17626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_172495 = [0];
var object_id_176437 = [0];
var vcomponents_184026 = [{}];
var kxi_190324 = [null];

function new_213015() {
	var result_213019 = null;

	var F={procname:"new.new",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1674;
		var r_213201 = null;
		F.line = 1677;
		r_213201 = {m_type: NTI211018, field: null, size: 0, winCount: 0, player_count: 0, players: null, current_player_number: 0, winner_player_number: 0};
		F.line = 1678;
		result_213019 = r_213201;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_213019;

}

function new_213238() {
	var result_213242 = null;

	var F={procname:"new.new",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1674;
		var r_213401 = null;
		F.line = 1677;
		r_213401 = {name1: null, name2: null, ai: false, size: 0, winCount: 0};
		F.line = 1678;
		result_213242 = r_213401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_213242;

}
var game_213236 = new_213015();
var settings_213436 = new_213238();
var state_213438 = [0];
var field_blocked_213439 = [false];

function is_fat_pointer_23201(ti_23203) {
	var result_23204 = false;

	BeforeRet: do {
		result_23204 = !((ConstSet1[ti_23203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_23204;

}

function nimCopyAux(dest_23232, src_23233, n_23235) {
		switch (n_23235.kind) {
		case 0:
			break;
		case 1:
			      dest_23232[n_23235.offset] = nimCopy(dest_23232[n_23235.offset], src_23233[n_23235.offset], n_23235.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_23235.sons.length; i++) {
      nimCopyAux(dest_23232, src_23233, n_23235.sons[i]);
    }
    
			break;
		case 3:
			      dest_23232[n_23235.offset] = nimCopy(dest_23232[n_23235.offset], src_23233[n_23235.offset], n_23235.typ);
      for (var i = 0; i < n_23235.sons.length; ++i) {
        nimCopyAux(dest_23232, src_23233, n_23235.sons[i][1]);
      }
    
			break;
		}

	
}

function add_17638(x_17641, x_17641_Idx, y_17642) {
		      if (x_17641[x_17641_Idx] === null) { x_17641[x_17641_Idx] = []; }
      var off = x_17641[x_17641_Idx].length;
      x_17641[x_17641_Idx].length += y_17642.length;
      for (var i = 0; i < y_17642.length; ++i) {
        x_17641[x_17641_Idx][off+i] = y_17642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_20151(f_20153) {
					var Tmp3;

	var result_20154 = [null];

		var it_20162 = f_20153;
		var i_20164 = 0;
		var total_20166 = 0;
		var temp_frames_20173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI20156);
		L1: do {
				L2: while (true) {
					if (!!((it_20162 == null))) Tmp3 = false; else {						Tmp3 = (i_20164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_20173[i_20164].Field0 = it_20162.procname;
					temp_frames_20173[i_20164].Field1 = it_20162.line;
					i_20164 += 1;
					total_20166 += 1;
					it_20162 = it_20162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_20162 == null))) break L5;
					total_20166 += 1;
					it_20162 = it_20162.prev;
				}
		} while(false);
		result_20154[0] = nimCopy(null, [], NTI138);
		if (!((total_20166 == i_20164))) {
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit("(")); } else { result_20154[0] = makeNimstrLit("("); };
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(cstrToNimstr(((total_20166 - i_20164))+"")); } else { result_20154[0] = cstrToNimstr(((total_20166 - i_20164))+"").slice(); };
		if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_20154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_20421 = 0;
			var colontmp__214147 = 0;
			colontmp__214147 = (i_20164 - 1);
			var res_214148 = colontmp__214147;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_214148)) break L8;
						j_20421 = res_214148;
						add_17638(result_20154, 0, temp_frames_20173[j_20421].Field0);
						if ((0 < temp_frames_20173[j_20421].Field1)) {
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit(", line: ")); } else { result_20154[0] = makeNimstrLit(", line: "); };
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(cstrToNimstr((temp_frames_20173[j_20421].Field1)+"")); } else { result_20154[0] = cstrToNimstr((temp_frames_20173[j_20421].Field1)+"").slice(); };
						}
						
						if (result_20154[0] != null) { result_20154[0] = (result_20154[0]).concat(makeNimstrLit("\x0A")); } else { result_20154[0] = makeNimstrLit("\x0A"); };
						res_214148 -= 1;
					}
			} while(false);
		} while(false);

	return result_20154[0];

}

function raw_write_stack_trace_20468() {
	var result_20470 = null;

		if (!((framePtr == null))) {
		result_20470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_20151(framePtr) || []), NTI138);
		}
		else {
			result_20470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_20470;

}

function unhandledException(e_20529) {
		var buf_20530 = [[]];
		if (!(((e_20529.message != null ? e_20529.message.length : 0) == 0))) {
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_20530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(e_20529.message); } else { buf_20530[0] = e_20529.message.slice(); };
		}
		else {
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_20530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit(" [")); } else { buf_20530[0] = makeNimstrLit(" ["); };
		add_17638(buf_20530, 0, e_20529.name);
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_20530[0] = makeNimstrLit("]\x0A"); };
		if (buf_20530[0] != null) { buf_20530[0] = (buf_20530[0]).concat(raw_write_stack_trace_20468()); } else { buf_20530[0] = raw_write_stack_trace_20468().slice(); };
		var cbuf_20601 = toJSStr(buf_20530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_20601);
  }
  else {
    throw cbuf_20601;
  }
  

	
}

function new_seq_200216(len_200219) {
	var result_200221 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 986;
		result_200221 = new Array(len_200219); for (var i=0;i<len_200219;++i) {result_200221[i]={k: 0, parent: null, current: null, n: null};}	framePtr = F.prev;

	return result_200221;

}

function new_seq_200253(len_200256) {
	var result_200258 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 986;
		result_200258 = new Array(len_200256); for (var i=0;i<len_200256;++i) {result_200258[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_200258;

}

function raiseOverflow() {
		var e_21046 = null;
		e_21046 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21046.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_21046.parent = null;
		raiseException(e_21046, "OverflowError");

	
}

function sys_fatal_14062(message_14066) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_14207 = null;
		F.line = 37;
		e_14207 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_14207.message = nimCopy(null, message_14066, NTI138);
		F.line = 39;
		raiseException(e_14207, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_14058(msg_14060) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_14062(msg_14060);
	framePtr = F.prev;

	
}

function failed_assert_impl_14255(msg_14257) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_14058(msg_14257);
	framePtr = F.prev;

	
}

function raiseIndexError(i_21643, a_21644, b_21645) {
		var e_21802 = null;
		e_21802 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21802.message = nimCopy(null, (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_21643)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_21644)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_21645)+"") || []), NTI138);
		e_21802.parent = null;
		raiseException(e_21802, "IndexError");

	
}

function valueHEX3D_171839(n_171841, v_171842) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_171841.text = v_171842;
	framePtr = F.prev;

	
}

function value_171822(n_171824) {
	var result_171825 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_171825 = n_171824.text;
	framePtr = F.prev;

	return result_171825;

}

function wrap_event_190390(d_190392, n_190393, k_190394, action_190395) {

			function later_wrapper_190827() {

					function HEX3Aanonymous_190833(ev_190835) {

							function wrapper_190836() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_190838 = ev_190835.target.value;
									F.line = 73;
									valueHEX3D_171839(n_190831, v_190838);
									if (!(!((action_190830 == null)))) {
									F.line = 74;
									failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_190830(ev_190835, n_190831);
									if (!((value_171822(n_190831) == v_190838))) {
									F.line = 77;
									ev_190835.target.value = value_171822(n_190831);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
							if (!((timer_190832 == null))) {
							F.line = 103;
							clearTimeout(timer_190832);
							}
							
							F.line = 104;
							timer_190832 = setTimeout(wrapper_190836, 400);
						framePtr = F.prev;

						
					}

				var result_190829 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_190830 = action_190395;
					F.line = 99;
					var n_190831 = n_190393;
					F.line = 100;
					var timer_190832 = null;
					F.line = 101;
					result_190829 = HEX3Aanonymous_190833;
				framePtr = F.prev;

				return result_190829;

			}

			function enter_wrapper_190657() {

					function HEX3Aanonymous_190662(ev_190664) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
							if ((ev_190664.keyCode == 13)) {
							F.line = 72;
							var v_190665 = ev_190664.target.value;
							F.line = 73;
							valueHEX3D_171839(n_190661, v_190665);
							if (!(!((action_190660 == null)))) {
							F.line = 74;
							failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_190660(ev_190664, n_190661);
							if (!((value_171822(n_190661) == v_190665))) {
							F.line = 77;
							ev_190664.target.value = value_171822(n_190661);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_190659 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_190660 = action_190395;
					F.line = 93;
					var n_190661 = n_190393;
					F.line = 94;
					result_190659 = HEX3Aanonymous_190662;
				framePtr = F.prev;

				return result_190659;

			}

			function std_wrapper_190397() {

					function HEX3Aanonymous_190402(ev_190404) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
								if ((n_190401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_190401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_190401.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var v_190423 = ev_190404.target.value;
							F.line = 73;
							valueHEX3D_171839(n_190401, v_190423);
							if (!(!((action_190400 == null)))) {
							F.line = 74;
							failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_190400(ev_190404, n_190401);
							if (!((value_171822(n_190401) == v_190423))) {
							F.line = 77;
							ev_190404.target.value = value_171822(n_190401);
							}
							
							}
							else {
								F.line = 89;
							action_190400(ev_190404, n_190401);
							}
							
						framePtr = F.prev;

						
					}

				var result_190399 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_190400 = action_190395;
					F.line = 85;
					var n_190401 = n_190393;
					F.line = 86;
					result_190399 = HEX3Aanonymous_190402;
				framePtr = F.prev;

				return result_190399;

			}

	var result_190396 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_190394) {
		case 30:
			F.line = 108;
			result_190396 = later_wrapper_190827();
			F.line = 109;
			d_190392.addEventListener("keyup", result_190396, false);
			break;
		case 29:
			F.line = 111;
			result_190396 = enter_wrapper_190657();
			F.line = 112;
			d_190392.addEventListener("keyup", result_190396, false);
			break;
		default: 
			F.line = 114;
			result_190396 = std_wrapper_190397();
			F.line = 115;
			d_190392.addEventListener(to_event_name_171695[chckIndx(k_190394, 0, to_event_name_171695.length+0-1)-0], result_190396, false);
			break;
		}
	framePtr = F.prev;

	return result_190396;

}

function apply_events_191086(n_191088) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_191089 = n_191088.dom;
		L1: do {
			F.line = 128;
			var i_191102 = 0;
			F.line = 2647;
			var colontmp__214189 = 0;
			F.line = 128;
			colontmp__214189 = (n_191088.events != null ? n_191088.events.length : 0);
			F.line = 2648;
			var i_214190 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214190 < colontmp__214189)) break L3;
						F.line = 128;
						i_191102 = i_214190;
						F.line = 129;
						n_191088.events[chckIndx(i_191102, 0, n_191088.events.length+0-1)-0]["Field2"] = wrap_event_190390(dest_191089, n_191088, n_191088.events[chckIndx(i_191102, 0, n_191088.events.length+0-1)-0]["Field0"], n_191088.events[chckIndx(i_191102, 0, n_191088.events.length+0-1)-0]["Field1"]);
						F.line = 2651;
						i_214190 = addInt(i_214190, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_169025(n_169027, s_169028) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_169027.style = {};
		L1: do {
			F.line = 300;
			var i_169061 = 0;
			F.line = 2584;
			var colontmp__214201 = 0;
			F.line = 300;
			colontmp__214201 = subInt(s_169028.length, 1);
			F.line = 2600;
			var res_214202 = 0;
			L2: do {
				F.line = 2601;
					L3: while (true) {
					if (!(res_214202 <= colontmp__214201)) break L3;
						F.line = 300;
						i_169061 = res_214202;
						F.line = 301;
						n_169027.style[s_169028[i_169061]] = s_169028[addInt(i_169061, 1)];
						F.line = 2603;
						res_214202 = addInt(res_214202, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function vnode_to_dom_191167(n_191169, kxi_191170) {
			var Tmp9;
			var Tmp10;

	var result_191171 = null;

	var F={procname:"karax.vnodeToDom",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_191169.kind == 0)) {
		F.line = 139;
		result_191171 = document.createTextNode(n_191169.text);
		F.line = 123;
		n_191169.dom = result_191171;
		if (!((n_191169.id == null))) {
		F.line = 124;
		kxi_190324[0].byId[n_191169.id] = n_191169;
		}
		
		}
		else {
		if ((n_191169.kind == 6)) {
		F.line = 142;
		result_191171 = document.createElement("div");
		F.line = 143;
		result_191171.innerHTML = n_191169.text;
		F.line = 123;
		n_191169.dom = result_191171;
		if (!((n_191169.id == null))) {
		F.line = 124;
		kxi_190324[0].byId[n_191169.id] = n_191169;
		}
		
		F.line = 145;
		break BeforeRet;
		}
		else {
		if ((n_191169.kind == 3)) {
		F.line = 147;
		var x_191234 = vcomponents_184026[0][n_191169.text](n_191169.kids);
		F.line = 148;
		result_191171 = vnode_to_dom_191167(x_191234, kxi_191170);
		F.line = 123;
		n_191169.dom = result_191171;
		if (!((n_191169.id == null))) {
		F.line = 124;
		kxi_190324[0].byId[n_191169.id] = n_191169;
		}
		
		F.line = 151;
		break BeforeRet;
		}
		else {
		if ((n_191169.kind == 4)) {
		F.line = 153;
		result_191171 = n_191169.dom;
		if (!(!((result_191171 == null)))) {
		F.line = 154;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(154, 12) `result != nil` "));
		}
		
		F.line = 123;
		n_191169.dom = result_191171;
		if (!((n_191169.id == null))) {
		F.line = 124;
		kxi_190324[0].byId[n_191169.id] = n_191169;
		}
		
		F.line = 157;
		break BeforeRet;
		}
		else {
		if ((n_191169.kind == 5)) {
		F.line = 159;
		var x_191422 = n_191169;
		if (!((x_191422.onAttachImpl == null))) {
		F.line = 160;
		x_191422.onAttachImpl(x_191422);
		}
		
		if (!(!((x_191422.renderImpl == null)))) {
		F.line = 161;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_191422.expanded == null)) {
		F.line = 163;
		x_191422.expanded = x_191422.renderImpl(x_191422);
		}
		
		if (!(!((x_191422.expanded == null)))) {
		F.line = 165;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		F.line = 166;
		result_191171 = vnode_to_dom_191167(x_191422.expanded, kxi_191170);
		F.line = 123;
		n_191169.dom = result_191171;
		if (!((n_191169.id == null))) {
		F.line = 124;
		kxi_190324[0].byId[n_191169.id] = n_191169;
		}
		
		F.line = 168;
		break BeforeRet;
		}
		else {
			F.line = 170;
			result_191171 = document.createElement(to_tag_171689[chckIndx(n_191169.kind, 0, to_tag_171689.length+0-1)-0]);
			F.line = 123;
			n_191169.dom = result_191171;
			if (!((n_191169.id == null))) {
			F.line = 124;
			kxi_190324[0].byId[n_191169.id] = n_191169;
			}
			
			L1: do {
				F.line = 172;
				var k_191831 = null;
				L2: do {
					F.line = 282;
					var i_214161 = 0;
					F.line = 2647;
					var colontmp__214162 = 0;
					F.line = 282;
					colontmp__214162 = (n_191169.kids != null ? n_191169.kids.length : 0);
					F.line = 2648;
					var i_214163 = 0;
					L3: do {
						F.line = 2649;
							L4: while (true) {
							if (!(i_214163 < colontmp__214162)) break L4;
								F.line = 282;
								i_214161 = i_214163;
								F.line = 172;
								k_191831 = n_191169.kids[chckIndx(i_214161, 0, n_191169.kids.length+0-1)-0];
								F.line = 173;
								result_191171.appendChild(vnode_to_dom_191167(k_191831, kxi_191170));
								F.line = 2651;
								i_214163 = addInt(i_214163, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_191169.text == null))) {
			F.line = 176;
			result_191171.value = n_191169.text;
			}
			
		}
		}}}}
		if (!((n_191169.id == null))) {
		F.line = 178;
		result_191171.id = n_191169.id;
		}
		
		if (!((n_191169.class == null))) {
		F.line = 180;
		result_191171.className = n_191169.class;
		}
		
		L5: do {
			F.line = 183;
			var k_191832 = null;
			F.line = 183;
			var v_191833 = null;
			L6: do {
				F.line = 285;
				var i_214174 = 0;
				F.line = 2584;
				var colontmp__214175 = 0;
				F.line = 285;
				colontmp__214175 = subInt((n_191169.attrs != null ? n_191169.attrs.length : 0), 2);
				F.line = 2600;
				var res_214176 = 0;
				L7: do {
					F.line = 2601;
						L8: while (true) {
						if (!(res_214176 <= colontmp__214175)) break L8;
							F.line = 285;
							i_214174 = res_214176;
							F.line = 183;
							k_191832 = n_191169.attrs[chckIndx(i_214174, 0, n_191169.attrs.length+0-1)-0];
							F.line = 286;
							v_191833 = n_191169.attrs[chckIndx(addInt(i_214174, 1), 0, n_191169.attrs.length+0-1)-0];
							if (!((v_191833 == null))) {
							F.line = 185;
							result_191171.setAttribute(k_191832, v_191833);
							}
							
							F.line = 2603;
							res_214176 = addInt(res_214176, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 186;
		apply_events_191086(n_191169);
			if (!!((kxi_191170 == null))) Tmp10 = false; else {				Tmp10 = (n_191169 == kxi_191170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_191170.toFocus == null);			}		if (Tmp9) {
		F.line = 188;
		kxi_191170.toFocus = result_191171;
		}
		
		if (!((n_191169.style == null))) {
		F.line = 189;
		apply_style_169025(result_191171, n_191169.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_191171;

}

function replace_by_id_192012(id_192014, new_tree_192015) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 213;
		var x_192016 = document.getElementById(id_192014);
		F.line = 214;
		x_192016.parentNode.replaceChild(new_tree_192015, x_192016);
		F.line = 215;
		new_tree_192015.id = id_192014;
	framePtr = F.prev;

	
}

function len_172742(x_172744) {
	var result_172745 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_172745 = (x_172744.kids != null ? x_172744.kids.length : 0);
	framePtr = F.prev;

	return result_172745;

}

function HEX5BHEX5D_172764(x_172766, idx_172767) {
	var result_172768 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_172768 = x_172766.kids[chckIndx(idx_172767, 0, x_172766.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_172768;

}

function same_191920(n_191922, e_191923, nesting_191924) {
			var Tmp1;
			var Tmp2;

	var result_191926 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_190324[0].orphans.hasOwnProperty(n_191922.id)) {
		F.line = 192;
		result_191926 = true;
		break BeforeRet;
		}
		
		if ((n_191922.kind == 5)) {
		F.line = 194;
		result_191926 = same_191920(n_191922.expanded, e_191923, addInt(nesting_191924, 1));
		}
		else {
		if ((n_191922.kind == 6)) {
		F.line = 196;
		result_191926 = true;
		}
		else {
			if ((n_191922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_191922.kind == 4);			}		if (Tmp1) {
		F.line = 199;
		result_191926 = true;
		}
		else {
		if ((to_tag_171689[chckIndx(n_191922.kind, 0, to_tag_171689.length+0-1)-0] == e_191923.nodeName)) {
		F.line = 201;
		result_191926 = true;
		if (!((n_191922.kind == 0))) {
			if (!!((e_191923.childNodes.length == len_172742(n_191922)))) Tmp2 = false; else {				Tmp2 = !((n_191922.kind == 111));			}		if (Tmp2) {
		F.line = 205;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_172742(n_191922))+""), makeNimstrLit(" real "), cstrToNimstr((e_191923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_171689[chckIndx(n_191922.kind, 0, to_tag_171689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_191924)+""));
		F.line = 206;
		result_191926 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 207;
			var i_191994 = 0;
			F.line = 2647;
			var colontmp__214208 = 0;
			F.line = 207;
			colontmp__214208 = len_172742(n_191922);
			F.line = 2648;
			var i_214209 = 0;
			L4: do {
				F.line = 2649;
					L5: while (true) {
					if (!(i_214209 < colontmp__214208)) break L5;
						F.line = 207;
						i_191994 = i_214209;
						if (!(same_191920(HEX5BHEX5D_172764(n_191922, i_191994), e_191923.childNodes[i_191994], addInt(nesting_191924, 1)))) {
						F.line = 208;
						result_191926 = false;
						break BeforeRet;
						}
						
						F.line = 2651;
						i_214209 = addInt(i_214209, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 210;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_171689[chckIndx(n_191922.kind, 0, to_tag_171689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_191923.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_191926;

}

function eq_167814(a_167816, b_167817) {
	var result_167818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_167816 == null)) {
		if ((b_167817 == null)) {
		F.line = 229;
		result_167818 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_167818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_167817 == null)) {
		F.line = 231;
		result_167818 = false;
		break BeforeRet;
		}
		}
		if (!((a_167816.length == b_167817.length))) {
		F.line = 232;
		result_167818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_167915 = 0;
			F.line = 2647;
			var colontmp__214246 = 0;
			F.line = 233;
			colontmp__214246 = a_167816.length;
			F.line = 2648;
			var i_214247 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214247 < colontmp__214246)) break L3;
						F.line = 233;
						i_167915 = i_214247;
						if (!((a_167816[i_167915] == b_167817[i_167915]))) {
						F.line = 234;
						result_167818 = false;
						break BeforeRet;
						}
						
						F.line = 2651;
						i_214247 = addInt(i_214247, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_167818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_167818;

}

function same_attrs_174680(a_174682, b_174683) {
	var result_174684 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_174682.attrs != null ? a_174682.attrs.length : 0) == (b_174683.attrs != null ? b_174683.attrs.length : 0))) {
		F.line = 290;
		result_174684 = true;
		L1: do {
			F.line = 291;
			var i_174707 = 0;
			F.line = 2647;
			var colontmp__214251 = 0;
			F.line = 291;
			colontmp__214251 = (a_174682.attrs != null ? a_174682.attrs.length : 0);
			F.line = 2648;
			var i_214252 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214252 < colontmp__214251)) break L3;
						F.line = 291;
						i_174707 = i_214252;
						if (!((a_174682.attrs[chckIndx(i_174707, 0, a_174682.attrs.length+0-1)-0] == b_174683.attrs[chckIndx(i_174707, 0, b_174683.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_174684 = false;
						break BeforeRet;
						}
						
						F.line = 2651;
						i_214252 = addInt(i_214252, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_174684;

}

function eq_192214(a_192216, b_192217) {
			var Tmp4;
			var Tmp5;

	var result_192218 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_192216.kind == b_192217.kind))) {
		F.line = 237;
		result_192218 = 1;
		break BeforeRet;
		}
		
		if (!((a_192216.id == b_192217.id))) {
		F.line = 240;
		result_192218 = 1;
		break BeforeRet;
		}
		
		F.line = 241;
		result_192218 = 3;
		if (!((a_192216.index == b_192217.index))) {
		F.line = 244;
		result_192218 = 1;
		break BeforeRet;
		}
		
		if ((a_192216.kind == 0)) {
		if (!((a_192216.text == b_192217.text))) {
		F.line = 248;
		result_192218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_192216.kind == 3)) {
		if (!((a_192216.text == b_192217.text))) {
		F.line = 250;
		result_192218 = 1;
		break BeforeRet;
		}
		
		if (!((len_172742(a_192216) == len_172742(b_192217)))) {
		F.line = 251;
		result_192218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 252;
			var i_193014 = 0;
			F.line = 2647;
			var colontmp__214241 = 0;
			F.line = 252;
			colontmp__214241 = len_172742(a_192216);
			F.line = 2648;
			var i_214242 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214242 < colontmp__214241)) break L3;
						F.line = 252;
						i_193014 = i_214242;
						if ((eq_192214(HEX5BHEX5D_172764(a_192216, i_193014), HEX5BHEX5D_172764(b_192217, i_193014)) == 1)) {
						F.line = 253;
						result_192218 = 1;
						break BeforeRet;
						}
						
						F.line = 2651;
						i_214242 = addInt(i_214242, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_192216.kind == 4)) {
		F.line = 255;
		result_192218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_192216.kind == 6)) {
		if (!((a_192216.text == b_192217.text))) {
		F.line = 258;
		result_192218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_192217.kind == 5)) {
		if (!((a_192216.text == b_192217.text))) {
		F.line = 263;
		result_192218 = 1;
		break BeforeRet;
		}
		
		if (!((a_192216.key == b_192217.key))) {
		F.line = 269;
		result_192218 = 1;
		break BeforeRet;
		}
		
		F.line = 270;
		result_192218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_192216.class == b_192217.class))) Tmp5 = true; else {				Tmp5 = !(eq_167814(a_192216.style, b_192217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_174680(a_192216, b_192217));			}		if (Tmp4) {
		F.line = 276;
		result_192218 = 2;
		break BeforeRet;
		}
		
		F.line = 278;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_192218;

}

function update_styles_193629(new_node_193631, old_node_193632) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_193632.dom == null))) {
		if (!((new_node_193631.style == null))) {
		F.line = 283;
		apply_style_169025(old_node_193632.dom, new_node_193631.style);
		}
		else {
			F.line = 284;
			old_node_193632.dom.style = {m_type: NTI162283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 285;
		old_node_193632.dom.className = new_node_193631.class;
		}
		
		F.line = 286;
		old_node_193632.style = new_node_193631.style;
		F.line = 287;
		old_node_193632.class = new_node_193631.class;
	framePtr = F.prev;

	
}

function take_over_attr_172674(new_node_172676, old_node_172677) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_172677.attrs = new_node_172676.attrs;
	framePtr = F.prev;

	
}

function update_attributes_193677(new_node_193679, old_node_193680) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_193680.dom == null))) {
		L1: do {
			F.line = 292;
			var k_193689 = null;
			F.line = 292;
			var __193690 = null;
			L2: do {
				F.line = 285;
				var i_214258 = 0;
				F.line = 2584;
				var colontmp__214259 = 0;
				F.line = 285;
				colontmp__214259 = subInt((old_node_193680.attrs != null ? old_node_193680.attrs.length : 0), 2);
				F.line = 2600;
				var res_214260 = 0;
				L3: do {
					F.line = 2601;
						L4: while (true) {
						if (!(res_214260 <= colontmp__214259)) break L4;
							F.line = 285;
							i_214258 = res_214260;
							F.line = 292;
							k_193689 = old_node_193680.attrs[chckIndx(i_214258, 0, old_node_193680.attrs.length+0-1)-0];
							F.line = 286;
							__193690 = old_node_193680.attrs[chckIndx(addInt(i_214258, 1), 0, old_node_193680.attrs.length+0-1)-0];
							F.line = 293;
							old_node_193680.dom.removeAttribute(k_193689);
							F.line = 2603;
							res_214260 = addInt(res_214260, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 294;
			var k_193691 = null;
			F.line = 294;
			var v_193692 = null;
			L6: do {
				F.line = 285;
				var i_214266 = 0;
				F.line = 2584;
				var colontmp__214267 = 0;
				F.line = 285;
				colontmp__214267 = subInt((new_node_193679.attrs != null ? new_node_193679.attrs.length : 0), 2);
				F.line = 2600;
				var res_214268 = 0;
				L7: do {
					F.line = 2601;
						L8: while (true) {
						if (!(res_214268 <= colontmp__214267)) break L8;
							F.line = 285;
							i_214266 = res_214268;
							F.line = 294;
							k_193691 = new_node_193679.attrs[chckIndx(i_214266, 0, new_node_193679.attrs.length+0-1)-0];
							F.line = 286;
							v_193692 = new_node_193679.attrs[chckIndx(addInt(i_214266, 1), 0, new_node_193679.attrs.length+0-1)-0];
							if (!((v_193692 == null))) {
							F.line = 296;
							old_node_193680.dom.setAttribute(k_193691, v_193692);
							}
							
							F.line = 2603;
							res_214268 = addInt(res_214268, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 297;
		take_over_attr_172674(new_node_193679, old_node_193680);
	framePtr = F.prev;

	
}

function merge_events_193706(new_node_193708, old_node_193709, kxi_193710) {
						var Tmp4;

	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 300;
		var d_193711 = old_node_193709.dom;
		L1: do {
			F.line = 301;
			var i_193724 = 0;
			F.line = 2647;
			var colontmp__214273 = 0;
			F.line = 301;
			colontmp__214273 = (old_node_193709.events != null ? old_node_193709.events.length : 0);
			F.line = 2648;
			var i_214274 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214274 < colontmp__214273)) break L3;
						F.line = 301;
						i_193724 = i_214274;
						F.line = 302;
						var k_193725 = old_node_193709.events[chckIndx(i_193724, 0, old_node_193709.events.length+0-1)-0]["Field0"];
						F.line = 303;
						F.line = 303;
						switch (k_193725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_171695[chckIndx(k_193725, 0, to_event_name_171695.length+0-1)-0];
							break;
						}
						var name_193728 = Tmp4;
						F.line = 306;
						d_193711.removeEventListener(name_193728, old_node_193709.events[chckIndx(i_193724, 0, old_node_193709.events.length+0-1)-0]["Field2"]);
						F.line = 2651;
						i_214274 = addInt(i_214274, 1);
					}
			} while(false);
		} while(false);
		F.line = 307;
		old_node_193709.events = new_node_193708.events;
		F.line = 308;
		apply_events_191086(old_node_193709);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_172782(x_172784, idx_172785, y_172786) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_172784.kids[chckIndx(idx_172785, 0, x_172784.kids.length+0-1)-0] = y_172786;
	framePtr = F.prev;

	
}

function add_patch_v_193868(kxi_193870, parent_193871, pos_193872, new_child_193873) {
	var F={procname:"karax.addPatchV",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 337;
		var l_193874 = kxi_193870.patchLenV;
		if (((kxi_193870.patchesV != null ? kxi_193870.patchesV.length : 0) <= l_193874)) {
		F.line = 340;
		if (kxi_193870.patchesV != null) { kxi_193870.patchesV.push({parent: parent_193871, newChild: new_child_193873, pos: pos_193872}); } else { kxi_193870.patchesV = [{parent: parent_193871, newChild: new_child_193873, pos: pos_193872}]; };
		}
		else {
			F.line = 342;
			kxi_193870.patchesV[chckIndx(l_193874, 0, kxi_193870.patchesV.length+0-1)-0].parent = parent_193871;
			F.line = 343;
			kxi_193870.patchesV[chckIndx(l_193874, 0, kxi_193870.patchesV.length+0-1)-0].newChild = new_child_193873;
			F.line = 344;
			kxi_193870.patchesV[chckIndx(l_193874, 0, kxi_193870.patchesV.length+0-1)-0].pos = pos_193872;
		}
		
		F.line = 345;
		kxi_193870.patchLenV = addInt(kxi_193870.patchLenV, 1);
	framePtr = F.prev;

	
}

function add_patch_193814(kxi_193816, ka_193817, parenta_193818, currenta_193819, na_193820) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 325;
		var l_193821 = kxi_193816.patchLen;
		if (((kxi_193816.patches != null ? kxi_193816.patches.length : 0) <= l_193821)) {
		F.line = 328;
		if (kxi_193816.patches != null) { kxi_193816.patches.push({k: ka_193817, parent: parenta_193818, current: currenta_193819, n: na_193820}); } else { kxi_193816.patches = [{k: ka_193817, parent: parenta_193818, current: currenta_193819, n: na_193820}]; };
		}
		else {
			F.line = 330;
			kxi_193816.patches[chckIndx(l_193821, 0, kxi_193816.patches.length+0-1)-0].k = ka_193817;
			F.line = 331;
			kxi_193816.patches[chckIndx(l_193821, 0, kxi_193816.patches.length+0-1)-0].parent = parenta_193818;
			F.line = 332;
			kxi_193816.patches[chckIndx(l_193821, 0, kxi_193816.patches.length+0-1)-0].current = currenta_193819;
			F.line = 333;
			kxi_193816.patches[chckIndx(l_193821, 0, kxi_193816.patches.length+0-1)-0].n = na_193820;
		}
		
		F.line = 334;
		kxi_193816.patchLen = addInt(kxi_193816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_194045(new_node_194047, old_node_194048, parent_194049, current_194050, kxi_194051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_194052 = 0;

	var F={procname:"karax.diff",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 389;
		result_194052 = eq_192214(new_node_194047, old_node_194048);
		F.line = 390;
		switch (result_194052) {
		case 0:
			F.line = 392;
			if (kxi_194051.components != null) { kxi_194051.components.push({oldNode: old_node_194048, newNode: new_node_194047, parent: parent_194049, current: current_194050}); } else { kxi_194051.components = [{oldNode: old_node_194048, newNode: new_node_194047, parent: parent_194049, current: current_194050}]; };
			break;
		case 3:
		case 2:
			F.line = 397;
			new_node_194047.dom = old_node_194048.dom;
			if ((result_194052 == 2)) {
			F.line = 399;
			update_styles_193629(new_node_194047, old_node_194048);
			F.line = 400;
			update_attributes_193677(new_node_194047, old_node_194048);
			if ((old_node_194048.kind == 0)) {
			F.line = 402;
			old_node_194048.text = new_node_194047.text;
			F.line = 403;
			old_node_194048.dom.nodeValue = new_node_194047.text;
			}
			
			}
			
				if (!(((new_node_194047.events != null ? new_node_194047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_194048.events != null ? old_node_194048.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 406;
			merge_events_193706(new_node_194047, old_node_194048, kxi_194051);
			}
			
			F.line = 413;
			var new_length_194401 = len_172742(new_node_194047);
			F.line = 414;
			var old_length_194402 = len_172742(old_node_194048);
			if (((new_length_194401 == 0) && (old_length_194402 == 0))) {
			F.line = 415;
			break BeforeRet;
			}
			
			F.line = 416;
			var min_length_194403 = nimMin(new_length_194401, old_length_194402);
			if (!((old_node_194048.kind == new_node_194047.kind))) {
			F.line = 418;
			failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 419;
			var common_prefix_194602 = 0;
			F.line = 420;
			if ((old_node_194048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_194048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_194048.kind == 4);			}			var is_special_194621 = Tmp2;
			L4: do {
				F.line = 449;
					L5: while (true) {
					if (!(common_prefix_194602 < min_length_194403)) break L5;
						F.line = 425;
						var old_len_194645 = kxi_194051.patchLen;
						F.line = 426;
						var old_len_v_194646 = kxi_194051.patchLenV;
						if (!((common_prefix_194602 < len_172742(new_node_194047)))) {
						F.line = 427;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_194602 < len_172742(old_node_194048)))) {
						F.line = 428;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_194621) {
						Tmp6 = diff_194045(HEX5BHEX5D_172764(new_node_194047, common_prefix_194602), HEX5BHEX5D_172764(old_node_194048, common_prefix_194602), parent_194049, current_194050, kxi_194051);
						}
						else {
						Tmp6 = diff_194045(HEX5BHEX5D_172764(new_node_194047, common_prefix_194602), HEX5BHEX5D_172764(old_node_194048, common_prefix_194602), current_194050, current_194050.childNodes[chckIndx(common_prefix_194602, 0, current_194050.childNodes.length+0-1)-0], kxi_194051);
						}
						
						var r_194647 = Tmp6;
						F.line = 450;
						switch (r_194647) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_172782(new_node_194047, common_prefix_194602, HEX5BHEX5D_172764(old_node_194048, common_prefix_194602));
							F.line = 451;
							common_prefix_194602 = addInt(common_prefix_194602, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_193868(kxi_194051, old_node_194048, common_prefix_194602, HEX5BHEX5D_172764(new_node_194047, common_prefix_194602));
							F.line = 451;
							common_prefix_194602 = addInt(common_prefix_194602, 1);
							F.line = 441;
							result_194052 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_194051.patchLen = old_len_194645;
							F.line = 445;
							kxi_194051.patchLenV = old_len_v_194646;
							if (!((result_194052 == 1))) {
							F.line = 446;
							result_194052 = r_194647;
							}
							
							F.line = 447;
							break L4;
							break;
						}
					}
			} while(false);
			F.line = 454;
			var old_pos_195022 = subInt(old_length_194402, 1);
			F.line = 455;
			var new_pos_195023 = subInt(new_length_194401, 1);
			L7: do {
				F.line = 456;
					L8: while (true) {
						if (!(common_prefix_194602 <= old_pos_195022)) Tmp9 = false; else {							Tmp9 = (common_prefix_194602 <= new_pos_195023);						}					if (!Tmp9) break L8;
						F.line = 425;
						var old_len_195024 = kxi_194051.patchLen;
						F.line = 426;
						var old_len_v_195025 = kxi_194051.patchLenV;
						if (!((new_pos_195023 < len_172742(new_node_194047)))) {
						F.line = 427;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_195022 < len_172742(old_node_194048)))) {
						F.line = 428;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_194621) {
						Tmp10 = diff_194045(HEX5BHEX5D_172764(new_node_194047, new_pos_195023), HEX5BHEX5D_172764(old_node_194048, old_pos_195022), parent_194049, current_194050, kxi_194051);
						}
						else {
						Tmp10 = diff_194045(HEX5BHEX5D_172764(new_node_194047, new_pos_195023), HEX5BHEX5D_172764(old_node_194048, old_pos_195022), current_194050, current_194050.childNodes[chckIndx(old_pos_195022, 0, current_194050.childNodes.length+0-1)-0], kxi_194051);
						}
						
						var r_195026 = Tmp10;
						F.line = 457;
						switch (r_195026) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_172782(new_node_194047, new_pos_195023, HEX5BHEX5D_172764(old_node_194048, old_pos_195022));
							F.line = 458;
							old_pos_195022 = subInt(old_pos_195022, 1);
							F.line = 459;
							new_pos_195023 = subInt(new_pos_195023, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_193868(kxi_194051, old_node_194048, old_pos_195022, HEX5BHEX5D_172764(new_node_194047, new_pos_195023));
							F.line = 458;
							old_pos_195022 = subInt(old_pos_195022, 1);
							F.line = 459;
							new_pos_195023 = subInt(new_pos_195023, 1);
							F.line = 441;
							result_194052 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_194051.patchLen = old_len_195024;
							F.line = 445;
							kxi_194051.patchLenV = old_len_v_195025;
							if (!((result_194052 == 1))) {
							F.line = 446;
							result_194052 = r_195026;
							}
							
							F.line = 447;
							break L7;
							break;
						}
					}
			} while(false);
			F.line = 461;
			var pos_195434 = addInt(nimMin(old_pos_195022, new_pos_195023), 1);
			L11: do {
				F.line = 463;
				var i_195440 = 0;
				F.line = 2610;
				var colontmp__214216 = 0;
				F.line = 463;
				colontmp__214216 = subInt(pos_195434, 1);
				F.line = 2620;
				var res_214217 = common_prefix_194602;
				L12: do {
					F.line = 2621;
						L13: while (true) {
						if (!(res_214217 <= colontmp__214216)) break L13;
							F.line = 463;
							i_195440 = res_214217;
							F.line = 464;
							var r_195441 = diff_194045(HEX5BHEX5D_172764(new_node_194047, i_195440), HEX5BHEX5D_172764(old_node_194048, i_195440), current_194050, current_194050.childNodes[chckIndx(i_195440, 0, current_194050.childNodes.length+0-1)-0], kxi_194051);
							if ((r_195441 == 4)) {
							F.line = 467;
							add_patch_v_193868(kxi_194051, old_node_194048, i_195440, HEX5BHEX5D_172764(new_node_194047, i_195440));
							}
							else {
							if (!((r_195441 == 1))) {
							F.line = 469;
							HEX5BHEX5DHEX3D_172782(new_node_194047, i_195440, HEX5BHEX5D_172764(old_node_194048, i_195440));
							}
							}
							F.line = 2623;
							res_214217 = addInt(res_214217, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_195022, 1) == old_length_194402)) {
			L14: do {
				F.line = 474;
				var i_195457 = 0;
				F.line = 2620;
				var res_214223 = pos_195434;
				L15: do {
					F.line = 2621;
						L16: while (true) {
						if (!(res_214223 <= new_pos_195023)) break L16;
							F.line = 474;
							i_195457 = res_214223;
							F.line = 475;
							add_patch_193814(kxi_194051, 2, current_194050, null, HEX5BHEX5D_172764(new_node_194047, i_195457));
							F.line = 476;
							result_194052 = 4;
							F.line = 2623;
							res_214223 = addInt(res_214223, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 478;
				var before_195458 = current_194050.childNodes[chckIndx(addInt(old_pos_195022, 1), 0, current_194050.childNodes.length+0-1)-0];
				L17: do {
					F.line = 479;
					var i_195464 = 0;
					F.line = 2620;
					var res_214229 = pos_195434;
					L18: do {
						F.line = 2621;
							L19: while (true) {
							if (!(res_214229 <= new_pos_195023)) break L19;
								F.line = 479;
								i_195464 = res_214229;
								F.line = 480;
								add_patch_193814(kxi_194051, 3, current_194050, before_195458, HEX5BHEX5D_172764(new_node_194047, i_195464));
								F.line = 481;
								result_194052 = 4;
								F.line = 2623;
								res_214229 = addInt(res_214229, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				F.line = 483;
				var i_195470 = 0;
				F.line = 2620;
				var res_214235 = pos_195434;
				L21: do {
					F.line = 2621;
						L22: while (true) {
						if (!(res_214235 <= old_pos_195022)) break L22;
							F.line = 483;
							i_195470 = res_214235;
							F.line = 484;
							add_patch_193814(kxi_190324[0], 4, null, null, HEX5BHEX5D_172764(old_node_194048, i_195470));
							F.line = 486;
							add_patch_193814(kxi_194051, 1, current_194050, current_194050.childNodes[chckIndx(i_195470, 0, current_194050.childNodes.length+0-1)-0], null);
							F.line = 487;
							result_194052 = 4;
							F.line = 2623;
							res_214235 = addInt(res_214235, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 489;
			add_patch_193814(kxi_190324[0], 4, null, null, old_node_194048);
			F.line = 490;
			add_patch_193814(kxi_194051, 0, parent_194049, current_194050, new_node_194047);
			break;
		case 4:
			if (true) {
			F.line = 491;
			failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_194052;

}

function apply_components_195814(kxi_195816) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 499;
		var i_195818 = 0;
		L1: do {
			F.line = 502;
				L2: while (true) {
				if (!(i_195818 < (kxi_195816.components != null ? kxi_195816.components.length : 0))) break L2;
					F.line = 503;
					var x_195824 = kxi_195816.components[chckIndx(i_195818, 0, kxi_195816.components.length+0-1)-0].oldNode;
					F.line = 504;
					var new_node_195825 = kxi_195816.components[chckIndx(i_195818, 0, kxi_195816.components.length+0-1)-0].newNode;
						if (!!((x_195824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_195824.changedImpl(x_195824, new_node_195825);						}					if (Tmp3) {
					F.line = 510;
					var current_196201 = kxi_195816.components[chckIndx(i_195818, 0, kxi_195816.components.length+0-1)-0].current;
					F.line = 511;
					var parent_196202 = kxi_195816.components[chckIndx(i_195818, 0, kxi_195816.components.length+0-1)-0].parent;
					F.line = 512;
					x_195824.updatedImpl(x_195824, new_node_195825);
					F.line = 513;
					var old_expanded_196203 = x_195824.expanded;
					F.line = 514;
					x_195824.expanded = x_195824.renderImpl(x_195824);
					F.line = 517;
					x_195824.renderedVersion = x_195824.version;
					if ((old_expanded_196203 == null)) {
					F.line = 519;
					add_patch_193814(kxi_190324[0], 4, null, null, x_195824);
					F.line = 520;
					add_patch_193814(kxi_195816, 0, parent_196202, current_196201, x_195824.expanded);
					}
					else {
						F.line = 524;
						var res_196601 = diff_194045(x_195824.expanded, old_expanded_196203, parent_196202, current_196201, kxi_195816);
						if ((res_196601 == 4)) {
						}
						else {
						if (!((res_196601 == 1))) {
						F.line = 532;
						x_195824.expanded = old_expanded_196203;
						if (!(!((old_expanded_196203.dom == null)))) {
						F.line = 533;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_195824.expanded.dom == null)))) {
							F.line = 537;
							failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					F.line = 538;
					i_195818 = addInt(i_195818, 1);
				}
		} while(false);
		F.line = 539;
		if (kxi_195816.components === null) kxi_195816.components = [];
               if (kxi_195816.components.length < 0) { for (var i=kxi_195816.components.length;i<0;++i) kxi_195816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_195816.components.length = 0; };
	framePtr = F.prev;

	
}

function apply_patch_193906(kxi_193908) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 348;
			var i_193916 = 0;
			F.line = 2647;
			var colontmp__214281 = 0;
			F.line = 348;
			colontmp__214281 = kxi_193908.patchLen;
			F.line = 2648;
			var i_214282 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214282 < colontmp__214281)) break L3;
						F.line = 348;
						i_193916 = i_214282;
						F.line = 349;
						var p_193917 = nimCopy(null, kxi_193908.patches[chckIndx(i_193916, 0, kxi_193908.patches.length+0-1)-0], NTI190209);
						F.line = 350;
						switch (p_193917.k) {
						case 0:
							F.line = 352;
							var nn_193918 = vnode_to_dom_191167(p_193917.n, kxi_193908);
							if ((p_193917.parent == null)) {
							F.line = 354;
							replace_by_id_192012(kxi_193908.rootId, nn_193918);
							}
							else {
								F.line = 356;
							p_193917.parent.replaceChild(nn_193918, p_193917.current);
							}
							
							break;
						case 1:
							F.line = 358;
							p_193917.parent.removeChild(p_193917.current);
							break;
						case 2:
							F.line = 360;
							var nn_193927 = vnode_to_dom_191167(p_193917.n, kxi_193908);
							F.line = 361;
							p_193917.parent.appendChild(nn_193927);
							break;
						case 3:
							F.line = 363;
							var nn_193928 = vnode_to_dom_191167(p_193917.n, kxi_193908);
							F.line = 364;
							p_193917.parent.insertBefore(nn_193928, p_193917.current);
							break;
						case 4:
							F.line = 366;
							var n_193929 = p_193917.n;
							if (!((n_193929.id == null))) {
							F.line = 367;
							delete kxi_193908.byId[n_193929.id];
							}
							
							if ((n_193929.kind == 5)) {
							F.line = 369;
							var x_193947 = n_193929;
							if (!((x_193947.onDetachImpl == null))) {
							F.line = 370;
							x_193947.onDetachImpl(x_193947);
							}
							
							}
							
							if (!(kxi_193908.surpressRedraws)) {
							F.line = 372;
							n_193929.dom = null;
							}
							
							break;
						}
						F.line = 2651;
						i_214282 = addInt(i_214282, 1);
					}
			} while(false);
		} while(false);
		F.line = 373;
		kxi_193908.patchLen = 0;
		L4: do {
			F.line = 374;
			var i_193960 = 0;
			F.line = 2647;
			var colontmp__214286 = 0;
			F.line = 374;
			colontmp__214286 = kxi_193908.patchLenV;
			F.line = 2648;
			var i_214287 = 0;
			L5: do {
				F.line = 2649;
					L6: while (true) {
					if (!(i_214287 < colontmp__214286)) break L6;
						F.line = 374;
						i_193960 = i_214287;
						F.line = 375;
						var p_193961 = nimCopy(null, kxi_193908.patchesV[chckIndx(i_193960, 0, kxi_193908.patchesV.length+0-1)-0], NTI190211);
						F.line = 376;
						HEX5BHEX5DHEX3D_172782(p_193961.parent, p_193961.pos, p_193961.newChild);
						if (!(!((p_193961.newChild.dom == null)))) {
						F.line = 377;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 2651;
						i_214287 = addInt(i_214287, 1);
					}
			} while(false);
		} while(false);
		F.line = 378;
		kxi_193908.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_198646(kxi_198648) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_198648.renderer == null)) {
		F.line = 587;
		break BeforeRet;
		}
		
		F.line = 588;
		var rdata_198653 = {hashPart: window.location.hash};
		F.line = 589;
		var newtree_198654 = kxi_198648.renderer(rdata_198653);
		F.line = 590;
		kxi_198648.runCount = addInt(kxi_198648.runCount, 1);
		F.line = 591;
		newtree_198654.id = kxi_198648.rootId;
		F.line = 592;
		kxi_198648.toFocus = null;
		if ((kxi_198648.currentTree == null)) {
		F.line = 594;
		var asdom_198669 = vnode_to_dom_191167(newtree_198654, kxi_198648);
		F.line = 595;
		replace_by_id_192012(kxi_198648.rootId, asdom_198669);
		}
		else {
			if (!(same_191920(kxi_198648.currentTree, document.getElementById(kxi_198648.rootId), 0))) {
			F.line = 597;
			failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 598;
			var olddom_198801 = document.getElementById(kxi_198648.rootId);
			F.line = 599;
			diff_194045(newtree_198654, kxi_198648.currentTree, null, olddom_198801, kxi_198648);
		}
		
		F.line = 604;
		apply_components_195814(kxi_198648);
		F.line = 609;
		apply_patch_193906(kxi_198648);
		F.line = 610;
		kxi_198648.currentTree = newtree_198654;
		if (!(same_191920(kxi_198648.currentTree, document.getElementById(kxi_198648.rootId), 0))) {
		F.line = 611;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_198648.postRenderCallback == null))) {
		F.line = 614;
		kxi_198648.postRenderCallback(rdata_198653);
		}
		
		if (!((kxi_198648.toFocus == null))) {
		F.line = 618;
		kxi_198648.toFocus.focus();
		}
		
		F.line = 619;
		kxi_198648.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_200046(ev_200048) {

		function HEX3Aanonymous_200049() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 644;
				dodraw_198646(kxi_190324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 644;
		kxi_190324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_200049);
	framePtr = F.prev;

	
}

function redraw_199814(kxi_199816) {

		function HEX3Aanonymous_200001() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 637;
				dodraw_198646(kxi_199816);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if ((kxi_199816.renderId == 0)) {
		F.line = 637;
		kxi_199816.renderId = window.requestAnimationFrame(HEX3Aanonymous_200001);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_200078(renderer_200083, root_200084, client_post_render_callback_200088) {

		function HEX3Aanonymous_200314() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 667;
				redraw_199814(kxi_190324[0]);
			framePtr = F.prev;

			
		}

	var result_200089 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_200084) == null)) {
		F.line = 653;
		var msg_200095 = (("Could not find a <div> with id=" + root_200084) + ". Karax needs it as its rendering target.");
		F.line = 3348;
		var e_200098 = null;
		F.line = 3351;
		e_200098 = {m_type: NTI3826, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 655;
		e_200098.message = nimCopy(null, cstrToNimstr(msg_200095), NTI138);
		F.line = 3344;
		e_200098.parent = null;
		F.line = 655;
		raiseException(e_200098, "Exception");
		}
		
		F.line = 657;
		result_200089 = {rootId: root_200084, renderer: renderer_200083, postRenderCallback: client_post_render_callback_200088, patches: new_seq_200216(60), patchesV: new_seq_200253(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 665;
		kxi_190324[0] = result_200089;
		F.line = 666;
		window.onload = init_200046;
		F.line = 667;
		window.onhashchange = HEX3Aanonymous_200314;
	framePtr = F.prev;

	return result_200089;

}

function set_renderer_200387(renderer_200391, root_200392, client_post_render_callback_200395) {

		function wrap_renderer_200397(data_200399) {
			var result_200400 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 672;
				result_200400 = renderer_200391();
			framePtr = F.prev;

			return result_200400;

		}

		function wrap_post_render_200414(data_200416) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_200395 == null))) {
				F.line = 674;
				client_post_render_callback_200395();
				}
				
			framePtr = F.prev;

			
		}

	var result_200396 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 671;
		result_200396 = set_renderer_200078(wrap_renderer_200397, root_200392, wrap_post_render_200414);
	framePtr = F.prev;

	return result_200396;

}

function new_vnode_174228(kind_174230) {
	var result_174231 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_174231 = {kind: kind_174230, index: -1, m_type: NTI171714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_174231;

}

function add_172800(parent_172802, kid_172803) {
	var F={procname:"vdom.add",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_172802.kids != null) { parent_172802.kids.push(kid_172803); } else { parent_172802.kids = [kid_172803]; };
	framePtr = F.prev;

	
}

function tree_174246(kind_174248, kids_174250) {
	var result_174251 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_174251 = new_vnode_174228(kind_174248);
		L1: do {
			F.line = 263;
			var k_174282 = null;
			F.line = 3;
			var i_214314 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_214314 < (kids_174250 != null ? kids_174250.length : 0))) break L3;
						F.line = 263;
						k_174282 = kids_174250[chckIndx(i_214314, 0, kids_174250.length+0-1)-0];
						F.line = 263;
						add_172800(result_174251, k_174282);
						F.line = 6;
						i_214314 = addInt(i_214314, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_174251;

}

function set_attr_172568(n_172570, key_172571, val_172572) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_172570.attrs != null ? n_172570.attrs.length : 0) == 0)) {
		F.line = 216;
		n_172570.attrs = nimCopy(null, [key_172571, val_172572], NTI172587);
		}
		else {
			L1: do {
				F.line = 218;
				var i_172600 = 0;
				F.line = 2584;
				var colontmp__214318 = 0;
				F.line = 218;
				colontmp__214318 = subInt((n_172570.attrs != null ? n_172570.attrs.length : 0), 2);
				F.line = 2600;
				var res_214319 = 0;
				L2: do {
					F.line = 2601;
						L3: while (true) {
						if (!(res_214319 <= colontmp__214318)) break L3;
							F.line = 218;
							i_172600 = res_214319;
							if ((n_172570.attrs[chckIndx(i_172600, 0, n_172570.attrs.length+0-1)-0] == key_172571)) {
							F.line = 220;
							n_172570.attrs[chckIndx(addInt(i_172600, 1), 0, n_172570.attrs.length+0-1)-0] = val_172572;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2603;
							res_214319 = addInt(res_214319, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			if (n_172570.attrs != null) { n_172570.attrs.push(key_172571); } else { n_172570.attrs = [key_172571]; };
			F.line = 223;
			if (n_172570.attrs != null) { n_172570.attrs.push(val_172572); } else { n_172570.attrs = [val_172572]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function text_174364(s_174366) {
	var result_174367 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_174367 = {kind: 0, text: toJSStr(s_174366), index: -1, m_type: NTI171714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_174367;

}

function add_event_listener_174721(n_174723, event_174724, handler_174725) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 295;
		if (n_174723.events != null) { n_174723.events.push({Field0: event_174724, Field1: handler_174725, Field2: null}); } else { n_174723.events = [{Field0: event_174724, Field1: handler_174725, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_200532(n_200534, k_200535, action_200536, kxi_200537) {

		function wrapper_200538(ev_200540, n_200541) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 700;
				action_200536(ev_200540, n_200541);
				if (!(kxi_200537.surpressRedraws)) {
				F.line = 701;
				redraw_199814(kxi_200537);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 702;
		add_event_listener_174721(n_200534, k_200535, wrapper_200538);
	framePtr = F.prev;

	
}

function input_handler_213455(ev_213457, n_213458) {
			var Tmp1;
			var Tmp2;
			var Tmp3;
			var Tmp4;

	var F={procname:"karax_client.inputHandler",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		F.line = 16;
		switch (toJSStr(cstrToNimstr(n_213458.id))) {
		case "name1":
			F.line = 18;
			if (!(eqStrings(cstrToNimstr(value_171822(n_213458)), []))) {
			Tmp1 = cstrToNimstr(value_171822(n_213458));
			}
			else {
			Tmp1 = makeNimstrLit("player 1");
			}
			
			settings_213436.name1 = nimCopy(null, Tmp1, NTI138);
			break;
		case "name2":
			F.line = 20;
			if (!(eqStrings(cstrToNimstr(value_171822(n_213458)), []))) {
			Tmp2 = cstrToNimstr(value_171822(n_213458));
			}
			else {
			Tmp2 = makeNimstrLit("player 2");
			}
			
			settings_213436.name2 = nimCopy(null, Tmp2, NTI138);
			break;
		case "AI":
			F.line = 22;
			settings_213436.ai = !(settings_213436.ai);
			break;
		case "fieldSize":
			F.line = 24;
			if (!(eqStrings(cstrToNimstr(value_171822(n_213458)), []))) {
			Tmp3 = parseInt(value_171822(n_213458), 10);
			}
			else {
			Tmp3 = 3;
			}
			
			settings_213436.size = Tmp3;
			break;
		case "winCount":
			F.line = 26;
			if (!(eqStrings(cstrToNimstr(value_171822(n_213458)), []))) {
			Tmp4 = parseInt(value_171822(n_213458), 10);
			}
			else {
			Tmp4 = 3;
			}
			
			settings_213436.winCount = Tmp4;
			if ((settings_213436.size < settings_213436.winCount)) {
			F.line = 28;
			window.alert("win-count needs to be smaller than size");
			F.line = 29;
			valueHEX3D_171839(n_213458, "");
			}
			
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	
}

function set_attr_167955(s_167957, a_167958, value_167959) {
	var F={procname:"vstyles.setAttr",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 238;
		var i_167961 = 0;
		L1: do {
			F.line = 239;
				L2: while (true) {
				if (!(i_167961 < s_167957.length)) break L2;
					if ((s_167957[i_167961] == a_167958)) {
					F.line = 241;
					s_167957[addInt(i_167961, 1)] = value_167959;
					F.line = 242;
					break BeforeRet;
					}
					else {
					if ((a_167958 < s_167957[i_167961])) {
					F.line = 244;
					s_167957.push("");
					F.line = 245;
					s_167957.push("");
					L3: do {
						F.line = 247;
						var j_168076 = 0;
						F.line = 2551;
						var colontmp__214327 = 0;
						F.line = 247;
						colontmp__214327 = subInt(s_167957.length, 1);
						F.line = 2573;
						var res_214328 = colontmp__214327;
						L4: do {
							F.line = 2574;
								L5: while (true) {
								if (!(i_167961 <= res_214328)) break L5;
									F.line = 247;
									j_168076 = res_214328;
									F.line = 248;
									s_167957[j_168076] = s_167957[subInt(j_168076, 2)];
									F.line = 249;
									s_167957[subInt(j_168076, 1)] = s_167957[subInt(j_168076, 3)];
									F.line = 2576;
									res_214328 = subInt(res_214328, 2);
								}
						} while(false);
					} while(false);
					F.line = 250;
					s_167957[i_167961] = a_167958;
					F.line = 251;
					s_167957[addInt(i_167961, 1)] = value_167959;
					F.line = 252;
					break BeforeRet;
					}
					}
					F.line = 253;
					i_167961 = addInt(i_167961, 2);
				}
		} while(false);
		F.line = 254;
		s_167957.push(a_167958);
		F.line = 255;
		s_167957.push(value_167959);
	} while (false);
	framePtr = F.prev;

	
}

function set_attr_168196(s_168198, attr_168199, value_168200) {
	var F={procname:"vstyles.setAttr",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
		if (!(!((value_168200 == null)))) {
		F.line = 259;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim(259, 12) `value != nil` value must not be nil"));
		}
		
		F.line = 260;
		set_attr_167955(s_168198, to_style_attr_name_167663[chckIndx(attr_168199, 0, to_style_attr_name_167663.length+0-1)-0], value_168200);
	framePtr = F.prev;

	
}

function style_168881(a_168883, val_168884) {
	var result_168885 = null;

	var F={procname:"vstyles.style",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
		F.line = 286;
		result_168885 = new Array(0);
		F.line = 290;
		set_attr_168196(result_168885, a_168883, val_168884);
	framePtr = F.prev;

	return result_168885;

}

function add_event_handler_200568(n_200570, k_200571, action_200574, kxi_200575) {

		function wrapper_200576(ev_200578, n_200579) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 712;
				action_200574();
				if (!(kxi_200575.surpressRedraws)) {
				F.line = 713;
				redraw_199814(kxi_200575);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 714;
		add_event_listener_174721(n_200570, k_200571, wrapper_200576);
	framePtr = F.prev;

	
}

function start_game_213480() {
	var F={procname:"karax_client.startGame",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		F.line = 32;
		setup_212818(game_213236, settings_213436);
		F.line = 33;
		state_213438[0] = 2;
	framePtr = F.prev;

	
}

function setup_gui_213512() {
	var result_213514 = null;

	var F={procname:"karax_client.setupGUI",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		F.line = 49;
		F.line = 49;
		var tmp_213557 = tree_174246(43, []);
		F.line = 50;
		var tmp_213558 = tree_174246(43, []);
		F.line = 50;
		tmp_213558.class = "grid-container";
		F.line = 51;
		var tmp_213564 = tree_174246(43, []);
		F.line = 51;
		tmp_213564.class = "grid-item";
		F.line = 52;
		var tmp_213565 = tree_174246(104, []);
		F.line = 52;
		set_attr_172568(tmp_213565, "for", "name1");
		F.line = 53;
		add_172800(tmp_213565, text_174364(makeNimstrLit("Player 1: ")));
		F.line = 53;
		add_172800(tmp_213564, tmp_213565);
		F.line = 53;
		add_172800(tmp_213558, tmp_213564);
		F.line = 54;
		var tmp_213566 = tree_174246(43, []);
		F.line = 54;
		tmp_213566.class = "grid-item";
		F.line = 55;
		var tmp_213567 = tree_174246(105, []);
		F.line = 55;
		set_attr_172568(tmp_213567, "placeholder", "player 1");
		F.line = 55;
		tmp_213567.id = "name1";
		F.line = 55;
		add_event_handler_200532(tmp_213567, 3, input_handler_213455, kxi_190324[0]);
		F.line = 55;
		add_172800(tmp_213566, tmp_213567);
		F.line = 55;
		add_172800(tmp_213558, tmp_213566);
		F.line = 56;
		var tmp_213568 = tree_174246(43, []);
		F.line = 56;
		tmp_213568.class = "grid-item";
		F.line = 57;
		var tmp_213569 = tree_174246(104, []);
		F.line = 57;
		set_attr_172568(tmp_213569, "for", "name2");
		F.line = 58;
		add_172800(tmp_213569, text_174364(makeNimstrLit("Player 2: ")));
		F.line = 58;
		add_172800(tmp_213568, tmp_213569);
		F.line = 58;
		add_172800(tmp_213558, tmp_213568);
		F.line = 59;
		var tmp_213570 = tree_174246(43, []);
		F.line = 59;
		tmp_213570.class = "grid-item";
		F.line = 60;
		var tmp_213571 = tree_174246(105, []);
		F.line = 60;
		set_attr_172568(tmp_213571, "placeholder", "player 2");
		F.line = 60;
		tmp_213571.id = "name2";
		F.line = 60;
		add_event_handler_200532(tmp_213571, 3, input_handler_213455, kxi_190324[0]);
		F.line = 60;
		add_172800(tmp_213570, tmp_213571);
		F.line = 61;
		var tmp_213572 = tree_174246(104, []);
		F.line = 61;
		tmp_213572.style = style_168881(112, "5px");
		F.line = 62;
		add_172800(tmp_213572, text_174364(makeNimstrLit("AI")));
		F.line = 63;
		var tmp_213573 = tree_174246(105, []);
		F.line = 63;
		set_attr_172568(tmp_213573, "type", "checkbox");
		F.line = 63;
		tmp_213573.id = "AI";
		F.line = 63;
		add_event_handler_200532(tmp_213573, 0, input_handler_213455, kxi_190324[0]);
		F.line = 63;
		add_172800(tmp_213572, tmp_213573);
		F.line = 63;
		add_172800(tmp_213570, tmp_213572);
		F.line = 63;
		add_172800(tmp_213558, tmp_213570);
		F.line = 64;
		var tmp_213574 = tree_174246(43, []);
		F.line = 64;
		tmp_213574.class = "grid-item";
		F.line = 65;
		var tmp_213575 = tree_174246(104, []);
		F.line = 65;
		set_attr_172568(tmp_213575, "for", "fieldSize");
		F.line = 66;
		add_172800(tmp_213575, text_174364(makeNimstrLit("Field size: ")));
		F.line = 66;
		add_172800(tmp_213574, tmp_213575);
		F.line = 66;
		add_172800(tmp_213558, tmp_213574);
		F.line = 67;
		var tmp_213576 = tree_174246(43, []);
		F.line = 67;
		tmp_213576.class = "grid-item";
		F.line = 68;
		var tmp_213577 = tree_174246(105, []);
		F.line = 68;
		tmp_213577.id = "fieldSize";
		F.line = 68;
		set_attr_172568(tmp_213577, "placeholder", "3");
		F.line = 68;
		add_event_handler_200532(tmp_213577, 3, input_handler_213455, kxi_190324[0]);
		F.line = 68;
		add_172800(tmp_213576, tmp_213577);
		F.line = 68;
		add_172800(tmp_213558, tmp_213576);
		F.line = 69;
		var tmp_213578 = tree_174246(43, []);
		F.line = 69;
		tmp_213578.class = "grid-item";
		F.line = 70;
		var tmp_213579 = tree_174246(104, []);
		F.line = 70;
		set_attr_172568(tmp_213579, "for", "winCount");
		F.line = 71;
		add_172800(tmp_213579, text_174364(makeNimstrLit("Win count: ")));
		F.line = 71;
		add_172800(tmp_213578, tmp_213579);
		F.line = 71;
		add_172800(tmp_213558, tmp_213578);
		F.line = 72;
		var tmp_213580 = tree_174246(43, []);
		F.line = 72;
		tmp_213580.class = "grid-item";
		F.line = 73;
		var tmp_213581 = tree_174246(105, []);
		F.line = 73;
		tmp_213581.id = "winCount";
		F.line = 73;
		set_attr_172568(tmp_213581, "placeholder", "3");
		F.line = 73;
		add_event_handler_200532(tmp_213581, 3, input_handler_213455, kxi_190324[0]);
		F.line = 73;
		add_172800(tmp_213580, tmp_213581);
		F.line = 73;
		add_172800(tmp_213558, tmp_213580);
		F.line = 73;
		add_172800(tmp_213557, tmp_213558);
		F.line = 74;
		var tmp_213582 = tree_174246(43, []);
		F.line = 74;
		tmp_213582.class = "center";
		F.line = 75;
		var tmp_213583 = tree_174246(106, []);
		F.line = 75;
		add_event_handler_200568(tmp_213583, 0, start_game_213480, kxi_190324[0]);
		F.line = 75;
		tmp_213583.class = "finish-setup command-buttons";
		F.line = 76;
		add_172800(tmp_213583, text_174364(makeNimstrLit("start Game")));
		F.line = 76;
		add_172800(tmp_213582, tmp_213583);
		F.line = 76;
		add_172800(tmp_213557, tmp_213582);
		result_213514 = tmp_213557;
	framePtr = F.prev;

	return result_213514;

}

function raiseDivByZero() {
		var e_21245 = null;
		e_21245 = {m_type: NTI3844, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21245.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_21245.parent = null;
		raiseException(e_21245, "DivByZeroError");

	
}

function parse_saturated_natural_51631(s_51633, b_51635, b_51635_Idx, start_51636) {
			var Tmp1;
					var Tmp4;

	var result_51638 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 480;
		var i_51639 = start_51636;
		if (((i_51639 < (s_51633 != null ? s_51633.length : 0)) && (s_51633[chckIndx(i_51639, 0, s_51633.length+0-1)-0] == 43))) {
		F.line = 481;
		i_51639 = addInt(i_51639, 1);
		}
		
			if (!(i_51639 < (s_51633 != null ? s_51633.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet6[s_51633[chckIndx(i_51639, 0, s_51633.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 483;
		b_51635[b_51635_Idx] = 0;
		L2: do {
			F.line = 484;
				L3: while (true) {
					if (!(i_51639 < (s_51633 != null ? s_51633.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet7[s_51633[chckIndx(i_51639, 0, s_51633.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 485;
					var c_51668 = subInt(s_51633[chckIndx(i_51639, 0, s_51633.length+0-1)-0], 48);
					if ((b_51635[b_51635_Idx] <= divInt(subInt(2147483647, c_51668), 10))) {
					F.line = 487;
					b_51635[b_51635_Idx] = addInt(mulInt(b_51635[b_51635_Idx], 10), c_51668);
					}
					else {
						F.line = 489;
						b_51635[b_51635_Idx] = 2147483647;
					}
					
					F.line = 490;
					i_51639 = addInt(i_51639, 1);
					L5: do {
						F.line = 491;
							L6: while (true) {
							if (!((i_51639 < (s_51633 != null ? s_51633.length : 0)) && (s_51633[chckIndx(i_51639, 0, s_51633.length+0-1)-0] == 95))) break L6;
								F.line = 491;
								i_51639 = addInt(i_51639, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 492;
		result_51638 = subInt(i_51639, start_51636);
		}
		
	framePtr = F.prev;

	return result_51638;

}

function raiseRangeError() {
		var e_21445 = null;
		e_21445 = {m_type: NTI3862, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_21445.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_21445.parent = null;
		raiseException(e_21445, "RangeError");

	
}

function HEX5BHEX5D_89704(s_89708, x_89710) {
	var result_89711 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3855;
		var a_89801 = x_89710.a;
		F.line = 3856;
		var l_90001 = addInt(subInt(subInt((s_89708 != null ? s_89708.length : 0), x_89710.b), a_89801), 1);
		F.line = 3857;
		result_89711 = nimCopy(null, mnewString(chckRange(l_90001, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3858;
			var i_90009 = 0;
			F.line = 2648;
			var i_214364 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214364 < l_90001)) break L3;
						F.line = 3858;
						i_90009 = i_214364;
						F.line = 3858;
						result_89711[chckIndx(i_90009, 0, result_89711.length+0-1)-0] = s_89708[chckIndx(addInt(i_90009, a_89801), 0, s_89708.length+0-1)-0];
						F.line = 2651;
						i_214364 = addInt(i_214364, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_89711;

}

function HEX2EHEX2E_89639(a_89643, b_89644) {
	var result_89650 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 492;
		nimCopy(result_89650, {a: a_89643, b: b_89644}, NTI89647);
	framePtr = F.prev;

	return result_89650;

}

function parse_standard_format_specifier_158324(s_158326, start_158327, ignore_unknown_suffix_158329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_158330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_158330.fill = 32;
		F.line = 378;
		result_158330.align = 0;
		F.line = 379;
		result_158330.sign = 45;
		F.line = 380;
		var i_158333 = start_158327;
		if (((addInt(i_158333, 1) < (s_158326 != null ? s_158326.length : 0)) && (ConstSet2[s_158326[chckIndx(addInt(i_158333, 1), 0, s_158326.length+0-1)-0]] != undefined))) {
		F.line = 382;
		result_158330.fill = s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0];
		F.line = 383;
		result_158330.align = s_158326[chckIndx(addInt(i_158333, 1), 0, s_158326.length+0-1)-0];
		F.line = 384;
		i_158333 = addInt(i_158333, 2);
		}
		else {
		if (((i_158333 < (s_158326 != null ? s_158326.length : 0)) && (ConstSet3[s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0]] != undefined))) {
		F.line = 386;
		result_158330.align = s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0];
		F.line = 387;
		i_158333 = addInt(i_158333, 1);
		}
		}
		if (((i_158333 < (s_158326 != null ? s_158326.length : 0)) && (ConstSet4[s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0]] != undefined))) {
		F.line = 390;
		result_158330.sign = s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0];
		F.line = 391;
		i_158333 = addInt(i_158333, 1);
		}
		
		if (((i_158333 < (s_158326 != null ? s_158326.length : 0)) && (s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0] == 35))) {
		F.line = 394;
		result_158330.alternateForm = true;
		F.line = 395;
		i_158333 = addInt(i_158333, 1);
		}
		
			if (!((addInt(i_158333, 1) < (s_158326 != null ? s_158326.length : 0)) && (s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet5[s_158326[chckIndx(addInt(i_158333, 1), 0, s_158326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 398;
		result_158330.padWithZero = true;
		F.line = 399;
		i_158333 = addInt(i_158333, 1);
		}
		
		F.line = 401;
		var parsed_length_158391 = parse_saturated_natural_51631(s_158326, result_158330, "minimumWidth", i_158333);
		F.line = 402;
		i_158333 = addInt(i_158333, parsed_length_158391);
		if (((i_158333 < (s_158326 != null ? s_158326.length : 0)) && (s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0] == 46))) {
		F.line = 404;
		i_158333 = addInt(i_158333, 1);
		F.line = 405;
		var parsed_length_b_158405 = parse_saturated_natural_51631(s_158326, result_158330, "precision", i_158333);
		F.line = 406;
		i_158333 = addInt(i_158333, parsed_length_b_158405);
		}
		else {
			F.line = 408;
			result_158330.precision = -1;
		}
		
			if (!(i_158333 < (s_158326 != null ? s_158326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet8[s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 411;
		result_158330.typ = s_158326[chckIndx(i_158333, 0, s_158326.length+0-1)-0];
		F.line = 412;
		i_158333 = addInt(i_158333, 1);
		}
		
		F.line = 413;
		result_158330.endPosition = i_158333;
			if (!!((i_158333 == (s_158326 != null ? s_158326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_158329);			}		if (Tmp3) {
		F.line = 3348;
		var e_158460 = null;
		F.line = 3351;
		e_158460 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 416;
		e_158460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_89704(s_158326, HEX2EHEX2E_89639(i_158333, 1)) || []), NTI138);
		F.line = 3344;
		e_158460.parent = null;
		F.line = 415;
		raiseException(e_158460, "ValueError");
		}
		
	framePtr = F.prev;

	return result_158330;

}

function mk_digit_158014(v_158016, typ_158017) {
			var Tmp1;

	var result_158018 = null;

	var F={procname:"strformat.mkDigit",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		if (!((v_158016 < 26))) {
		F.line = 270;
		failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim(270, 9) `v < 26` "));
		}
		
		if ((v_158016 < 10)) {
		F.line = 272;
		result_158018 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_158016), 0, 255)), NTI138);
		}
		else {
			F.line = 274;
			if ((typ_158017 == 120)) {
			Tmp1 = 97;
			}
			else {
			Tmp1 = 65;
			}
			
			result_158018 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_158016), 10), 0, 255)), NTI138);
		}
		
	framePtr = F.prev;

	return result_158018;

}

function nsuRepeatChar(c_151859, count_151860) {
	var result_151861 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 1290;
		result_151861 = nimCopy(null, mnewString(count_151860), NTI138);
		L1: do {
			F.line = 1291;
			var i_151870 = 0;
			F.line = 2610;
			var colontmp__214384 = 0;
			F.line = 1291;
			colontmp__214384 = subInt(count_151860, 1);
			F.line = 2620;
			var res_214385 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214385 <= colontmp__214384)) break L3;
						F.line = 1291;
						i_151870 = res_214385;
						F.line = 1291;
						result_151861[chckIndx(i_151870, 0, result_151861.length+0-1)-0] = c_151859;
						F.line = 2623;
						res_214385 = addInt(res_214385, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_151861;

}

function format_int_211413(n_211416, radix_211417, spec_211418) {
		var Tmp7;

	var result_211419 = null;

	var F={procname:"formatInt.formatInt",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
		F.line = 316;
		var v_211601 = n_211416;
		F.line = 317;
		var negative_211602 = (v_211601 < 0);
		if (negative_211602) {
		F.line = 320;
		v_211601 = mulInt(v_211601, -1);
		}
		
		F.line = 322;
		var xx_211604 = [];
		if (spec_211418.alternateForm) {
		F.line = 324;
		switch (spec_211418.typ) {
		case 88:
			F.line = 325;
			xx_211604 = nimCopy(null, makeNimstrLit("0x"), NTI138);
			break;
		case 120:
			F.line = 326;
			xx_211604 = nimCopy(null, makeNimstrLit("0x"), NTI138);
			break;
		case 98:
			F.line = 327;
			xx_211604 = nimCopy(null, makeNimstrLit("0b"), NTI138);
			break;
		case 111:
			F.line = 328;
			xx_211604 = nimCopy(null, makeNimstrLit("0o"), NTI138);
			break;
		default: 
			break;
		}
		}
		
		if ((v_211601 == 0)) {
		F.line = 332;
		result_211419 = nimCopy(null, makeNimstrLit("0"), NTI138);
		}
		else {
			F.line = 334;
			result_211419 = nimCopy(null, [], NTI138);
			L1: do {
				F.line = 335;
					L2: while (true) {
					if (!(0 < v_211601)) break L2;
						F.line = 336;
						var d_211607 = modInt(v_211601, radix_211417);
						F.line = 337;
						v_211601 = divInt(v_211601, radix_211417);
						F.line = 338;
						if (result_211419 != null) { result_211419 = (result_211419).concat(mk_digit_158014(chckRange(d_211607, -2147483648, 2147483647), spec_211418.typ)); } else { result_211419 = mk_digit_158014(chckRange(d_211607, -2147483648, 2147483647), spec_211418.typ).slice(); };
					}
			} while(false);
			L3: do {
				F.line = 339;
				var idx_211615 = 0;
				F.line = 2647;
				var colontmp__214373 = 0;
				F.line = 339;
				colontmp__214373 = divInt((result_211419 != null ? result_211419.length : 0), 2);
				F.line = 2648;
				var i_214374 = 0;
				L4: do {
					F.line = 2649;
						L5: while (true) {
						if (!(i_214374 < colontmp__214373)) break L5;
							F.line = 339;
							idx_211615 = i_214374;
							F.line = 340;
							var Tmp6 = result_211419[chckIndx(idx_211615, 0, result_211419.length+0-1)-0]; result_211419[chckIndx(idx_211615, 0, result_211419.length+0-1)-0] = result_211419[chckIndx(subInt(subInt((result_211419 != null ? result_211419.length : 0), idx_211615), 1), 0, result_211419.length+0-1)-0]; result_211419[chckIndx(subInt(subInt((result_211419 != null ? result_211419.length : 0), idx_211615), 1), 0, result_211419.length+0-1)-0] = Tmp6;							F.line = 2651;
							i_214374 = addInt(i_214374, 1);
						}
				} while(false);
			} while(false);
		}
		
		if (spec_211418.padWithZero) {
		F.line = 342;
		if (negative_211602) Tmp7 = true; else {			Tmp7 = !((spec_211418.sign == 45));		}		var sign_211631 = Tmp7;
		F.line = 343;
		var to_fill_211636 = subInt(subInt(subInt(spec_211418.minimumWidth, (result_211419 != null ? result_211419.length : 0)), (xx_211604 != null ? xx_211604.length : 0)), (sign_211631 ? 1:0));
		if ((0 < to_fill_211636)) {
		F.line = 345;
		result_211419 = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_211636, 0, 2147483647)) || []).concat(result_211419 || []), NTI138);
		}
		
		}
		
		if (negative_211602) {
		F.line = 348;
		result_211419 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_211604 || [],result_211419 || []), NTI138);
		}
		else {
		if (!((spec_211418.sign == 45))) {
		F.line = 350;
		result_211419 = nimCopy(null, [spec_211418.sign].concat(xx_211604 || [],result_211419 || []), NTI138);
		}
		else {
			F.line = 352;
			result_211419 = nimCopy(null, (xx_211604 || []).concat(result_211419 || []), NTI138);
		}
		}
		if ((spec_211418.align == 60)) {
		L8: do {
			F.line = 355;
			var i_211644 = 0;
			F.line = 2647;
			var colontmp__214378 = 0;
			F.line = 2647;
			var colontmp__214379 = 0;
			F.line = 355;
			colontmp__214378 = (result_211419 != null ? result_211419.length : 0);
			F.line = 355;
			colontmp__214379 = spec_211418.minimumWidth;
			F.line = 2648;
			var i_214380 = colontmp__214378;
			L9: do {
				F.line = 2649;
					L10: while (true) {
					if (!(i_214380 < colontmp__214379)) break L10;
						F.line = 355;
						i_211644 = i_214380;
						F.line = 356;
						if (result_211419 != null) { addChar(result_211419, spec_211418.fill); } else { result_211419 = [spec_211418.fill]; };
						F.line = 2651;
						i_214380 = addInt(i_214380, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 358;
			var to_fill_211645 = subInt(spec_211418.minimumWidth, (result_211419 != null ? result_211419.length : 0));
			if ((spec_211418.align == 94)) {
			F.line = 360;
			var half_211646 = divInt(to_fill_211645, 2);
			F.line = 361;
			result_211419 = nimCopy(null, (nsuRepeatChar(spec_211418.fill, chckRange(half_211646, 0, 2147483647)) || []).concat(result_211419 || [],nsuRepeatChar(spec_211418.fill, chckRange(subInt(to_fill_211645, half_211646), 0, 2147483647)) || []), NTI138);
			}
			else {
				if ((0 < to_fill_211645)) {
				F.line = 364;
				result_211419 = nimCopy(null, (nsuRepeatChar(spec_211418.fill, chckRange(to_fill_211645, 0, 2147483647)) || []).concat(result_211419 || []), NTI138);
				}
				
			}
			
		}
		
	framePtr = F.prev;

	return result_211419;

}

function format_value_211267(result_211270, result_211270_Idx, value_211271, specifier_211272) {
	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_211272 != null ? specifier_211272.length : 0) == 0)) {
		F.line = 423;
		if (result_211270[result_211270_Idx] != null) { result_211270[result_211270_Idx] = (result_211270[result_211270_Idx]).concat(cstrToNimstr((value_211271)+"")); } else { result_211270[result_211270_Idx] = cstrToNimstr((value_211271)+"").slice(); };
		F.line = 424;
		break BeforeRet;
		}
		
		F.line = 425;
		var spec_211273 = parse_standard_format_specifier_158324(specifier_211272, 0, false);
		F.line = 426;
		var radix_211275 = 10;
		F.line = 427;
		switch (spec_211273.typ) {
		case 120:
		case 88:
			F.line = 428;
			radix_211275 = 16;
			break;
		case 100:
		case 0:
			break;
		case 98:
			F.line = 430;
			radix_211275 = 2;
			break;
		case 111:
			F.line = 431;
			radix_211275 = 8;
			break;
		default: 
			F.line = 3348;
			var e_211277 = null;
			F.line = 3351;
			e_211277 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 435;
			e_211277.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_211273.typ]), NTI138);
			F.line = 3344;
			e_211277.parent = null;
			F.line = 433;
			raiseException(e_211277, "ValueError");
			break;
		}
		F.line = 436;
		if (result_211270[result_211270_Idx] != null) { result_211270[result_211270_Idx] = (result_211270[result_211270_Idx]).concat(format_int_211413(value_211271, radix_211275, spec_211273)); } else { result_211270[result_211270_Idx] = format_int_211413(value_211271, radix_211275, spec_211273).slice(); };
	} while (false);
	framePtr = F.prev;

	
}

function click_field_213495(ev_213497, n_213498) {
	var F={procname:"karax_client.clickField",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		if (settings_213436.ai) {
		F.line = 39;
		field_blocked_213439[0] = true;
		F.line = 40;
		redraw_199814(kxi_190324[0]);
		}
		
		F.line = 42;
		make_turn_212953(game_213236, cstrToNimstr(n_213498.id));
		F.line = 43;
		field_blocked_213439[0] = false;
		if (finished_212972(game_213236)) {
		F.line = 45;
		window.alert(toJSStr((get_player_name_212925(game_213236) || []).concat(makeNimstrLit(" won the game") || [])));
		}
		
	framePtr = F.prev;

	
}

function to_disabled_200858(disabled_200860) {
		var Tmp1;

	var result_200861 = null;

	var F={procname:"karax.toDisabled",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 770;
		if (disabled_200860) {
		Tmp1 = "disabled";
		}
		else {
		Tmp1 = null;
		}
		
		result_200861 = Tmp1;
	framePtr = F.prev;

	return result_200861;

}

function play_gui_213692() {
										var Tmp7;
										var Tmp8;
										var Tmp9;

		function HEX3Aanonymous_214049() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
			framePtr = F;
				F.line = 101;
				state_213438[0] = 1;
				F.line = 102;
				set_default_211090(settings_213436);
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_214069() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
			framePtr = F;
				F.line = 106;
				setup_212818(game_213236, settings_213436);
			framePtr = F.prev;

			
		}

	var result_213694 = null;

	var F={procname:"karax_client.playGUI",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		F.line = 80;
		F.line = 80;
		var tmp_213695 = tree_174246(43, []);
		F.line = 80;
		tmp_213695.class = "center";
		F.line = 82;
		var tmp_213696 = tree_174246(31, []);
		if ((state_213438[0] == 2)) {
		F.line = 84;
		F.line = 84;
		var fmt_res_213711 = [mnewString(0)];
		F.line = 84;
		if (fmt_res_213711[0] != null) { fmt_res_213711[0] = (fmt_res_213711[0]).concat(makeNimstrLit("get ")); } else { fmt_res_213711[0] = makeNimstrLit("get "); };
		F.line = 84;
		format_value_211267(fmt_res_213711, 0, settings_213436.winCount, []);
		F.line = 84;
		if (fmt_res_213711[0] != null) { fmt_res_213711[0] = (fmt_res_213711[0]).concat(makeNimstrLit(" symbols in a row to win")); } else { fmt_res_213711[0] = makeNimstrLit(" symbols in a row to win"); };
		add_172800(tmp_213696, text_174364(fmt_res_213711[0]));
		}
		else {
			F.line = 86;
		add_172800(tmp_213696, text_174364(makeNimstrLit("Setup game to play")));
		}
		
		F.line = 86;
		add_172800(tmp_213695, tmp_213696);
		if ((state_213438[0] == 2)) {
		F.line = 89;
		var tmp_213697 = tree_174246(43, []);
		F.line = 89;
		tmp_213697.class = "grid-container-game";
		L1: do {
			F.line = 90;
			var i_213814 = 0;
			F.line = 90;
			var line_213815 = null;
			F.line = 115;
			var colontmp__214345 = null;
			F.line = 90;
			colontmp__214345 = field_212857(game_213236);
			F.line = 117;
			var i_214347 = 0;
			F.line = 118;
			var l_214348 = (colontmp__214345 != null ? colontmp__214345.length : 0);
			L2: do {
				F.line = 119;
					L3: while (true) {
					if (!(i_214347 < l_214348)) break L3;
						F.line = 90;
						i_213814 = i_214347;
						F.line = 120;
						line_213815 = colontmp__214345[chckIndx(i_214347, 0, colontmp__214345.length+0-1)-0];
						L4: do {
							F.line = 91;
							var j_214014 = 0;
							F.line = 91;
							var field_214015 = 0;
							F.line = 117;
							var i_214342 = 0;
							F.line = 118;
							var l_214343 = (line_213815 != null ? line_213815.length : 0);
							L5: do {
								F.line = 119;
									L6: while (true) {
									if (!(i_214342 < l_214343)) break L6;
										F.line = 91;
										j_214014 = i_214342;
										F.line = 120;
										field_214015 = line_213815[chckIndx(i_214342, 0, line_213815.length+0-1)-0];
										F.line = 92;
										var tmp_213698 = tree_174246(43, []);
										F.line = 92;
										tmp_213698.class = "grid-item-game";
										F.line = 94;
										var tmp_213699 = tree_174246(106, []);
										F.line = 94;
										tmp_213699.class = "fieldButton";
										F.line = 94;
										F.line = 94;
										var fmt_res_214024 = [mnewString(0)];
										F.line = 94;
										format_value_211267(fmt_res_214024, 0, addInt(i_213814, 1), []);
										F.line = 94;
										if (fmt_res_214024[0] != null) { fmt_res_214024[0] = (fmt_res_214024[0]).concat(makeNimstrLit(".")); } else { fmt_res_214024[0] = makeNimstrLit("."); };
										F.line = 94;
										format_value_211267(fmt_res_214024, 0, addInt(j_214014, 1), []);
										tmp_213699.id = toJSStr(fmt_res_214024[0]);
										F.line = 94;
										add_event_handler_200532(tmp_213699, 0, click_field_213495, kxi_190324[0]);
										F.line = 95;
										if ((state_213438[0] == 0)) Tmp9 = true; else {											Tmp9 = !((field_214015 == 0));										}										if (Tmp9) Tmp8 = true; else {											Tmp8 = finished_212972(game_213236);										}										if (Tmp8) Tmp7 = true; else {											Tmp7 = field_blocked_213439[0];										}										set_attr_172568(tmp_213699, "disabled", to_disabled_200858(Tmp7));
										F.line = 96;
										add_172800(tmp_213699, text_174364(desc_211056[chckIndx(field_214015, 0, desc_211056.length+0-1)-0]));
										F.line = 96;
										add_172800(tmp_213698, tmp_213699);
										F.line = 96;
										add_172800(tmp_213697, tmp_213698);
										F.line = 121;
										i_214342 = addInt(i_214342, 1);
										if (!(((line_213815 != null ? line_213815.length : 0) == l_214343))) {
										F.line = 122;
										failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 121;
						i_214347 = addInt(i_214347, 1);
						if (!(((colontmp__214345 != null ? colontmp__214345.length : 0) == l_214348))) {
						F.line = 122;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 96;
		add_172800(tmp_213695, tmp_213697);
		}
		
		F.line = 97;
		var tmp_213700 = tree_174246(43, []);
		F.line = 97;
		tmp_213700.class = "command-buttons";
		F.line = 98;
		var tmp_213701 = tree_174246(106, []);
		F.line = 98;
		tmp_213701.class = "start";
		F.line = 99;
		add_172800(tmp_213701, text_174364(makeNimstrLit("setup")));
		F.line = 100;
		add_event_handler_200568(tmp_213701, 0, HEX3Aanonymous_214049, kxi_190324[0]);
		F.line = 100;
		add_172800(tmp_213700, tmp_213701);
		F.line = 103;
		var tmp_213702 = tree_174246(106, []);
		F.line = 103;
		tmp_213702.class = "reset";
		F.line = 103;
		tmp_213702.id = "reset";
		F.line = 104;
		add_172800(tmp_213702, text_174364(makeNimstrLit("reset")));
		F.line = 105;
		add_event_handler_200568(tmp_213702, 0, HEX3Aanonymous_214069, kxi_190324[0]);
		F.line = 105;
		add_172800(tmp_213700, tmp_213702);
		F.line = 105;
		add_172800(tmp_213695, tmp_213700);
		result_213694 = tmp_213695;
	framePtr = F.prev;

	return result_213694;

}

function create_dom_214114() {
	var result_214116 = null;

	var F={procname:"karax_client.createDom",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/karax_client.nim",line:0};
	framePtr = F;
		F.line = 110;
		switch (state_213438[0]) {
		case 1:
			F.line = 112;
			result_214116 = setup_gui_213512();
			break;
		case 0:
			F.line = 114;
			result_214116 = play_gui_213692();
			break;
		case 2:
			F.line = 116;
			result_214116 = play_gui_213692();
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_214116;

}
set_renderer_200387(create_dom_214114, "ROOT", null);

function set_possible_moves_203071(self_203073, moves_203100) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_204690 = null;
		F.line = 3351;
		e_204690 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 241;
		e_204690.message = nimCopy(null, makeNimstrLit("set_possible_moves(OrderedTable) must be overridden"), NTI138);
		F.line = 3344;
		e_204690.parent = null;
		F.line = 241;
		raiseException(e_204690, "FieldError");
	framePtr = F.prev;

	
}

function set_possible_moves_203101(self_203073, moves_203100) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 173;
		set_possible_moves_203071(self_203073, moves_203100);
	framePtr = F.prev;

	
}

function sys_fatal_22978(message_22982) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_23007 = null;
		F.line = 37;
		e_23007 = {m_type: NTI3886, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_23007.message = nimCopy(null, message_22982, NTI138);
		F.line = 39;
		raiseException(e_23007, "NilAccessError");
	framePtr = F.prev;

	
}

function chckNilDisp(p_22976, p_22976_Idx) {
		if ((p_22976 == null && p_22976_Idx == 0)) {
		sys_fatal_22978(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function set_possible_moves_211234(self_211236, moves_211239, moves_211239_Idx) {
	var F={procname:"game_logic.set_possible_moves",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 44;
			var y_211248 = 0;
			F.line = 2610;
			var colontmp__214414 = 0;
			F.line = 44;
			colontmp__214414 = subInt(self_211236.size, 1);
			F.line = 2620;
			var res_214415 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214415 <= colontmp__214414)) break L3;
						F.line = 44;
						y_211248 = res_214415;
						L4: do {
							F.line = 45;
							var x_211257 = 0;
							F.line = 2610;
							var colontmp__214408 = 0;
							F.line = 45;
							colontmp__214408 = subInt(self_211236.size, 1);
							F.line = 2620;
							var res_214409 = 0;
							L5: do {
								F.line = 2621;
									L6: while (true) {
									if (!(res_214409 <= colontmp__214408)) break L6;
										F.line = 45;
										x_211257 = res_214409;
										if ((self_211236.field[chckIndx(x_211257, 0, self_211236.field.length+0-1)-0][chckIndx(y_211248, 0, self_211236.field[chckIndx(x_211257, 0, self_211236.field.length+0-1)-0].length+0-1)-0] == 0)) {
										F.line = 47;
										F.line = 47;
										var fmt_res_211261 = [mnewString(0)];
										F.line = 47;
										format_value_211267(fmt_res_211261, 0, addInt(x_211257, 1), []);
										F.line = 47;
										if (fmt_res_211261[0] != null) { fmt_res_211261[0] = (fmt_res_211261[0]).concat(makeNimstrLit(".")); } else { fmt_res_211261[0] = makeNimstrLit("."); };
										F.line = 47;
										format_value_211267(fmt_res_211261, 0, addInt(y_211248, 1), []);
										var Tmp7 = nimCopy(null, fmt_res_211261[0], NTI138);
										if (moves_211239[moves_211239_Idx] != null) { moves_211239[moves_211239_Idx].push(Tmp7); } else { moves_211239[moves_211239_Idx] = [Tmp7]; };
										}
										
										F.line = 2623;
										res_214409 = addInt(res_214409, 1);
									}
							} while(false);
						} while(false);
						F.line = 2623;
						res_214415 = addInt(res_214415, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function set_possible_moves_203103(self_203105, moves_203108, moves_203108_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 235;
		moves_203108[moves_203108_Idx] = nimCopy(null, [], NTI204662);
	framePtr = F.prev;

	
}

function set_possible_moves_203109(self_203105, moves_203108, moves_203108_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 502;
		chckNilDisp(self_203105);
		if (isObj(self_203105.m_type, NTI211018)) {
		F.line = 174;
		set_possible_moves_211234(self_203105, moves_203108, moves_203108_Idx);
		}
		else {
		if (isObj(self_203105.m_type, NTI203034)) {
		F.line = 174;
		set_possible_moves_203103(self_203105, moves_203108, moves_203108_Idx);
		}
		else {
		if (isObj(self_203105.m_type, NTI203034)) {
		F.line = 174;
		set_possible_moves_203103(self_203105, moves_203108, moves_203108_Idx);
		}
		}}
	framePtr = F.prev;

	
}

function invalid_format_string_156339() {
	var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_156343 = null;
		F.line = 3351;
		e_156343 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2600;
		e_156343.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
		F.line = 3344;
		e_156343.parent = null;
		F.line = 2600;
		raiseException(e_156343, "ValueError");
	framePtr = F.prev;

	
}

function nsuToLowerAsciiChar(c_147780) {
	var result_147781 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet12[c_147780] != undefined)) {
		F.line = 222;
		result_147781 = chckRange(addInt(c_147780, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_147781 = c_147780;
		}
		
	framePtr = F.prev;

	return result_147781;

}

function nsuCmpIgnoreStyle(a_148047, b_148048) {
					var Tmp7;
					var Tmp8;

	var result_148049 = 0;

	BeforeRet: do {
		var i_148051 = 0;
		var j_148053 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_148051 < (a_148047 != null ? a_148047.length : 0)) && (a_148047[i_148051] == 95))) break L4;
								i_148051 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_148053 < (b_148048 != null ? b_148048.length : 0)) && (b_148048[j_148053] == 95))) break L6;
								j_148053 += 1;
							}
					} while(false);
					if ((i_148051 < (a_148047 != null ? a_148047.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_148047[i_148051]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_148066 = Tmp7;
					if ((j_148053 < (b_148048 != null ? b_148048.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_148048[j_148053]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_148067 = Tmp8;
					result_148049 = (aa_148066 - bb_148067);
					if (!((result_148049 == 0))) {
					break BeforeRet;
					}
					
					if (((a_148047 != null ? a_148047.length : 0) <= i_148051)) {
					if (((b_148048 != null ? b_148048.length : 0) <= j_148053)) {
					result_148049 = 0;
					break BeforeRet;
					}
					
					result_148049 = -1;
					break BeforeRet;
					}
					else {
					if (((b_148048 != null ? b_148048.length : 0) <= j_148053)) {
					result_148049 = 1;
					break BeforeRet;
					}
					}
					i_148051 += 1;
					j_148053 += 1;
				}
		} while(false);
	} while (false);

	return result_148049;

}

function find_normalized_156306(x_156308, in_array_156310) {
	var result_156311 = 0;

	var F={procname:"strutils.findNormalized",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2592;
		var i_156313 = 0;
		L1: do {
			F.line = 2593;
				L2: while (true) {
				if (!(i_156313 < (in_array_156310 != null ? (in_array_156310.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_156308, in_array_156310[chckIndx(i_156313, 0, in_array_156310.length+0-1)-0]) == 0)) {
					F.line = 2594;
					result_156311 = i_156313;
					break BeforeRet;
					}
					
					F.line = 2595;
					i_156313 = addInt(i_156313, 2);
				}
		} while(false);
		F.line = 2597;
		result_156311 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_156311;

}

function substr_28622(s_28624, first_28625, last_28626) {
	var result_28627 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4393;
		var first_28628 = nimMax(first_28625, 0);
		F.line = 4394;
		var l_28630 = nimMax(addInt(subInt(nimMin(last_28626, (s_28624 != null ? (s_28624.length-1) : -1)), first_28628), 1), 0);
		F.line = 4395;
		result_28627 = nimCopy(null, mnewString(chckRange(l_28630, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4396;
			var i_28639 = 0;
			F.line = 2610;
			var colontmp__171678 = 0;
			F.line = 4396;
			colontmp__171678 = subInt(l_28630, 1);
			F.line = 2620;
			var res_171679 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_171679 <= colontmp__171678)) break L3;
						F.line = 4396;
						i_28639 = res_171679;
						F.line = 4397;
						result_28627[chckIndx(i_28639, 0, result_28627.length+0-1)-0] = s_28624[chckIndx(addInt(i_28639, first_28628), 0, s_28624.length+0-1)-0];
						F.line = 2623;
						res_171679 = addInt(res_171679, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_28627;

}

function nsuAddf(s_156429, s_156429_Idx, formatstr_156430, a_156432) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

	var F={procname:"strutils.addf",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 2606;
		var i_156436 = 0;
		F.line = 2607;
		var num_156438 = 0;
		L1: do {
			F.line = 2608;
				L2: while (true) {
				if (!(i_156436 < (formatstr_156430 != null ? formatstr_156430.length : 0))) break L2;
					if (((formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0] == 36) && (addInt(i_156436, 1) < (formatstr_156430 != null ? formatstr_156430.length : 0)))) {
					F.line = 2610;
					switch (formatstr_156430[chckIndx(addInt(i_156436, 1), 0, formatstr_156430.length+0-1)-0]) {
					case 35:
						if (((a_156432 != null ? (a_156432.length-1) : -1) < num_156438)) {
						F.line = 2612;
						invalid_format_string_156339();
						}
						
						F.line = 2613;
						if (s_156429[s_156429_Idx] != null) { s_156429[s_156429_Idx] = (s_156429[s_156429_Idx]).concat(a_156432[chckIndx(num_156438, 0, a_156432.length+0-1)-0]); } else { s_156429[s_156429_Idx] = a_156432[chckIndx(num_156438, 0, a_156432.length+0-1)-0].slice(); };
						F.line = 2614;
						i_156436 = addInt(i_156436, 2);
						F.line = 2615;
						num_156438 = addInt(num_156438, 1);
						break;
					case 36:
						F.line = 2617;
						if (s_156429[s_156429_Idx] != null) { addChar(s_156429[s_156429_Idx], 36); } else { s_156429[s_156429_Idx] = [36]; };
						F.line = 2618;
						i_156436 = addInt(i_156436, 2);
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						F.line = 2620;
						var j_156463 = 0;
						F.line = 2621;
						i_156436 = addInt(i_156436, 1);
						F.line = 2622;
						var negative_156470 = (formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0] == 45);
						if (negative_156470) {
						F.line = 2623;
						i_156436 = addInt(i_156436, 1);
						}
						
						L3: do {
							F.line = 2624;
								L4: while (true) {
									if (!(i_156436 < (formatstr_156430 != null ? formatstr_156430.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet9[formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0]] != undefined);									}								if (!Tmp5) break L4;
									F.line = 2625;
									j_156463 = subInt(addInt(mulInt(j_156463, 10), formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0]), 48);
									F.line = 2626;
									i_156436 = addInt(i_156436, 1);
								}
						} while(false);
						F.line = 2627;
						if (!(negative_156470)) {
						Tmp6 = subInt(j_156463, 1);
						}
						else {
						Tmp6 = subInt((a_156432 != null ? a_156432.length : 0), j_156463);
						}
						
						var idx_156501 = Tmp6;
							if ((idx_156501 < 0)) Tmp7 = true; else {								Tmp7 = ((a_156432 != null ? (a_156432.length-1) : -1) < idx_156501);							}						if (Tmp7) {
						F.line = 2628;
						invalid_format_string_156339();
						}
						
						F.line = 2629;
						if (s_156429[s_156429_Idx] != null) { s_156429[s_156429_Idx] = (s_156429[s_156429_Idx]).concat(a_156432[chckIndx(idx_156501, 0, a_156432.length+0-1)-0]); } else { s_156429[s_156429_Idx] = a_156432[chckIndx(idx_156501, 0, a_156432.length+0-1)-0].slice(); };
						break;
					case 123:
						F.line = 2631;
						var j_156507 = addInt(i_156436, 2);
						F.line = 2632;
						var k_156509 = 0;
						F.line = 2633;
						var negative_156510 = (formatstr_156430[chckIndx(j_156507, 0, formatstr_156430.length+0-1)-0] == 45);
						if (negative_156510) {
						F.line = 2634;
						j_156507 = addInt(j_156507, 1);
						}
						
						F.line = 2635;
						var is_number_156518 = 0;
						L8: do {
							F.line = 2636;
								L9: while (true) {
								if (!((j_156507 < (formatstr_156430 != null ? formatstr_156430.length : 0)) && !((ConstSet10[formatstr_156430[chckIndx(j_156507, 0, formatstr_156430.length+0-1)-0]] != undefined)))) break L9;
									if ((ConstSet11[formatstr_156430[chckIndx(j_156507, 0, formatstr_156430.length+0-1)-0]] != undefined)) {
									F.line = 2638;
									k_156509 = subInt(addInt(mulInt(k_156509, 10), formatstr_156430[chckIndx(j_156507, 0, formatstr_156430.length+0-1)-0]), 48);
									if ((is_number_156518 == 0)) {
									F.line = 2639;
									is_number_156518 = 1;
									}
									
									}
									else {
										F.line = 2641;
										is_number_156518 = -1;
									}
									
									F.line = 2642;
									j_156507 = addInt(j_156507, 1);
								}
						} while(false);
						if ((is_number_156518 == 1)) {
						F.line = 2644;
						if (!(negative_156510)) {
						Tmp10 = subInt(k_156509, 1);
						}
						else {
						Tmp10 = subInt((a_156432 != null ? a_156432.length : 0), k_156509);
						}
						
						var idx_156551 = Tmp10;
							if ((idx_156551 < 0)) Tmp11 = true; else {								Tmp11 = ((a_156432 != null ? (a_156432.length-1) : -1) < idx_156551);							}						if (Tmp11) {
						F.line = 2645;
						invalid_format_string_156339();
						}
						
						F.line = 2646;
						if (s_156429[s_156429_Idx] != null) { s_156429[s_156429_Idx] = (s_156429[s_156429_Idx]).concat(a_156432[chckIndx(idx_156551, 0, a_156432.length+0-1)-0]); } else { s_156429[s_156429_Idx] = a_156432[chckIndx(idx_156551, 0, a_156432.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2648;
							var x_156557 = find_normalized_156306(substr_28622(formatstr_156430, addInt(i_156436, 2), subInt(j_156507, 1)), a_156432);
								if (!(0 <= x_156557)) Tmp12 = false; else {									Tmp12 = (x_156557 < (a_156432 != null ? (a_156432.length-1) : -1));								}							if (Tmp12) {
							F.line = 2649;
							if (s_156429[s_156429_Idx] != null) { s_156429[s_156429_Idx] = (s_156429[s_156429_Idx]).concat(a_156432[chckIndx(addInt(x_156557, 1), 0, a_156432.length+0-1)-0]); } else { s_156429[s_156429_Idx] = a_156432[chckIndx(addInt(x_156557, 1), 0, a_156432.length+0-1)-0].slice(); };
							}
							else {
								F.line = 2650;
							invalid_format_string_156339();
							}
							
						}
						
						F.line = 2651;
						i_156436 = addInt(j_156507, 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						F.line = 2653;
						var j_156564 = addInt(i_156436, 1);
						L13: do {
							F.line = 2654;
								L14: while (true) {
									if (!(j_156564 < (formatstr_156430 != null ? formatstr_156430.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet13[formatstr_156430[chckIndx(j_156564, 0, formatstr_156430.length+0-1)-0]] != undefined);									}								if (!Tmp15) break L14;
									F.line = 2654;
									j_156564 = addInt(j_156564, 1);
								}
						} while(false);
						F.line = 2655;
						var x_156577 = find_normalized_156306(substr_28622(formatstr_156430, addInt(i_156436, 1), subInt(j_156564, 1)), a_156432);
							if (!(0 <= x_156577)) Tmp16 = false; else {								Tmp16 = (x_156577 < (a_156432 != null ? (a_156432.length-1) : -1));							}						if (Tmp16) {
						F.line = 2656;
						if (s_156429[s_156429_Idx] != null) { s_156429[s_156429_Idx] = (s_156429[s_156429_Idx]).concat(a_156432[chckIndx(addInt(x_156577, 1), 0, a_156432.length+0-1)-0]); } else { s_156429[s_156429_Idx] = a_156432[chckIndx(addInt(x_156577, 1), 0, a_156432.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2657;
						invalid_format_string_156339();
						}
						
						F.line = 2658;
						i_156436 = j_156564;
						break;
					default: 
						F.line = 2660;
						invalid_format_string_156339();
						break;
					}
					}
					else {
						F.line = 2662;
						if (s_156429[s_156429_Idx] != null) { addChar(s_156429[s_156429_Idx], formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0]); } else { s_156429[s_156429_Idx] = [formatstr_156430[chckIndx(i_156436, 0, formatstr_156430.length+0-1)-0]]; };
						F.line = 2663;
						i_156436 = addInt(i_156436, 1);
					}
					
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuFormatVarargs(formatstr_156657, a_156659) {
	var result_156660 = [null];

	var F={procname:"strutils.format",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 2728;
		result_156660[0] = nimCopy(null, mnewString(0), NTI138);
		F.line = 2729;
		nsuAddf(result_156660, 0, formatstr_156657, a_156659);
	framePtr = F.prev;

	return result_156660[0];

}

function status_212576(self_212578) {
	var result_212579 = null;

	var F={procname:"game_logic.status",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 130;
		var top_line_212580 = [];
		L1: do {
			F.line = 131;
			var i_212589 = 0;
			F.line = 2610;
			var colontmp__214421 = 0;
			F.line = 131;
			colontmp__214421 = self_212578.size;
			F.line = 2620;
			var res_214422 = 1;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214422 <= colontmp__214421)) break L3;
						F.line = 131;
						i_212589 = res_214422;
						F.line = 132;
						F.line = 132;
						var fmt_res_212590 = [mnewString(0)];
						F.line = 132;
						if (fmt_res_212590[0] != null) { fmt_res_212590[0] = (fmt_res_212590[0]).concat(makeNimstrLit("  ")); } else { fmt_res_212590[0] = makeNimstrLit("  "); };
						F.line = 132;
						format_value_211267(fmt_res_212590, 0, i_212589, []);
						if (top_line_212580 != null) { top_line_212580 = (top_line_212580).concat(fmt_res_212590[0]); } else { top_line_212580 = fmt_res_212590[0].slice(); };
						F.line = 2623;
						res_214422 = addInt(res_214422, 1);
					}
			} while(false);
		} while(false);
		F.line = 133;
		rawEcho(top_line_212580);
		L4: do {
			F.line = 134;
			var y_212609 = 0;
			F.line = 2610;
			var colontmp__214435 = 0;
			F.line = 134;
			colontmp__214435 = subInt(self_212578.size, 1);
			F.line = 2620;
			var res_214436 = 0;
			L5: do {
				F.line = 2621;
					L6: while (true) {
					if (!(res_214436 <= colontmp__214435)) break L6;
						F.line = 134;
						y_212609 = res_214436;
						F.line = 135;
						var line_212610 = cstrToNimstr((addInt(y_212609, 1))+"");
						L7: do {
							F.line = 136;
							var x_212619 = 0;
							F.line = 2610;
							var colontmp__214429 = 0;
							F.line = 136;
							colontmp__214429 = subInt(self_212578.size, 1);
							F.line = 2620;
							var res_214430 = 0;
							L8: do {
								F.line = 2621;
									L9: while (true) {
									if (!(res_214430 <= colontmp__214429)) break L9;
										F.line = 136;
										x_212619 = res_214430;
										F.line = 137;
										if (line_212610 != null) { line_212610 = (line_212610).concat(nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_211056[chckIndx(self_212578.field[chckIndx(x_212619, 0, self_212578.field.length+0-1)-0][chckIndx(y_212609, 0, self_212578.field[chckIndx(x_212619, 0, self_212578.field.length+0-1)-0].length+0-1)-0], 0, desc_211056.length+0-1)-0], NTI138)])); } else { line_212610 = nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_211056[chckIndx(self_212578.field[chckIndx(x_212619, 0, self_212578.field.length+0-1)-0][chckIndx(y_212609, 0, self_212578.field[chckIndx(x_212619, 0, self_212578.field.length+0-1)-0].length+0-1)-0], 0, desc_211056.length+0-1)-0], NTI138)]).slice(); };
										F.line = 2623;
										res_214430 = addInt(res_214430, 1);
									}
							} while(false);
						} while(false);
						F.line = 138;
						rawEcho(line_212610);
						F.line = 2623;
						res_214436 = addInt(res_214436, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_212579;

}

function is_over_205029(self_205031) {
	var result_205032 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 286;
		result_205032 = !((self_205031.winner_player_number == 0));
	framePtr = F.prev;

	return result_205032;

}

function is_over_205046(self_205031) {
	var result_205048 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 285;
		result_205048 = is_over_205029(self_205031);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_205048;

}

function status_203111(self_203113) {
	var result_205052 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_205046(self_203113)) {
		F.line = 295;
		result_205052 = nimCopy(null, makeNimstrLit("game is over"), NTI138);
		break BeforeRet;
		}
		else {
			F.line = 297;
			result_205052 = nimCopy(null, makeNimstrLit("game is active"), NTI138);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_205052;

}

function status_203114(self_203113) {
	var result_205052 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 502;
		chckNilDisp(self_203113);
		if (isObj(self_203113.m_type, NTI211018)) {
		F.line = 175;
		result_205052 = status_212576(self_203113);
		break BeforeRet;
		}
		else {
		if (isObj(self_203113.m_type, NTI203034)) {
		F.line = 175;
		result_205052 = status_203111(self_203113);
		break BeforeRet;
		}
		else {
		if (isObj(self_203113.m_type, NTI203034)) {
		F.line = 175;
		result_205052 = status_203111(self_203113);
		break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_205052;

}

function display_203116(self_203118, msg_203119) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 185;
		rawEcho(msg_203119);
	framePtr = F.prev;

	
}

function display_203137(self_203118, msg_203119) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 184;
		display_203116(self_203118, msg_203119);
	framePtr = F.prev;

	
}

function get_lines_211723(self_211725) {
										var Tmp7;
										var Tmp8;
										var Tmp9;
										var Tmp10;

	var result_211728 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 56;
		var s_211729 = subInt(self_211725.size, 1);
		F.line = 57;
		var v_line_211731 = null;
		F.line = 58;
		var h_line_211733 = null;
		F.line = 59;
		var s_line1_211735 = null;
		F.line = 60;
		var s_line2_211737 = null;
		F.line = 61;
		var s_line3_211739 = null;
		F.line = 62;
		var s_line4_211741 = null;
		L1: do {
			F.line = 63;
			var i_211750 = 0;
			F.line = 2620;
			var res_214470 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214470 <= s_211729)) break L3;
						F.line = 63;
						i_211750 = res_214470;
						F.line = 64;
						v_line_211731 = nimCopy(null, [], NTI211763);
						F.line = 65;
						h_line_211733 = nimCopy(null, [], NTI211776);
						F.line = 66;
						s_line1_211735 = nimCopy(null, [], NTI211789);
						F.line = 67;
						s_line2_211737 = nimCopy(null, [], NTI211802);
						F.line = 68;
						s_line3_211739 = nimCopy(null, [], NTI211815);
						F.line = 69;
						s_line4_211741 = nimCopy(null, [], NTI211828);
						L4: do {
							F.line = 70;
							var j_211837 = 0;
							F.line = 2620;
							var res_214465 = 0;
							L5: do {
								F.line = 2621;
									L6: while (true) {
									if (!(res_214465 <= s_211729)) break L6;
										F.line = 70;
										j_211837 = res_214465;
										F.line = 72;
										if (v_line_211731 != null) { v_line_211731.push(self_211725.field[chckIndx(i_211750, 0, self_211725.field.length+0-1)-0][chckIndx(j_211837, 0, self_211725.field[chckIndx(i_211750, 0, self_211725.field.length+0-1)-0].length+0-1)-0]); } else { v_line_211731 = [self_211725.field[chckIndx(i_211750, 0, self_211725.field.length+0-1)-0][chckIndx(j_211837, 0, self_211725.field[chckIndx(i_211750, 0, self_211725.field.length+0-1)-0].length+0-1)-0]]; };
										F.line = 74;
										if (h_line_211733 != null) { h_line_211733.push(self_211725.field[chckIndx(j_211837, 0, self_211725.field.length+0-1)-0][chckIndx(i_211750, 0, self_211725.field[chckIndx(j_211837, 0, self_211725.field.length+0-1)-0].length+0-1)-0]); } else { h_line_211733 = [self_211725.field[chckIndx(j_211837, 0, self_211725.field.length+0-1)-0][chckIndx(i_211750, 0, self_211725.field[chckIndx(j_211837, 0, self_211725.field.length+0-1)-0].length+0-1)-0]]; };
										if ((addInt(i_211750, j_211837) <= s_211729)) {
										F.line = 77;
										if (s_line1_211735 != null) { s_line1_211735.push((Tmp7 = self_211725.field[chckIndx(addInt(i_211750, j_211837), 0, self_211725.field.length+0-1)-0], Tmp7)[chckIndx(j_211837, 0, Tmp7.length+0-1)-0]); } else { s_line1_211735 = [(Tmp7 = self_211725.field[chckIndx(addInt(i_211750, j_211837), 0, self_211725.field.length+0-1)-0], Tmp7)[chckIndx(j_211837, 0, Tmp7.length+0-1)-0]]; };
										F.line = 78;
										if (s_line2_211737 != null) { s_line2_211737.push((Tmp8 = self_211725.field[chckIndx(addInt(i_211750, j_211837), 0, self_211725.field.length+0-1)-0], Tmp8)[chckIndx(subInt(s_211729, j_211837), 0, Tmp8.length+0-1)-0]); } else { s_line2_211737 = [(Tmp8 = self_211725.field[chckIndx(addInt(i_211750, j_211837), 0, self_211725.field.length+0-1)-0], Tmp8)[chckIndx(subInt(s_211729, j_211837), 0, Tmp8.length+0-1)-0]]; };
										if ((0 < i_211750)) {
										F.line = 80;
										if (s_line3_211739 != null) { s_line3_211739.push((Tmp9 = self_211725.field[chckIndx(subInt(s_211729, addInt(i_211750, j_211837)), 0, self_211725.field.length+0-1)-0], Tmp9)[chckIndx(j_211837, 0, Tmp9.length+0-1)-0]); } else { s_line3_211739 = [(Tmp9 = self_211725.field[chckIndx(subInt(s_211729, addInt(i_211750, j_211837)), 0, self_211725.field.length+0-1)-0], Tmp9)[chckIndx(j_211837, 0, Tmp9.length+0-1)-0]]; };
										F.line = 81;
										if (s_line4_211741 != null) { s_line4_211741.push((Tmp10 = self_211725.field[chckIndx(subInt(s_211729, addInt(i_211750, j_211837)), 0, self_211725.field.length+0-1)-0], Tmp10)[chckIndx(subInt(s_211729, j_211837), 0, Tmp10.length+0-1)-0]); } else { s_line4_211741 = [(Tmp10 = self_211725.field[chckIndx(subInt(s_211729, addInt(i_211750, j_211837)), 0, self_211725.field.length+0-1)-0], Tmp10)[chckIndx(subInt(s_211729, j_211837), 0, Tmp10.length+0-1)-0]]; };
										}
										
										}
										
										F.line = 2623;
										res_214465 = addInt(res_214465, 1);
									}
							} while(false);
						} while(false);
						if ((self_211725.winCount <= (h_line_211733 != null ? h_line_211733.length : 0))) {
						F.line = 83;
						var Tmp11 = nimCopy(null, h_line_211733, NTI211732);
						if (result_211728 != null) { result_211728.push(Tmp11); } else { result_211728 = [Tmp11]; };
						}
						
						if ((self_211725.winCount <= (v_line_211731 != null ? v_line_211731.length : 0))) {
						F.line = 85;
						var Tmp12 = nimCopy(null, v_line_211731, NTI211730);
						if (result_211728 != null) { result_211728.push(Tmp12); } else { result_211728 = [Tmp12]; };
						}
						
						if ((self_211725.winCount <= (s_line1_211735 != null ? s_line1_211735.length : 0))) {
						F.line = 87;
						var Tmp13 = nimCopy(null, s_line1_211735, NTI211734);
						if (result_211728 != null) { result_211728.push(Tmp13); } else { result_211728 = [Tmp13]; };
						}
						
						if ((self_211725.winCount <= (s_line2_211737 != null ? s_line2_211737.length : 0))) {
						F.line = 89;
						var Tmp14 = nimCopy(null, s_line2_211737, NTI211736);
						if (result_211728 != null) { result_211728.push(Tmp14); } else { result_211728 = [Tmp14]; };
						}
						
						if ((0 < i_211750)) {
						if ((self_211725.winCount <= (s_line3_211739 != null ? s_line3_211739.length : 0))) {
						F.line = 92;
						var Tmp15 = nimCopy(null, s_line3_211739, NTI211738);
						if (result_211728 != null) { result_211728.push(Tmp15); } else { result_211728 = [Tmp15]; };
						}
						
						if ((self_211725.winCount <= (s_line4_211741 != null ? s_line4_211741.length : 0))) {
						F.line = 94;
						var Tmp16 = nimCopy(null, s_line4_211741, NTI211740);
						if (result_211728 != null) { result_211728.push(Tmp16); } else { result_211728 = [Tmp16]; };
						}
						
						}
						
						F.line = 2623;
						res_214470 = addInt(res_214470, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_211728;

}

function get_lines_211969(self_211725) {
	var result_211971 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 55;
		result_211971 = get_lines_211723(self_211725);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_211971;

}

function max_line_length_211972(line_211975) {
	var result_211977 = {Field0: 0, Field1: 0};

	var F={procname:"game_logic.maxLineLength",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 100;
		result_211977["Field1"] = line_211975[chckIndx(0, 0, line_211975.length+0-1)-0];
		L1: do {
			F.line = 101;
			var field_212214 = 0;
			F.line = 185;
			var i_214477 = 0;
			F.line = 186;
			var l_214478 = (line_211975 != null ? line_211975.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_214477 < l_214478)) break L3;
						F.line = 101;
						field_212214 = line_211975[chckIndx(i_214477, 0, line_211975.length+0-1)-0];
						if (!((field_212214 == 0))) {
						if ((field_212214 == result_211977["Field1"])) {
						F.line = 105;
						result_211977["Field0"] = addInt(result_211977["Field0"], 1);
						}
						else {
							F.line = 108;
							result_211977["Field0"] = 1;
							F.line = 109;
							result_211977["Field1"] = field_212214;
						}
						
						}
						
						F.line = 189;
						i_214477 = addInt(i_214477, 1);
						if (!(((line_211975 != null ? line_211975.length : 0) == l_214478))) {
						F.line = 190;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_211977;

}

function HEX2BHEX3D_156261(x_156265, x_156265_Idx, y_156266) {
	var F={procname:"+=.+=",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4023;
		x_156265[x_156265_Idx] = (x_156265[x_156265_Idx] + y_156266);
	framePtr = F.prev;

	
}

function HEX2DHEX3D_212728(x_212732, x_212732_Idx, y_212733) {
	var F={procname:"-=.-=",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4028;
		x_212732[x_212732_Idx] = (x_212732[x_212732_Idx] - y_212733);
	framePtr = F.prev;

	
}

function scoring_212709(self_212711) {
	var result_212712 = [0.0];

	var F={procname:"game_logic.scoring",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 151;
			var line_212719 = null;
			F.line = 183;
			var colontmp__214458 = null;
			F.line = 151;
			colontmp__214458 = get_lines_211969(self_212711);
			F.line = 185;
			var i_214460 = 0;
			F.line = 186;
			var l_214461 = (colontmp__214458 != null ? colontmp__214458.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_214460 < l_214461)) break L3;
						F.line = 151;
						line_212719 = colontmp__214458[chckIndx(i_214460, 0, colontmp__214458.length+0-1)-0];
						F.line = 152;
						var max_len_212720 = max_line_length_211972(line_212719);
						if ((self_212711.winCount <= max_len_212720["Field0"])) {
						if ((self_212711.current_player_number == max_len_212720["Field1"])) {
						F.line = 155;
						HEX2BHEX3D_156261(result_212712, 0, 1.0000000000000000e+06);
						}
						else {
							F.line = 157;
						HEX2DHEX3D_212728(result_212712, 0, 1.0000000000000000e+06);
						}
						
						}
						else {
							if ((1 < max_len_212720["Field0"])) {
							if ((self_212711.current_player_number == max_len_212720["Field1"])) {
							F.line = 161;
							HEX2BHEX3D_156261(result_212712, 0, (1.0000000000000000e+03 * max_len_212720["Field0"]));
							}
							else {
								F.line = 163;
							HEX2DHEX3D_212728(result_212712, 0, (1.0000000000000000e+03 * max_len_212720["Field0"]));
							}
							
							}
							
						}
						
						F.line = 189;
						i_214460 = addInt(i_214460, 1);
						if (!(((colontmp__214458 != null ? colontmp__214458.length : 0) == l_214461))) {
						F.line = 190;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_212712[0];

}

function scoring_205228(self_205230) {
	var result_205231 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_205234 = null;
		F.line = 3351;
		e_205234 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 313;
		e_205234.message = nimCopy(null, makeNimstrLit("scoring() must be overridden (if used)"), NTI138);
		F.line = 3344;
		e_205234.parent = null;
		F.line = 313;
		raiseException(e_205234, "FieldError");
	framePtr = F.prev;

	return result_205231;

}

function scoring_205426(self_205230) {
	var result_205428 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 502;
		chckNilDisp(self_205230);
		if (isObj(self_205230.m_type, NTI211018)) {
		F.line = 308;
		result_205428 = scoring_212709(self_205230);
		break BeforeRet;
		}
		else {
		if (isObj(self_205230.m_type, NTI203034)) {
		F.line = 308;
		result_205428 = scoring_205228(self_205230);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_205428;

}

function get_state_212639(self_212641) {
	var result_212642 = null;

	var F={procname:"game_logic.get_state",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 141;
			var y_212651 = 0;
			F.line = 2610;
			var colontmp__214488 = 0;
			F.line = 141;
			colontmp__214488 = subInt(self_212641.size, 1);
			F.line = 2620;
			var res_214489 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214489 <= colontmp__214488)) break L3;
						F.line = 141;
						y_212651 = res_214489;
						L4: do {
							F.line = 142;
							var x_212660 = 0;
							F.line = 2610;
							var colontmp__214482 = 0;
							F.line = 142;
							colontmp__214482 = subInt(self_212641.size, 1);
							F.line = 2620;
							var res_214483 = 0;
							L5: do {
								F.line = 2621;
									L6: while (true) {
									if (!(res_214483 <= colontmp__214482)) break L6;
										F.line = 142;
										x_212660 = res_214483;
										F.line = 143;
										if (result_212642 != null) { result_212642 = (result_212642).concat(cstrToNimstr((self_212641.field[chckIndx(x_212660, 0, self_212641.field.length+0-1)-0][chckIndx(y_212651, 0, self_212641.field[chckIndx(x_212660, 0, self_212641.field.length+0-1)-0].length+0-1)-0])+"")); } else { result_212642 = cstrToNimstr((self_212641.field[chckIndx(x_212660, 0, self_212641.field.length+0-1)-0][chckIndx(y_212651, 0, self_212641.field[chckIndx(x_212660, 0, self_212641.field.length+0-1)-0].length+0-1)-0])+"").slice(); };
										F.line = 2623;
										res_214483 = addInt(res_214483, 1);
									}
							} while(false);
						} while(false);
						F.line = 2623;
						res_214489 = addInt(res_214489, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_212642;

}

function get_state_205429(self_205431) {
	var result_205432 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_205435 = null;
		F.line = 3351;
		e_205435 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 322;
		e_205435.message = nimCopy(null, makeNimstrLit("get_state() must be overridden (if used)"), NTI138);
		F.line = 3344;
		e_205435.parent = null;
		F.line = 322;
		raiseException(e_205435, "FieldError");
	framePtr = F.prev;

	return result_205432;

}

function get_state_205626(self_205431) {
	var result_205628 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 502;
		chckNilDisp(self_205431);
		if (isObj(self_205431.m_type, NTI211018)) {
		F.line = 316;
		result_205628 = get_state_212639(self_205431);
		break BeforeRet;
		}
		else {
		if (isObj(self_205431.m_type, NTI203034)) {
		F.line = 316;
		result_205628 = get_state_205429(self_205431);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_205628;

}

function integer_out_of_range_error_50814() {
	var F={procname:"parseutils.integerOutOfRangeError",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_50818 = null;
		F.line = 3351;
		e_50818 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 401;
		e_50818.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI138);
		F.line = 3344;
		e_50818.parent = null;
		F.line = 401;
		raiseException(e_50818, "ValueError");
	framePtr = F.prev;

	
}

function raw_parse_int_51201(s_51203, b_51205, b_51205_Idx, start_51206) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_51208 = 0;

	var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 409;
		var sign_51210 = -1;
		F.line = 410;
		var i_51211 = start_51206;
		if ((i_51211 < (s_51203 != null ? s_51203.length : 0))) {
		if ((s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0] == 43)) {
		F.line = 412;
		i_51211 += 1;
		}
		else {
		if ((s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0] == 45)) {
		F.line = 414;
		i_51211 += 1;
		F.line = 415;
		sign_51210 = 1;
		}
		}
		}
		
			if (!(i_51211 < (s_51203 != null ? s_51203.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet14[s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 417;
		b_51205[b_51205_Idx] = 0;
		L2: do {
			F.line = 418;
				L3: while (true) {
					if (!(i_51211 < (s_51203 != null ? s_51203.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet15[s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 419;
					var c_51246 = (s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0] - 48);
					if ((Math.trunc((-9223372036854775808 + c_51246) / 10) <= b_51205[b_51205_Idx])) {
					F.line = 421;
					b_51205[b_51205_Idx] = ((b_51205[b_51205_Idx] * 10) - c_51246);
					}
					else {
						F.line = 423;
					integer_out_of_range_error_50814();
					}
					
					F.line = 424;
					i_51211 += 1;
					L5: do {
						F.line = 425;
							L6: while (true) {
							if (!((i_51211 < (s_51203 != null ? s_51203.length : 0)) && (s_51203[chckIndx(i_51211, 0, s_51203.length+0-1)-0] == 95))) break L6;
								F.line = 425;
								i_51211 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_51210 == -1)) Tmp7 = false; else {				Tmp7 = (b_51205[b_51205_Idx] == -9223372036854775808);			}		if (Tmp7) {
		F.line = 427;
		integer_out_of_range_error_50814();
		}
		else {
			F.line = 429;
			b_51205[b_51205_Idx] = (b_51205[b_51205_Idx] * sign_51210);
			F.line = 430;
			result_51208 = (i_51211 - start_51206);
		}
		
		}
		
	framePtr = F.prev;

	return result_51208;

}

function npuParseBiggestInt(s_51403, number_51405, number_51405_Idx, start_51406) {
	var result_51408 = 0;

	var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 444;
		var res_51409 = [0];
		F.line = 447;
		result_51408 = raw_parse_int_51201(s_51403, res_51409, 0, start_51406);
		if (!((result_51408 == 0))) {
		F.line = 449;
		number_51405[number_51405_Idx] = res_51409[0];
		}
		
	framePtr = F.prev;

	return result_51408;

}

function npuParseInt(s_51426, number_51428, number_51428_Idx, start_51429) {
			var Tmp1;

	var result_51431 = 0;

	var F={procname:"parseutils.parseInt",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 462;
		var res_51432 = [0];
		F.line = 463;
		result_51431 = npuParseBiggestInt(s_51426, res_51432, 0, start_51429);
			if ((res_51432[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_51432[0]);			}		if (Tmp1) {
		F.line = 466;
		integer_out_of_range_error_50814();
		}
		
		if (!((result_51431 == 0))) {
		F.line = 468;
		number_51428[number_51428_Idx] = chckRange(res_51432[0], -2147483648, 2147483647);
		}
		
	framePtr = F.prev;

	return result_51431;

}

function nsuParseInt(s_149642) {
			var Tmp1;

	var result_149643 = [0];

	var F={procname:"strutils.parseInt",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 1094;
		var l_149645 = npuParseInt(s_149642, result_149643, 0, 0);
			if (!((l_149645 == (s_149642 != null ? s_149642.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_149645 == 0);			}		if (Tmp1) {
		F.line = 3348;
		var e_149648 = null;
		F.line = 3351;
		e_149648 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1096;
		e_149648.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_149642 || []), NTI138);
		F.line = 3344;
		e_149648.parent = null;
		F.line = 1096;
		raiseException(e_149648, "ValueError");
		}
		
	framePtr = F.prev;

	return result_149643[0];

}

function nsuSplitChar(s_148654, sep_148655, maxsplit_148657) {
	var result_148659 = null;

	var F={procname:"strutils.split",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 423;
		result_148659 = nimCopy(null, [], NTI148673);
		L1: do {
			F.line = 424;
			var x_148660 = null;
			F.line = 395;
			var last_214505 = 0;
			F.line = 396;
			var splits_214506 = maxsplit_148657;
			L2: do {
				F.line = 456;
					L3: while (true) {
					if (!(last_214505 <= (s_148654 != null ? s_148654.length : 0))) break L3;
						F.line = 399;
						var first_214508 = last_214505;
						L4: do {
							F.line = 400;
								L5: while (true) {
								if (!((last_214505 < (s_148654 != null ? s_148654.length : 0)) && !((s_148654[chckIndx(last_214505, 0, s_148654.length+0-1)-0] == sep_148655)))) break L5;
									F.line = 401;
									last_214505 = addInt(last_214505, 1);
								}
						} while(false);
						if ((splits_214506 == 0)) {
						F.line = 402;
						last_214505 = (s_148654 != null ? s_148654.length : 0);
						}
						
						F.line = 733;
						x_148660 = substr_28622(s_148654, first_214508, subInt(last_214505, 1));
						F.line = 424;
						var Tmp6 = nimCopy(null, x_148660, NTI138);
						if (result_148659 != null) { result_148659.push(Tmp6); } else { result_148659 = [Tmp6]; };
						if ((splits_214506 == 0)) {
						F.line = 404;
						break L2;
						}
						
						F.line = 405;
						splits_214506 = subInt(splits_214506, 1);
						F.line = 406;
						last_214505 = addInt(last_214505, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_148659;

}

function make_move_211703(self_211705, move_211706) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_211707 = null;

	var F={procname:"game_logic.make_move",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 51;
		(Tmp3 = self_211705.field[chckIndx(subInt(nsuParseInt((Tmp1 = nsuSplitChar(move_211706, 46, -1), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0]), 1), 0, self_211705.field.length+0-1)-0], Tmp3)[chckIndx(subInt(nsuParseInt((Tmp2 = nsuSplitChar(move_211706, 46, -1), Tmp2)[chckIndx(1, 0, Tmp2.length+0-1)-0]), 1), 0, Tmp3.length+0-1)-0] = self_211705.current_player_number;
		F.line = 52;
		result_211707 = nimCopy(null, (makeNimstrLit("set mark at ") || []).concat(move_211706 || []), NTI138);
	framePtr = F.prev;

	return result_211707;

}

function make_move_204926(self_204928, move_204929) {
	var result_204930 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_204933 = null;
		F.line = 3351;
		e_204933 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 282;
		e_204933.message = nimCopy(null, makeNimstrLit("make_move() must be overridden"), NTI138);
		F.line = 3344;
		e_204933.parent = null;
		F.line = 282;
		raiseException(e_204933, "FieldError");
	framePtr = F.prev;

	return result_204930;

}

function make_move_205026(self_204928, move_204929) {
	var result_205028 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 502;
		chckNilDisp(self_204928);
		if (isObj(self_204928.m_type, NTI211018)) {
		F.line = 274;
		result_205028 = make_move_211703(self_204928, move_204929);
		break BeforeRet;
		}
		else {
		if (isObj(self_204928.m_type, NTI203034)) {
		F.line = 274;
		result_205028 = make_move_204926(self_204928, move_204929);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_205028;

}

function next_player_number_204883(self_204885) {
	var result_204886 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_204886 = addInt((self_204885.current_player_number % self_204885.player_count), 1);
	framePtr = F.prev;

	return result_204886;

}

function next_player_number_204905(self_204885) {
	var result_204907 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 261;
		result_204907 = next_player_number_204883(self_204885);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_204907;

}

function finish_turn_204908(self_204910) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 271;
		self_204910.current_player_number = next_player_number_204905(self_204910);
	framePtr = F.prev;

	
}

function finish_turn_204924(self_204910) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 266;
		finish_turn_204908(self_204910);
	framePtr = F.prev;

	
}

function restore_state_212674(self_212676, state_212677) {
	var F={procname:"game_logic.restore_state",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 146;
			var y_212686 = 0;
			F.line = 2610;
			var colontmp__214518 = 0;
			F.line = 146;
			colontmp__214518 = subInt(self_212676.size, 1);
			F.line = 2620;
			var res_214519 = 0;
			L2: do {
				F.line = 2621;
					L3: while (true) {
					if (!(res_214519 <= colontmp__214518)) break L3;
						F.line = 146;
						y_212686 = res_214519;
						L4: do {
							F.line = 147;
							var x_212695 = 0;
							F.line = 2610;
							var colontmp__214512 = 0;
							F.line = 147;
							colontmp__214512 = subInt(self_212676.size, 1);
							F.line = 2620;
							var res_214513 = 0;
							L5: do {
								F.line = 2621;
									L6: while (true) {
									if (!(res_214513 <= colontmp__214512)) break L6;
										F.line = 147;
										x_212695 = res_214513;
										F.line = 148;
										self_212676.field[chckIndx(x_212695, 0, self_212676.field.length+0-1)-0][chckIndx(y_212686, 0, self_212676.field[chckIndx(x_212695, 0, self_212676.field.length+0-1)-0].length+0-1)-0] = nsuParseInt(nimCharToStr(state_212677[chckIndx(addInt(mulInt(y_212686, self_212676.size), x_212695), 0, state_212677.length+0-1)-0]));
										F.line = 2623;
										res_214513 = addInt(res_214513, 1);
									}
							} while(false);
						} while(false);
						F.line = 2623;
						res_214519 = addInt(res_214519, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function restore_state_205629(self_205631, state_205632) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_205635 = null;
		F.line = 3351;
		e_205635 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 330;
		e_205635.message = nimCopy(null, makeNimstrLit("restore_state() must be overridden (if used)"), NTI138);
		F.line = 3344;
		e_205635.parent = null;
		F.line = 330;
		raiseException(e_205635, "FieldError");
	framePtr = F.prev;

	
}

function restore_state_205826(self_205631, state_205632) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 502;
		chckNilDisp(self_205631);
		if (isObj(self_205631.m_type, NTI211018)) {
		F.line = 325;
		restore_state_212674(self_205631, state_205632);
		}
		else {
		if (isObj(self_205631.m_type, NTI203034)) {
		F.line = 325;
		restore_state_205629(self_205631, state_205632);
		}
		}
	framePtr = F.prev;

	
}

function negamax_core_207042(game_207045, game_207045_Idx, ai_choice_207047, ai_choice_207047_Idx, depth_207048, orig_depth_207049, alpha_in_207050, beta_in_207051) {
			var Tmp1;
			var Tmp2;

	var result_207052 = 0.0;

	var F={procname:"negamax.negamax_core",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 9;
		var possible_moves_207067 = [[]];
		F.line = 10;
		var starting_state_207068 = null;
		F.line = 11;
		var move_alpha_207069 = 0.0;
		F.line = 12;
		var alpha_207070 = alpha_in_207050;
		F.line = 13;
		var beta_207071 = beta_in_207051;
		F.line = 16;
		set_possible_moves_203109(game_207045[game_207045_Idx], possible_moves_207067, 0);
			if ((depth_207048 == 0)) Tmp2 = true; else {				Tmp2 = is_over_205046(game_207045[game_207045_Idx]);			}			if (Tmp2) Tmp1 = true; else {				Tmp1 = ((possible_moves_207067[0] != null ? possible_moves_207067[0].length : 0) == 0);			}		if (Tmp1) {
		F.line = 21;
		var score_207078 = scoring_205426(game_207045[game_207045_Idx]);
		if ((score_207078 == 0.0)) {
		F.line = 24;
		result_207052 = score_207078;
		break BeforeRet;
		}
		else {
			F.line = 26;
			result_207052 = (score_207078 - (((1.0000000000000000e-02 * depth_207048) * Math.abs(score_207078)) / score_207078));
			break BeforeRet;
		}
		
		}
		
		F.line = 30;
		starting_state_207068 = nimCopy(null, get_state_205626(game_207045[game_207045_Idx]), NTI138);
		F.line = 35;
		var best_move_207079 = nimCopy(null, possible_moves_207067[0][chckIndx(0, 0, possible_moves_207067[0].length+0-1)-0], NTI138);
		F.line = 36;
		var best_value_207080 = -Infinity;
		L3: do {
			F.line = 38;
			var move_207087 = null;
			F.line = 185;
			var i_214452 = 0;
			F.line = 186;
			var l_214453 = (possible_moves_207067[0] != null ? possible_moves_207067[0].length : 0);
			L4: do {
				F.line = 187;
					L5: while (true) {
					if (!(i_214452 < l_214453)) break L5;
						F.line = 38;
						move_207087 = possible_moves_207067[0][chckIndx(i_214452, 0, possible_moves_207067[0].length+0-1)-0];
						F.line = 42;
						make_move_205026(game_207045[game_207045_Idx], move_207087);
						F.line = 43;
						finish_turn_204924(game_207045[game_207045_Idx]);
						F.line = 47;
						move_alpha_207069 = -(negamax_core_207042(game_207045, game_207045_Idx, ai_choice_207047, ai_choice_207047_Idx, subInt(depth_207048, 1), orig_depth_207049, -(beta_207071), -(alpha_207070)));
						F.line = 56;
						restore_state_205826(game_207045[game_207045_Idx], starting_state_207068);
						if ((best_value_207080 < move_alpha_207069)) {
						F.line = 61;
						best_value_207080 = move_alpha_207069;
						F.line = 62;
						best_move_207079 = nimCopy(null, move_207087, NTI138);
						}
						
						if ((alpha_207070 < move_alpha_207069)) {
						F.line = 64;
						alpha_207070 = move_alpha_207069;
						if ((depth_207048 == orig_depth_207049)) {
						F.line = 66;
						ai_choice_207047[ai_choice_207047_Idx] = nimCopy(null, best_move_207079, NTI138);
						}
						
						if ((beta_207071 <= alpha_207070)) {
						F.line = 68;
						break L3;
						}
						
						}
						
						F.line = 189;
						i_214452 = addInt(i_214452, 1);
						if (!(((possible_moves_207067[0] != null ? possible_moves_207067[0].length : 0) == l_214453))) {
						F.line = 190;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 70;
		result_207052 = best_value_207080;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207052;

}

function negamax_207101(game_207104, game_207104_Idx, depth_207105) {
	var result_207106 = null;

	var F={procname:"negamax.negamax",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 76;
		var alpha_207107 = 0.0;
		F.line = 77;
		var beta_207108 = 0.0;
		F.line = 78;
		var ai_choice_207109 = [null];
		F.line = 79;
		var possible_moves_207124 = [[]];
		F.line = 81;
		alpha_207107 = -Infinity;
		F.line = 82;
		beta_207108 = Infinity;
		F.line = 86;
		set_possible_moves_203109(game_207104[game_207104_Idx], possible_moves_207124, 0);
		if (((possible_moves_207124[0] != null ? possible_moves_207124[0].length : 0) == 0)) {
		F.line = 88;
		result_207106 = nimCopy(null, [], NTI138);
		break BeforeRet;
		}
		
		F.line = 89;
		ai_choice_207109[0] = nimCopy(null, possible_moves_207124[0][chckIndx(0, 0, possible_moves_207124[0].length+0-1)-0], NTI138);
		F.line = 91;
		alpha_207107 = negamax_core_207042(game_207104, game_207104_Idx, ai_choice_207109, 0, depth_207105, depth_207105, alpha_207107, beta_207108);
		F.line = 99;
		result_207106 = nimCopy(null, ai_choice_207109[0], NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207106;

}

function get_move_207153(self_207155, game_207156) {
	var result_207157 = null;

	var F={procname:"negamax.get_move",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 110;
		var new_game_207158 = [null];
		F.line = 112;
		new_game_207158[0] = game_207156;
		F.line = 115;
		var choice_207202 = negamax_207101(new_game_207158, 0, self_207155.depth);
		F.line = 116;
		result_207157 = nimCopy(null, choice_207202, NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207157;

}

function nsuIndent(s_152502, count_152503, padding_152504) {
						var Tmp6;

	var result_152505 = null;

	var F={procname:"strutils.indent",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 1425;
		result_152505 = nimCopy(null, [], NTI138);
		F.line = 1426;
		var i_152507 = 0;
		L1: do {
			F.line = 1427;
			var line_152508 = null;
			F.line = 659;
			var first_214550 = 0;
			F.line = 660;
			var last_214551 = 0;
			F.line = 661;
			var eolpos_214552 = 0;
			L2: do {
				F.line = 662;
					L3: while (true) {
					if (!true) break L3;
						L4: do {
							F.line = 663;
								L5: while (true) {
								if (!((last_214551 < (s_152502 != null ? s_152502.length : 0)) && !((ConstSet16[s_152502[chckIndx(last_214551, 0, s_152502.length+0-1)-0]] != undefined)))) break L5;
									F.line = 663;
									last_214551 = addInt(last_214551, 1);
								}
						} while(false);
						F.line = 665;
						eolpos_214552 = last_214551;
						if ((last_214551 < (s_152502 != null ? s_152502.length : 0))) {
						if ((s_152502[chckIndx(last_214551, 0, s_152502.length+0-1)-0] == 10)) {
						F.line = 667;
						last_214551 = addInt(last_214551, 1);
						}
						else {
						if ((s_152502[chckIndx(last_214551, 0, s_152502.length+0-1)-0] == 13)) {
						F.line = 669;
						last_214551 = addInt(last_214551, 1);
						if (((last_214551 < (s_152502 != null ? s_152502.length : 0)) && (s_152502[chckIndx(last_214551, 0, s_152502.length+0-1)-0] == 10))) {
						F.line = 670;
						last_214551 = addInt(last_214551, 1);
						}
						
						}
						}
						}
						
						F.line = 1427;
						if (false) {
						Tmp6 = subInt(last_214551, 1);
						}
						else {
						Tmp6 = subInt(eolpos_214552, 1);
						}
						
						line_152508 = substr_28622(s_152502, first_214550, Tmp6);
						if (!((i_152507 == 0))) {
						F.line = 1429;
						if (result_152505 != null) { result_152505 = (result_152505).concat(makeNimstrLit("\x0A")); } else { result_152505 = makeNimstrLit("\x0A"); };
						}
						
						L7: do {
							F.line = 1430;
							var j_152517 = 0;
							F.line = 2610;
							var colontmp__214542 = 0;
							F.line = 1430;
							colontmp__214542 = count_152503;
							F.line = 2620;
							var res_214543 = 1;
							L8: do {
								F.line = 2621;
									L9: while (true) {
									if (!(res_214543 <= colontmp__214542)) break L9;
										F.line = 1430;
										j_152517 = res_214543;
										F.line = 1431;
										if (result_152505 != null) { result_152505 = (result_152505).concat(padding_152504); } else { result_152505 = padding_152504.slice(); };
										F.line = 2623;
										res_214543 = addInt(res_214543, 1);
									}
							} while(false);
						} while(false);
						F.line = 1432;
						if (result_152505 != null) { result_152505 = (result_152505).concat(line_152508); } else { result_152505 = line_152508.slice(); };
						F.line = 1433;
						i_152507 = addInt(i_152507, 1);
						if ((eolpos_214552 == last_214551)) {
						F.line = 676;
						break L2;
						}
						
						F.line = 678;
						first_214550 = last_214551;
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_152505;

}

function len_203319(t_203324) {
	var result_203325 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_203325 = t_203324.counter;
	framePtr = F.prev;

	return result_203325;

}

function is_filled_180418(hcode_180420) {
	var result_180421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_180421 = !((hcode_180420 == 0));
	framePtr = F.prev;

	return result_180421;

}

function find_201749(a_201753, item_201754) {
	var result_201755 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 3045;
			var i_201761 = null;
			F.line = 3;
			var i_213562 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_213562 < (a_201753 != null ? a_201753.length : 0))) break L3;
						F.line = 3045;
						i_201761 = a_201753[chckIndx(i_213562, 0, a_201753.length+0-1)-0];
						if (eqStrings(i_201761, item_201754)) {
						F.line = 3046;
						break BeforeRet;
						}
						
						F.line = 3047;
						result_201755 = addInt(result_201755, 1);
						F.line = 6;
						i_213562 = addInt(i_213562, 1);
					}
			} while(false);
		} while(false);
		F.line = 3048;
		result_201755 = -1;
	} while (false);
	framePtr = F.prev;

	return result_201755;

}

function contains_201742(a_201746, item_201747) {
	var result_201748 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 3062;
		result_201748 = (0 <= find_201749(a_201746, item_201747));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_201748;

}

function get_move_203139(self_203141, game_203142) {
	var result_203143 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 189;
		var move_list_203158 = [[]];
		F.line = 190;
		var descriptive_move_list_203166 = [{data: null, counter: 0, first: 0, last: 0}];
		F.line = 191;
		var compact_description_203167 = false;
		F.line = 192;
		rawEcho([]);
		F.line = 193;
		rawEcho(makeNimstrLit("   Status:"));
		F.line = 194;
		rawEcho(nsuIndent(status_203114(game_203142), 2, makeNimstrLit("   ")));
		F.line = 195;
		set_possible_moves_203109(game_203142, move_list_203158, 0);
		if ((0 < (move_list_203158[0] != null ? move_list_203158[0].length : 0))) {
		F.line = 197;
		compact_description_203167 = true;
		}
		else {
			F.line = 199;
			set_possible_moves_203101(game_203142, descriptive_move_list_203166[0]);
			L1: do {
				F.line = 200;
				var key_204214 = null;
				F.line = 200;
				var value_204215 = null;
				F.line = 1644;
				var l_214526 = len_203319(descriptive_move_list_203166[0]);
				F.line = 1256;
				var h_214527 = descriptive_move_list_203166[0].first;
				L2: do {
					F.line = 1645;
						L3: while (true) {
						if (!(0 <= h_214527)) break L3;
							F.line = 1258;
							var nxt_214529 = descriptive_move_list_203166[0].data[chckIndx(h_214527, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field1;
							if (is_filled_180418(descriptive_move_list_203166[0].data[chckIndx(h_214527, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field0)) {
							F.line = 200;
							key_204214 = descriptive_move_list_203166[0].data[chckIndx(h_214527, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field2;
							F.line = 1646;
							value_204215 = descriptive_move_list_203166[0].data[chckIndx(h_214527, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field3;
							F.line = 201;
							var Tmp4 = nimCopy(null, key_204214, NTI138);
							if (move_list_203158[0] != null) { move_list_203158[0].push(Tmp4); } else { move_list_203158[0] = [Tmp4]; };
							if (!((len_203319(descriptive_move_list_203166[0]) == l_214526))) {
							F.line = 1647;
							failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim(1647, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1260;
							h_214527 = nxt_214529;
						}
				} while(false);
			} while(false);
		}
		
		L5: do {
			F.line = 202;
				L6: while (true) {
				if (!true) break L6;
					F.line = 203;
					rawEcho(makeNimstrLit("   Possible moves:"));
					if (compact_description_203167) {
					F.line = 205;
					var disp_204226 = makeNimstrLit("      ");
					L7: do {
						F.line = 206;
						var key_204414 = null;
						F.line = 185;
						var i_214532 = 0;
						F.line = 186;
						var l_214533 = (move_list_203158[0] != null ? move_list_203158[0].length : 0);
						L8: do {
							F.line = 187;
								L9: while (true) {
								if (!(i_214532 < l_214533)) break L9;
									F.line = 206;
									key_204414 = move_list_203158[0][chckIndx(i_214532, 0, move_list_203158[0].length+0-1)-0];
									F.line = 207;
									if (disp_204226 != null) { disp_204226 = (disp_204226).concat(nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_204414, NTI138)])); } else { disp_204226 = nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_204414, NTI138)]).slice(); };
									F.line = 189;
									i_214532 = addInt(i_214532, 1);
									if (!(((move_list_203158[0] != null ? move_list_203158[0].length : 0) == l_214533))) {
									F.line = 190;
									failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					F.line = 208;
					rawEcho(disp_204226);
					}
					else {
						L10: do {
							F.line = 210;
							var key_204428 = null;
							F.line = 210;
							var value_204429 = null;
							F.line = 1644;
							var l_214536 = len_203319(descriptive_move_list_203166[0]);
							F.line = 1256;
							var h_214537 = descriptive_move_list_203166[0].first;
							L11: do {
								F.line = 1645;
									L12: while (true) {
									if (!(0 <= h_214537)) break L12;
										F.line = 1258;
										var nxt_214539 = descriptive_move_list_203166[0].data[chckIndx(h_214537, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field1;
										if (is_filled_180418(descriptive_move_list_203166[0].data[chckIndx(h_214537, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field0)) {
										F.line = 210;
										key_204428 = descriptive_move_list_203166[0].data[chckIndx(h_214537, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field2;
										F.line = 1646;
										value_204429 = descriptive_move_list_203166[0].data[chckIndx(h_214537, 0, descriptive_move_list_203166[0].data.length+0-1)-0].Field3;
										F.line = 211;
										rawEcho((makeNimstrLit("      ") || []).concat(nsuFormatVarargs(makeNimstrLit("[$key]: $value"), [makeNimstrLit("key"), nimCopy(null, key_204428, NTI138), makeNimstrLit("value"), nimCopy(null, value_204429, NTI138)]) || []));
										if (!((len_203319(descriptive_move_list_203166[0]) == l_214536))) {
										F.line = 1647;
										failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/tables.nim(1647, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										F.line = 1260;
										h_214537 = nxt_214539;
									}
							} while(false);
						} while(false);
					}
					
					F.line = 212;
					rawEcho(makeNimstrLit("   Enter move (or \'quit\'): "));
					F.line = 213;
					var response_204442 = null;
					F.line = 216;
					response_204442 = nimCopy(null, makeNimstrLit("When compiling for Javascript, you cannot use this procedure."), NTI138);
					if (contains_201742(move_list_203158[0], response_204442)) {
					F.line = 220;
					result_203143 = nimCopy(null, response_204442, NTI138);
					break BeforeRet;
					}
					
					if (eqStrings(response_204442, makeNimstrLit("quit"))) {
					F.line = 222;
					result_203143 = nimCopy(null, [], NTI138);
					break BeforeRet;
					}
					
					F.line = 223;
					rawEcho(makeNimstrLit("   BAD ENTRY. Try again."));
				}
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_203143;

}

function get_move_204641(self_203141, game_203142) {
	var result_204643 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 502;
		chckNilDisp(self_203141);
		if (isObj(self_203141.m_type, NTI207147)) {
		F.line = 188;
		result_204643 = get_move_207153(self_203141, game_203142);
		break BeforeRet;
		}
		else {
		if (isObj(self_203141.m_type, NTI203041)) {
		F.line = 188;
		result_204643 = get_move_203139(self_203141, game_203142);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_204643;

}

function current_player_204826(self_204828) {
	var result_204829 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 245;
		result_204829 = self_204828.players[chckIndx(subInt(self_204828.current_player_number, 1), 0, self_204828.players.length+0-1)-0];
	framePtr = F.prev;

	return result_204829;

}

function current_player_204858(self_204828) {
	var result_204860 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 244;
		result_204860 = current_player_204826(self_204828);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_204860;

}

function winning_player_204861(self_204863) {
	var result_204864 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((0 < self_204863.winner_player_number)) {
		F.line = 254;
		result_204864 = self_204863.players[chckIndx(subInt(self_204863.winner_player_number, 1), 0, self_204863.players.length+0-1)-0];
		break BeforeRet;
		}
		else {
		if ((self_204863.winner_player_number == 0)) {
		F.line = 256;
		result_204864 = {name: makeNimstrLit("NO WINNER YET"), m_type: NTI203041};
		break BeforeRet;
		}
		else {
			F.line = 258;
			result_204864 = {name: makeNimstrLit("STALEMATE OR TIE"), m_type: NTI203041};
			break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_204864;

}

function winning_player_204880(self_204863) {
	var result_204882 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 249;
		result_204882 = winning_player_204861(self_204863);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_204882;

}

function all_212510(s_212514, pred_212517) {
	var result_212518 = false;

	var F={procname:"all.all",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 538;
			var i_212549 = null;
			F.line = 3;
			var i_214564 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_214564 < (s_212514 != null ? s_212514.length : 0))) break L3;
						F.line = 538;
						i_212549 = s_212514[chckIndx(i_214564, 0, s_212514.length+0-1)-0];
						if (!(pred_212517(i_212549))) {
						F.line = 540;
						result_212518 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_214564 = addInt(i_214564, 1);
					}
			} while(false);
		} while(false);
		F.line = 541;
		result_212518 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212518;

}

function all_212442(s_212446, pred_212449) {
	var result_212450 = false;

	var F={procname:"all.all",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/pure/collections/sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 538;
			var i_212481 = 0;
			F.line = 3;
			var i_214568 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_214568 < (s_212446 != null ? s_212446.length : 0))) break L3;
						F.line = 538;
						i_212481 = s_212446[chckIndx(i_214568, 0, s_212446.length+0-1)-0];
						if (!(pred_212449(i_212481))) {
						F.line = 540;
						result_212450 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_214568 = addInt(i_214568, 1);
					}
			} while(false);
		} while(false);
		F.line = 541;
		result_212450 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212450;

}

function determine_winner_212234(self_212236) {

			function HEX3Aanonymous_212417(line_212420) {

					function HEX3Aanonymous_212423(x_212425) {
						var result_212426 = false;

						var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
						framePtr = F;
							F.line = 125;
							result_212426 = !((x_212425 == 0));
						framePtr = F.prev;

						return result_212426;

					}

				var result_212421 = false;

				var F={procname:"determine_winner.:anonymous",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
				framePtr = F;
					F.line = 124;
					result_212421 = all_212442(line_212420, HEX3Aanonymous_212423);
				framePtr = F.prev;

				return result_212421;

			}

	var F={procname:"game_logic.determine_winner",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((self_212236.winner_player_number == 0))) {
		F.line = 114;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 115;
			var line_212414 = null;
			F.line = 183;
			var colontmp__214558 = null;
			F.line = 115;
			colontmp__214558 = get_lines_211969(self_212236);
			F.line = 185;
			var i_214559 = 0;
			F.line = 186;
			var l_214560 = (colontmp__214558 != null ? colontmp__214558.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_214559 < l_214560)) break L3;
						F.line = 115;
						line_212414 = colontmp__214558[chckIndx(i_214559, 0, colontmp__214558.length+0-1)-0];
						F.line = 117;
						var max_length_212415 = max_line_length_211972(line_212414);
						if ((self_212236.winCount <= max_length_212415["Field0"])) {
						F.line = 119;
						self_212236.winner_player_number = max_length_212415["Field1"];
						F.line = 120;
						break BeforeRet;
						}
						
						F.line = 189;
						i_214559 = addInt(i_214559, 1);
						if (!(((colontmp__214558 != null ? colontmp__214558.length : 0) == l_214560))) {
						F.line = 190;
						failed_assert_impl_14255(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (all_212510(self_212236.field, HEX3Aanonymous_212417)) {
		F.line = 126;
		self_212236.winner_player_number = -1;
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function determine_winner_205066(self_205068) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_205071 = null;
		F.line = 3351;
		e_205071 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 305;
		e_205071.message = nimCopy(null, makeNimstrLit("determine_winner() must be overridden"), NTI138);
		F.line = 3344;
		e_205071.parent = null;
		F.line = 305;
		raiseException(e_205071, "FieldError");
	framePtr = F.prev;

	
}

function determine_winner_205226(self_205068) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 502;
		chckNilDisp(self_205068);
		if (isObj(self_205068.m_type, NTI211018)) {
		F.line = 300;
		determine_winner_212234(self_205068);
		}
		else {
		if (isObj(self_205068.m_type, NTI203034)) {
		F.line = 300;
		determine_winner_205066(self_205068);
		}
		}
	framePtr = F.prev;

	
}

function default_setup_206028(self_206030, players_206032) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 353;
		self_206030.players = nimCopy(null, players_206032, NTI206031);
		F.line = 354;
		self_206030.player_count = (self_206030.players != null ? self_206030.players.length : 0);
		F.line = 355;
		self_206030.current_player_number = 1;
		F.line = 356;
		self_206030.winner_player_number = 0;
	framePtr = F.prev;

	
}

function default_setup_206066(self_206030, players_206032) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 340;
		default_setup_206028(self_206030, players_206032);
	framePtr = F.prev;

	
}

function new_seq_211135(len_211138) {
	var result_211140 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 986;
		result_211140 = new Array(len_211138); for (var i=0;i<len_211138;++i) {result_211140[i]=null;}	framePtr = F.prev;

	return result_211140;

}

function new_seq_211100(len_211103) {
	var result_211105 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"/home/manuel/.choosenim/toolchains/nim-0.20.0/lib/system.nim",line:0};
	framePtr = F;
		F.line = 986;
		result_211105 = new Array(len_211103); for (var i=0;i<len_211103;++i) {result_211105[i]=0;}	framePtr = F.prev;

	return result_211105;

}

function reset_field_211092(self_211094) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 35;
		F.line = 897;
		var result_211095 = new_seq_211135(chckRange(self_211094.size, 0, 2147483647));
		L1: do {
			F.line = 898;
			var i_211096 = 0;
			F.line = 2647;
			var colontmp__214571 = 0;
			F.line = 35;
			colontmp__214571 = self_211094.size;
			F.line = 2648;
			var i_214572 = 0;
			L2: do {
				F.line = 2649;
					L3: while (true) {
					if (!(i_214572 < colontmp__214571)) break L3;
						F.line = 898;
						i_211096 = i_214572;
						F.line = 35;
						result_211095[chckIndx(i_211096, 0, result_211095.length+0-1)-0] = nimCopy(null, new_seq_211100(chckRange(self_211094.size, 0, 2147483647)), NTI211104);
						F.line = 2651;
						i_214572 = addInt(i_214572, 1);
					}
			} while(false);
		} while(false);
		self_211094.field = nimCopy(null, result_211095, NTI211139);
	framePtr = F.prev;

	
}

function reset_field_211214(self_211094) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 34;
		reset_field_211092(self_211094);
	framePtr = F.prev;

	
}

function setup_211216(self_211218, players_211220) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 39;
		default_setup_206066(self_211218, players_211220);
		F.line = 40;
		reset_field_211214(self_211218);
	framePtr = F.prev;

	
}

function setup_205828(self_205830, players_205832) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3348;
		var e_205835 = null;
		F.line = 3351;
		e_205835 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 337;
		e_205835.message = nimCopy(null, makeNimstrLit("setup() must be overridden"), NTI138);
		F.line = 3344;
		e_205835.parent = null;
		F.line = 337;
		raiseException(e_205835, "FieldError");
	framePtr = F.prev;

	
}

function setup_206026(self_205830, players_205832) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 502;
		chckNilDisp(self_205830);
		if (isObj(self_205830.m_type, NTI211018)) {
		F.line = 333;
		setup_211216(self_205830, players_205832);
		}
		else {
		if (isObj(self_205830.m_type, NTI203034)) {
		F.line = 333;
		setup_205828(self_205830, players_205832);
		}
		}
	framePtr = F.prev;

	
}

function play_206068(self_206070) {
	var result_206072 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 362;
		result_206072 = nimCopy(null, [], NTI206085);
		F.line = 363;
		var move_206086 = [];
		L1: do {
			F.line = 364;
				L2: while (true) {
				if (!!(is_over_205046(self_206070))) break L2;
					F.line = 365;
					display_203137(current_player_204858(self_206070), makeNimstrLit("-----------------"));
					F.line = 366;
					display_203137(current_player_204858(self_206070), nsuFormatVarargs(makeNimstrLit("$1\'s Turn"), [nimCopy(null, current_player_204858(self_206070).name, NTI138)]));
					F.line = 367;
					move_206086 = nimCopy(null, get_move_204641(current_player_204858(self_206070), self_206070), NTI138);
					if (eqStrings(move_206086, [])) {
					F.line = 369;
					break L1;
					}
					
					F.line = 370;
					var Tmp3 = nimCopy(null, move_206086, NTI138);
					if (result_206072 != null) { result_206072.push(Tmp3); } else { result_206072 = [Tmp3]; };
					F.line = 371;
					display_203137(current_player_204858(self_206070), []);
					F.line = 372;
					display_203137(current_player_204858(self_206070), (makeNimstrLit("   ") || []).concat(make_move_205026(self_206070, move_206086) || []));
					F.line = 373;
					determine_winner_205226(self_206070);
					if (is_over_205046(self_206070)) {
					F.line = 375;
					display_203137(current_player_204858(self_206070), []);
					if ((self_206070.winner_player_number == -1)) {
					F.line = 377;
					display_203137(current_player_204858(self_206070), makeNimstrLit("STALEMATE."));
					}
					else {
						F.line = 379;
					display_203137(current_player_204858(self_206070), nsuFormatVarargs(makeNimstrLit("WINNER IS $#"), [nimCopy(null, winning_player_204880(self_206070).name, NTI138)]));
					}
					
					F.line = 380;
					break L1;
					}
					
					F.line = 381;
					self_206070.current_player_number = next_player_number_204905(self_206070);
				}
		} while(false);
	framePtr = F.prev;

	return result_206072;

}

function play_206114(self_206070) {
	var result_206116 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"/home/manuel/.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 359;
		result_206116 = play_206068(self_206070);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_206116;

}

function set_default_211074(self_211076) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 28;
		self_211076.name1 = nimCopy(null, makeNimstrLit("player 1"), NTI138);
		F.line = 29;
		self_211076.name2 = nimCopy(null, makeNimstrLit("player 2"), NTI138);
		F.line = 30;
		self_211076.size = 3;
		F.line = 31;
		self_211076.winCount = 3;
	framePtr = F.prev;

	
}

function set_default_211090(self_211076) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 26;
		set_default_211074(self_211076);
	framePtr = F.prev;

	
}

function setup_212781(self_212783, s_212784) {
		var Tmp1;

	var F={procname:"game_logic.setup",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 167;
		self_212783.size = s_212784.size;
		F.line = 168;
		if ((s_212784.winCount == 0)) {
		Tmp1 = s_212784.size;
		}
		else {
		Tmp1 = s_212784.winCount;
		}
		
		self_212783.winCount = Tmp1;
		if (s_212784.ai) {
		F.line = 170;
		setup_206026(self_212783, [{name: nimCopy(null, s_212784.name1, NTI138), m_type: NTI203041}, {name: nimCopy(null, s_212784.name2, NTI138), depth: 3, m_type: NTI207147}]);
		}
		else {
			F.line = 172;
		setup_206026(self_212783, [{name: nimCopy(null, s_212784.name1, NTI138), m_type: NTI203041}, {name: nimCopy(null, s_212784.name2, NTI138), m_type: NTI203041}]);
		}
		
	framePtr = F.prev;

	
}

function setup_212818(self_212783, s_212784) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 166;
		setup_212781(self_212783, s_212784);
	framePtr = F.prev;

	
}

function play_on_cli_212820(self_212822) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		play_206114(self_212822);
	framePtr = F.prev;

	
}

function play_on_cli_212836(self_212822) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 174;
		play_on_cli_212820(self_212822);
	framePtr = F.prev;

	
}

function field_212838(self_212840) {
	var result_212843 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 178;
		result_212843 = nimCopy(null, self_212840.field, NTI211019);
	framePtr = F.prev;

	return result_212843;

}

function field_212857(self_212840) {
	var result_212859 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 177;
		result_212859 = field_212838(self_212840);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212859;

}

function size_212860(self_212862) {
	var result_212863 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 181;
		result_212863 = self_212862.size;
	framePtr = F.prev;

	return result_212863;

}

function size_212877(self_212862) {
	var result_212879 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 180;
		result_212879 = size_212860(self_212862);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212879;

}

function win_count_212880(self_212882) {
	var result_212883 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 184;
		result_212883 = self_212882.winCount;
	framePtr = F.prev;

	return result_212883;

}

function win_count_212897(self_212882) {
	var result_212899 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 183;
		result_212899 = win_count_212880(self_212882);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212899;

}

function get_player_name_212900(self_212902) {
		var Tmp1;

	var result_212903 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 188;
		if ((current_player_204858(self_212902) == null)) {
		Tmp1 = makeNimstrLit("Game is not setup yet");
		}
		else {
		Tmp1 = current_player_204858(self_212902).name;
		}
		
		result_212903 = nimCopy(null, Tmp1, NTI138);
	framePtr = F.prev;

	return result_212903;

}

function get_player_name_212925(self_212902) {
	var result_212927 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 187;
		result_212927 = get_player_name_212900(self_212902);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212927;

}

function make_turn_212928(self_212930, move_212931) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_205046(self_212930)) {
		F.line = 196;
		break BeforeRet;
		}
		
		F.line = 197;
		make_move_205026(self_212930, move_212931);
		F.line = 198;
		determine_winner_205226(self_212930);
		if (is_over_205046(self_212930)) {
		F.line = 200;
		break BeforeRet;
		}
		
		F.line = 201;
		finish_turn_204924(self_212930);
		if (isObj(current_player_204858(self_212930).m_type, NTI207147)) {
		F.line = 204;
		make_move_205026(self_212930, get_move_204641(current_player_204858(self_212930), self_212930));
		F.line = 205;
		finish_turn_204924(self_212930);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function make_turn_212953(self_212930, move_212931) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 194;
		make_turn_212928(self_212930, move_212931);
	framePtr = F.prev;

	
}

function finished_212955(self_212957) {
	var result_212958 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
		F.line = 209;
		result_212958 = is_over_205046(self_212957);
	framePtr = F.prev;

	return result_212958;

}

function finished_212972(self_212957) {
	var result_212974 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"/home/manuel/Programming/nim/TicTacToe/src/game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 208;
		result_212974 = finished_212955(self_212957);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_212974;

}
