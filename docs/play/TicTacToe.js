/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI251081 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256139 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256104 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI251027 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI192673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256741 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256739 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256737 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256735 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256731 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256733 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256829 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256816 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256803 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256790 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256777 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256764 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI252147 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI249662 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI47886 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI211202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI212708 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI130832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI133647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47830 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47844 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI216587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI235211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI215761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI215757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI215150 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI215713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI215701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI215722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI215720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI215028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI215714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI215705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI206448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI206205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI206281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI206227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI206565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI206563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI206561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI206231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI206229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI235207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI235209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI64156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47914 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI44016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI44042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI47908 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI47826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI248041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI248033 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI248036 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI248034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI256020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256019 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
NTI256020.base = NTI44006;
NTI256019.base = NTI256020;
var NNI256018 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI256019, name: "field", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI44006, name: "size", sons: null}, 
{kind: 1, offset: "winCount", len: 0, typ: NTI44006, name: "winCount", sons: null}]};
NTI256018.node = NNI256018;
var NNI248041 = {kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null};
NTI248041.node = NNI248041;
var NNI47808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47808.node = NNI47808;
NTI248041.base = NTI47808;
NTI248033.base = NTI248041;
NTI248036.base = NTI248033;
var NNI248034 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "player_count", len: 0, typ: NTI44006, name: "player_count", sons: null}, 
{kind: 1, offset: "players", len: 0, typ: NTI248036, name: "players", sons: null}, 
{kind: 1, offset: "current_player_number", len: 0, typ: NTI44006, name: "current_player_number", sons: null}, 
{kind: 1, offset: "winner_player_number", len: 0, typ: NTI44006, name: "winner_player_number", sons: null}]};
NTI248034.node = NNI248034;
NTI248034.base = NTI47808;
NTI256018.base = NTI248034;
NTI47908.base = NTI47826;
NTI47914.base = NTI47826;
var NNI47826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI47908, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI44040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI44040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI44016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI47914, name: "up", sons: null}]};
NTI47826.node = NNI47826;
NTI47826.base = NTI47808;
var NNI64156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}]};
NTI64156.node = NNI64156;
var NNI47846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47846.node = NNI47846;
var NNI47842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47842.node = NNI47842;
var NNI47828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47828.node = NNI47828;
NTI47828.base = NTI47826;
NTI47842.base = NTI47828;
NTI47846.base = NTI47842;
var NNI47850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47850.node = NNI47850;
NTI47850.base = NTI47828;
var NNI47858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47858.node = NNI47858;
NTI47858.base = NTI47828;
var NNI206283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI44042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI44042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI44042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI44042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI44042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI44042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI44042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI44042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI44042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI44042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI44042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI44042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI44042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI44042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI44042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI44042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI44042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI44042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI44042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI44042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI44042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI44042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI44042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI44042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI44042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI44042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI44042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI44042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI44042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI44042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI44042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI44042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI44042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI44042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI44042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI44042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI44042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI44042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI44042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI44042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI44042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI44042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI44042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI44042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI44042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI44042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI44042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI44042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI44042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI44042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI44042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI44042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI44042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI44042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI44042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI44042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI44042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI44042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI44042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI44042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI44042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI44042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI44042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI44042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI44042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI44042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI44042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI44042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI44042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI44042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI44042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI44042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI44042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI44042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI44042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI44042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI44042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI44042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI44042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI44042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI44042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI44042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI44042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI44042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI44042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI44042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI44042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI44042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI44042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI44042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI44006, name: "zIndex", sons: null}]};
NTI206283.node = NNI206283;
NTI206283.base = NTI47808;
var NNI235207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI235207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI235207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI235207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI235207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI235207, name: "pkDetach", len: 0, sons: null}}};
NTI235207.node = NNI235207;
NTI206561.base = NTI206229;
NTI206563.base = NTI206229;
NTI206565.base = NTI206229;
var NNI206227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI206227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI206227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI206227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI206227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI206227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI206227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI206227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI206227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI206227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI206227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI206227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI206227, name: "NotationNode", len: 0, sons: null}}};
NTI206227.node = NNI206227;
NTI206281.base = NTI206283;
var NNI206231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI206561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI206563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI206565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI44042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI206229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI206229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI206229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI44042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI206227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI44042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI206229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI206229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI44042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI206281, name: "style", sons: null}]};
NTI206231.node = NNI206231;
var NNI206205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI206372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI206376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI206380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI206384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI206388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI206392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI206396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI206400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI206404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI206408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI206412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI206416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI206420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI206424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI206428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI206432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI206436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI206440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI206444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI206448, name: "onunload", sons: null}]};
NTI206205.node = NNI206205;
NTI206205.base = NTI47808;
NTI206231.base = NTI206205;
NTI206229.base = NTI206231;
var NNI215028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI215028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI215028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI215028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI215028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI215028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI215028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI215028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI215028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI215028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI215028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI215028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI215028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI215028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI215028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI215028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI215028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI215028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI215028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI215028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI215028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI215028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI215028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI215028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI215028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI215028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI215028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI215028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI215028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI215028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI215028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI215028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI215028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI215028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI215028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI215028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI215028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI215028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI215028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI215028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI215028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI215028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI215028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI215028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI215028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI215028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI215028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI215028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI215028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI215028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI215028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI215028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI215028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI215028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI215028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI215028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI215028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI215028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI215028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI215028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI215028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI215028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI215028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI215028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI215028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI215028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI215028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI215028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI215028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI215028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI215028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI215028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI215028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI215028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI215028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI215028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI215028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI215028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI215028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI215028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI215028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI215028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI215028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI215028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI215028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI215028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI215028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI215028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI215028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI215028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI215028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI215028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI215028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI215028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI215028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI215028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI215028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI215028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI215028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI215028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI215028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI215028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI215028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI215028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI215028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI215028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI215028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI215028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI215028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI215028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI215028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI215028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI215028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI215028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI215028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI215028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI215028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI215028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI215028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI215028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI215028, name: "menu", len: 0, sons: null}}};
NTI215028.node = NNI215028;
NTI215720.base = NTI215705;
NTI215722.base = NTI44042;
var NNI215150 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI215150, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI215150, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI215150, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI215150, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI215150, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI215150, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI215150, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI215150, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI215150, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI215150, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI215150, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI215150, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI215150, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI215150, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI215150, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI215150, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI215150, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI215150, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI215150, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI215150, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI215150, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI215150, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI215150, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI215150, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI215150, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI215150, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI215150, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI215150, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI215150, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI215150, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI215150, name: "onkeyuplater", len: 0, sons: null}}};
NTI215150.node = NNI215150;
var NNI215713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI215150, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI215757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI215761, name: "Field2", sons: null}]};
NTI215713.node = NNI215713;
NTI215701.base = NTI215713;
var NNI210297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI210297.node = NNI210297;
NTI210298.base = NTI210297;
var NNI215714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI215028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI44006, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI44042, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI44042, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI44042, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI215720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI215722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI215701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI210298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI206229, name: "dom", sons: null}]};
NTI215714.node = NNI215714;
NTI215714.base = NTI47808;
NTI215705.base = NTI215714;
var NNI235209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI235207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI206229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI206229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI215705, name: "n", sons: null}]};
NTI235209.node = NNI235209;
var NNI235211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI215705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI215705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI44006, name: "pos", sons: null}]};
NTI235211.node = NNI235211;
NTI216587.base = NTI44042;
var NNI47844 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47844.node = NNI47844;
NTI47844.base = NTI47842;
var NNI47852 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47852.node = NNI47852;
var NNI47830 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47830.node = NNI47830;
NTI47830.base = NTI47826;
NTI47852.base = NTI47830;
var NNI47862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47862.node = NNI47862;
NTI47862.base = NTI47828;
var NNI133647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI130832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI44006, name: "b", sons: null}]};
NTI133647.node = NNI133647;
var NNI211202 = {kind: 2, offset: 0, typ: null, name: null, len: 192, sons: {"0": {kind: 1, offset: 0, typ: NTI211202, name: "alignContent", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI211202, name: "alignItems", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI211202, name: "alignSelf", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI211202, name: "animation", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI211202, name: "animationDelay", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI211202, name: "animationDirection", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI211202, name: "animationDuration", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI211202, name: "animationFillMode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI211202, name: "animationIterationCount", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI211202, name: "animationName", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI211202, name: "animationTimingFunction", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI211202, name: "animationPlayState", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI211202, name: "background", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI211202, name: "backgroundAttachment", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI211202, name: "backgroundColor", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI211202, name: "backgroundImage", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI211202, name: "backgroundPosition", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI211202, name: "backgroundRepeat", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI211202, name: "backgroundClip", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI211202, name: "backgroundOrigin", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI211202, name: "backgroundSize", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI211202, name: "backfaceVisibility", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI211202, name: "border", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI211202, name: "borderBottom", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI211202, name: "borderBottomColor", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI211202, name: "borderBottomLeftRadius", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI211202, name: "borderBottomRightRadius", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI211202, name: "borderBottomStyle", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI211202, name: "borderBottomWidth", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI211202, name: "borderCollapse", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI211202, name: "borderColor", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI211202, name: "borderImage", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI211202, name: "borderImageOutset", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI211202, name: "borderImageRepeat", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI211202, name: "borderImageSlice", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI211202, name: "borderImageSource", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI211202, name: "borderImageWidth", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI211202, name: "borderLeft", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI211202, name: "borderLeftColor", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI211202, name: "borderLeftStyle", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI211202, name: "borderLeftWidth", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI211202, name: "borderRadius", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI211202, name: "borderRight", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI211202, name: "borderRightColor", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI211202, name: "borderRightStyle", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI211202, name: "borderRightWidth", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI211202, name: "borderSpacing", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI211202, name: "borderStyle", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI211202, name: "borderTop", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI211202, name: "borderTopColor", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI211202, name: "borderTopLeftRadius", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI211202, name: "borderTopRightRadius", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI211202, name: "borderTopStyle", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI211202, name: "borderTopWidth", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI211202, name: "borderWidth", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI211202, name: "bottom", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI211202, name: "boxDecorationBreak", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI211202, name: "boxShadow", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI211202, name: "boxSizing", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI211202, name: "captionSide", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI211202, name: "clear", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI211202, name: "clip", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI211202, name: "color", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI211202, name: "columnCount", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI211202, name: "columnFill", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI211202, name: "columnGap", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI211202, name: "columnRule", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI211202, name: "columnRuleColor", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI211202, name: "columnRuleStyle", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI211202, name: "columnRuleWidth", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI211202, name: "columns", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI211202, name: "columnSpan", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI211202, name: "columnWidth", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI211202, name: "content", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI211202, name: "counterIncrement", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI211202, name: "counterReset", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI211202, name: "cursor", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI211202, name: "direction", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI211202, name: "display", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI211202, name: "emptyCells", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI211202, name: "filter", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI211202, name: "flex", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI211202, name: "flexBasis", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI211202, name: "flexDirection", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI211202, name: "flexFlow", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI211202, name: "flexGrow", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI211202, name: "flexShrink", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI211202, name: "flexWrap", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI211202, name: "cssFloat", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI211202, name: "font", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI211202, name: "fontFamily", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI211202, name: "fontSize", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI211202, name: "fontSizeAdjust", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI211202, name: "fontStretch", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI211202, name: "fontStyle", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI211202, name: "fontVariant", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI211202, name: "fontWeight", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI211202, name: "gridTemplateColumns", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI211202, name: "hangingPunctuation", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI211202, name: "height", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI211202, name: "hyphens", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI211202, name: "icon", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI211202, name: "imageOrientation", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI211202, name: "justifyContent", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI211202, name: "left", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI211202, name: "letterSpacing", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI211202, name: "lineHeight", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI211202, name: "listStyle", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI211202, name: "listStyleImage", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI211202, name: "listStylePosition", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI211202, name: "listStyleType", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI211202, name: "margin", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI211202, name: "marginBottom", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI211202, name: "marginLeft", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI211202, name: "marginRight", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI211202, name: "marginTop", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI211202, name: "maxHeight", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI211202, name: "maxWidth", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI211202, name: "minHeight", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI211202, name: "minWidth", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI211202, name: "navDown", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI211202, name: "navIndex", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI211202, name: "navLeft", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI211202, name: "navRight", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI211202, name: "navUp", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI211202, name: "opacity", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI211202, name: "order", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI211202, name: "orphans", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI211202, name: "outline", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI211202, name: "outlineColor", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI211202, name: "outlineOffset", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI211202, name: "outlineStyle", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI211202, name: "outlineWidth", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI211202, name: "overflow", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI211202, name: "overflowX", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI211202, name: "overflowY", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI211202, name: "padding", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI211202, name: "paddingBottom", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI211202, name: "paddingLeft", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI211202, name: "paddingRight", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI211202, name: "paddingTop", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI211202, name: "pageBreakAfter", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI211202, name: "pageBreakBefore", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI211202, name: "pageBreakInside", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI211202, name: "perspective", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI211202, name: "perspectiveOrigin", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI211202, name: "pointerEvents", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI211202, name: "position", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI211202, name: "quotes", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI211202, name: "resize", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI211202, name: "right", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI211202, name: "scrollbar3dLightColor", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI211202, name: "scrollbarArrowColor", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI211202, name: "scrollbarBaseColor", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI211202, name: "scrollbarDarkshadowColor", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI211202, name: "scrollbarFaceColor", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI211202, name: "scrollbarHighlightColor", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI211202, name: "scrollbarShadowColor", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI211202, name: "scrollbarTrackColor", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI211202, name: "tableLayout", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI211202, name: "tabSize", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI211202, name: "textAlign", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI211202, name: "textAlignLast", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI211202, name: "textDecoration", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI211202, name: "textDecorationColor", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI211202, name: "textDecorationLine", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI211202, name: "textDecorationStyle", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI211202, name: "textIndent", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI211202, name: "textJustify", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI211202, name: "textOverflow", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI211202, name: "textShadow", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI211202, name: "textTransform", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI211202, name: "top", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI211202, name: "transform", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI211202, name: "transformOrigin", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI211202, name: "transformStyle", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI211202, name: "transition", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI211202, name: "transitionDelay", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI211202, name: "transitionDuration", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI211202, name: "transitionProperty", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI211202, name: "transitionTimingFunction", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI211202, name: "unicodeBidi", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI211202, name: "userSelect", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI211202, name: "verticalAlign", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI211202, name: "visibility", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI211202, name: "whiteSpace", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI211202, name: "width", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI211202, name: "wordBreak", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI211202, name: "wordSpacing", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI211202, name: "wordWrap", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI211202, name: "widows", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI211202, name: "zIndex", len: 0, sons: null}}};
NTI211202.node = NNI211202;
var NNI212708 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI211202, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44042, name: "Field1", sons: null}]};
NTI212708.node = NNI212708;
var NNI47860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47860.node = NNI47860;
NTI47860.base = NTI47828;
var NNI47886 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47886.node = NNI47886;
NTI47886.base = NTI47828;
NTI249662.base = NTI44040;
var NNI252147 = {kind: 1, offset: "depth", len: 0, typ: NTI44006, name: "depth", sons: null};
NTI252147.node = NNI252147;
NTI252147.base = NTI248041;
NTI256764.base = NTI44006;
NTI256777.base = NTI44006;
NTI256790.base = NTI44006;
NTI256803.base = NTI44006;
NTI256816.base = NTI44006;
NTI256829.base = NTI44006;
NTI256733.base = NTI44006;
NTI256731.base = NTI44006;
NTI256735.base = NTI44006;
NTI256737.base = NTI44006;
NTI256739.base = NTI44006;
NTI256741.base = NTI44006;
NTI192673.base = NTI44040;
NTI251027.base = NTI248033;
NTI256104.base = NTI44006;
NTI256139.base = NTI256104;
NTI251081.base = NTI44040;

function cstrToNimstr(c_66271) {
		  var ln = c_66271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_66271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_66271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_67427, src_67428, ti_67429) {
	var result_67619 = null;

		switch (ti_67429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_67401(ti_67429))) {
			result_67619 = src_67428;
			}
			else {
				result_67619 = [src_67428[0], src_67428[1]];
			}
			
			break;
		case 19:
			      if (dest_67427 === null || dest_67427 === undefined) {
        dest_67427 = {};
      }
      else {
        for (var key in dest_67427) { delete dest_67427[key]; }
      }
      for (var key in src_67428) { dest_67427[key] = src_67428[key]; }
      result_67619 = dest_67427;
    
			break;
		case 18:
		case 17:
			if (!((ti_67429.base == null))) {
			result_67619 = nimCopy(dest_67427, src_67428, ti_67429.base);
			}
			else {
			if ((ti_67429.kind == 17)) {
			result_67619 = (dest_67427 === null || dest_67427 === undefined) ? {m_type: ti_67429} : dest_67427;
			}
			else {
				result_67619 = (dest_67427 === null || dest_67427 === undefined) ? {} : dest_67427;
			}
			}
			nimCopyAux(result_67619, src_67428, ti_67429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_67428 === null) {
        result_67619 = null;
      }
      else {
        if (dest_67427 === null || dest_67427 === undefined) {
          dest_67427 = new Array(src_67428.length);
        }
        else {
          dest_67427.length = src_67428.length;
        }
        result_67619 = dest_67427;
        for (var i = 0; i < src_67428.length; ++i) {
          result_67619[i] = nimCopy(result_67619[i], src_67428[i], ti_67429.base);
        }
      }
    
			break;
		case 28:
			      if (src_67428 !== null) {
        result_67619 = src_67428.slice(0);
      }
    
			break;
		default: 
			result_67619 = src_67428;
			break;
		}

	return result_67619;

}

function makeNimstrLit(c_66254) {
		  var ln = c_66254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_66254.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_67686, value_67687, typ_67688) {
		    var result = new Array(len_67686);
    for (var i = 0; i < len_67686; ++i) result[i] = nimCopy(null, value_67687, typ_67688);
    return result;
  

	
}

function toJSStr(s_66288) {
		  if (s_66288 === null) return "";
  var len = s_66288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_66288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_66288[i] < 128)
      asciiPart[i] = fcc(s_66288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_64618, ename_64619) {
		e_64618.name = ename_64619;
		if ((excHandler == 0)) {
		unhandledException(e_64618);
		}
		
		e_64618.trace = nimCopy(null, raw_write_stack_trace_64468(), NTI44040);
		throw e_64618;

	
}

function addInt(a_66603, b_66604) {
		    var result = a_66603 + b_66604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_215689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_67705, a_67706, b_67707) {
			var Tmp1;

	var result_67708 = 0;

	BeforeRet: do {
			if (!(a_67706 <= i_67705)) Tmp1 = false; else {				Tmp1 = (i_67705 <= b_67707);			}		if (Tmp1) {
		result_67708 = i_67705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_67705, a_67706, b_67707);
		}
		
	} while (false);

	return result_67708;

}

function subInt(a_66621, b_66622) {
		    var result = a_66621 - b_66622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_215695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_67003, b_67004) {
		var Tmp1;

	var result_67005 = 0;

	BeforeRet: do {
		if ((a_67003 <= b_67004)) {
		Tmp1 = a_67003;
		}
		else {
		Tmp1 = b_67004;
		}
		
		result_67005 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_67005;

}

function eqStrings(a_66483, b_66484) {
		    if (a_66483 == b_66484) return true;
    if (a_66483 === null && b_66484.length == 0) return true;
    if (b_66484 === null && a_66483.length == 0) return true;
    if ((!a_66483) || (!b_66484)) return false;
    var alen = a_66483.length;
    if (alen != b_66484.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_66483[i] != b_66484[i]) return false;
    return true;
  

	
}
		var to_style_attr_name_211663 = ["alignContent", "alignItems", "alignSelf", "animation", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationTimingFunction", "animationPlayState", "background", "backgroundAttachment", "backgroundColor", "backgroundImage", "backgroundPosition", "backgroundRepeat", "backgroundClip", "backgroundOrigin", "backgroundSize", "backfaceVisibility", "border", "borderBottom", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStyle", "borderBottomWidth", "borderCollapse", "borderColor", "borderImage", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeft", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRadius", "borderRight", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderSpacing", "borderStyle", "borderTop", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStyle", "borderTopWidth", "borderWidth", "bottom", "boxDecorationBreak", "boxShadow", "boxSizing", "captionSide", "clear", "clip", "color", "columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columns", "columnSpan", "columnWidth", "content", "counterIncrement", "counterReset", "cursor", "direction", "display", "emptyCells", "filter", "flex", "flexBasis", "flexDirection", "flexFlow", "flexGrow", "flexShrink", "flexWrap", "cssFloat", "font", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "gridTemplateColumns", "hangingPunctuation", "height", "hyphens", "icon", "imageOrientation", "justifyContent", "left", "letterSpacing", "lineHeight", "listStyle", "listStyleImage", "listStylePosition", "listStyleType", "margin", "marginBottom", "marginLeft", "marginRight", "marginTop", "maxHeight", "maxWidth", "minHeight", "minWidth", "navDown", "navIndex", "navLeft", "navRight", "navUp", "opacity", "order", "orphans", "outline", "outlineColor", "outlineOffset", "outlineStyle", "outlineWidth", "overflow", "overflowX", "overflowY", "padding", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "pageBreakAfter", "pageBreakBefore", "pageBreakInside", "perspective", "perspectiveOrigin", "pointerEvents", "position", "quotes", "resize", "right", "scrollbar3dLightColor", "scrollbarArrowColor", "scrollbarBaseColor", "scrollbarDarkshadowColor", "scrollbarFaceColor", "scrollbarHighlightColor", "scrollbarShadowColor", "scrollbarTrackColor", "tableLayout", "tabSize", "textAlign", "textAlignLast", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationStyle", "textIndent", "textJustify", "textOverflow", "textShadow", "textTransform", "top", "transform", "transformOrigin", "transformStyle", "transition", "transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction", "unicodeBidi", "userSelect", "verticalAlign", "visibility", "whiteSpace", "width", "wordBreak", "wordSpacing", "wordWrap", "widows", "zIndex"];

function mulInt(a_66639, b_66640) {
		    var result = a_66639 * b_66640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function mnewString(len_66305) {
		    return new Array(len_66305);
  

	
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function divInt(a_66657, b_66658) {
		    if (b_66658 == 0) raiseDivByZero();
    if (b_66658 == -1 && a_66657 == 2147483647) raiseOverflow();
    return Math.trunc(a_66657 / b_66658);
  

	
}
var ConstSet8 = setConstr([65, 90], [97, 122]);

function chckRange(i_67724, a_67725, b_67726) {
			var Tmp1;

	var result_67727 = 0;

	BeforeRet: do {
			if (!(a_67725 <= i_67724)) Tmp1 = false; else {				Tmp1 = (i_67724 <= b_67726);			}		if (Tmp1) {
		result_67727 = i_67724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_67727;

}
var ConstSet9 = setConstr(46, 44);

function nimCharToStr(x_64062) {
	var result_64063 = null;

		result_64063 = nimCopy(null, mnewString(1), NTI44040);
		result_64063[0] = x_64062;

	return result_64063;

}
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr([97, 122]);

function modInt(a_66675, b_66676) {
		    if (b_66676 == 0) raiseDivByZero();
    if (b_66676 == -1 && a_66675 == 2147483647) raiseOverflow();
    return Math.trunc(a_66675 % b_66676);
  

	
}

function addChar(x_67895, c_67896) {
		x_67895.push(c_67896);

	
}
										var desc_256056 = [makeNimstrLit(" "), makeNimstrLit("X"), makeNimstrLit("0")];

function isObj(obj_67854, subclass_67855) {
	var result_67856 = false;

	BeforeRet: do {
		var x_67857 = obj_67854;
		if ((x_67857 == subclass_67855)) {
		result_67856 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_67857 == subclass_67855))) break L2;
					if ((x_67857 == null)) {
					result_67856 = false;
					break BeforeRet;
					}
					
					x_67857 = x_67857.base;
				}
		} while(false);
		result_67856 = true;
		break BeforeRet;
	} while (false);

	return result_67856;

}
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr(0, 125);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([65, 90]);

function nimMax(a_67021, b_67022) {
		var Tmp1;

	var result_67023 = 0;

	BeforeRet: do {
		if ((b_67022 <= a_67021)) {
		Tmp1 = a_67021;
		}
		else {
		Tmp1 = b_67022;
		}
		
		result_67023 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_67023;

}
var ConstSet16 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet17 = setConstr([48, 57]);
var ConstSet18 = setConstr([48, 57]);
var ConstSet19 = setConstr(13, 10);
var nim_program_result = 0;
var global_raise_hook_61618 = [null];
var local_raise_hook_61623 = [null];
var out_of_mem_hook_61626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_216495 = [0];
var object_id_220437 = [0];
var vcomponents_228026 = [{}];
var kxi_235324 = [null];

function new_258015() {
	var result_258019 = null;

	var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1743;
		var r_258201 = null;
		F.line = 1746;
		r_258201 = {m_type: NTI256018, field: null, size: 0, winCount: 0, player_count: 0, players: null, current_player_number: 0, winner_player_number: 0};
		F.line = 1747;
		result_258019 = r_258201;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_258019;

}

function new_258238() {
	var result_258242 = null;

	var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1743;
		var r_258401 = null;
		F.line = 1746;
		r_258401 = {name1: null, name2: null, ai: false, size: 0, winCount: 0};
		F.line = 1747;
		result_258242 = r_258401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_258242;

}
var game_258236 = new_258015();
var settings_258436 = new_258238();
var state_258438 = [0];
var field_blocked_258439 = [false];

function is_fat_pointer_67401(ti_67403) {
	var result_67404 = false;

	BeforeRet: do {
		result_67404 = !((ConstSet1[ti_67403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_67404;

}

function nimCopyAux(dest_67432, src_67433, n_67435) {
		switch (n_67435.kind) {
		case 0:
			break;
		case 1:
			      dest_67432[n_67435.offset] = nimCopy(dest_67432[n_67435.offset], src_67433[n_67435.offset], n_67435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_67435.sons.length; i++) {
      nimCopyAux(dest_67432, src_67433, n_67435.sons[i]);
    }
    
			break;
		case 3:
			      dest_67432[n_67435.offset] = nimCopy(dest_67432[n_67435.offset], src_67433[n_67435.offset], n_67435.typ);
      for (var i = 0; i < n_67435.sons.length; ++i) {
        nimCopyAux(dest_67432, src_67433, n_67435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_61638(x_61641, x_61641_Idx, y_61642) {
		      if (x_61641[x_61641_Idx] === null) { x_61641[x_61641_Idx] = []; }
      var off = x_61641[x_61641_Idx].length;
      x_61641[x_61641_Idx].length += y_61642.length;
      for (var i = 0; i < y_61642.length; ++i) {
        x_61641[x_61641_Idx][off+i] = y_61642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_64151(f_64153) {
					var Tmp3;

	var result_64154 = [null];

		var it_64162 = f_64153;
		var i_64164 = 0;
		var total_64166 = 0;
		var temp_frames_64173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI64156);
		L1: do {
				L2: while (true) {
					if (!!((it_64162 == null))) Tmp3 = false; else {						Tmp3 = (i_64164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_64173[i_64164].Field0 = it_64162.procname;
					temp_frames_64173[i_64164].Field1 = it_64162.line;
					i_64164 += 1;
					total_64166 += 1;
					it_64162 = it_64162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_64162 == null))) break L5;
					total_64166 += 1;
					it_64162 = it_64162.prev;
				}
		} while(false);
		result_64154[0] = nimCopy(null, [], NTI44040);
		if (!((total_64166 == i_64164))) {
		if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(makeNimstrLit("(")); } else { result_64154[0] = makeNimstrLit("("); };
		if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(cstrToNimstr(((total_64166 - i_64164))+"")); } else { result_64154[0] = cstrToNimstr(((total_64166 - i_64164))+"").slice(); };
		if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_64154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_64421 = 0;
			var colontmp__259343 = 0;
			colontmp__259343 = (i_64164 - 1);
			var res_259344 = colontmp__259343;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_259344)) break L8;
						j_64421 = res_259344;
						add_61638(result_64154, 0, temp_frames_64173[j_64421].Field0);
						if ((0 < temp_frames_64173[j_64421].Field1)) {
						if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(makeNimstrLit(", line: ")); } else { result_64154[0] = makeNimstrLit(", line: "); };
						if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(cstrToNimstr((temp_frames_64173[j_64421].Field1)+"")); } else { result_64154[0] = cstrToNimstr((temp_frames_64173[j_64421].Field1)+"").slice(); };
						}
						
						if (result_64154[0] != null) { result_64154[0] = (result_64154[0]).concat(makeNimstrLit("\x0A")); } else { result_64154[0] = makeNimstrLit("\x0A"); };
						res_259344 -= 1;
					}
			} while(false);
		} while(false);

	return result_64154[0];

}

function raw_write_stack_trace_64468() {
	var result_64470 = null;

		if (!((framePtr == null))) {
		result_64470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_64151(framePtr) || []), NTI44040);
		}
		else {
			result_64470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI44040);
		}
		

	return result_64470;

}

function unhandledException(e_64529) {
		var buf_64530 = [[]];
		if (!(((e_64529.message != null ? e_64529.message.length : 0) == 0))) {
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_64530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(e_64529.message); } else { buf_64530[0] = e_64529.message.slice(); };
		}
		else {
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_64530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit(" [")); } else { buf_64530[0] = makeNimstrLit(" ["); };
		add_61638(buf_64530, 0, e_64529.name);
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_64530[0] = makeNimstrLit("]\x0A"); };
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(raw_write_stack_trace_64468()); } else { buf_64530[0] = raw_write_stack_trace_64468().slice(); };
		var cbuf_64601 = toJSStr(buf_64530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_64601);
  }
  else {
    throw cbuf_64601;
  }
  

	
}

function new_seq_245212(len_245215) {
	var result_245217 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_245217 = new Array(len_245215); for (var i=0;i<len_245215;++i) {result_245217[i]={k: 0, parent: null, current: null, n: null};}	framePtr = F.prev;

	return result_245217;

}

function new_seq_245249(len_245252) {
	var result_245254 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_245254 = new Array(len_245252); for (var i=0;i<len_245252;++i) {result_245254[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_245254;

}

function raiseOverflow() {
		var e_65042 = null;
		e_65042 = {m_type: NTI47846, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI44040);
		e_65042.parent = null;
		raiseException(e_65042, "OverflowError");

	
}

function sys_fatal_58662(message_58666) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_58803 = null;
		F.line = 37;
		e_58803 = {m_type: NTI47850, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_58803.message = nimCopy(null, message_58666, NTI44040);
		F.line = 39;
		raiseException(e_58803, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_58658(msg_58660) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_58662(msg_58660);
	framePtr = F.prev;

	
}

function failed_assert_impl_58851(msg_58853) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_58658(msg_58853);
	framePtr = F.prev;

	
}

function raiseIndexError(i_65639, a_65640, b_65641) {
		var Tmp1;

		var e_65802 = null;
		e_65802 = {m_type: NTI47858, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_65641 < a_65640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_65639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_65640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_65641)+"") || []);
		}
		
		e_65802.message = nimCopy(null, Tmp1, NTI44040);
		e_65802.parent = null;
		raiseException(e_65802, "IndexError");

	
}

function valueHEX3D_215839(n_215841, v_215842) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_215841.text = v_215842;
	framePtr = F.prev;

	
}

function value_215822(n_215824) {
	var result_215825 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_215825 = n_215824.text;
	framePtr = F.prev;

	return result_215825;

}

function wrap_event_235390(d_235392, n_235393, k_235394, action_235395) {

			function later_wrapper_235827() {

					function HEX3Aanonymous_235833(ev_235835) {

							function wrapper_235836() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_235838 = ev_235835.target.value;
									F.line = 73;
									valueHEX3D_215839(n_235831, v_235838);
									if (!(!((action_235830 == null)))) {
									F.line = 74;
									failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_235830(ev_235835, n_235831);
									if (!((value_215822(n_235831) == v_235838))) {
									F.line = 77;
									ev_235835.target.value = value_215822(n_235831);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if (!((timer_235832 == null))) {
							F.line = 103;
							clearTimeout(timer_235832);
							}
							
							F.line = 104;
							timer_235832 = setTimeout(wrapper_235836, 400);
						framePtr = F.prev;

						
					}

				var result_235829 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_235830 = action_235395;
					F.line = 99;
					var n_235831 = n_235393;
					F.line = 100;
					var timer_235832 = null;
					F.line = 101;
					result_235829 = HEX3Aanonymous_235833;
				framePtr = F.prev;

				return result_235829;

			}

			function enter_wrapper_235657() {

					function HEX3Aanonymous_235662(ev_235664) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if ((ev_235664.keyCode == 13)) {
							F.line = 72;
							var v_235665 = ev_235664.target.value;
							F.line = 73;
							valueHEX3D_215839(n_235661, v_235665);
							if (!(!((action_235660 == null)))) {
							F.line = 74;
							failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_235660(ev_235664, n_235661);
							if (!((value_215822(n_235661) == v_235665))) {
							F.line = 77;
							ev_235664.target.value = value_215822(n_235661);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_235659 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_235660 = action_235395;
					F.line = 93;
					var n_235661 = n_235393;
					F.line = 94;
					result_235659 = HEX3Aanonymous_235662;
				framePtr = F.prev;

				return result_235659;

			}

			function std_wrapper_235397() {

					function HEX3Aanonymous_235402(ev_235404) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
								if ((n_235401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_235401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_235401.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var v_235423 = ev_235404.target.value;
							F.line = 73;
							valueHEX3D_215839(n_235401, v_235423);
							if (!(!((action_235400 == null)))) {
							F.line = 74;
							failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_235400(ev_235404, n_235401);
							if (!((value_215822(n_235401) == v_235423))) {
							F.line = 77;
							ev_235404.target.value = value_215822(n_235401);
							}
							
							}
							else {
								F.line = 89;
							action_235400(ev_235404, n_235401);
							}
							
						framePtr = F.prev;

						
					}

				var result_235399 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_235400 = action_235395;
					F.line = 85;
					var n_235401 = n_235393;
					F.line = 86;
					result_235399 = HEX3Aanonymous_235402;
				framePtr = F.prev;

				return result_235399;

			}

	var result_235396 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_235394) {
		case 30:
			F.line = 108;
			result_235396 = later_wrapper_235827();
			F.line = 109;
			d_235392.addEventListener("keyup", result_235396, false);
			break;
		case 29:
			F.line = 111;
			result_235396 = enter_wrapper_235657();
			F.line = 112;
			d_235392.addEventListener("keyup", result_235396, false);
			break;
		default: 
			F.line = 114;
			result_235396 = std_wrapper_235397();
			F.line = 115;
			d_235392.addEventListener(to_event_name_215695[chckIndx(k_235394, 0, to_event_name_215695.length+0-1)-0], result_235396, false);
			break;
		}
	framePtr = F.prev;

	return result_235396;

}

function apply_events_236086(n_236088) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_236089 = n_236088.dom;
		L1: do {
			F.line = 128;
			var i_236102 = 0;
			F.line = 2716;
			var colontmp__259387 = 0;
			F.line = 128;
			colontmp__259387 = (n_236088.events != null ? n_236088.events.length : 0);
			F.line = 2717;
			var i_259388 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259388 < colontmp__259387)) break L3;
						F.line = 128;
						i_236102 = i_259388;
						F.line = 129;
						n_236088.events[chckIndx(i_236102, 0, n_236088.events.length+0-1)-0]["Field2"] = wrap_event_235390(dest_236089, n_236088, n_236088.events[chckIndx(i_236102, 0, n_236088.events.length+0-1)-0]["Field0"], n_236088.events[chckIndx(i_236102, 0, n_236088.events.length+0-1)-0]["Field1"]);
						F.line = 2720;
						i_259388 = addInt(i_259388, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_213025(n_213027, s_213028) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 300;
		n_213027.style = {};
		L1: do {
			F.line = 301;
			var i_213061 = 0;
			F.line = 2653;
			var colontmp__259399 = 0;
			F.line = 301;
			colontmp__259399 = subInt(s_213028.length, 1);
			F.line = 2669;
			var res_259400 = 0;
			L2: do {
				F.line = 2670;
					L3: while (true) {
					if (!(res_259400 <= colontmp__259399)) break L3;
						F.line = 301;
						i_213061 = res_259400;
						F.line = 302;
						n_213027.style[s_213028[i_213061]] = s_213028[addInt(i_213061, 1)];
						F.line = 2672;
						res_259400 = addInt(res_259400, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function vnode_to_dom_236167(n_236169, kxi_236170) {
			var Tmp9;
			var Tmp10;

	var result_236171 = null;

	var F={procname:"karax.vnodeToDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_236169.kind == 0)) {
		F.line = 139;
		result_236171 = document.createTextNode(n_236169.text);
		F.line = 123;
		n_236169.dom = result_236171;
		if (!((n_236169.id == null))) {
		F.line = 124;
		kxi_235324[0].byId[n_236169.id] = n_236169;
		}
		
		}
		else {
		if ((n_236169.kind == 6)) {
		F.line = 142;
		result_236171 = document.createElement("div");
		F.line = 143;
		result_236171.innerHTML = n_236169.text;
		F.line = 123;
		n_236169.dom = result_236171;
		if (!((n_236169.id == null))) {
		F.line = 124;
		kxi_235324[0].byId[n_236169.id] = n_236169;
		}
		
		F.line = 145;
		break BeforeRet;
		}
		else {
		if ((n_236169.kind == 3)) {
		F.line = 147;
		var x_236234 = vcomponents_228026[0][n_236169.text](n_236169.kids);
		F.line = 148;
		result_236171 = vnode_to_dom_236167(x_236234, kxi_236170);
		F.line = 123;
		n_236169.dom = result_236171;
		if (!((n_236169.id == null))) {
		F.line = 124;
		kxi_235324[0].byId[n_236169.id] = n_236169;
		}
		
		F.line = 151;
		break BeforeRet;
		}
		else {
		if ((n_236169.kind == 4)) {
		F.line = 153;
		result_236171 = n_236169.dom;
		if (!(!((result_236171 == null)))) {
		F.line = 154;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(154, 12) `result != nil` "));
		}
		
		F.line = 123;
		n_236169.dom = result_236171;
		if (!((n_236169.id == null))) {
		F.line = 124;
		kxi_235324[0].byId[n_236169.id] = n_236169;
		}
		
		F.line = 157;
		break BeforeRet;
		}
		else {
		if ((n_236169.kind == 5)) {
		F.line = 159;
		var x_236422 = n_236169;
		if (!((x_236422.onAttachImpl == null))) {
		F.line = 160;
		x_236422.onAttachImpl(x_236422);
		}
		
		if (!(!((x_236422.renderImpl == null)))) {
		F.line = 161;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_236422.expanded == null)) {
		F.line = 163;
		x_236422.expanded = x_236422.renderImpl(x_236422);
		}
		
		if (!(!((x_236422.expanded == null)))) {
		F.line = 165;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		F.line = 166;
		result_236171 = vnode_to_dom_236167(x_236422.expanded, kxi_236170);
		F.line = 123;
		n_236169.dom = result_236171;
		if (!((n_236169.id == null))) {
		F.line = 124;
		kxi_235324[0].byId[n_236169.id] = n_236169;
		}
		
		F.line = 168;
		break BeforeRet;
		}
		else {
			F.line = 170;
			result_236171 = document.createElement(to_tag_215689[chckIndx(n_236169.kind, 0, to_tag_215689.length+0-1)-0]);
			F.line = 123;
			n_236169.dom = result_236171;
			if (!((n_236169.id == null))) {
			F.line = 124;
			kxi_235324[0].byId[n_236169.id] = n_236169;
			}
			
			L1: do {
				F.line = 172;
				var k_236831 = null;
				L2: do {
					F.line = 282;
					var i_259357 = 0;
					F.line = 2716;
					var colontmp__259358 = 0;
					F.line = 282;
					colontmp__259358 = (n_236169.kids != null ? n_236169.kids.length : 0);
					F.line = 2717;
					var i_259359 = 0;
					L3: do {
						F.line = 2718;
							L4: while (true) {
							if (!(i_259359 < colontmp__259358)) break L4;
								F.line = 282;
								i_259357 = i_259359;
								F.line = 172;
								k_236831 = n_236169.kids[chckIndx(i_259357, 0, n_236169.kids.length+0-1)-0];
								F.line = 173;
								result_236171.appendChild(vnode_to_dom_236167(k_236831, kxi_236170));
								F.line = 2720;
								i_259359 = addInt(i_259359, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_236169.text == null))) {
			F.line = 176;
			result_236171.value = n_236169.text;
			}
			
		}
		}}}}
		if (!((n_236169.id == null))) {
		F.line = 178;
		result_236171.id = n_236169.id;
		}
		
		if (!((n_236169.class == null))) {
		F.line = 180;
		result_236171.className = n_236169.class;
		}
		
		L5: do {
			F.line = 183;
			var k_236832 = null;
			F.line = 183;
			var v_236833 = null;
			L6: do {
				F.line = 285;
				var i_259370 = 0;
				F.line = 2653;
				var colontmp__259371 = 0;
				F.line = 285;
				colontmp__259371 = subInt((n_236169.attrs != null ? n_236169.attrs.length : 0), 2);
				F.line = 2669;
				var res_259372 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_259372 <= colontmp__259371)) break L8;
							F.line = 285;
							i_259370 = res_259372;
							F.line = 183;
							k_236832 = n_236169.attrs[chckIndx(i_259370, 0, n_236169.attrs.length+0-1)-0];
							F.line = 286;
							v_236833 = n_236169.attrs[chckIndx(addInt(i_259370, 1), 0, n_236169.attrs.length+0-1)-0];
							if (!((v_236833 == null))) {
							F.line = 185;
							result_236171.setAttribute(k_236832, v_236833);
							}
							
							F.line = 2672;
							res_259372 = addInt(res_259372, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 186;
		apply_events_236086(n_236169);
			if (!!((kxi_236170 == null))) Tmp10 = false; else {				Tmp10 = (n_236169 == kxi_236170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_236170.toFocus == null);			}		if (Tmp9) {
		F.line = 188;
		kxi_236170.toFocus = result_236171;
		}
		
		if (!((n_236169.style == null))) {
		F.line = 189;
		apply_style_213025(result_236171, n_236169.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_236171;

}

function replace_by_id_237012(id_237014, new_tree_237015) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 213;
		var x_237016 = document.getElementById(id_237014);
		F.line = 214;
		x_237016.parentNode.replaceChild(new_tree_237015, x_237016);
		F.line = 215;
		new_tree_237015.id = id_237014;
	framePtr = F.prev;

	
}

function len_216742(x_216744) {
	var result_216745 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_216745 = (x_216744.kids != null ? x_216744.kids.length : 0);
	framePtr = F.prev;

	return result_216745;

}

function HEX5BHEX5D_216764(x_216766, idx_216767) {
	var result_216768 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_216768 = x_216766.kids[chckIndx(idx_216767, 0, x_216766.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_216768;

}

function same_236920(n_236922, e_236923, nesting_236924) {
			var Tmp1;
			var Tmp2;

	var result_236926 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_235324[0].orphans.hasOwnProperty(n_236922.id)) {
		F.line = 192;
		result_236926 = true;
		break BeforeRet;
		}
		
		if ((n_236922.kind == 5)) {
		F.line = 194;
		result_236926 = same_236920(n_236922.expanded, e_236923, addInt(nesting_236924, 1));
		}
		else {
		if ((n_236922.kind == 6)) {
		F.line = 196;
		result_236926 = true;
		}
		else {
			if ((n_236922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_236922.kind == 4);			}		if (Tmp1) {
		F.line = 199;
		result_236926 = true;
		}
		else {
		if ((to_tag_215689[chckIndx(n_236922.kind, 0, to_tag_215689.length+0-1)-0] == e_236923.nodeName)) {
		F.line = 201;
		result_236926 = true;
		if (!((n_236922.kind == 0))) {
			if (!!((e_236923.childNodes.length == len_216742(n_236922)))) Tmp2 = false; else {				Tmp2 = !((n_236922.kind == 111));			}		if (Tmp2) {
		F.line = 205;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_216742(n_236922))+""), makeNimstrLit(" real "), cstrToNimstr((e_236923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_215689[chckIndx(n_236922.kind, 0, to_tag_215689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_236924)+""));
		F.line = 206;
		result_236926 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 207;
			var i_236994 = 0;
			F.line = 2716;
			var colontmp__259406 = 0;
			F.line = 207;
			colontmp__259406 = len_216742(n_236922);
			F.line = 2717;
			var i_259407 = 0;
			L4: do {
				F.line = 2718;
					L5: while (true) {
					if (!(i_259407 < colontmp__259406)) break L5;
						F.line = 207;
						i_236994 = i_259407;
						if (!(same_236920(HEX5BHEX5D_216764(n_236922, i_236994), e_236923.childNodes[i_236994], addInt(nesting_236924, 1)))) {
						F.line = 208;
						result_236926 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_259407 = addInt(i_259407, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 210;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_215689[chckIndx(n_236922.kind, 0, to_tag_215689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_236923.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_236926;

}

function eq_211814(a_211816, b_211817) {
	var result_211818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_211816 == null)) {
		if ((b_211817 == null)) {
		F.line = 230;
		result_211818 = true;
		break BeforeRet;
		}
		else {
			F.line = 231;
			result_211818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_211817 == null)) {
		F.line = 232;
		result_211818 = false;
		break BeforeRet;
		}
		}
		if (!((a_211816.length == b_211817.length))) {
		F.line = 233;
		result_211818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 234;
			var i_211916 = 0;
			F.line = 2716;
			var colontmp__259444 = 0;
			F.line = 234;
			colontmp__259444 = a_211816.length;
			F.line = 2717;
			var i_259445 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259445 < colontmp__259444)) break L3;
						F.line = 234;
						i_211916 = i_259445;
						if (!((a_211816[i_211916] == b_211817[i_211916]))) {
						F.line = 235;
						result_211818 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_259445 = addInt(i_259445, 1);
					}
			} while(false);
		} while(false);
		F.line = 236;
		result_211818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_211818;

}

function same_attrs_218680(a_218682, b_218683) {
	var result_218684 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_218682.attrs != null ? a_218682.attrs.length : 0) == (b_218683.attrs != null ? b_218683.attrs.length : 0))) {
		F.line = 290;
		result_218684 = true;
		L1: do {
			F.line = 291;
			var i_218707 = 0;
			F.line = 2716;
			var colontmp__259449 = 0;
			F.line = 291;
			colontmp__259449 = (a_218682.attrs != null ? a_218682.attrs.length : 0);
			F.line = 2717;
			var i_259450 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259450 < colontmp__259449)) break L3;
						F.line = 291;
						i_218707 = i_259450;
						if (!((a_218682.attrs[chckIndx(i_218707, 0, a_218682.attrs.length+0-1)-0] == b_218683.attrs[chckIndx(i_218707, 0, b_218683.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_218684 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_259450 = addInt(i_259450, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_218684;

}

function eq_237214(a_237216, b_237217) {
			var Tmp4;
			var Tmp5;

	var result_237218 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_237216.kind == b_237217.kind))) {
		F.line = 237;
		result_237218 = 1;
		break BeforeRet;
		}
		
		if (!((a_237216.id == b_237217.id))) {
		F.line = 240;
		result_237218 = 1;
		break BeforeRet;
		}
		
		F.line = 241;
		result_237218 = 3;
		if (!((a_237216.index == b_237217.index))) {
		F.line = 244;
		result_237218 = 1;
		break BeforeRet;
		}
		
		if ((a_237216.kind == 0)) {
		if (!((a_237216.text == b_237217.text))) {
		F.line = 248;
		result_237218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_237216.kind == 3)) {
		if (!((a_237216.text == b_237217.text))) {
		F.line = 250;
		result_237218 = 1;
		break BeforeRet;
		}
		
		if (!((len_216742(a_237216) == len_216742(b_237217)))) {
		F.line = 251;
		result_237218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 252;
			var i_238014 = 0;
			F.line = 2716;
			var colontmp__259439 = 0;
			F.line = 252;
			colontmp__259439 = len_216742(a_237216);
			F.line = 2717;
			var i_259440 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259440 < colontmp__259439)) break L3;
						F.line = 252;
						i_238014 = i_259440;
						if ((eq_237214(HEX5BHEX5D_216764(a_237216, i_238014), HEX5BHEX5D_216764(b_237217, i_238014)) == 1)) {
						F.line = 253;
						result_237218 = 1;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_259440 = addInt(i_259440, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_237216.kind == 4)) {
		F.line = 255;
		result_237218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_237216.kind == 6)) {
		if (!((a_237216.text == b_237217.text))) {
		F.line = 258;
		result_237218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_237217.kind == 5)) {
		if (!((a_237216.text == b_237217.text))) {
		F.line = 263;
		result_237218 = 1;
		break BeforeRet;
		}
		
		if (!((a_237216.key == b_237217.key))) {
		F.line = 269;
		result_237218 = 1;
		break BeforeRet;
		}
		
		F.line = 270;
		result_237218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_237216.class == b_237217.class))) Tmp5 = true; else {				Tmp5 = !(eq_211814(a_237216.style, b_237217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_218680(a_237216, b_237217));			}		if (Tmp4) {
		F.line = 276;
		result_237218 = 2;
		break BeforeRet;
		}
		
		F.line = 278;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_237218;

}

function update_styles_238629(new_node_238631, old_node_238632) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_238632.dom == null))) {
		if (!((new_node_238631.style == null))) {
		F.line = 283;
		apply_style_213025(old_node_238632.dom, new_node_238631.style);
		}
		else {
			F.line = 284;
			old_node_238632.dom.style = {m_type: NTI206283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 285;
		old_node_238632.dom.className = new_node_238631.class;
		}
		
		F.line = 286;
		old_node_238632.style = new_node_238631.style;
		F.line = 287;
		old_node_238632.class = new_node_238631.class;
	framePtr = F.prev;

	
}

function take_over_attr_216674(new_node_216676, old_node_216677) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_216677.attrs = new_node_216676.attrs;
	framePtr = F.prev;

	
}

function update_attributes_238677(new_node_238679, old_node_238680) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_238680.dom == null))) {
		L1: do {
			F.line = 292;
			var k_238689 = null;
			F.line = 292;
			var __238690 = null;
			L2: do {
				F.line = 285;
				var i_259456 = 0;
				F.line = 2653;
				var colontmp__259457 = 0;
				F.line = 285;
				colontmp__259457 = subInt((old_node_238680.attrs != null ? old_node_238680.attrs.length : 0), 2);
				F.line = 2669;
				var res_259458 = 0;
				L3: do {
					F.line = 2670;
						L4: while (true) {
						if (!(res_259458 <= colontmp__259457)) break L4;
							F.line = 285;
							i_259456 = res_259458;
							F.line = 292;
							k_238689 = old_node_238680.attrs[chckIndx(i_259456, 0, old_node_238680.attrs.length+0-1)-0];
							F.line = 286;
							__238690 = old_node_238680.attrs[chckIndx(addInt(i_259456, 1), 0, old_node_238680.attrs.length+0-1)-0];
							F.line = 293;
							old_node_238680.dom.removeAttribute(k_238689);
							F.line = 2672;
							res_259458 = addInt(res_259458, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 294;
			var k_238691 = null;
			F.line = 294;
			var v_238692 = null;
			L6: do {
				F.line = 285;
				var i_259464 = 0;
				F.line = 2653;
				var colontmp__259465 = 0;
				F.line = 285;
				colontmp__259465 = subInt((new_node_238679.attrs != null ? new_node_238679.attrs.length : 0), 2);
				F.line = 2669;
				var res_259466 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_259466 <= colontmp__259465)) break L8;
							F.line = 285;
							i_259464 = res_259466;
							F.line = 294;
							k_238691 = new_node_238679.attrs[chckIndx(i_259464, 0, new_node_238679.attrs.length+0-1)-0];
							F.line = 286;
							v_238692 = new_node_238679.attrs[chckIndx(addInt(i_259464, 1), 0, new_node_238679.attrs.length+0-1)-0];
							if (!((v_238692 == null))) {
							F.line = 296;
							old_node_238680.dom.setAttribute(k_238691, v_238692);
							}
							
							F.line = 2672;
							res_259466 = addInt(res_259466, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 297;
		take_over_attr_216674(new_node_238679, old_node_238680);
	framePtr = F.prev;

	
}

function merge_events_238706(new_node_238708, old_node_238709, kxi_238710) {
						var Tmp4;

	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 300;
		var d_238711 = old_node_238709.dom;
		L1: do {
			F.line = 301;
			var i_238724 = 0;
			F.line = 2716;
			var colontmp__259471 = 0;
			F.line = 301;
			colontmp__259471 = (old_node_238709.events != null ? old_node_238709.events.length : 0);
			F.line = 2717;
			var i_259472 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259472 < colontmp__259471)) break L3;
						F.line = 301;
						i_238724 = i_259472;
						F.line = 302;
						var k_238725 = old_node_238709.events[chckIndx(i_238724, 0, old_node_238709.events.length+0-1)-0]["Field0"];
						F.line = 303;
						F.line = 303;
						switch (k_238725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_215695[chckIndx(k_238725, 0, to_event_name_215695.length+0-1)-0];
							break;
						}
						var name_238728 = Tmp4;
						F.line = 306;
						d_238711.removeEventListener(name_238728, old_node_238709.events[chckIndx(i_238724, 0, old_node_238709.events.length+0-1)-0]["Field2"]);
						F.line = 2720;
						i_259472 = addInt(i_259472, 1);
					}
			} while(false);
		} while(false);
		F.line = 307;
		old_node_238709.events = new_node_238708.events;
		F.line = 308;
		apply_events_236086(old_node_238709);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_216782(x_216784, idx_216785, y_216786) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_216784.kids[chckIndx(idx_216785, 0, x_216784.kids.length+0-1)-0] = y_216786;
	framePtr = F.prev;

	
}

function add_patch_v_238868(kxi_238870, parent_238871, pos_238872, new_child_238873) {
	var F={procname:"karax.addPatchV",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 337;
		var l_238874 = kxi_238870.patchLenV;
		if (((kxi_238870.patchesV != null ? kxi_238870.patchesV.length : 0) <= l_238874)) {
		F.line = 340;
		if (kxi_238870.patchesV != null) { kxi_238870.patchesV.push({parent: parent_238871, newChild: new_child_238873, pos: pos_238872}); } else { kxi_238870.patchesV = [{parent: parent_238871, newChild: new_child_238873, pos: pos_238872}]; };
		}
		else {
			F.line = 342;
			kxi_238870.patchesV[chckIndx(l_238874, 0, kxi_238870.patchesV.length+0-1)-0].parent = parent_238871;
			F.line = 343;
			kxi_238870.patchesV[chckIndx(l_238874, 0, kxi_238870.patchesV.length+0-1)-0].newChild = new_child_238873;
			F.line = 344;
			kxi_238870.patchesV[chckIndx(l_238874, 0, kxi_238870.patchesV.length+0-1)-0].pos = pos_238872;
		}
		
		F.line = 345;
		kxi_238870.patchLenV = addInt(kxi_238870.patchLenV, 1);
	framePtr = F.prev;

	
}

function add_patch_238814(kxi_238816, ka_238817, parenta_238818, currenta_238819, na_238820) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 325;
		var l_238821 = kxi_238816.patchLen;
		if (((kxi_238816.patches != null ? kxi_238816.patches.length : 0) <= l_238821)) {
		F.line = 328;
		if (kxi_238816.patches != null) { kxi_238816.patches.push({k: ka_238817, parent: parenta_238818, current: currenta_238819, n: na_238820}); } else { kxi_238816.patches = [{k: ka_238817, parent: parenta_238818, current: currenta_238819, n: na_238820}]; };
		}
		else {
			F.line = 330;
			kxi_238816.patches[chckIndx(l_238821, 0, kxi_238816.patches.length+0-1)-0].k = ka_238817;
			F.line = 331;
			kxi_238816.patches[chckIndx(l_238821, 0, kxi_238816.patches.length+0-1)-0].parent = parenta_238818;
			F.line = 332;
			kxi_238816.patches[chckIndx(l_238821, 0, kxi_238816.patches.length+0-1)-0].current = currenta_238819;
			F.line = 333;
			kxi_238816.patches[chckIndx(l_238821, 0, kxi_238816.patches.length+0-1)-0].n = na_238820;
		}
		
		F.line = 334;
		kxi_238816.patchLen = addInt(kxi_238816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_239045(new_node_239047, old_node_239048, parent_239049, current_239050, kxi_239051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_239052 = 0;

	var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 389;
		result_239052 = eq_237214(new_node_239047, old_node_239048);
		F.line = 390;
		switch (result_239052) {
		case 0:
			F.line = 392;
			if (kxi_239051.components != null) { kxi_239051.components.push({oldNode: old_node_239048, newNode: new_node_239047, parent: parent_239049, current: current_239050}); } else { kxi_239051.components = [{oldNode: old_node_239048, newNode: new_node_239047, parent: parent_239049, current: current_239050}]; };
			break;
		case 3:
		case 2:
			F.line = 397;
			new_node_239047.dom = old_node_239048.dom;
			if ((result_239052 == 2)) {
			F.line = 399;
			update_styles_238629(new_node_239047, old_node_239048);
			F.line = 400;
			update_attributes_238677(new_node_239047, old_node_239048);
			if ((old_node_239048.kind == 0)) {
			F.line = 402;
			old_node_239048.text = new_node_239047.text;
			F.line = 403;
			old_node_239048.dom.nodeValue = new_node_239047.text;
			}
			
			}
			
				if (!(((new_node_239047.events != null ? new_node_239047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_239048.events != null ? old_node_239048.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 406;
			merge_events_238706(new_node_239047, old_node_239048, kxi_239051);
			}
			
			F.line = 413;
			var new_length_239401 = len_216742(new_node_239047);
			F.line = 414;
			var old_length_239402 = len_216742(old_node_239048);
			if (((new_length_239401 == 0) && (old_length_239402 == 0))) {
			F.line = 415;
			break BeforeRet;
			}
			
			F.line = 416;
			var min_length_239403 = nimMin(new_length_239401, old_length_239402);
			if (!((old_node_239048.kind == new_node_239047.kind))) {
			F.line = 418;
			failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 419;
			var common_prefix_239602 = 0;
			F.line = 420;
			if ((old_node_239048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_239048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_239048.kind == 4);			}			var is_special_239621 = Tmp2;
			L4: do {
				F.line = 449;
					L5: while (true) {
					if (!(common_prefix_239602 < min_length_239403)) break L5;
						F.line = 425;
						var old_len_239645 = kxi_239051.patchLen;
						F.line = 426;
						var old_len_v_239646 = kxi_239051.patchLenV;
						if (!((common_prefix_239602 < len_216742(new_node_239047)))) {
						F.line = 427;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_239602 < len_216742(old_node_239048)))) {
						F.line = 428;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_239621) {
						Tmp6 = diff_239045(HEX5BHEX5D_216764(new_node_239047, common_prefix_239602), HEX5BHEX5D_216764(old_node_239048, common_prefix_239602), parent_239049, current_239050, kxi_239051);
						}
						else {
						Tmp6 = diff_239045(HEX5BHEX5D_216764(new_node_239047, common_prefix_239602), HEX5BHEX5D_216764(old_node_239048, common_prefix_239602), current_239050, current_239050.childNodes[chckIndx(common_prefix_239602, 0, current_239050.childNodes.length+0-1)-0], kxi_239051);
						}
						
						var r_239647 = Tmp6;
						F.line = 450;
						switch (r_239647) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_216782(new_node_239047, common_prefix_239602, HEX5BHEX5D_216764(old_node_239048, common_prefix_239602));
							F.line = 451;
							common_prefix_239602 = addInt(common_prefix_239602, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_238868(kxi_239051, old_node_239048, common_prefix_239602, HEX5BHEX5D_216764(new_node_239047, common_prefix_239602));
							F.line = 451;
							common_prefix_239602 = addInt(common_prefix_239602, 1);
							F.line = 441;
							result_239052 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_239051.patchLen = old_len_239645;
							F.line = 445;
							kxi_239051.patchLenV = old_len_v_239646;
							if (!((result_239052 == 1))) {
							F.line = 446;
							result_239052 = r_239647;
							}
							
							F.line = 447;
							break L4;
							break;
						}
					}
			} while(false);
			F.line = 454;
			var old_pos_240022 = subInt(old_length_239402, 1);
			F.line = 455;
			var new_pos_240023 = subInt(new_length_239401, 1);
			L7: do {
				F.line = 456;
					L8: while (true) {
						if (!(common_prefix_239602 <= old_pos_240022)) Tmp9 = false; else {							Tmp9 = (common_prefix_239602 <= new_pos_240023);						}					if (!Tmp9) break L8;
						F.line = 425;
						var old_len_240024 = kxi_239051.patchLen;
						F.line = 426;
						var old_len_v_240025 = kxi_239051.patchLenV;
						if (!((new_pos_240023 < len_216742(new_node_239047)))) {
						F.line = 427;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_240022 < len_216742(old_node_239048)))) {
						F.line = 428;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						F.line = 429;
						if (is_special_239621) {
						Tmp10 = diff_239045(HEX5BHEX5D_216764(new_node_239047, new_pos_240023), HEX5BHEX5D_216764(old_node_239048, old_pos_240022), parent_239049, current_239050, kxi_239051);
						}
						else {
						Tmp10 = diff_239045(HEX5BHEX5D_216764(new_node_239047, new_pos_240023), HEX5BHEX5D_216764(old_node_239048, old_pos_240022), current_239050, current_239050.childNodes[chckIndx(old_pos_240022, 0, current_239050.childNodes.length+0-1)-0], kxi_239051);
						}
						
						var r_240026 = Tmp10;
						F.line = 457;
						switch (r_240026) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_216782(new_node_239047, new_pos_240023, HEX5BHEX5D_216764(old_node_239048, old_pos_240022));
							F.line = 458;
							old_pos_240022 = subInt(old_pos_240022, 1);
							F.line = 459;
							new_pos_240023 = subInt(new_pos_240023, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_238868(kxi_239051, old_node_239048, old_pos_240022, HEX5BHEX5D_216764(new_node_239047, new_pos_240023));
							F.line = 458;
							old_pos_240022 = subInt(old_pos_240022, 1);
							F.line = 459;
							new_pos_240023 = subInt(new_pos_240023, 1);
							F.line = 441;
							result_239052 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_239051.patchLen = old_len_240024;
							F.line = 445;
							kxi_239051.patchLenV = old_len_v_240025;
							if (!((result_239052 == 1))) {
							F.line = 446;
							result_239052 = r_240026;
							}
							
							F.line = 447;
							break L7;
							break;
						}
					}
			} while(false);
			F.line = 461;
			var pos_240434 = addInt(nimMin(old_pos_240022, new_pos_240023), 1);
			L11: do {
				F.line = 463;
				var i_240440 = 0;
				F.line = 2679;
				var colontmp__259414 = 0;
				F.line = 463;
				colontmp__259414 = subInt(pos_240434, 1);
				F.line = 2689;
				var res_259415 = common_prefix_239602;
				L12: do {
					F.line = 2690;
						L13: while (true) {
						if (!(res_259415 <= colontmp__259414)) break L13;
							F.line = 463;
							i_240440 = res_259415;
							F.line = 464;
							var r_240441 = diff_239045(HEX5BHEX5D_216764(new_node_239047, i_240440), HEX5BHEX5D_216764(old_node_239048, i_240440), current_239050, current_239050.childNodes[chckIndx(i_240440, 0, current_239050.childNodes.length+0-1)-0], kxi_239051);
							if ((r_240441 == 4)) {
							F.line = 467;
							add_patch_v_238868(kxi_239051, old_node_239048, i_240440, HEX5BHEX5D_216764(new_node_239047, i_240440));
							}
							else {
							if (!((r_240441 == 1))) {
							F.line = 469;
							HEX5BHEX5DHEX3D_216782(new_node_239047, i_240440, HEX5BHEX5D_216764(old_node_239048, i_240440));
							}
							}
							F.line = 2692;
							res_259415 = addInt(res_259415, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_240022, 1) == old_length_239402)) {
			L14: do {
				F.line = 474;
				var i_240457 = 0;
				F.line = 2689;
				var res_259421 = pos_240434;
				L15: do {
					F.line = 2690;
						L16: while (true) {
						if (!(res_259421 <= new_pos_240023)) break L16;
							F.line = 474;
							i_240457 = res_259421;
							F.line = 475;
							add_patch_238814(kxi_239051, 2, current_239050, null, HEX5BHEX5D_216764(new_node_239047, i_240457));
							F.line = 476;
							result_239052 = 4;
							F.line = 2692;
							res_259421 = addInt(res_259421, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 478;
				var before_240458 = current_239050.childNodes[chckIndx(addInt(old_pos_240022, 1), 0, current_239050.childNodes.length+0-1)-0];
				L17: do {
					F.line = 479;
					var i_240464 = 0;
					F.line = 2689;
					var res_259427 = pos_240434;
					L18: do {
						F.line = 2690;
							L19: while (true) {
							if (!(res_259427 <= new_pos_240023)) break L19;
								F.line = 479;
								i_240464 = res_259427;
								F.line = 480;
								add_patch_238814(kxi_239051, 3, current_239050, before_240458, HEX5BHEX5D_216764(new_node_239047, i_240464));
								F.line = 481;
								result_239052 = 4;
								F.line = 2692;
								res_259427 = addInt(res_259427, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				F.line = 483;
				var i_240470 = 0;
				F.line = 2689;
				var res_259433 = pos_240434;
				L21: do {
					F.line = 2690;
						L22: while (true) {
						if (!(res_259433 <= old_pos_240022)) break L22;
							F.line = 483;
							i_240470 = res_259433;
							F.line = 484;
							add_patch_238814(kxi_235324[0], 4, null, null, HEX5BHEX5D_216764(old_node_239048, i_240470));
							F.line = 486;
							add_patch_238814(kxi_239051, 1, current_239050, current_239050.childNodes[chckIndx(i_240470, 0, current_239050.childNodes.length+0-1)-0], null);
							F.line = 487;
							result_239052 = 4;
							F.line = 2692;
							res_259433 = addInt(res_259433, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 489;
			add_patch_238814(kxi_235324[0], 4, null, null, old_node_239048);
			F.line = 490;
			add_patch_238814(kxi_239051, 0, parent_239049, current_239050, new_node_239047);
			break;
		case 4:
			if (true) {
			F.line = 491;
			failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_239052;

}

function apply_components_240814(kxi_240816) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 499;
		var i_240818 = 0;
		L1: do {
			F.line = 502;
				L2: while (true) {
				if (!(i_240818 < (kxi_240816.components != null ? kxi_240816.components.length : 0))) break L2;
					F.line = 503;
					var x_240824 = kxi_240816.components[chckIndx(i_240818, 0, kxi_240816.components.length+0-1)-0].oldNode;
					F.line = 504;
					var new_node_240825 = kxi_240816.components[chckIndx(i_240818, 0, kxi_240816.components.length+0-1)-0].newNode;
						if (!!((x_240824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_240824.changedImpl(x_240824, new_node_240825);						}					if (Tmp3) {
					F.line = 510;
					var current_241201 = kxi_240816.components[chckIndx(i_240818, 0, kxi_240816.components.length+0-1)-0].current;
					F.line = 511;
					var parent_241202 = kxi_240816.components[chckIndx(i_240818, 0, kxi_240816.components.length+0-1)-0].parent;
					F.line = 512;
					x_240824.updatedImpl(x_240824, new_node_240825);
					F.line = 513;
					var old_expanded_241203 = x_240824.expanded;
					F.line = 514;
					x_240824.expanded = x_240824.renderImpl(x_240824);
					F.line = 517;
					x_240824.renderedVersion = x_240824.version;
					if ((old_expanded_241203 == null)) {
					F.line = 519;
					add_patch_238814(kxi_235324[0], 4, null, null, x_240824);
					F.line = 520;
					add_patch_238814(kxi_240816, 0, parent_241202, current_241201, x_240824.expanded);
					}
					else {
						F.line = 524;
						var res_241601 = diff_239045(x_240824.expanded, old_expanded_241203, parent_241202, current_241201, kxi_240816);
						if ((res_241601 == 4)) {
						}
						else {
						if (!((res_241601 == 1))) {
						F.line = 532;
						x_240824.expanded = old_expanded_241203;
						if (!(!((old_expanded_241203.dom == null)))) {
						F.line = 533;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_240824.expanded.dom == null)))) {
							F.line = 537;
							failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					F.line = 538;
					i_240818 = addInt(i_240818, 1);
				}
		} while(false);
		F.line = 539;
		if (kxi_240816.components === null) kxi_240816.components = [];
               if (kxi_240816.components.length < 0) { for (var i=kxi_240816.components.length;i<0;++i) kxi_240816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_240816.components.length = 0; };
	framePtr = F.prev;

	
}

function apply_patch_238906(kxi_238908) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 348;
			var i_238916 = 0;
			F.line = 2716;
			var colontmp__259479 = 0;
			F.line = 348;
			colontmp__259479 = kxi_238908.patchLen;
			F.line = 2717;
			var i_259480 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259480 < colontmp__259479)) break L3;
						F.line = 348;
						i_238916 = i_259480;
						F.line = 349;
						var p_238917 = nimCopy(null, kxi_238908.patches[chckIndx(i_238916, 0, kxi_238908.patches.length+0-1)-0], NTI235209);
						F.line = 350;
						switch (p_238917.k) {
						case 0:
							F.line = 352;
							var nn_238918 = vnode_to_dom_236167(p_238917.n, kxi_238908);
							if ((p_238917.parent == null)) {
							F.line = 354;
							replace_by_id_237012(kxi_238908.rootId, nn_238918);
							}
							else {
								F.line = 356;
							p_238917.parent.replaceChild(nn_238918, p_238917.current);
							}
							
							break;
						case 1:
							F.line = 358;
							p_238917.parent.removeChild(p_238917.current);
							break;
						case 2:
							F.line = 360;
							var nn_238927 = vnode_to_dom_236167(p_238917.n, kxi_238908);
							F.line = 361;
							p_238917.parent.appendChild(nn_238927);
							break;
						case 3:
							F.line = 363;
							var nn_238928 = vnode_to_dom_236167(p_238917.n, kxi_238908);
							F.line = 364;
							p_238917.parent.insertBefore(nn_238928, p_238917.current);
							break;
						case 4:
							F.line = 366;
							var n_238929 = p_238917.n;
							if (!((n_238929.id == null))) {
							F.line = 367;
							delete kxi_238908.byId[n_238929.id];
							}
							
							if ((n_238929.kind == 5)) {
							F.line = 369;
							var x_238947 = n_238929;
							if (!((x_238947.onDetachImpl == null))) {
							F.line = 370;
							x_238947.onDetachImpl(x_238947);
							}
							
							}
							
							if (!(kxi_238908.surpressRedraws)) {
							F.line = 372;
							n_238929.dom = null;
							}
							
							break;
						}
						F.line = 2720;
						i_259480 = addInt(i_259480, 1);
					}
			} while(false);
		} while(false);
		F.line = 373;
		kxi_238908.patchLen = 0;
		L4: do {
			F.line = 374;
			var i_238960 = 0;
			F.line = 2716;
			var colontmp__259484 = 0;
			F.line = 374;
			colontmp__259484 = kxi_238908.patchLenV;
			F.line = 2717;
			var i_259485 = 0;
			L5: do {
				F.line = 2718;
					L6: while (true) {
					if (!(i_259485 < colontmp__259484)) break L6;
						F.line = 374;
						i_238960 = i_259485;
						F.line = 375;
						var p_238961 = nimCopy(null, kxi_238908.patchesV[chckIndx(i_238960, 0, kxi_238908.patchesV.length+0-1)-0], NTI235211);
						F.line = 376;
						HEX5BHEX5DHEX3D_216782(p_238961.parent, p_238961.pos, p_238961.newChild);
						if (!(!((p_238961.newChild.dom == null)))) {
						F.line = 377;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 2720;
						i_259485 = addInt(i_259485, 1);
					}
			} while(false);
		} while(false);
		F.line = 378;
		kxi_238908.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_243646(kxi_243648) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_243648.renderer == null)) {
		F.line = 587;
		break BeforeRet;
		}
		
		F.line = 588;
		var rdata_243653 = {hashPart: window.location.hash};
		F.line = 589;
		var newtree_243654 = kxi_243648.renderer(rdata_243653);
		F.line = 590;
		kxi_243648.runCount = addInt(kxi_243648.runCount, 1);
		F.line = 591;
		newtree_243654.id = kxi_243648.rootId;
		F.line = 592;
		kxi_243648.toFocus = null;
		if ((kxi_243648.currentTree == null)) {
		F.line = 594;
		var asdom_243669 = vnode_to_dom_236167(newtree_243654, kxi_243648);
		F.line = 595;
		replace_by_id_237012(kxi_243648.rootId, asdom_243669);
		}
		else {
			if (!(same_236920(kxi_243648.currentTree, document.getElementById(kxi_243648.rootId), 0))) {
			F.line = 597;
			failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 598;
			var olddom_243801 = document.getElementById(kxi_243648.rootId);
			F.line = 599;
			diff_239045(newtree_243654, kxi_243648.currentTree, null, olddom_243801, kxi_243648);
		}
		
		F.line = 604;
		apply_components_240814(kxi_243648);
		F.line = 609;
		apply_patch_238906(kxi_243648);
		F.line = 610;
		kxi_243648.currentTree = newtree_243654;
		if (!(same_236920(kxi_243648.currentTree, document.getElementById(kxi_243648.rootId), 0))) {
		F.line = 611;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_243648.postRenderCallback == null))) {
		F.line = 614;
		kxi_243648.postRenderCallback(rdata_243653);
		}
		
		if (!((kxi_243648.toFocus == null))) {
		F.line = 618;
		kxi_243648.toFocus.focus();
		}
		
		F.line = 619;
		kxi_243648.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_245046(ev_245048) {

		function HEX3Aanonymous_245049() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 644;
				dodraw_243646(kxi_235324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 644;
		kxi_235324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_245049);
	framePtr = F.prev;

	
}

function redraw_244814(kxi_244816) {

		function HEX3Aanonymous_245001() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 637;
				dodraw_243646(kxi_244816);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((kxi_244816.renderId == 0)) {
		F.line = 637;
		kxi_244816.renderId = window.requestAnimationFrame(HEX3Aanonymous_245001);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_245078(renderer_245083, root_245084, client_post_render_callback_245088) {

		function HEX3Aanonymous_245310() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 667;
				redraw_244814(kxi_235324[0]);
			framePtr = F.prev;

			
		}

	var result_245089 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_245084) == null)) {
		F.line = 653;
		var msg_245095 = (("Could not find a <div> with id=" + root_245084) + ". Karax needs it as its rendering target.");
		F.line = 3436;
		var e_245098 = null;
		F.line = 3439;
		e_245098 = {m_type: NTI47826, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 655;
		e_245098.message = nimCopy(null, cstrToNimstr(msg_245095), NTI44040);
		F.line = 3432;
		e_245098.parent = null;
		F.line = 655;
		raiseException(e_245098, "Exception");
		}
		
		F.line = 657;
		result_245089 = {rootId: root_245084, renderer: renderer_245083, postRenderCallback: client_post_render_callback_245088, patches: new_seq_245212(60), patchesV: new_seq_245249(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 665;
		kxi_235324[0] = result_245089;
		F.line = 666;
		window.onload = init_245046;
		F.line = 667;
		window.onhashchange = HEX3Aanonymous_245310;
	framePtr = F.prev;

	return result_245089;

}

function set_renderer_245383(renderer_245387, root_245388, client_post_render_callback_245391) {

		function wrap_renderer_245393(data_245395) {
			var result_245396 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 672;
				result_245396 = renderer_245387();
			framePtr = F.prev;

			return result_245396;

		}

		function wrap_post_render_245410(data_245412) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_245391 == null))) {
				F.line = 674;
				client_post_render_callback_245391();
				}
				
			framePtr = F.prev;

			
		}

	var result_245392 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 671;
		result_245392 = set_renderer_245078(wrap_renderer_245393, root_245388, wrap_post_render_245410);
	framePtr = F.prev;

	return result_245392;

}

function new_vnode_218228(kind_218230) {
	var result_218231 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_218231 = {kind: kind_218230, index: -1, m_type: NTI215714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_218231;

}

function add_216800(parent_216802, kid_216803) {
	var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_216802.kids != null) { parent_216802.kids.push(kid_216803); } else { parent_216802.kids = [kid_216803]; };
	framePtr = F.prev;

	
}

function tree_218246(kind_218248, kids_218250) {
	var result_218251 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_218251 = new_vnode_218228(kind_218248);
		L1: do {
			F.line = 263;
			var k_218282 = null;
			F.line = 3;
			var i_259512 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_259512 < (kids_218250 != null ? kids_218250.length : 0))) break L3;
						F.line = 263;
						k_218282 = kids_218250[chckIndx(i_259512, 0, kids_218250.length+0-1)-0];
						F.line = 263;
						add_216800(result_218251, k_218282);
						F.line = 6;
						i_259512 = addInt(i_259512, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_218251;

}

function set_attr_216568(n_216570, key_216571, val_216572) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_216570.attrs != null ? n_216570.attrs.length : 0) == 0)) {
		F.line = 216;
		n_216570.attrs = nimCopy(null, [key_216571, val_216572], NTI216587);
		}
		else {
			L1: do {
				F.line = 218;
				var i_216600 = 0;
				F.line = 2653;
				var colontmp__259516 = 0;
				F.line = 218;
				colontmp__259516 = subInt((n_216570.attrs != null ? n_216570.attrs.length : 0), 2);
				F.line = 2669;
				var res_259517 = 0;
				L2: do {
					F.line = 2670;
						L3: while (true) {
						if (!(res_259517 <= colontmp__259516)) break L3;
							F.line = 218;
							i_216600 = res_259517;
							if ((n_216570.attrs[chckIndx(i_216600, 0, n_216570.attrs.length+0-1)-0] == key_216571)) {
							F.line = 220;
							n_216570.attrs[chckIndx(addInt(i_216600, 1), 0, n_216570.attrs.length+0-1)-0] = val_216572;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2672;
							res_259517 = addInt(res_259517, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			if (n_216570.attrs != null) { n_216570.attrs.push(key_216571); } else { n_216570.attrs = [key_216571]; };
			F.line = 223;
			if (n_216570.attrs != null) { n_216570.attrs.push(val_216572); } else { n_216570.attrs = [val_216572]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function text_218364(s_218366) {
	var result_218367 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_218367 = {kind: 0, text: toJSStr(s_218366), index: -1, m_type: NTI215714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_218367;

}

function add_event_listener_218721(n_218723, event_218724, handler_218725) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 295;
		if (n_218723.events != null) { n_218723.events.push({Field0: event_218724, Field1: handler_218725, Field2: null}); } else { n_218723.events = [{Field0: event_218724, Field1: handler_218725, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_245528(n_245530, k_245531, action_245532, kxi_245533) {

		function wrapper_245534(ev_245536, n_245537) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 700;
				action_245532(ev_245536, n_245537);
				if (!(kxi_245533.surpressRedraws)) {
				F.line = 701;
				redraw_244814(kxi_245533);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 702;
		add_event_listener_218721(n_245530, k_245531, wrapper_245534);
	framePtr = F.prev;

	
}

function input_handler_258455(ev_258457, n_258458) {
			var Tmp1;
			var Tmp2;
			var Tmp3;
			var Tmp4;

	var F={procname:"karax_client.inputHandler",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 16;
		switch (toJSStr(cstrToNimstr(n_258458.id))) {
		case "name1":
			F.line = 18;
			if (!(eqStrings(cstrToNimstr(value_215822(n_258458)), []))) {
			Tmp1 = cstrToNimstr(value_215822(n_258458));
			}
			else {
			Tmp1 = makeNimstrLit("player 1");
			}
			
			settings_258436.name1 = nimCopy(null, Tmp1, NTI44040);
			break;
		case "name2":
			F.line = 20;
			if (!(eqStrings(cstrToNimstr(value_215822(n_258458)), []))) {
			Tmp2 = cstrToNimstr(value_215822(n_258458));
			}
			else {
			Tmp2 = makeNimstrLit("player 2");
			}
			
			settings_258436.name2 = nimCopy(null, Tmp2, NTI44040);
			break;
		case "AI":
			F.line = 22;
			settings_258436.ai = !(settings_258436.ai);
			break;
		case "fieldSize":
			F.line = 24;
			if (!(eqStrings(cstrToNimstr(value_215822(n_258458)), []))) {
			Tmp3 = parseInt(value_215822(n_258458), 10);
			}
			else {
			Tmp3 = 3;
			}
			
			settings_258436.size = Tmp3;
			break;
		case "winCount":
			F.line = 26;
			if (!(eqStrings(cstrToNimstr(value_215822(n_258458)), []))) {
			Tmp4 = parseInt(value_215822(n_258458), 10);
			}
			else {
			Tmp4 = 3;
			}
			
			settings_258436.winCount = Tmp4;
			if ((settings_258436.size < settings_258436.winCount)) {
			F.line = 28;
			window.alert("win-count needs to be smaller than size");
			F.line = 29;
			valueHEX3D_215839(n_258458, "");
			}
			
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	
}

function set_attr_211956(s_211958, a_211959, value_211960) {
	var F={procname:"vstyles.setAttr",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 239;
		var i_211962 = 0;
		L1: do {
			F.line = 240;
				L2: while (true) {
				if (!(i_211962 < s_211958.length)) break L2;
					if ((s_211958[i_211962] == a_211959)) {
					F.line = 242;
					s_211958[addInt(i_211962, 1)] = value_211960;
					F.line = 243;
					break BeforeRet;
					}
					else {
					if ((a_211959 < s_211958[i_211962])) {
					F.line = 245;
					s_211958.push("");
					F.line = 246;
					s_211958.push("");
					L3: do {
						F.line = 248;
						var j_212077 = 0;
						F.line = 2620;
						var colontmp__259525 = 0;
						F.line = 248;
						colontmp__259525 = subInt(s_211958.length, 1);
						F.line = 2642;
						var res_259526 = colontmp__259525;
						L4: do {
							F.line = 2643;
								L5: while (true) {
								if (!(i_211962 <= res_259526)) break L5;
									F.line = 248;
									j_212077 = res_259526;
									F.line = 249;
									s_211958[j_212077] = s_211958[subInt(j_212077, 2)];
									F.line = 250;
									s_211958[subInt(j_212077, 1)] = s_211958[subInt(j_212077, 3)];
									F.line = 2645;
									res_259526 = subInt(res_259526, 2);
								}
						} while(false);
					} while(false);
					F.line = 251;
					s_211958[i_211962] = a_211959;
					F.line = 252;
					s_211958[addInt(i_211962, 1)] = value_211960;
					F.line = 253;
					break BeforeRet;
					}
					}
					F.line = 254;
					i_211962 = addInt(i_211962, 2);
				}
		} while(false);
		F.line = 255;
		s_211958.push(a_211959);
		F.line = 256;
		s_211958.push(value_211960);
	} while (false);
	framePtr = F.prev;

	
}

function set_attr_212197(s_212199, attr_212200, value_212201) {
	var F={procname:"vstyles.setAttr",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		if (!(!((value_212201 == null)))) {
		F.line = 260;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/vstyles.nim(260, 12) `value != nil` value must not be nil"));
		}
		
		F.line = 261;
		set_attr_211956(s_212199, to_style_attr_name_211663[chckIndx(attr_212200, 0, to_style_attr_name_211663.length+0-1)-0], value_212201);
	framePtr = F.prev;

	
}

function style_212881(a_212883, val_212884) {
	var result_212885 = null;

	var F={procname:"vstyles.style",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 287;
		result_212885 = new Array(0);
		F.line = 291;
		set_attr_212197(result_212885, a_212883, val_212884);
	framePtr = F.prev;

	return result_212885;

}

function add_event_handler_245564(n_245566, k_245567, action_245570, kxi_245571) {

		function wrapper_245572(ev_245574, n_245575) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 712;
				action_245570();
				if (!(kxi_245571.surpressRedraws)) {
				F.line = 713;
				redraw_244814(kxi_245571);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 714;
		add_event_listener_218721(n_245566, k_245567, wrapper_245572);
	framePtr = F.prev;

	
}

function start_game_258480() {
	var F={procname:"karax_client.startGame",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 32;
		setup_257727(game_258236, settings_258436);
		F.line = 33;
		state_258438[0] = 2;
	framePtr = F.prev;

	
}

function setup_gui_258512() {
	var result_258514 = null;

	var F={procname:"karax_client.setupGUI",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 49;
		F.line = 49;
		var tmp_258557 = tree_218246(43, []);
		F.line = 50;
		var tmp_258558 = tree_218246(43, []);
		F.line = 50;
		tmp_258558.class = "grid-container";
		F.line = 51;
		var tmp_258564 = tree_218246(43, []);
		F.line = 51;
		tmp_258564.class = "grid-item";
		F.line = 52;
		var tmp_258565 = tree_218246(104, []);
		F.line = 52;
		set_attr_216568(tmp_258565, "for", "name1");
		F.line = 53;
		add_216800(tmp_258565, text_218364(makeNimstrLit("Player 1: ")));
		F.line = 53;
		add_216800(tmp_258564, tmp_258565);
		F.line = 53;
		add_216800(tmp_258558, tmp_258564);
		F.line = 54;
		var tmp_258566 = tree_218246(43, []);
		F.line = 54;
		tmp_258566.class = "grid-item";
		F.line = 55;
		var tmp_258567 = tree_218246(105, []);
		F.line = 55;
		set_attr_216568(tmp_258567, "placeholder", "player 1");
		F.line = 55;
		tmp_258567.id = "name1";
		F.line = 55;
		add_event_handler_245528(tmp_258567, 3, input_handler_258455, kxi_235324[0]);
		F.line = 55;
		add_216800(tmp_258566, tmp_258567);
		F.line = 55;
		add_216800(tmp_258558, tmp_258566);
		F.line = 56;
		var tmp_258568 = tree_218246(43, []);
		F.line = 56;
		tmp_258568.class = "grid-item";
		F.line = 57;
		var tmp_258569 = tree_218246(104, []);
		F.line = 57;
		set_attr_216568(tmp_258569, "for", "name2");
		F.line = 58;
		add_216800(tmp_258569, text_218364(makeNimstrLit("Player 2: ")));
		F.line = 58;
		add_216800(tmp_258568, tmp_258569);
		F.line = 58;
		add_216800(tmp_258558, tmp_258568);
		F.line = 59;
		var tmp_258570 = tree_218246(43, []);
		F.line = 59;
		tmp_258570.class = "grid-item";
		F.line = 60;
		var tmp_258571 = tree_218246(105, []);
		F.line = 60;
		set_attr_216568(tmp_258571, "placeholder", "player 2");
		F.line = 60;
		tmp_258571.id = "name2";
		F.line = 60;
		add_event_handler_245528(tmp_258571, 3, input_handler_258455, kxi_235324[0]);
		F.line = 60;
		add_216800(tmp_258570, tmp_258571);
		F.line = 61;
		var tmp_258572 = tree_218246(104, []);
		F.line = 61;
		tmp_258572.style = style_212881(113, "5px");
		F.line = 62;
		add_216800(tmp_258572, text_218364(makeNimstrLit("AI")));
		F.line = 63;
		var tmp_258573 = tree_218246(105, []);
		F.line = 63;
		set_attr_216568(tmp_258573, "type", "checkbox");
		F.line = 63;
		tmp_258573.id = "AI";
		F.line = 63;
		add_event_handler_245528(tmp_258573, 0, input_handler_258455, kxi_235324[0]);
		F.line = 63;
		add_216800(tmp_258572, tmp_258573);
		F.line = 63;
		add_216800(tmp_258570, tmp_258572);
		F.line = 63;
		add_216800(tmp_258558, tmp_258570);
		F.line = 64;
		var tmp_258574 = tree_218246(43, []);
		F.line = 64;
		tmp_258574.class = "grid-item";
		F.line = 65;
		var tmp_258575 = tree_218246(104, []);
		F.line = 65;
		set_attr_216568(tmp_258575, "for", "fieldSize");
		F.line = 66;
		add_216800(tmp_258575, text_218364(makeNimstrLit("Field size: ")));
		F.line = 66;
		add_216800(tmp_258574, tmp_258575);
		F.line = 66;
		add_216800(tmp_258558, tmp_258574);
		F.line = 67;
		var tmp_258576 = tree_218246(43, []);
		F.line = 67;
		tmp_258576.class = "grid-item";
		F.line = 68;
		var tmp_258577 = tree_218246(105, []);
		F.line = 68;
		tmp_258577.id = "fieldSize";
		F.line = 68;
		set_attr_216568(tmp_258577, "placeholder", "3");
		F.line = 68;
		add_event_handler_245528(tmp_258577, 3, input_handler_258455, kxi_235324[0]);
		F.line = 68;
		add_216800(tmp_258576, tmp_258577);
		F.line = 68;
		add_216800(tmp_258558, tmp_258576);
		F.line = 69;
		var tmp_258578 = tree_218246(43, []);
		F.line = 69;
		tmp_258578.class = "grid-item";
		F.line = 70;
		var tmp_258579 = tree_218246(104, []);
		F.line = 70;
		set_attr_216568(tmp_258579, "for", "winCount");
		F.line = 71;
		add_216800(tmp_258579, text_218364(makeNimstrLit("Win count: ")));
		F.line = 71;
		add_216800(tmp_258578, tmp_258579);
		F.line = 71;
		add_216800(tmp_258558, tmp_258578);
		F.line = 72;
		var tmp_258580 = tree_218246(43, []);
		F.line = 72;
		tmp_258580.class = "grid-item";
		F.line = 73;
		var tmp_258581 = tree_218246(105, []);
		F.line = 73;
		tmp_258581.id = "winCount";
		F.line = 73;
		set_attr_216568(tmp_258581, "placeholder", "3");
		F.line = 73;
		add_event_handler_245528(tmp_258581, 3, input_handler_258455, kxi_235324[0]);
		F.line = 73;
		add_216800(tmp_258580, tmp_258581);
		F.line = 73;
		add_216800(tmp_258558, tmp_258580);
		F.line = 73;
		add_216800(tmp_258557, tmp_258558);
		F.line = 74;
		var tmp_258582 = tree_218246(43, []);
		F.line = 74;
		tmp_258582.class = "center";
		F.line = 75;
		var tmp_258583 = tree_218246(106, []);
		F.line = 75;
		add_event_handler_245564(tmp_258583, 0, start_game_258480, kxi_235324[0]);
		F.line = 75;
		tmp_258583.class = "finish-setup command-buttons";
		F.line = 76;
		add_216800(tmp_258583, text_218364(makeNimstrLit("start Game")));
		F.line = 76;
		add_216800(tmp_258582, tmp_258583);
		F.line = 76;
		add_216800(tmp_258557, tmp_258582);
		result_258514 = tmp_258557;
	framePtr = F.prev;

	return result_258514;

}

function HEX2F_69417(x_69419, y_69420) {
	var result_69421 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3876;
		result_69421 = (x_69419 / y_69420);
	framePtr = F.prev;

	return result_69421;

}

function raiseDivByZero() {
		var e_65241 = null;
		e_65241 = {m_type: NTI47844, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65241.message = nimCopy(null, makeNimstrLit("division by zero"), NTI44040);
		e_65241.parent = null;
		raiseException(e_65241, "DivByZeroError");

	
}

function parse_saturated_natural_95631(s_95633, b_95635, b_95635_Idx, start_95636) {
			var Tmp1;
					var Tmp4;

	var result_95638 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 480;
		var i_95639 = start_95636;
		if (((i_95639 < (s_95633 != null ? s_95633.length : 0)) && (s_95633[chckIndx(i_95639, 0, s_95633.length+0-1)-0] == 43))) {
		F.line = 481;
		i_95639 = addInt(i_95639, 1);
		}
		
			if (!(i_95639 < (s_95633 != null ? s_95633.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet6[s_95633[chckIndx(i_95639, 0, s_95633.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 483;
		b_95635[b_95635_Idx] = 0;
		L2: do {
			F.line = 484;
				L3: while (true) {
					if (!(i_95639 < (s_95633 != null ? s_95633.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet7[s_95633[chckIndx(i_95639, 0, s_95633.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 485;
					var c_95668 = subInt(s_95633[chckIndx(i_95639, 0, s_95633.length+0-1)-0], 48);
					if ((b_95635[b_95635_Idx] <= divInt(subInt(2147483647, c_95668), 10))) {
					F.line = 487;
					b_95635[b_95635_Idx] = addInt(mulInt(b_95635[b_95635_Idx], 10), c_95668);
					}
					else {
						F.line = 489;
						b_95635[b_95635_Idx] = 2147483647;
					}
					
					F.line = 490;
					i_95639 = addInt(i_95639, 1);
					L5: do {
						F.line = 491;
							L6: while (true) {
							if (!((i_95639 < (s_95633 != null ? s_95633.length : 0)) && (s_95633[chckIndx(i_95639, 0, s_95633.length+0-1)-0] == 95))) break L6;
								F.line = 491;
								i_95639 = addInt(i_95639, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 492;
		result_95638 = subInt(i_95639, start_95636);
		}
		
	framePtr = F.prev;

	return result_95638;

}

function raiseRangeError() {
		var e_65441 = null;
		e_65441 = {m_type: NTI47862, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI44040);
		e_65441.parent = null;
		raiseException(e_65441, "RangeError");

	
}

function HEX5BHEX5D_133704(s_133708, x_133710) {
	var result_133711 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3936;
		var a_133801 = x_133710.a;
		F.line = 3937;
		var l_134001 = addInt(subInt(subInt((s_133708 != null ? s_133708.length : 0), x_133710.b), a_133801), 1);
		F.line = 3938;
		result_133711 = nimCopy(null, mnewString(chckRange(l_134001, 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 3939;
			var i_134009 = 0;
			F.line = 2717;
			var i_259571 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259571 < l_134001)) break L3;
						F.line = 3939;
						i_134009 = i_259571;
						F.line = 3939;
						result_133711[chckIndx(i_134009, 0, result_133711.length+0-1)-0] = s_133708[chckIndx(addInt(i_134009, a_133801), 0, s_133708.length+0-1)-0];
						F.line = 2720;
						i_259571 = addInt(i_259571, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_133711;

}

function HEX2EHEX2E_133639(a_133643, b_133644) {
	var result_133650 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 500;
		nimCopy(result_133650, {a: a_133643, b: b_133644}, NTI133647);
	framePtr = F.prev;

	return result_133650;

}

function parse_standard_format_specifier_202324(s_202326, start_202327, ignore_unknown_suffix_202329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_202330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_202330.fill = 32;
		F.line = 378;
		result_202330.align = 0;
		F.line = 379;
		result_202330.sign = 45;
		F.line = 380;
		var i_202333 = start_202327;
		if (((addInt(i_202333, 1) < (s_202326 != null ? s_202326.length : 0)) && (ConstSet2[s_202326[chckIndx(addInt(i_202333, 1), 0, s_202326.length+0-1)-0]] != undefined))) {
		F.line = 382;
		result_202330.fill = s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0];
		F.line = 383;
		result_202330.align = s_202326[chckIndx(addInt(i_202333, 1), 0, s_202326.length+0-1)-0];
		F.line = 384;
		i_202333 = addInt(i_202333, 2);
		}
		else {
		if (((i_202333 < (s_202326 != null ? s_202326.length : 0)) && (ConstSet3[s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0]] != undefined))) {
		F.line = 386;
		result_202330.align = s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0];
		F.line = 387;
		i_202333 = addInt(i_202333, 1);
		}
		}
		if (((i_202333 < (s_202326 != null ? s_202326.length : 0)) && (ConstSet4[s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0]] != undefined))) {
		F.line = 390;
		result_202330.sign = s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0];
		F.line = 391;
		i_202333 = addInt(i_202333, 1);
		}
		
		if (((i_202333 < (s_202326 != null ? s_202326.length : 0)) && (s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0] == 35))) {
		F.line = 394;
		result_202330.alternateForm = true;
		F.line = 395;
		i_202333 = addInt(i_202333, 1);
		}
		
			if (!((addInt(i_202333, 1) < (s_202326 != null ? s_202326.length : 0)) && (s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet5[s_202326[chckIndx(addInt(i_202333, 1), 0, s_202326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 398;
		result_202330.padWithZero = true;
		F.line = 399;
		i_202333 = addInt(i_202333, 1);
		}
		
		F.line = 401;
		var parsed_length_202391 = parse_saturated_natural_95631(s_202326, result_202330, "minimumWidth", i_202333);
		F.line = 402;
		i_202333 = addInt(i_202333, parsed_length_202391);
		if (((i_202333 < (s_202326 != null ? s_202326.length : 0)) && (s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0] == 46))) {
		F.line = 404;
		i_202333 = addInt(i_202333, 1);
		F.line = 405;
		var parsed_length_b_202405 = parse_saturated_natural_95631(s_202326, result_202330, "precision", i_202333);
		F.line = 406;
		i_202333 = addInt(i_202333, parsed_length_b_202405);
		}
		else {
			F.line = 408;
			result_202330.precision = -1;
		}
		
			if (!(i_202333 < (s_202326 != null ? s_202326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet8[s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 411;
		result_202330.typ = s_202326[chckIndx(i_202333, 0, s_202326.length+0-1)-0];
		F.line = 412;
		i_202333 = addInt(i_202333, 1);
		}
		
		F.line = 413;
		result_202330.endPosition = i_202333;
			if (!!((i_202333 == (s_202326 != null ? s_202326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_202329);			}		if (Tmp3) {
		F.line = 3436;
		var e_202460 = null;
		F.line = 3439;
		e_202460 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 416;
		e_202460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_133704(s_202326, HEX2EHEX2E_133639(i_202333, 1)) || []), NTI44040);
		F.line = 3432;
		e_202460.parent = null;
		F.line = 415;
		raiseException(e_202460, "ValueError");
		}
		
	framePtr = F.prev;

	return result_202330;

}

function nsuformatBiggestFloat(f_199621, format_199622, precision_199628, decimal_sep_199629) {
	var result_199630 = null;

	var F={procname:"strutils.formatBiggestFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2315;
		var precision_199801 = precision_199628;
		if ((precision_199801 == -1)) {
		F.line = 2318;
		precision_199801 = 6;
		}
		
		F.line = 2319;
		var res_199803 = null;
		F.line = 2320;
		switch (format_199622) {
		case 0:
			F.line = 2322;
			res_199803 = f_199621.toString();
			break;
		case 1:
			F.line = 2324;
			res_199803 = f_199621.toFixed(precision_199801);
			break;
		case 2:
			F.line = 2326;
			res_199803 = f_199621.toExponential(precision_199801);
			break;
		}
		F.line = 2327;
		result_199630 = nimCopy(null, cstrToNimstr(res_199803), NTI44040);
		if (((1.0000000000000000e+00 / f_199621) == -Infinity)) {
		F.line = 2330;
		result_199630 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_199803) || []), NTI44040);
		}
		
		L1: do {
			F.line = 2331;
			var i_199811 = 0;
			F.line = 2716;
			var colontmp__259577 = 0;
			F.line = 2331;
			colontmp__259577 = (result_199630 != null ? result_199630.length : 0);
			F.line = 2717;
			var i_259578 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259578 < colontmp__259577)) break L3;
						F.line = 2331;
						i_199811 = i_259578;
						if ((ConstSet9[result_199630[chckIndx(i_199811, 0, result_199630.length+0-1)-0]] != undefined)) {
						F.line = 2334;
						result_199630[chckIndx(i_199811, 0, result_199630.length+0-1)-0] = decimal_sep_199629;
						}
						
						F.line = 2720;
						i_259578 = addInt(i_259578, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_199630;

}

function insert_71001(x_71004, x_71004_Idx, item_71005, i_71006) {
	var F={procname:"system.insert",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4200;
		var xl_71007 = (x_71004[x_71004_Idx] != null ? x_71004[x_71004_Idx].length : 0);
		F.line = 4201;
		(x_71004[x_71004_Idx] == null ? x_71004[x_71004_Idx] = mnewString(chckRange(addInt(xl_71007, (item_71005 != null ? item_71005.length : 0)), 0, 2147483647)) : x_71004[x_71004_Idx].length = chckRange(addInt(xl_71007, (item_71005 != null ? item_71005.length : 0)), 0, 2147483647));
		F.line = 4202;
		var j_71008 = subInt(xl_71007, 1);
		L1: do {
			F.line = 4203;
				L2: while (true) {
				if (!(i_71006 <= j_71008)) break L2;
					F.line = 4204;
					x_71004[x_71004_Idx][chckIndx(addInt(j_71008, (item_71005 != null ? item_71005.length : 0)), 0, x_71004[x_71004_Idx].length+0-1)-0] = x_71004[x_71004_Idx][chckIndx(j_71008, 0, x_71004[x_71004_Idx].length+0-1)-0];
					F.line = 4205;
					j_71008 = subInt(j_71008, 1);
				}
		} while(false);
		F.line = 4206;
		j_71008 = 0;
		L3: do {
			F.line = 4207;
				L4: while (true) {
				if (!(j_71008 < (item_71005 != null ? item_71005.length : 0))) break L4;
					F.line = 4208;
					x_71004[x_71004_Idx][chckIndx(addInt(j_71008, i_71006), 0, x_71004[x_71004_Idx].length+0-1)-0] = item_71005[chckIndx(j_71008, 0, item_71005.length+0-1)-0];
					F.line = 4209;
					j_71008 = addInt(j_71008, 1);
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuRepeatChar(c_195855, count_195856) {
	var result_195857 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1290;
		result_195857 = nimCopy(null, mnewString(count_195856), NTI44040);
		L1: do {
			F.line = 1291;
			var i_195866 = 0;
			F.line = 2679;
			var colontmp__259584 = 0;
			F.line = 1291;
			colontmp__259584 = subInt(count_195856, 1);
			F.line = 2689;
			var res_259585 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259585 <= colontmp__259584)) break L3;
						F.line = 1291;
						i_195866 = res_259585;
						F.line = 1291;
						result_195857[chckIndx(i_195866, 0, result_195857.length+0-1)-0] = c_195855;
						F.line = 2692;
						res_259585 = addInt(res_259585, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_195857;

}

function validate_utf8_101229(s_101231) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_101232 = 0;

	var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 180;
		var i_101234 = 0;
		F.line = 181;
		var l_101235 = (s_101231 != null ? s_101231.length : 0);
		L1: do {
			F.line = 182;
				L2: while (true) {
				if (!(i_101234 < l_101235)) break L2;
					if ((s_101231[chckIndx(i_101234, 0, s_101231.length+0-1)-0] <= 127)) {
					F.line = 184;
					i_101234 = addInt(i_101234, 1);
					}
					else {
					if ((((s_101231[chckIndx(i_101234, 0, s_101231.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_101231[chckIndx(i_101234, 0, s_101231.length+0-1)-0] < 194)) {
					F.line = 186;
					result_101232 = i_101234;
					break BeforeRet;
					}
					
						if (!(addInt(i_101234, 1) < l_101235)) Tmp3 = false; else {							Tmp3 = (((s_101231[chckIndx(addInt(i_101234, 1), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 187;
					i_101234 = addInt(i_101234, 2);
					}
					else {
						F.line = 188;
						result_101232 = i_101234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_101231[chckIndx(i_101234, 0, s_101231.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_101234, 2) < l_101235)) Tmp5 = false; else {							Tmp5 = (((s_101231[chckIndx(addInt(i_101234, 1), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_101231[chckIndx(addInt(i_101234, 2), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 191;
					i_101234 = addInt(i_101234, 3);
					}
					else {
						F.line = 192;
						result_101232 = i_101234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_101231[chckIndx(i_101234, 0, s_101231.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_101234, 3) < l_101235)) Tmp8 = false; else {							Tmp8 = (((s_101231[chckIndx(addInt(i_101234, 1), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_101231[chckIndx(addInt(i_101234, 2), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_101231[chckIndx(addInt(i_101234, 3), 0, s_101231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 197;
					i_101234 = addInt(i_101234, 4);
					}
					else {
						F.line = 198;
						result_101232 = i_101234;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 200;
						result_101232 = i_101234;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 201;
		result_101232 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_101232;

}

function nucruneLen(s_98227) {
	var result_98228 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		F.line = 49;
		var i_98230 = 0;
		L1: do {
			F.line = 50;
				L2: while (true) {
				if (!(i_98230 < (s_98227 != null ? s_98227.length : 0))) break L2;
					if ((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] <= 127)) {
					F.line = 51;
					i_98230 = addInt(i_98230, 1);
					}
					else {
					if ((((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 52;
					i_98230 = addInt(i_98230, 2);
					}
					else {
					if ((((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 53;
					i_98230 = addInt(i_98230, 3);
					}
					else {
					if ((((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 54;
					i_98230 = addInt(i_98230, 4);
					}
					else {
					if ((((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 55;
					i_98230 = addInt(i_98230, 5);
					}
					else {
					if ((((s_98227[chckIndx(i_98230, 0, s_98227.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 56;
					i_98230 = addInt(i_98230, 6);
					}
					else {
						F.line = 57;
					i_98230 = addInt(i_98230, 1);
					}
					}}}}}
					F.line = 58;
					result_98228 = addInt(result_98228, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_98228;

}

function align_string_202223(s_202225, minimum_width_202226, align_202227, fill_202228) {
			var Tmp1;

	var result_202229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_202226 == 0)) {
		F.line = 281;
		result_202229 = nimCopy(null, s_202225, NTI44040);
		}
		else {
			F.line = 283;
			if ((validate_utf8_101229(s_202225) == -1)) {
			Tmp1 = nucruneLen(s_202225);
			}
			else {
			Tmp1 = (s_202225 != null ? s_202225.length : 0);
			}
			
			var s_rune_len_202231 = Tmp1;
			F.line = 284;
			var to_fill_202232 = subInt(minimum_width_202226, s_rune_len_202231);
			if ((to_fill_202232 <= 0)) {
			F.line = 286;
			result_202229 = nimCopy(null, s_202225, NTI44040);
			}
			else {
			if (((align_202227 == 60) || (align_202227 == 0))) {
			F.line = 288;
			result_202229 = nimCopy(null, (s_202225 || []).concat(nsuRepeatChar(fill_202228, chckRange(to_fill_202232, 0, 2147483647)) || []), NTI44040);
			}
			else {
			if ((align_202227 == 94)) {
			F.line = 290;
			var half_202233 = divInt(to_fill_202232, 2);
			F.line = 291;
			result_202229 = nimCopy(null, (nsuRepeatChar(fill_202228, chckRange(half_202233, 0, 2147483647)) || []).concat(s_202225 || [],nsuRepeatChar(fill_202228, chckRange(subInt(to_fill_202232, half_202233), 0, 2147483647)) || []), NTI44040);
			}
			else {
				F.line = 293;
				result_202229 = nimCopy(null, (nsuRepeatChar(fill_202228, chckRange(to_fill_202232, 0, 2147483647)) || []).concat(s_202225 || []), NTI44040);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_202229;

}

function nsuToUpperAsciiChar(c_191862) {
	var result_191863 = 0;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet11[c_191862] != undefined)) {
		F.line = 261;
		result_191863 = chckRange(subInt(c_191862, 32), 0, 255);
		}
		else {
			F.line = 263;
			result_191863 = c_191862;
		}
		
	framePtr = F.prev;

	return result_191863;

}

function nsuToUpperAsciiStr(s_191901) {
	var result_191902 = null;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_191902 = nimCopy(null, mnewString(chckRange((s_191901 != null ? s_191901.length : 0), 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 228;
			var i_191903 = 0;
			F.line = 2679;
			var colontmp__215671 = 0;
			F.line = 228;
			colontmp__215671 = subInt((s_191901 != null ? s_191901.length : 0), 1);
			F.line = 2689;
			var res_215672 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_215672 <= colontmp__215671)) break L3;
						F.line = 277;
						i_191903 = res_215672;
						F.line = 229;
						result_191902[chckIndx(i_191903, 0, result_191902.length+0-1)-0] = nsuToUpperAsciiChar(s_191901[chckIndx(i_191903, 0, s_191901.length+0-1)-0]);
						F.line = 2692;
						res_215672 = addInt(res_215672, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_191902;

}

function format_value_258700(result_258703, result_258703_Idx, value_258704, specifier_258705) {
		var Tmp1;

	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_258705 != null ? specifier_258705.length : 0) == 0)) {
		F.line = 443;
		if (result_258703[result_258703_Idx] != null) { result_258703[result_258703_Idx] = (result_258703[result_258703_Idx]).concat(cstrToNimstr((value_258704)+"")); } else { result_258703[result_258703_Idx] = cstrToNimstr((value_258704)+"").slice(); };
		F.line = 444;
		break BeforeRet;
		}
		
		F.line = 445;
		var spec_258706 = parse_standard_format_specifier_202324(specifier_258705, 0, false);
		F.line = 447;
		var fmode_258707 = 0;
		F.line = 448;
		switch (spec_258706.typ) {
		case 101:
		case 69:
			F.line = 450;
			fmode_258707 = 2;
			break;
		case 102:
		case 70:
			F.line = 452;
			fmode_258707 = 1;
			break;
		case 103:
		case 71:
			F.line = 454;
			fmode_258707 = 0;
			break;
		case 0:
			break;
		default: 
			F.line = 3436;
			var e_258709 = null;
			F.line = 3439;
			e_258709 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 459;
			e_258709.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_258706.typ]), NTI44040);
			F.line = 3432;
			e_258709.parent = null;
			F.line = 457;
			raiseException(e_258709, "ValueError");
			break;
		}
		F.line = 461;
		var f_258809 = [nsuformatBiggestFloat(value_258704, fmode_258707, chckRange(spec_258706.precision, -1, 32), 46)];
		F.line = 462;
		var sign_258810 = false;
		if ((0.0 <= value_258704)) {
		if (!((spec_258706.sign == 45))) {
		F.line = 465;
		sign_258810 = true;
		if ((value_258704 == 0.0)) {
		if (((1.0000000000000000e+00 / value_258704) == Infinity)) {
		F.line = 469;
		insert_71001(f_258809, 0, nimCharToStr(spec_258706.sign), 0);
		}
		
		}
		else {
			F.line = 471;
		insert_71001(f_258809, 0, nimCharToStr(spec_258706.sign), 0);
		}
		
		}
		
		}
		else {
			F.line = 473;
			sign_258810 = true;
		}
		
		if (spec_258706.padWithZero) {
		F.line = 476;
		var sign_str_258813 = [];
		if (sign_258810) {
		F.line = 478;
		sign_str_258813 = nimCopy(null, nimCharToStr(f_258809[0][chckIndx(0, 0, f_258809[0].length+0-1)-0]), NTI44040);
		F.line = 479;
		f_258809[0] = nimCopy(null, HEX5BHEX5D_133704(f_258809[0], HEX2EHEX2E_133639(1, 1)), NTI44040);
		}
		
		F.line = 481;
		var to_fill_258856 = subInt(subInt(spec_258706.minimumWidth, (f_258809[0] != null ? f_258809[0].length : 0)), (sign_258810 ? 1:0));
		if ((0 < to_fill_258856)) {
		F.line = 483;
		f_258809[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_258856, 0, 2147483647)) || []).concat(f_258809[0] || []), NTI44040);
		}
		
		if (sign_258810) {
		F.line = 485;
		f_258809[0] = nimCopy(null, (sign_str_258813 || []).concat(f_258809[0] || []), NTI44040);
		}
		
		}
		
		F.line = 488;
		if ((spec_258706.align == 0)) {
		Tmp1 = 62;
		}
		else {
		Tmp1 = spec_258706.align;
		}
		
		var align_258859 = Tmp1;
		F.line = 489;
		var res_258860 = align_string_202223(f_258809[0], spec_258706.minimumWidth, align_258859, spec_258706.fill);
		if ((ConstSet10[spec_258706.typ] != undefined)) {
		F.line = 491;
		if (result_258703[result_258703_Idx] != null) { result_258703[result_258703_Idx] = (result_258703[result_258703_Idx]).concat(nsuToUpperAsciiStr(res_258860)); } else { result_258703[result_258703_Idx] = nsuToUpperAsciiStr(res_258860).slice(); };
		}
		else {
			F.line = 493;
		if (result_258703[result_258703_Idx] != null) { result_258703[result_258703_Idx] = (result_258703[result_258703_Idx]).concat(res_258860); } else { result_258703[result_258703_Idx] = res_258860.slice(); };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function style_212705(pairs_212709) {
	var result_212710 = null;

	var F={procname:"vstyles.style",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 277;
		result_212710 = new Array(0);
		L1: do {
			F.line = 281;
			var x_212837 = {Field0: 0, Field1: null};
			F.line = 3;
			var i_259611 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_259611 < (pairs_212709 != null ? pairs_212709.length : 0))) break L3;
						F.line = 281;
						nimCopy(x_212837, pairs_212709[chckIndx(i_259611, 0, pairs_212709.length+0-1)-0], NTI212708);
						F.line = 282;
						set_attr_212197(result_212710, x_212837["Field0"], x_212837["Field1"]);
						F.line = 6;
						i_259611 = addInt(i_259611, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_212710;

}

function mk_digit_202014(v_202016, typ_202017) {
			var Tmp1;

	var result_202018 = null;

	var F={procname:"strformat.mkDigit",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if (!((v_202016 < 26))) {
		F.line = 270;
		failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/pure/strformat.nim(270, 9) `v < 26` "));
		}
		
		if ((v_202016 < 10)) {
		F.line = 272;
		result_202018 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_202016), 0, 255)), NTI44040);
		}
		else {
			F.line = 274;
			if ((typ_202017 == 120)) {
			Tmp1 = 97;
			}
			else {
			Tmp1 = 65;
			}
			
			result_202018 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_202016), 10), 0, 255)), NTI44040);
		}
		
	framePtr = F.prev;

	return result_202018;

}

function format_int_256409(n_256412, radix_256413, spec_256414) {
		var Tmp7;

	var result_256415 = null;

	var F={procname:"formatInt.formatInt",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 316;
		var v_256601 = n_256412;
		F.line = 317;
		var negative_256602 = (v_256601 < 0);
		if (negative_256602) {
		F.line = 320;
		v_256601 = mulInt(v_256601, -1);
		}
		
		F.line = 322;
		var xx_256604 = [];
		if (spec_256414.alternateForm) {
		F.line = 324;
		switch (spec_256414.typ) {
		case 88:
			F.line = 325;
			xx_256604 = nimCopy(null, makeNimstrLit("0x"), NTI44040);
			break;
		case 120:
			F.line = 326;
			xx_256604 = nimCopy(null, makeNimstrLit("0x"), NTI44040);
			break;
		case 98:
			F.line = 327;
			xx_256604 = nimCopy(null, makeNimstrLit("0b"), NTI44040);
			break;
		case 111:
			F.line = 328;
			xx_256604 = nimCopy(null, makeNimstrLit("0o"), NTI44040);
			break;
		default: 
			break;
		}
		}
		
		if ((v_256601 == 0)) {
		F.line = 332;
		result_256415 = nimCopy(null, makeNimstrLit("0"), NTI44040);
		}
		else {
			F.line = 334;
			result_256415 = nimCopy(null, [], NTI44040);
			L1: do {
				F.line = 335;
					L2: while (true) {
					if (!(0 < v_256601)) break L2;
						F.line = 336;
						var d_256607 = modInt(v_256601, radix_256413);
						F.line = 337;
						v_256601 = divInt(v_256601, radix_256413);
						F.line = 338;
						if (result_256415 != null) { result_256415 = (result_256415).concat(mk_digit_202014(chckRange(d_256607, -2147483648, 2147483647), spec_256414.typ)); } else { result_256415 = mk_digit_202014(chckRange(d_256607, -2147483648, 2147483647), spec_256414.typ).slice(); };
					}
			} while(false);
			L3: do {
				F.line = 339;
				var idx_256616 = 0;
				F.line = 2716;
				var colontmp__259617 = 0;
				F.line = 339;
				colontmp__259617 = divInt((result_256415 != null ? result_256415.length : 0), 2);
				F.line = 2717;
				var i_259618 = 0;
				L4: do {
					F.line = 2718;
						L5: while (true) {
						if (!(i_259618 < colontmp__259617)) break L5;
							F.line = 339;
							idx_256616 = i_259618;
							F.line = 340;
							var Tmp6 = result_256415[chckIndx(idx_256616, 0, result_256415.length+0-1)-0]; result_256415[chckIndx(idx_256616, 0, result_256415.length+0-1)-0] = result_256415[chckIndx(subInt(subInt((result_256415 != null ? result_256415.length : 0), idx_256616), 1), 0, result_256415.length+0-1)-0]; result_256415[chckIndx(subInt(subInt((result_256415 != null ? result_256415.length : 0), idx_256616), 1), 0, result_256415.length+0-1)-0] = Tmp6;							F.line = 2720;
							i_259618 = addInt(i_259618, 1);
						}
				} while(false);
			} while(false);
		}
		
		if (spec_256414.padWithZero) {
		F.line = 342;
		if (negative_256602) Tmp7 = true; else {			Tmp7 = !((spec_256414.sign == 45));		}		var sign_256632 = Tmp7;
		F.line = 343;
		var to_fill_256637 = subInt(subInt(subInt(spec_256414.minimumWidth, (result_256415 != null ? result_256415.length : 0)), (xx_256604 != null ? xx_256604.length : 0)), (sign_256632 ? 1:0));
		if ((0 < to_fill_256637)) {
		F.line = 345;
		result_256415 = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_256637, 0, 2147483647)) || []).concat(result_256415 || []), NTI44040);
		}
		
		}
		
		if (negative_256602) {
		F.line = 348;
		result_256415 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_256604 || [],result_256415 || []), NTI44040);
		}
		else {
		if (!((spec_256414.sign == 45))) {
		F.line = 350;
		result_256415 = nimCopy(null, [spec_256414.sign].concat(xx_256604 || [],result_256415 || []), NTI44040);
		}
		else {
			F.line = 352;
			result_256415 = nimCopy(null, (xx_256604 || []).concat(result_256415 || []), NTI44040);
		}
		}
		if ((spec_256414.align == 60)) {
		L8: do {
			F.line = 355;
			var i_256645 = 0;
			F.line = 2716;
			var colontmp__259622 = 0;
			F.line = 2716;
			var colontmp__259623 = 0;
			F.line = 355;
			colontmp__259622 = (result_256415 != null ? result_256415.length : 0);
			F.line = 355;
			colontmp__259623 = spec_256414.minimumWidth;
			F.line = 2717;
			var i_259624 = colontmp__259622;
			L9: do {
				F.line = 2718;
					L10: while (true) {
					if (!(i_259624 < colontmp__259623)) break L10;
						F.line = 355;
						i_256645 = i_259624;
						F.line = 356;
						if (result_256415 != null) { addChar(result_256415, spec_256414.fill); } else { result_256415 = [spec_256414.fill]; };
						F.line = 2720;
						i_259624 = addInt(i_259624, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 358;
			var to_fill_256646 = subInt(spec_256414.minimumWidth, (result_256415 != null ? result_256415.length : 0));
			if ((spec_256414.align == 94)) {
			F.line = 360;
			var half_256647 = divInt(to_fill_256646, 2);
			F.line = 361;
			result_256415 = nimCopy(null, (nsuRepeatChar(spec_256414.fill, chckRange(half_256647, 0, 2147483647)) || []).concat(result_256415 || [],nsuRepeatChar(spec_256414.fill, chckRange(subInt(to_fill_256646, half_256647), 0, 2147483647)) || []), NTI44040);
			}
			else {
				if ((0 < to_fill_256646)) {
				F.line = 364;
				result_256415 = nimCopy(null, (nsuRepeatChar(spec_256414.fill, chckRange(to_fill_256646, 0, 2147483647)) || []).concat(result_256415 || []), NTI44040);
				}
				
			}
			
		}
		
	framePtr = F.prev;

	return result_256415;

}

function format_value_256267(result_256270, result_256270_Idx, value_256271, specifier_256272) {
	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_256272 != null ? specifier_256272.length : 0) == 0)) {
		F.line = 423;
		if (result_256270[result_256270_Idx] != null) { result_256270[result_256270_Idx] = (result_256270[result_256270_Idx]).concat(cstrToNimstr((value_256271)+"")); } else { result_256270[result_256270_Idx] = cstrToNimstr((value_256271)+"").slice(); };
		F.line = 424;
		break BeforeRet;
		}
		
		F.line = 425;
		var spec_256273 = parse_standard_format_specifier_202324(specifier_256272, 0, false);
		F.line = 426;
		var radix_256275 = 10;
		F.line = 427;
		switch (spec_256273.typ) {
		case 120:
		case 88:
			F.line = 428;
			radix_256275 = 16;
			break;
		case 100:
		case 0:
			break;
		case 98:
			F.line = 430;
			radix_256275 = 2;
			break;
		case 111:
			F.line = 431;
			radix_256275 = 8;
			break;
		default: 
			F.line = 3436;
			var e_256277 = null;
			F.line = 3439;
			e_256277 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 435;
			e_256277.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_256273.typ]), NTI44040);
			F.line = 3432;
			e_256277.parent = null;
			F.line = 433;
			raiseException(e_256277, "ValueError");
			break;
		}
		F.line = 436;
		if (result_256270[result_256270_Idx] != null) { result_256270[result_256270_Idx] = (result_256270[result_256270_Idx]).concat(format_int_256409(value_256271, radix_256275, spec_256273)); } else { result_256270[result_256270_Idx] = format_int_256409(value_256271, radix_256275, spec_256273).slice(); };
	} while (false);
	framePtr = F.prev;

	
}

function click_field_258495(ev_258497, n_258498) {
	var F={procname:"karax_client.clickField",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		if (settings_258436.ai) {
		F.line = 39;
		field_blocked_258439[0] = true;
		F.line = 40;
		redraw_244814(kxi_235324[0]);
		}
		
		F.line = 42;
		make_turn_257862(game_258236, cstrToNimstr(n_258498.id));
		F.line = 43;
		field_blocked_258439[0] = false;
		if (finished_257881(game_258236)) {
		F.line = 45;
		window.alert(toJSStr((get_player_name_257834(game_258236) || []).concat(makeNimstrLit(" won the game") || [])));
		}
		
	framePtr = F.prev;

	
}

function to_disabled_245854(disabled_245856) {
		var Tmp1;

	var result_245857 = null;

	var F={procname:"karax.toDisabled",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 770;
		if (disabled_245856) {
		Tmp1 = "disabled";
		}
		else {
		Tmp1 = null;
		}
		
		result_245857 = Tmp1;
	framePtr = F.prev;

	return result_245857;

}

function play_gui_258692() {
		var Tmp1;
										var Tmp11;
										var Tmp12;
										var Tmp13;

		function HEX3Aanonymous_259245() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"karax_client.nim",line:0};
			framePtr = F;
				F.line = 115;
				state_258438[0] = 1;
				F.line = 116;
				set_default_256090(settings_258436);
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_259265() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"karax_client.nim",line:0};
			framePtr = F;
				F.line = 120;
				setup_257727(game_258236, settings_258436);
			framePtr = F.prev;

			
		}

	var result_258694 = null;

	var F={procname:"karax_client.playGUI",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 80;
		F.line = 80;
		if ((subInt(window.innerHeight, 200) < window.innerWidth)) {
		Tmp1 = subInt(window.innerHeight, 200);
		}
		else {
		Tmp1 = subInt(window.innerWidth, 20);
		}
		
		var field_width_258697 = Tmp1;
		F.line = 81;
		var pixel_size_258698 = HEX2F_69417(subInt(field_width_258697, mulInt(size_257786(game_258236), 5)), size_257786(game_258236));
		F.line = 82;
		F.line = 82;
		var fmt_res_258699 = [mnewString(0)];
		F.line = 82;
		format_value_258700(fmt_res_258699, 0, pixel_size_258698, []);
		F.line = 82;
		if (fmt_res_258699[0] != null) { fmt_res_258699[0] = (fmt_res_258699[0]).concat(makeNimstrLit("px")); } else { fmt_res_258699[0] = makeNimstrLit("px"); };
		var size_258897 = toJSStr(fmt_res_258699[0]);
		F.line = 83;
		var button_style_258908 = style_212705([{Field0: 186, Field1: size_258897}, {Field0: 99, Field1: size_258897}, {Field0: 106, Field1: size_258897}, {Field0: 91, Field1: size_258897}]);
		F.line = 90;
		var grid_columns_258909 = "";
		L2: do {
			F.line = 91;
			var i_258918 = 0;
			F.line = 2679;
			var colontmp__259534 = 0;
			F.line = 91;
			colontmp__259534 = size_257786(game_258236);
			F.line = 2689;
			var res_259535 = 1;
			L3: do {
				F.line = 2690;
					L4: while (true) {
					if (!(res_259535 <= colontmp__259534)) break L4;
						F.line = 91;
						i_258918 = res_259535;
						F.line = 92;
						if (grid_columns_258909 != null) { grid_columns_258909 += (" " + size_258897); } else { grid_columns_258909 = (" " + size_258897).slice(); };
						F.line = 2692;
						res_259535 = addInt(res_259535, 1);
					}
			} while(false);
		} while(false);
		F.line = 93;
		var grid_style_258920 = style_212881(97, grid_columns_258909);
		F.line = 95;
		var tmp_258921 = tree_218246(43, []);
		F.line = 95;
		tmp_258921.class = "center";
		F.line = 97;
		var tmp_258922 = tree_218246(31, []);
		if ((state_258438[0] == 2)) {
		F.line = 99;
		F.line = 99;
		var fmt_res_258936 = [mnewString(0)];
		F.line = 99;
		if (fmt_res_258936[0] != null) { fmt_res_258936[0] = (fmt_res_258936[0]).concat(makeNimstrLit("get ")); } else { fmt_res_258936[0] = makeNimstrLit("get "); };
		F.line = 99;
		format_value_256267(fmt_res_258936, 0, settings_258436.winCount, []);
		F.line = 99;
		if (fmt_res_258936[0] != null) { fmt_res_258936[0] = (fmt_res_258936[0]).concat(makeNimstrLit(" symbols in a row to win")); } else { fmt_res_258936[0] = makeNimstrLit(" symbols in a row to win"); };
		add_216800(tmp_258922, text_218364(fmt_res_258936[0]));
		}
		else {
			F.line = 101;
		add_216800(tmp_258922, text_218364(makeNimstrLit("Setup game to play")));
		}
		
		F.line = 101;
		add_216800(tmp_258921, tmp_258922);
		if ((state_258438[0] == 2)) {
		F.line = 104;
		var tmp_258923 = tree_218246(43, []);
		F.line = 104;
		tmp_258923.class = "grid-container-game";
		F.line = 104;
		tmp_258923.style = grid_style_258920;
		L5: do {
			F.line = 105;
			var i_259014 = 0;
			F.line = 105;
			var line_259015 = null;
			F.line = 115;
			var colontmp__259551 = null;
			F.line = 105;
			colontmp__259551 = field_257766(game_258236);
			F.line = 117;
			var i_259553 = 0;
			F.line = 118;
			var l_259554 = (colontmp__259551 != null ? colontmp__259551.length : 0);
			L6: do {
				F.line = 119;
					L7: while (true) {
					if (!(i_259553 < l_259554)) break L7;
						F.line = 105;
						i_259014 = i_259553;
						F.line = 120;
						line_259015 = colontmp__259551[chckIndx(i_259553, 0, colontmp__259551.length+0-1)-0];
						L8: do {
							F.line = 106;
							var j_259214 = 0;
							F.line = 106;
							var field_259215 = 0;
							F.line = 117;
							var i_259548 = 0;
							F.line = 118;
							var l_259549 = (line_259015 != null ? line_259015.length : 0);
							L9: do {
								F.line = 119;
									L10: while (true) {
									if (!(i_259548 < l_259549)) break L10;
										F.line = 106;
										j_259214 = i_259548;
										F.line = 120;
										field_259215 = line_259015[chckIndx(i_259548, 0, line_259015.length+0-1)-0];
										F.line = 108;
										var tmp_258924 = tree_218246(106, []);
										F.line = 108;
										tmp_258924.class = "fieldButton";
										F.line = 108;
										F.line = 108;
										var fmt_res_259220 = [mnewString(0)];
										F.line = 108;
										format_value_256267(fmt_res_259220, 0, addInt(i_259014, 1), []);
										F.line = 108;
										if (fmt_res_259220[0] != null) { fmt_res_259220[0] = (fmt_res_259220[0]).concat(makeNimstrLit(".")); } else { fmt_res_259220[0] = makeNimstrLit("."); };
										F.line = 108;
										format_value_256267(fmt_res_259220, 0, addInt(j_259214, 1), []);
										tmp_258924.id = toJSStr(fmt_res_259220[0]);
										F.line = 108;
										add_event_handler_245528(tmp_258924, 0, click_field_258495, kxi_235324[0]);
										F.line = 108;
										tmp_258924.style = button_style_258908;
										F.line = 109;
										if ((state_258438[0] == 0)) Tmp13 = true; else {											Tmp13 = !((field_259215 == 0));										}										if (Tmp13) Tmp12 = true; else {											Tmp12 = finished_257881(game_258236);										}										if (Tmp12) Tmp11 = true; else {											Tmp11 = field_blocked_258439[0];										}										set_attr_216568(tmp_258924, "disabled", to_disabled_245854(Tmp11));
										F.line = 110;
										add_216800(tmp_258924, text_218364(desc_256056[chckIndx(field_259215, 0, desc_256056.length+0-1)-0]));
										F.line = 110;
										add_216800(tmp_258923, tmp_258924);
										F.line = 121;
										i_259548 = addInt(i_259548, 1);
										if (!(((line_259015 != null ? line_259015.length : 0) == l_259549))) {
										F.line = 122;
										failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 121;
						i_259553 = addInt(i_259553, 1);
						if (!(((colontmp__259551 != null ? colontmp__259551.length : 0) == l_259554))) {
						F.line = 122;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 110;
		add_216800(tmp_258921, tmp_258923);
		}
		
		F.line = 111;
		var tmp_258925 = tree_218246(43, []);
		F.line = 111;
		tmp_258925.class = "command-buttons";
		F.line = 112;
		var tmp_258926 = tree_218246(106, []);
		F.line = 112;
		tmp_258926.class = "start";
		F.line = 113;
		add_216800(tmp_258926, text_218364(makeNimstrLit("setup")));
		F.line = 114;
		add_event_handler_245564(tmp_258926, 0, HEX3Aanonymous_259245, kxi_235324[0]);
		F.line = 114;
		add_216800(tmp_258925, tmp_258926);
		F.line = 117;
		var tmp_258927 = tree_218246(106, []);
		F.line = 117;
		tmp_258927.class = "reset";
		F.line = 117;
		tmp_258927.id = "reset";
		F.line = 118;
		add_216800(tmp_258927, text_218364(makeNimstrLit("reset")));
		F.line = 119;
		add_event_handler_245564(tmp_258927, 0, HEX3Aanonymous_259265, kxi_235324[0]);
		F.line = 119;
		add_216800(tmp_258925, tmp_258927);
		F.line = 119;
		add_216800(tmp_258921, tmp_258925);
		result_258694 = tmp_258921;
	framePtr = F.prev;

	return result_258694;

}

function create_dom_259310() {
	var result_259312 = null;

	var F={procname:"karax_client.createDom",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 124;
		switch (state_258438[0]) {
		case 1:
			F.line = 126;
			result_259312 = setup_gui_258512();
			break;
		case 0:
			F.line = 128;
			result_259312 = play_gui_258692();
			break;
		case 2:
			F.line = 130;
			result_259312 = play_gui_258692();
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_259312;

}
set_renderer_245383(create_dom_259310, "ROOT", null);

function set_possible_moves_248071(self_248073, moves_248100) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_249690 = null;
		F.line = 3439;
		e_249690 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 241;
		e_249690.message = nimCopy(null, makeNimstrLit("set_possible_moves(OrderedTable) must be overridden"), NTI44040);
		F.line = 3432;
		e_249690.parent = null;
		F.line = 241;
		raiseException(e_249690, "FieldError");
	framePtr = F.prev;

	
}

function set_possible_moves_248101(self_248073, moves_248100) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 173;
		set_possible_moves_248071(self_248073, moves_248100);
	framePtr = F.prev;

	
}

function sys_fatal_67041(message_67045) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_67203 = null;
		F.line = 37;
		e_67203 = {m_type: NTI47886, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_67203.message = nimCopy(null, message_67045, NTI44040);
		F.line = 39;
		raiseException(e_67203, "NilAccessError");
	framePtr = F.prev;

	
}

function chckNilDisp(p_67039, p_67039_Idx) {
		if ((p_67039 == null && p_67039_Idx == 0)) {
		sys_fatal_67041(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function set_possible_moves_256234(self_256236, moves_256239, moves_256239_Idx) {
	var F={procname:"game_logic.set_possible_moves",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 44;
			var y_256248 = 0;
			F.line = 2679;
			var colontmp__259651 = 0;
			F.line = 44;
			colontmp__259651 = subInt(self_256236.size, 1);
			F.line = 2689;
			var res_259652 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259652 <= colontmp__259651)) break L3;
						F.line = 44;
						y_256248 = res_259652;
						L4: do {
							F.line = 45;
							var x_256257 = 0;
							F.line = 2679;
							var colontmp__259645 = 0;
							F.line = 45;
							colontmp__259645 = subInt(self_256236.size, 1);
							F.line = 2689;
							var res_259646 = 0;
							L5: do {
								F.line = 2690;
									L6: while (true) {
									if (!(res_259646 <= colontmp__259645)) break L6;
										F.line = 45;
										x_256257 = res_259646;
										if ((self_256236.field[chckIndx(x_256257, 0, self_256236.field.length+0-1)-0][chckIndx(y_256248, 0, self_256236.field[chckIndx(x_256257, 0, self_256236.field.length+0-1)-0].length+0-1)-0] == 0)) {
										F.line = 47;
										F.line = 47;
										var fmt_res_256261 = [mnewString(0)];
										F.line = 47;
										format_value_256267(fmt_res_256261, 0, addInt(x_256257, 1), []);
										F.line = 47;
										if (fmt_res_256261[0] != null) { fmt_res_256261[0] = (fmt_res_256261[0]).concat(makeNimstrLit(".")); } else { fmt_res_256261[0] = makeNimstrLit("."); };
										F.line = 47;
										format_value_256267(fmt_res_256261, 0, addInt(y_256248, 1), []);
										var Tmp7 = nimCopy(null, fmt_res_256261[0], NTI44040);
										if (moves_256239[moves_256239_Idx] != null) { moves_256239[moves_256239_Idx].push(Tmp7); } else { moves_256239[moves_256239_Idx] = [Tmp7]; };
										}
										
										F.line = 2692;
										res_259646 = addInt(res_259646, 1);
									}
							} while(false);
						} while(false);
						F.line = 2692;
						res_259652 = addInt(res_259652, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function set_possible_moves_248103(self_248105, moves_248108, moves_248108_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 235;
		moves_248108[moves_248108_Idx] = nimCopy(null, [], NTI249662);
	framePtr = F.prev;

	
}

function set_possible_moves_248109(self_248105, moves_248108, moves_248108_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 503;
		chckNilDisp(self_248105);
		if (isObj(self_248105.m_type, NTI256018)) {
		F.line = 174;
		set_possible_moves_256234(self_248105, moves_248108, moves_248108_Idx);
		}
		else {
		if (isObj(self_248105.m_type, NTI248034)) {
		F.line = 174;
		set_possible_moves_248103(self_248105, moves_248108, moves_248108_Idx);
		}
		else {
		if (isObj(self_248105.m_type, NTI248034)) {
		F.line = 174;
		set_possible_moves_248103(self_248105, moves_248108, moves_248108_Idx);
		}
		}}
	framePtr = F.prev;

	
}

function invalid_format_string_200339() {
	var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_200343 = null;
		F.line = 3439;
		e_200343 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2623;
		e_200343.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI44040);
		F.line = 3432;
		e_200343.parent = null;
		F.line = 2623;
		raiseException(e_200343, "ValueError");
	framePtr = F.prev;

	
}

function nsuToLowerAsciiChar(c_191780) {
	var result_191781 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet15[c_191780] != undefined)) {
		F.line = 222;
		result_191781 = chckRange(addInt(c_191780, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_191781 = c_191780;
		}
		
	framePtr = F.prev;

	return result_191781;

}

function nsuCmpIgnoreStyle(a_192047, b_192048) {
					var Tmp7;
					var Tmp8;

	var result_192049 = 0;

	BeforeRet: do {
		var i_192051 = 0;
		var j_192053 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_192051 < (a_192047 != null ? a_192047.length : 0)) && (a_192047[i_192051] == 95))) break L4;
								i_192051 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_192053 < (b_192048 != null ? b_192048.length : 0)) && (b_192048[j_192053] == 95))) break L6;
								j_192053 += 1;
							}
					} while(false);
					if ((i_192051 < (a_192047 != null ? a_192047.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_192047[i_192051]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_192066 = Tmp7;
					if ((j_192053 < (b_192048 != null ? b_192048.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_192048[j_192053]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_192067 = Tmp8;
					result_192049 = (aa_192066 - bb_192067);
					if (!((result_192049 == 0))) {
					break BeforeRet;
					}
					
					if (((a_192047 != null ? a_192047.length : 0) <= i_192051)) {
					if (((b_192048 != null ? b_192048.length : 0) <= j_192053)) {
					result_192049 = 0;
					break BeforeRet;
					}
					
					result_192049 = -1;
					break BeforeRet;
					}
					else {
					if (((b_192048 != null ? b_192048.length : 0) <= j_192053)) {
					result_192049 = 1;
					break BeforeRet;
					}
					}
					i_192051 += 1;
					j_192053 += 1;
				}
		} while(false);
	} while (false);

	return result_192049;

}

function find_normalized_200306(x_200308, in_array_200310) {
	var result_200311 = 0;

	var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2615;
		var i_200313 = 0;
		L1: do {
			F.line = 2616;
				L2: while (true) {
				if (!(i_200313 < (in_array_200310 != null ? (in_array_200310.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_200308, in_array_200310[chckIndx(i_200313, 0, in_array_200310.length+0-1)-0]) == 0)) {
					F.line = 2617;
					result_200311 = i_200313;
					break BeforeRet;
					}
					
					F.line = 2618;
					i_200313 = addInt(i_200313, 2);
				}
		} while(false);
		F.line = 2620;
		result_200311 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_200311;

}

function substr_72822(s_72824, first_72825, last_72826) {
	var result_72827 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4474;
		var first_72828 = nimMax(first_72825, 0);
		F.line = 4475;
		var l_72830 = nimMax(addInt(subInt(nimMin(last_72826, (s_72824 != null ? (s_72824.length-1) : -1)), first_72828), 1), 0);
		F.line = 4476;
		result_72827 = nimCopy(null, mnewString(chckRange(l_72830, 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 4477;
			var i_72839 = 0;
			F.line = 2679;
			var colontmp__215678 = 0;
			F.line = 4477;
			colontmp__215678 = subInt(l_72830, 1);
			F.line = 2689;
			var res_215679 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_215679 <= colontmp__215678)) break L3;
						F.line = 4477;
						i_72839 = res_215679;
						F.line = 4478;
						result_72827[chckIndx(i_72839, 0, result_72827.length+0-1)-0] = s_72824[chckIndx(addInt(i_72839, first_72828), 0, s_72824.length+0-1)-0];
						F.line = 2692;
						res_215679 = addInt(res_215679, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_72827;

}

function nsuAddf(s_200425, s_200425_Idx, formatstr_200426, a_200428) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

	var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2629;
		var i_200432 = 0;
		F.line = 2630;
		var num_200434 = 0;
		L1: do {
			F.line = 2631;
				L2: while (true) {
				if (!(i_200432 < (formatstr_200426 != null ? formatstr_200426.length : 0))) break L2;
					if (((formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0] == 36) && (addInt(i_200432, 1) < (formatstr_200426 != null ? formatstr_200426.length : 0)))) {
					F.line = 2633;
					switch (formatstr_200426[chckIndx(addInt(i_200432, 1), 0, formatstr_200426.length+0-1)-0]) {
					case 35:
						if (((a_200428 != null ? (a_200428.length-1) : -1) < num_200434)) {
						F.line = 2635;
						invalid_format_string_200339();
						}
						
						F.line = 2636;
						if (s_200425[s_200425_Idx] != null) { s_200425[s_200425_Idx] = (s_200425[s_200425_Idx]).concat(a_200428[chckIndx(num_200434, 0, a_200428.length+0-1)-0]); } else { s_200425[s_200425_Idx] = a_200428[chckIndx(num_200434, 0, a_200428.length+0-1)-0].slice(); };
						F.line = 2637;
						i_200432 = addInt(i_200432, 2);
						F.line = 2638;
						num_200434 = addInt(num_200434, 1);
						break;
					case 36:
						F.line = 2640;
						if (s_200425[s_200425_Idx] != null) { addChar(s_200425[s_200425_Idx], 36); } else { s_200425[s_200425_Idx] = [36]; };
						F.line = 2641;
						i_200432 = addInt(i_200432, 2);
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						F.line = 2643;
						var j_200459 = 0;
						F.line = 2644;
						i_200432 = addInt(i_200432, 1);
						F.line = 2645;
						var negative_200466 = (formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0] == 45);
						if (negative_200466) {
						F.line = 2646;
						i_200432 = addInt(i_200432, 1);
						}
						
						L3: do {
							F.line = 2647;
								L4: while (true) {
									if (!(i_200432 < (formatstr_200426 != null ? formatstr_200426.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet12[formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0]] != undefined);									}								if (!Tmp5) break L4;
									F.line = 2648;
									j_200459 = subInt(addInt(mulInt(j_200459, 10), formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0]), 48);
									F.line = 2649;
									i_200432 = addInt(i_200432, 1);
								}
						} while(false);
						F.line = 2650;
						if (!(negative_200466)) {
						Tmp6 = subInt(j_200459, 1);
						}
						else {
						Tmp6 = subInt((a_200428 != null ? a_200428.length : 0), j_200459);
						}
						
						var idx_200497 = Tmp6;
							if ((idx_200497 < 0)) Tmp7 = true; else {								Tmp7 = ((a_200428 != null ? (a_200428.length-1) : -1) < idx_200497);							}						if (Tmp7) {
						F.line = 2651;
						invalid_format_string_200339();
						}
						
						F.line = 2652;
						if (s_200425[s_200425_Idx] != null) { s_200425[s_200425_Idx] = (s_200425[s_200425_Idx]).concat(a_200428[chckIndx(idx_200497, 0, a_200428.length+0-1)-0]); } else { s_200425[s_200425_Idx] = a_200428[chckIndx(idx_200497, 0, a_200428.length+0-1)-0].slice(); };
						break;
					case 123:
						F.line = 2654;
						var j_200503 = addInt(i_200432, 2);
						F.line = 2655;
						var k_200505 = 0;
						F.line = 2656;
						var negative_200506 = (formatstr_200426[chckIndx(j_200503, 0, formatstr_200426.length+0-1)-0] == 45);
						if (negative_200506) {
						F.line = 2657;
						j_200503 = addInt(j_200503, 1);
						}
						
						F.line = 2658;
						var is_number_200514 = 0;
						L8: do {
							F.line = 2659;
								L9: while (true) {
								if (!((j_200503 < (formatstr_200426 != null ? formatstr_200426.length : 0)) && !((ConstSet13[formatstr_200426[chckIndx(j_200503, 0, formatstr_200426.length+0-1)-0]] != undefined)))) break L9;
									if ((ConstSet14[formatstr_200426[chckIndx(j_200503, 0, formatstr_200426.length+0-1)-0]] != undefined)) {
									F.line = 2661;
									k_200505 = subInt(addInt(mulInt(k_200505, 10), formatstr_200426[chckIndx(j_200503, 0, formatstr_200426.length+0-1)-0]), 48);
									if ((is_number_200514 == 0)) {
									F.line = 2662;
									is_number_200514 = 1;
									}
									
									}
									else {
										F.line = 2664;
										is_number_200514 = -1;
									}
									
									F.line = 2665;
									j_200503 = addInt(j_200503, 1);
								}
						} while(false);
						if ((is_number_200514 == 1)) {
						F.line = 2667;
						if (!(negative_200506)) {
						Tmp10 = subInt(k_200505, 1);
						}
						else {
						Tmp10 = subInt((a_200428 != null ? a_200428.length : 0), k_200505);
						}
						
						var idx_200547 = Tmp10;
							if ((idx_200547 < 0)) Tmp11 = true; else {								Tmp11 = ((a_200428 != null ? (a_200428.length-1) : -1) < idx_200547);							}						if (Tmp11) {
						F.line = 2668;
						invalid_format_string_200339();
						}
						
						F.line = 2669;
						if (s_200425[s_200425_Idx] != null) { s_200425[s_200425_Idx] = (s_200425[s_200425_Idx]).concat(a_200428[chckIndx(idx_200547, 0, a_200428.length+0-1)-0]); } else { s_200425[s_200425_Idx] = a_200428[chckIndx(idx_200547, 0, a_200428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2671;
							var x_200553 = find_normalized_200306(substr_72822(formatstr_200426, addInt(i_200432, 2), subInt(j_200503, 1)), a_200428);
								if (!(0 <= x_200553)) Tmp12 = false; else {									Tmp12 = (x_200553 < (a_200428 != null ? (a_200428.length-1) : -1));								}							if (Tmp12) {
							F.line = 2672;
							if (s_200425[s_200425_Idx] != null) { s_200425[s_200425_Idx] = (s_200425[s_200425_Idx]).concat(a_200428[chckIndx(addInt(x_200553, 1), 0, a_200428.length+0-1)-0]); } else { s_200425[s_200425_Idx] = a_200428[chckIndx(addInt(x_200553, 1), 0, a_200428.length+0-1)-0].slice(); };
							}
							else {
								F.line = 2673;
							invalid_format_string_200339();
							}
							
						}
						
						F.line = 2674;
						i_200432 = addInt(j_200503, 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						F.line = 2676;
						var j_200560 = addInt(i_200432, 1);
						L13: do {
							F.line = 2677;
								L14: while (true) {
									if (!(j_200560 < (formatstr_200426 != null ? formatstr_200426.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet16[formatstr_200426[chckIndx(j_200560, 0, formatstr_200426.length+0-1)-0]] != undefined);									}								if (!Tmp15) break L14;
									F.line = 2677;
									j_200560 = addInt(j_200560, 1);
								}
						} while(false);
						F.line = 2678;
						var x_200573 = find_normalized_200306(substr_72822(formatstr_200426, addInt(i_200432, 1), subInt(j_200560, 1)), a_200428);
							if (!(0 <= x_200573)) Tmp16 = false; else {								Tmp16 = (x_200573 < (a_200428 != null ? (a_200428.length-1) : -1));							}						if (Tmp16) {
						F.line = 2679;
						if (s_200425[s_200425_Idx] != null) { s_200425[s_200425_Idx] = (s_200425[s_200425_Idx]).concat(a_200428[chckIndx(addInt(x_200573, 1), 0, a_200428.length+0-1)-0]); } else { s_200425[s_200425_Idx] = a_200428[chckIndx(addInt(x_200573, 1), 0, a_200428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2680;
						invalid_format_string_200339();
						}
						
						F.line = 2681;
						i_200432 = j_200560;
						break;
					default: 
						F.line = 2683;
						invalid_format_string_200339();
						break;
					}
					}
					else {
						F.line = 2685;
						if (s_200425[s_200425_Idx] != null) { addChar(s_200425[s_200425_Idx], formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0]); } else { s_200425[s_200425_Idx] = [formatstr_200426[chckIndx(i_200432, 0, formatstr_200426.length+0-1)-0]]; };
						F.line = 2686;
						i_200432 = addInt(i_200432, 1);
					}
					
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuFormatVarargs(formatstr_200653, a_200655) {
	var result_200656 = [null];

	var F={procname:"strutils.format",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2751;
		result_200656[0] = nimCopy(null, mnewString(0), NTI44040);
		F.line = 2752;
		nsuAddf(result_200656, 0, formatstr_200653, a_200655);
	framePtr = F.prev;

	return result_200656[0];

}

function status_257485(self_257487) {
	var result_257488 = null;

	var F={procname:"game_logic.status",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 132;
		var top_line_257489 = [];
		L1: do {
			F.line = 133;
			var i_257498 = 0;
			F.line = 2679;
			var colontmp__259658 = 0;
			F.line = 133;
			colontmp__259658 = self_257487.size;
			F.line = 2689;
			var res_259659 = 1;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259659 <= colontmp__259658)) break L3;
						F.line = 133;
						i_257498 = res_259659;
						F.line = 134;
						F.line = 134;
						var fmt_res_257499 = [mnewString(0)];
						F.line = 134;
						if (fmt_res_257499[0] != null) { fmt_res_257499[0] = (fmt_res_257499[0]).concat(makeNimstrLit("  ")); } else { fmt_res_257499[0] = makeNimstrLit("  "); };
						F.line = 134;
						format_value_256267(fmt_res_257499, 0, i_257498, []);
						if (top_line_257489 != null) { top_line_257489 = (top_line_257489).concat(fmt_res_257499[0]); } else { top_line_257489 = fmt_res_257499[0].slice(); };
						F.line = 2692;
						res_259659 = addInt(res_259659, 1);
					}
			} while(false);
		} while(false);
		F.line = 135;
		rawEcho(top_line_257489);
		L4: do {
			F.line = 136;
			var y_257518 = 0;
			F.line = 2679;
			var colontmp__259672 = 0;
			F.line = 136;
			colontmp__259672 = subInt(self_257487.size, 1);
			F.line = 2689;
			var res_259673 = 0;
			L5: do {
				F.line = 2690;
					L6: while (true) {
					if (!(res_259673 <= colontmp__259672)) break L6;
						F.line = 136;
						y_257518 = res_259673;
						F.line = 137;
						var line_257519 = cstrToNimstr((addInt(y_257518, 1))+"");
						L7: do {
							F.line = 138;
							var x_257528 = 0;
							F.line = 2679;
							var colontmp__259666 = 0;
							F.line = 138;
							colontmp__259666 = subInt(self_257487.size, 1);
							F.line = 2689;
							var res_259667 = 0;
							L8: do {
								F.line = 2690;
									L9: while (true) {
									if (!(res_259667 <= colontmp__259666)) break L9;
										F.line = 138;
										x_257528 = res_259667;
										F.line = 139;
										if (line_257519 != null) { line_257519 = (line_257519).concat(nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_256056[chckIndx(self_257487.field[chckIndx(x_257528, 0, self_257487.field.length+0-1)-0][chckIndx(y_257518, 0, self_257487.field[chckIndx(x_257528, 0, self_257487.field.length+0-1)-0].length+0-1)-0], 0, desc_256056.length+0-1)-0], NTI44040)])); } else { line_257519 = nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_256056[chckIndx(self_257487.field[chckIndx(x_257528, 0, self_257487.field.length+0-1)-0][chckIndx(y_257518, 0, self_257487.field[chckIndx(x_257528, 0, self_257487.field.length+0-1)-0].length+0-1)-0], 0, desc_256056.length+0-1)-0], NTI44040)]).slice(); };
										F.line = 2692;
										res_259667 = addInt(res_259667, 1);
									}
							} while(false);
						} while(false);
						F.line = 140;
						rawEcho(line_257519);
						F.line = 2692;
						res_259673 = addInt(res_259673, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_257488;

}

function is_over_250025(self_250027) {
	var result_250028 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 286;
		result_250028 = !((self_250027.winner_player_number == 0));
	framePtr = F.prev;

	return result_250028;

}

function is_over_250042(self_250027) {
	var result_250044 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 285;
		result_250044 = is_over_250025(self_250027);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_250044;

}

function status_248111(self_248113) {
	var result_250048 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_250042(self_248113)) {
		F.line = 295;
		result_250048 = nimCopy(null, makeNimstrLit("game is over"), NTI44040);
		break BeforeRet;
		}
		else {
			F.line = 297;
			result_250048 = nimCopy(null, makeNimstrLit("game is active"), NTI44040);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_250048;

}

function status_248114(self_248113) {
	var result_250048 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 503;
		chckNilDisp(self_248113);
		if (isObj(self_248113.m_type, NTI256018)) {
		F.line = 175;
		result_250048 = status_257485(self_248113);
		break BeforeRet;
		}
		else {
		if (isObj(self_248113.m_type, NTI248034)) {
		F.line = 175;
		result_250048 = status_248111(self_248113);
		break BeforeRet;
		}
		else {
		if (isObj(self_248113.m_type, NTI248034)) {
		F.line = 175;
		result_250048 = status_248111(self_248113);
		break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_250048;

}

function display_248116(self_248118, msg_248119) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 185;
		rawEcho(msg_248119);
	framePtr = F.prev;

	
}

function display_248137(self_248118, msg_248119) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 184;
		display_248116(self_248118, msg_248119);
	framePtr = F.prev;

	
}

function get_lines_256724(self_256726) {
										var Tmp7;
										var Tmp8;
										var Tmp9;
										var Tmp10;

	var result_256729 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 56;
		var s_256730 = subInt(self_256726.size, 1);
		F.line = 57;
		var v_line_256732 = null;
		F.line = 58;
		var h_line_256734 = null;
		F.line = 59;
		var s_line1_256736 = null;
		F.line = 60;
		var s_line2_256738 = null;
		F.line = 61;
		var s_line3_256740 = null;
		F.line = 62;
		var s_line4_256742 = null;
		L1: do {
			F.line = 63;
			var i_256751 = 0;
			F.line = 2689;
			var res_259707 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259707 <= s_256730)) break L3;
						F.line = 63;
						i_256751 = res_259707;
						F.line = 64;
						v_line_256732 = nimCopy(null, [], NTI256764);
						F.line = 65;
						h_line_256734 = nimCopy(null, [], NTI256777);
						F.line = 66;
						s_line1_256736 = nimCopy(null, [], NTI256790);
						F.line = 67;
						s_line2_256738 = nimCopy(null, [], NTI256803);
						F.line = 68;
						s_line3_256740 = nimCopy(null, [], NTI256816);
						F.line = 69;
						s_line4_256742 = nimCopy(null, [], NTI256829);
						L4: do {
							F.line = 70;
							var j_256838 = 0;
							F.line = 2689;
							var res_259702 = 0;
							L5: do {
								F.line = 2690;
									L6: while (true) {
									if (!(res_259702 <= s_256730)) break L6;
										F.line = 70;
										j_256838 = res_259702;
										F.line = 72;
										if (v_line_256732 != null) { v_line_256732.push(self_256726.field[chckIndx(i_256751, 0, self_256726.field.length+0-1)-0][chckIndx(j_256838, 0, self_256726.field[chckIndx(i_256751, 0, self_256726.field.length+0-1)-0].length+0-1)-0]); } else { v_line_256732 = [self_256726.field[chckIndx(i_256751, 0, self_256726.field.length+0-1)-0][chckIndx(j_256838, 0, self_256726.field[chckIndx(i_256751, 0, self_256726.field.length+0-1)-0].length+0-1)-0]]; };
										F.line = 74;
										if (h_line_256734 != null) { h_line_256734.push(self_256726.field[chckIndx(j_256838, 0, self_256726.field.length+0-1)-0][chckIndx(i_256751, 0, self_256726.field[chckIndx(j_256838, 0, self_256726.field.length+0-1)-0].length+0-1)-0]); } else { h_line_256734 = [self_256726.field[chckIndx(j_256838, 0, self_256726.field.length+0-1)-0][chckIndx(i_256751, 0, self_256726.field[chckIndx(j_256838, 0, self_256726.field.length+0-1)-0].length+0-1)-0]]; };
										if ((addInt(i_256751, j_256838) <= s_256730)) {
										F.line = 77;
										if (s_line1_256736 != null) { s_line1_256736.push((Tmp7 = self_256726.field[chckIndx(addInt(i_256751, j_256838), 0, self_256726.field.length+0-1)-0], Tmp7)[chckIndx(j_256838, 0, Tmp7.length+0-1)-0]); } else { s_line1_256736 = [(Tmp7 = self_256726.field[chckIndx(addInt(i_256751, j_256838), 0, self_256726.field.length+0-1)-0], Tmp7)[chckIndx(j_256838, 0, Tmp7.length+0-1)-0]]; };
										F.line = 78;
										if (s_line2_256738 != null) { s_line2_256738.push((Tmp8 = self_256726.field[chckIndx(addInt(i_256751, j_256838), 0, self_256726.field.length+0-1)-0], Tmp8)[chckIndx(subInt(s_256730, j_256838), 0, Tmp8.length+0-1)-0]); } else { s_line2_256738 = [(Tmp8 = self_256726.field[chckIndx(addInt(i_256751, j_256838), 0, self_256726.field.length+0-1)-0], Tmp8)[chckIndx(subInt(s_256730, j_256838), 0, Tmp8.length+0-1)-0]]; };
										if ((0 < i_256751)) {
										F.line = 80;
										if (s_line3_256740 != null) { s_line3_256740.push((Tmp9 = self_256726.field[chckIndx(subInt(s_256730, addInt(i_256751, j_256838)), 0, self_256726.field.length+0-1)-0], Tmp9)[chckIndx(j_256838, 0, Tmp9.length+0-1)-0]); } else { s_line3_256740 = [(Tmp9 = self_256726.field[chckIndx(subInt(s_256730, addInt(i_256751, j_256838)), 0, self_256726.field.length+0-1)-0], Tmp9)[chckIndx(j_256838, 0, Tmp9.length+0-1)-0]]; };
										F.line = 81;
										if (s_line4_256742 != null) { s_line4_256742.push((Tmp10 = self_256726.field[chckIndx(subInt(s_256730, addInt(i_256751, j_256838)), 0, self_256726.field.length+0-1)-0], Tmp10)[chckIndx(subInt(s_256730, j_256838), 0, Tmp10.length+0-1)-0]); } else { s_line4_256742 = [(Tmp10 = self_256726.field[chckIndx(subInt(s_256730, addInt(i_256751, j_256838)), 0, self_256726.field.length+0-1)-0], Tmp10)[chckIndx(subInt(s_256730, j_256838), 0, Tmp10.length+0-1)-0]]; };
										}
										
										}
										
										F.line = 2692;
										res_259702 = addInt(res_259702, 1);
									}
							} while(false);
						} while(false);
						if ((self_256726.winCount <= (h_line_256734 != null ? h_line_256734.length : 0))) {
						F.line = 83;
						var Tmp11 = nimCopy(null, h_line_256734, NTI256733);
						if (result_256729 != null) { result_256729.push(Tmp11); } else { result_256729 = [Tmp11]; };
						}
						
						if ((self_256726.winCount <= (v_line_256732 != null ? v_line_256732.length : 0))) {
						F.line = 85;
						var Tmp12 = nimCopy(null, v_line_256732, NTI256731);
						if (result_256729 != null) { result_256729.push(Tmp12); } else { result_256729 = [Tmp12]; };
						}
						
						if ((self_256726.winCount <= (s_line1_256736 != null ? s_line1_256736.length : 0))) {
						F.line = 87;
						var Tmp13 = nimCopy(null, s_line1_256736, NTI256735);
						if (result_256729 != null) { result_256729.push(Tmp13); } else { result_256729 = [Tmp13]; };
						}
						
						if ((self_256726.winCount <= (s_line2_256738 != null ? s_line2_256738.length : 0))) {
						F.line = 89;
						var Tmp14 = nimCopy(null, s_line2_256738, NTI256737);
						if (result_256729 != null) { result_256729.push(Tmp14); } else { result_256729 = [Tmp14]; };
						}
						
						if ((0 < i_256751)) {
						if ((self_256726.winCount <= (s_line3_256740 != null ? s_line3_256740.length : 0))) {
						F.line = 92;
						var Tmp15 = nimCopy(null, s_line3_256740, NTI256739);
						if (result_256729 != null) { result_256729.push(Tmp15); } else { result_256729 = [Tmp15]; };
						}
						
						if ((self_256726.winCount <= (s_line4_256742 != null ? s_line4_256742.length : 0))) {
						F.line = 94;
						var Tmp16 = nimCopy(null, s_line4_256742, NTI256741);
						if (result_256729 != null) { result_256729.push(Tmp16); } else { result_256729 = [Tmp16]; };
						}
						
						}
						
						F.line = 2692;
						res_259707 = addInt(res_259707, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_256729;

}

function get_lines_256970(self_256726) {
	var result_256972 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 55;
		result_256972 = get_lines_256724(self_256726);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_256972;

}

function max_line_length_256973(line_256976) {
	var result_256978 = {Field0: 0, Field1: 0};

	var F={procname:"game_logic.maxLineLength",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 100;
		result_256978["Field1"] = line_256976[chckIndx(0, 0, line_256976.length+0-1)-0];
		L1: do {
			F.line = 101;
			var field_257214 = 0;
			F.line = 185;
			var i_259714 = 0;
			F.line = 186;
			var l_259715 = (line_256976 != null ? line_256976.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_259714 < l_259715)) break L3;
						F.line = 101;
						field_257214 = line_256976[chckIndx(i_259714, 0, line_256976.length+0-1)-0];
						if (!((field_257214 == 0))) {
						if ((field_257214 == result_256978["Field1"])) {
						F.line = 105;
						result_256978["Field0"] = addInt(result_256978["Field0"], 1);
						}
						else {
							F.line = 108;
							result_256978["Field0"] = 1;
							F.line = 109;
							result_256978["Field1"] = field_257214;
						}
						
						}
						
						F.line = 189;
						i_259714 = addInt(i_259714, 1);
						if (!(((line_256976 != null ? line_256976.length : 0) == l_259715))) {
						F.line = 190;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_256978;

}

function HEX2BHEX3D_200261(x_200265, x_200265_Idx, y_200266) {
	var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4104;
		x_200265[x_200265_Idx] = (x_200265[x_200265_Idx] + y_200266);
	framePtr = F.prev;

	
}

function HEX2DHEX3D_257637(x_257641, x_257641_Idx, y_257642) {
	var F={procname:"-=.-=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4109;
		x_257641[x_257641_Idx] = (x_257641[x_257641_Idx] - y_257642);
	framePtr = F.prev;

	
}

function scoring_257618(self_257620) {
	var result_257621 = [0.0];

	var F={procname:"game_logic.scoring",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 153;
			var line_257628 = null;
			F.line = 183;
			var colontmp__259695 = null;
			F.line = 153;
			colontmp__259695 = get_lines_256970(self_257620);
			F.line = 185;
			var i_259697 = 0;
			F.line = 186;
			var l_259698 = (colontmp__259695 != null ? colontmp__259695.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_259697 < l_259698)) break L3;
						F.line = 153;
						line_257628 = colontmp__259695[chckIndx(i_259697, 0, colontmp__259695.length+0-1)-0];
						F.line = 154;
						var max_len_257629 = max_line_length_256973(line_257628);
						if ((self_257620.winCount <= max_len_257629["Field0"])) {
						if ((self_257620.current_player_number == max_len_257629["Field1"])) {
						F.line = 157;
						HEX2BHEX3D_200261(result_257621, 0, 1.0000000000000000e+06);
						}
						else {
							F.line = 159;
						HEX2DHEX3D_257637(result_257621, 0, 1.0000000000000000e+06);
						}
						
						}
						else {
							if ((1 < max_len_257629["Field0"])) {
							if ((self_257620.current_player_number == max_len_257629["Field1"])) {
							F.line = 163;
							HEX2BHEX3D_200261(result_257621, 0, (1.0000000000000000e+03 * max_len_257629["Field0"]));
							}
							else {
								F.line = 165;
							HEX2DHEX3D_257637(result_257621, 0, (1.0000000000000000e+03 * max_len_257629["Field0"]));
							}
							
							}
							
						}
						
						F.line = 189;
						i_259697 = addInt(i_259697, 1);
						if (!(((colontmp__259695 != null ? colontmp__259695.length : 0) == l_259698))) {
						F.line = 190;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_257621[0];

}

function scoring_250224(self_250226) {
	var result_250227 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_250230 = null;
		F.line = 3439;
		e_250230 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 313;
		e_250230.message = nimCopy(null, makeNimstrLit("scoring() must be overridden (if used)"), NTI44040);
		F.line = 3432;
		e_250230.parent = null;
		F.line = 313;
		raiseException(e_250230, "FieldError");
	framePtr = F.prev;

	return result_250227;

}

function scoring_250422(self_250226) {
	var result_250424 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 503;
		chckNilDisp(self_250226);
		if (isObj(self_250226.m_type, NTI256018)) {
		F.line = 308;
		result_250424 = scoring_257618(self_250226);
		break BeforeRet;
		}
		else {
		if (isObj(self_250226.m_type, NTI248034)) {
		F.line = 308;
		result_250424 = scoring_250224(self_250226);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_250424;

}

function get_state_257548(self_257550) {
	var result_257551 = null;

	var F={procname:"game_logic.get_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 143;
			var y_257560 = 0;
			F.line = 2679;
			var colontmp__259725 = 0;
			F.line = 143;
			colontmp__259725 = subInt(self_257550.size, 1);
			F.line = 2689;
			var res_259726 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259726 <= colontmp__259725)) break L3;
						F.line = 143;
						y_257560 = res_259726;
						L4: do {
							F.line = 144;
							var x_257569 = 0;
							F.line = 2679;
							var colontmp__259719 = 0;
							F.line = 144;
							colontmp__259719 = subInt(self_257550.size, 1);
							F.line = 2689;
							var res_259720 = 0;
							L5: do {
								F.line = 2690;
									L6: while (true) {
									if (!(res_259720 <= colontmp__259719)) break L6;
										F.line = 144;
										x_257569 = res_259720;
										F.line = 145;
										if (result_257551 != null) { result_257551 = (result_257551).concat(cstrToNimstr((self_257550.field[chckIndx(x_257569, 0, self_257550.field.length+0-1)-0][chckIndx(y_257560, 0, self_257550.field[chckIndx(x_257569, 0, self_257550.field.length+0-1)-0].length+0-1)-0])+"")); } else { result_257551 = cstrToNimstr((self_257550.field[chckIndx(x_257569, 0, self_257550.field.length+0-1)-0][chckIndx(y_257560, 0, self_257550.field[chckIndx(x_257569, 0, self_257550.field.length+0-1)-0].length+0-1)-0])+"").slice(); };
										F.line = 2692;
										res_259720 = addInt(res_259720, 1);
									}
							} while(false);
						} while(false);
						F.line = 2692;
						res_259726 = addInt(res_259726, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_257551;

}

function get_state_250425(self_250427) {
	var result_250428 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_250431 = null;
		F.line = 3439;
		e_250431 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 322;
		e_250431.message = nimCopy(null, makeNimstrLit("get_state() must be overridden (if used)"), NTI44040);
		F.line = 3432;
		e_250431.parent = null;
		F.line = 322;
		raiseException(e_250431, "FieldError");
	framePtr = F.prev;

	return result_250428;

}

function get_state_250622(self_250427) {
	var result_250624 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 503;
		chckNilDisp(self_250427);
		if (isObj(self_250427.m_type, NTI256018)) {
		F.line = 316;
		result_250624 = get_state_257548(self_250427);
		break BeforeRet;
		}
		else {
		if (isObj(self_250427.m_type, NTI248034)) {
		F.line = 316;
		result_250624 = get_state_250425(self_250427);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_250624;

}

function integer_out_of_range_error_94814() {
	var F={procname:"parseutils.integerOutOfRangeError",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_94818 = null;
		F.line = 3439;
		e_94818 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 401;
		e_94818.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI44040);
		F.line = 3432;
		e_94818.parent = null;
		F.line = 401;
		raiseException(e_94818, "ValueError");
	framePtr = F.prev;

	
}

function raw_parse_int_95201(s_95203, b_95205, b_95205_Idx, start_95206) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_95208 = 0;

	var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 409;
		var sign_95210 = -1;
		F.line = 410;
		var i_95211 = start_95206;
		if ((i_95211 < (s_95203 != null ? s_95203.length : 0))) {
		if ((s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0] == 43)) {
		F.line = 412;
		i_95211 += 1;
		}
		else {
		if ((s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0] == 45)) {
		F.line = 414;
		i_95211 += 1;
		F.line = 415;
		sign_95210 = 1;
		}
		}
		}
		
			if (!(i_95211 < (s_95203 != null ? s_95203.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet17[s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 417;
		b_95205[b_95205_Idx] = 0;
		L2: do {
			F.line = 418;
				L3: while (true) {
					if (!(i_95211 < (s_95203 != null ? s_95203.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet18[s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 419;
					var c_95246 = (s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0] - 48);
					if ((Math.trunc((-9223372036854775808 + c_95246) / 10) <= b_95205[b_95205_Idx])) {
					F.line = 421;
					b_95205[b_95205_Idx] = ((b_95205[b_95205_Idx] * 10) - c_95246);
					}
					else {
						F.line = 423;
					integer_out_of_range_error_94814();
					}
					
					F.line = 424;
					i_95211 += 1;
					L5: do {
						F.line = 425;
							L6: while (true) {
							if (!((i_95211 < (s_95203 != null ? s_95203.length : 0)) && (s_95203[chckIndx(i_95211, 0, s_95203.length+0-1)-0] == 95))) break L6;
								F.line = 425;
								i_95211 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_95210 == -1)) Tmp7 = false; else {				Tmp7 = (b_95205[b_95205_Idx] == -9223372036854775808);			}		if (Tmp7) {
		F.line = 427;
		integer_out_of_range_error_94814();
		}
		else {
			F.line = 429;
			b_95205[b_95205_Idx] = (b_95205[b_95205_Idx] * sign_95210);
			F.line = 430;
			result_95208 = (i_95211 - start_95206);
		}
		
		}
		
	framePtr = F.prev;

	return result_95208;

}

function npuParseBiggestInt(s_95403, number_95405, number_95405_Idx, start_95406) {
	var result_95408 = 0;

	var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 444;
		var res_95409 = [0];
		F.line = 447;
		result_95408 = raw_parse_int_95201(s_95403, res_95409, 0, start_95406);
		if (!((result_95408 == 0))) {
		F.line = 449;
		number_95405[number_95405_Idx] = res_95409[0];
		}
		
	framePtr = F.prev;

	return result_95408;

}

function npuParseInt(s_95426, number_95428, number_95428_Idx, start_95429) {
			var Tmp1;

	var result_95431 = 0;

	var F={procname:"parseutils.parseInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 462;
		var res_95432 = [0];
		F.line = 463;
		result_95431 = npuParseBiggestInt(s_95426, res_95432, 0, start_95429);
			if ((res_95432[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_95432[0]);			}		if (Tmp1) {
		F.line = 466;
		integer_out_of_range_error_94814();
		}
		
		if (!((result_95431 == 0))) {
		F.line = 468;
		number_95428[number_95428_Idx] = chckRange(res_95432[0], -2147483648, 2147483647);
		}
		
	framePtr = F.prev;

	return result_95431;

}

function nsuParseInt(s_193642) {
			var Tmp1;

	var result_193643 = [0];

	var F={procname:"strutils.parseInt",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1094;
		var l_193645 = npuParseInt(s_193642, result_193643, 0, 0);
			if (!((l_193645 == (s_193642 != null ? s_193642.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_193645 == 0);			}		if (Tmp1) {
		F.line = 3436;
		var e_193648 = null;
		F.line = 3439;
		e_193648 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1096;
		e_193648.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_193642 || []), NTI44040);
		F.line = 3432;
		e_193648.parent = null;
		F.line = 1096;
		raiseException(e_193648, "ValueError");
		}
		
	framePtr = F.prev;

	return result_193643[0];

}

function nsuSplitChar(s_192654, sep_192655, maxsplit_192657) {
	var result_192659 = null;

	var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 423;
		result_192659 = nimCopy(null, [], NTI192673);
		L1: do {
			F.line = 424;
			var x_192660 = null;
			F.line = 395;
			var last_259742 = 0;
			F.line = 396;
			var splits_259743 = maxsplit_192657;
			L2: do {
				F.line = 456;
					L3: while (true) {
					if (!(last_259742 <= (s_192654 != null ? s_192654.length : 0))) break L3;
						F.line = 399;
						var first_259745 = last_259742;
						L4: do {
							F.line = 400;
								L5: while (true) {
								if (!((last_259742 < (s_192654 != null ? s_192654.length : 0)) && !((s_192654[chckIndx(last_259742, 0, s_192654.length+0-1)-0] == sep_192655)))) break L5;
									F.line = 401;
									last_259742 = addInt(last_259742, 1);
								}
						} while(false);
						if ((splits_259743 == 0)) {
						F.line = 402;
						last_259742 = (s_192654 != null ? s_192654.length : 0);
						}
						
						F.line = 733;
						x_192660 = substr_72822(s_192654, first_259745, subInt(last_259742, 1));
						F.line = 424;
						var Tmp6 = nimCopy(null, x_192660, NTI44040);
						if (result_192659 != null) { result_192659.push(Tmp6); } else { result_192659 = [Tmp6]; };
						if ((splits_259743 == 0)) {
						F.line = 404;
						break L2;
						}
						
						F.line = 405;
						splits_259743 = subInt(splits_259743, 1);
						F.line = 406;
						last_259742 = addInt(last_259742, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_192659;

}

function make_move_256704(self_256706, move_256707) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_256708 = null;

	var F={procname:"game_logic.make_move",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 51;
		(Tmp3 = self_256706.field[chckIndx(subInt(nsuParseInt((Tmp1 = nsuSplitChar(move_256707, 46, -1), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0]), 1), 0, self_256706.field.length+0-1)-0], Tmp3)[chckIndx(subInt(nsuParseInt((Tmp2 = nsuSplitChar(move_256707, 46, -1), Tmp2)[chckIndx(1, 0, Tmp2.length+0-1)-0]), 1), 0, Tmp3.length+0-1)-0] = self_256706.current_player_number;
		F.line = 52;
		result_256708 = nimCopy(null, (makeNimstrLit("set mark at ") || []).concat(move_256707 || []), NTI44040);
	framePtr = F.prev;

	return result_256708;

}

function make_move_249922(self_249924, move_249925) {
	var result_249926 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_249929 = null;
		F.line = 3439;
		e_249929 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 282;
		e_249929.message = nimCopy(null, makeNimstrLit("make_move() must be overridden"), NTI44040);
		F.line = 3432;
		e_249929.parent = null;
		F.line = 282;
		raiseException(e_249929, "FieldError");
	framePtr = F.prev;

	return result_249926;

}

function make_move_250022(self_249924, move_249925) {
	var result_250024 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 503;
		chckNilDisp(self_249924);
		if (isObj(self_249924.m_type, NTI256018)) {
		F.line = 274;
		result_250024 = make_move_256704(self_249924, move_249925);
		break BeforeRet;
		}
		else {
		if (isObj(self_249924.m_type, NTI248034)) {
		F.line = 274;
		result_250024 = make_move_249922(self_249924, move_249925);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_250024;

}

function next_player_number_249879(self_249881) {
	var result_249882 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_249882 = addInt((self_249881.current_player_number % self_249881.player_count), 1);
	framePtr = F.prev;

	return result_249882;

}

function next_player_number_249901(self_249881) {
	var result_249903 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 261;
		result_249903 = next_player_number_249879(self_249881);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_249903;

}

function finish_turn_249904(self_249906) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 271;
		self_249906.current_player_number = next_player_number_249901(self_249906);
	framePtr = F.prev;

	
}

function finish_turn_249920(self_249906) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 266;
		finish_turn_249904(self_249906);
	framePtr = F.prev;

	
}

function restore_state_257583(self_257585, state_257586) {
	var F={procname:"game_logic.restore_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 148;
			var y_257595 = 0;
			F.line = 2679;
			var colontmp__259755 = 0;
			F.line = 148;
			colontmp__259755 = subInt(self_257585.size, 1);
			F.line = 2689;
			var res_259756 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_259756 <= colontmp__259755)) break L3;
						F.line = 148;
						y_257595 = res_259756;
						L4: do {
							F.line = 149;
							var x_257604 = 0;
							F.line = 2679;
							var colontmp__259749 = 0;
							F.line = 149;
							colontmp__259749 = subInt(self_257585.size, 1);
							F.line = 2689;
							var res_259750 = 0;
							L5: do {
								F.line = 2690;
									L6: while (true) {
									if (!(res_259750 <= colontmp__259749)) break L6;
										F.line = 149;
										x_257604 = res_259750;
										F.line = 150;
										self_257585.field[chckIndx(x_257604, 0, self_257585.field.length+0-1)-0][chckIndx(y_257595, 0, self_257585.field[chckIndx(x_257604, 0, self_257585.field.length+0-1)-0].length+0-1)-0] = nsuParseInt(nimCharToStr(state_257586[chckIndx(addInt(mulInt(y_257595, self_257585.size), x_257604), 0, state_257586.length+0-1)-0]));
										F.line = 2692;
										res_259750 = addInt(res_259750, 1);
									}
							} while(false);
						} while(false);
						F.line = 2692;
						res_259756 = addInt(res_259756, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function restore_state_250625(self_250627, state_250628) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_250631 = null;
		F.line = 3439;
		e_250631 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 330;
		e_250631.message = nimCopy(null, makeNimstrLit("restore_state() must be overridden (if used)"), NTI44040);
		F.line = 3432;
		e_250631.parent = null;
		F.line = 330;
		raiseException(e_250631, "FieldError");
	framePtr = F.prev;

	
}

function restore_state_250822(self_250627, state_250628) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 503;
		chckNilDisp(self_250627);
		if (isObj(self_250627.m_type, NTI256018)) {
		F.line = 325;
		restore_state_257583(self_250627, state_250628);
		}
		else {
		if (isObj(self_250627.m_type, NTI248034)) {
		F.line = 325;
		restore_state_250625(self_250627, state_250628);
		}
		}
	framePtr = F.prev;

	
}

function negamax_core_252042(game_252045, game_252045_Idx, ai_choice_252047, ai_choice_252047_Idx, depth_252048, orig_depth_252049, alpha_in_252050, beta_in_252051) {
			var Tmp1;
			var Tmp2;

	var result_252052 = 0.0;

	var F={procname:"negamax.negamax_core",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 9;
		var possible_moves_252067 = [[]];
		F.line = 10;
		var starting_state_252068 = null;
		F.line = 11;
		var move_alpha_252069 = 0.0;
		F.line = 12;
		var alpha_252070 = alpha_in_252050;
		F.line = 13;
		var beta_252071 = beta_in_252051;
		F.line = 16;
		set_possible_moves_248109(game_252045[game_252045_Idx], possible_moves_252067, 0);
			if ((depth_252048 == 0)) Tmp2 = true; else {				Tmp2 = is_over_250042(game_252045[game_252045_Idx]);			}			if (Tmp2) Tmp1 = true; else {				Tmp1 = ((possible_moves_252067[0] != null ? possible_moves_252067[0].length : 0) == 0);			}		if (Tmp1) {
		F.line = 21;
		var score_252078 = scoring_250422(game_252045[game_252045_Idx]);
		if ((score_252078 == 0.0)) {
		F.line = 24;
		result_252052 = score_252078;
		break BeforeRet;
		}
		else {
			F.line = 26;
			result_252052 = (score_252078 - (((1.0000000000000000e-02 * depth_252048) * Math.abs(score_252078)) / score_252078));
			break BeforeRet;
		}
		
		}
		
		F.line = 30;
		starting_state_252068 = nimCopy(null, get_state_250622(game_252045[game_252045_Idx]), NTI44040);
		F.line = 35;
		var best_move_252079 = nimCopy(null, possible_moves_252067[0][chckIndx(0, 0, possible_moves_252067[0].length+0-1)-0], NTI44040);
		F.line = 36;
		var best_value_252080 = -Infinity;
		L3: do {
			F.line = 38;
			var move_252087 = null;
			F.line = 185;
			var i_259689 = 0;
			F.line = 186;
			var l_259690 = (possible_moves_252067[0] != null ? possible_moves_252067[0].length : 0);
			L4: do {
				F.line = 187;
					L5: while (true) {
					if (!(i_259689 < l_259690)) break L5;
						F.line = 38;
						move_252087 = possible_moves_252067[0][chckIndx(i_259689, 0, possible_moves_252067[0].length+0-1)-0];
						F.line = 42;
						make_move_250022(game_252045[game_252045_Idx], move_252087);
						F.line = 43;
						finish_turn_249920(game_252045[game_252045_Idx]);
						F.line = 47;
						move_alpha_252069 = -(negamax_core_252042(game_252045, game_252045_Idx, ai_choice_252047, ai_choice_252047_Idx, subInt(depth_252048, 1), orig_depth_252049, -(beta_252071), -(alpha_252070)));
						F.line = 56;
						restore_state_250822(game_252045[game_252045_Idx], starting_state_252068);
						if ((best_value_252080 < move_alpha_252069)) {
						F.line = 61;
						best_value_252080 = move_alpha_252069;
						F.line = 62;
						best_move_252079 = nimCopy(null, move_252087, NTI44040);
						}
						
						if ((alpha_252070 < move_alpha_252069)) {
						F.line = 64;
						alpha_252070 = move_alpha_252069;
						if ((depth_252048 == orig_depth_252049)) {
						F.line = 66;
						ai_choice_252047[ai_choice_252047_Idx] = nimCopy(null, best_move_252079, NTI44040);
						}
						
						if ((beta_252071 <= alpha_252070)) {
						F.line = 68;
						break L3;
						}
						
						}
						
						F.line = 189;
						i_259689 = addInt(i_259689, 1);
						if (!(((possible_moves_252067[0] != null ? possible_moves_252067[0].length : 0) == l_259690))) {
						F.line = 190;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 70;
		result_252052 = best_value_252080;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_252052;

}

function negamax_252101(game_252104, game_252104_Idx, depth_252105) {
	var result_252106 = null;

	var F={procname:"negamax.negamax",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 76;
		var alpha_252107 = 0.0;
		F.line = 77;
		var beta_252108 = 0.0;
		F.line = 78;
		var ai_choice_252109 = [null];
		F.line = 79;
		var possible_moves_252124 = [[]];
		F.line = 81;
		alpha_252107 = -Infinity;
		F.line = 82;
		beta_252108 = Infinity;
		F.line = 86;
		set_possible_moves_248109(game_252104[game_252104_Idx], possible_moves_252124, 0);
		if (((possible_moves_252124[0] != null ? possible_moves_252124[0].length : 0) == 0)) {
		F.line = 88;
		result_252106 = nimCopy(null, [], NTI44040);
		break BeforeRet;
		}
		
		F.line = 89;
		ai_choice_252109[0] = nimCopy(null, possible_moves_252124[0][chckIndx(0, 0, possible_moves_252124[0].length+0-1)-0], NTI44040);
		F.line = 91;
		alpha_252107 = negamax_core_252042(game_252104, game_252104_Idx, ai_choice_252109, 0, depth_252105, depth_252105, alpha_252107, beta_252108);
		F.line = 99;
		result_252106 = nimCopy(null, ai_choice_252109[0], NTI44040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_252106;

}

function get_move_252153(self_252155, game_252156) {
	var result_252157 = null;

	var F={procname:"negamax.get_move",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 110;
		var new_game_252158 = [null];
		F.line = 112;
		new_game_252158[0] = game_252156;
		F.line = 115;
		var choice_252202 = negamax_252101(new_game_252158, 0, self_252155.depth);
		F.line = 116;
		result_252157 = nimCopy(null, choice_252202, NTI44040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_252157;

}

function nsuIndent(s_196502, count_196503, padding_196504) {
						var Tmp6;

	var result_196505 = null;

	var F={procname:"strutils.indent",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1425;
		result_196505 = nimCopy(null, [], NTI44040);
		F.line = 1426;
		var i_196507 = 0;
		L1: do {
			F.line = 1427;
			var line_196508 = null;
			F.line = 659;
			var first_259787 = 0;
			F.line = 660;
			var last_259788 = 0;
			F.line = 661;
			var eolpos_259789 = 0;
			L2: do {
				F.line = 662;
					L3: while (true) {
					if (!true) break L3;
						L4: do {
							F.line = 663;
								L5: while (true) {
								if (!((last_259788 < (s_196502 != null ? s_196502.length : 0)) && !((ConstSet19[s_196502[chckIndx(last_259788, 0, s_196502.length+0-1)-0]] != undefined)))) break L5;
									F.line = 663;
									last_259788 = addInt(last_259788, 1);
								}
						} while(false);
						F.line = 665;
						eolpos_259789 = last_259788;
						if ((last_259788 < (s_196502 != null ? s_196502.length : 0))) {
						if ((s_196502[chckIndx(last_259788, 0, s_196502.length+0-1)-0] == 10)) {
						F.line = 667;
						last_259788 = addInt(last_259788, 1);
						}
						else {
						if ((s_196502[chckIndx(last_259788, 0, s_196502.length+0-1)-0] == 13)) {
						F.line = 669;
						last_259788 = addInt(last_259788, 1);
						if (((last_259788 < (s_196502 != null ? s_196502.length : 0)) && (s_196502[chckIndx(last_259788, 0, s_196502.length+0-1)-0] == 10))) {
						F.line = 670;
						last_259788 = addInt(last_259788, 1);
						}
						
						}
						}
						}
						
						F.line = 1427;
						if (false) {
						Tmp6 = subInt(last_259788, 1);
						}
						else {
						Tmp6 = subInt(eolpos_259789, 1);
						}
						
						line_196508 = substr_72822(s_196502, first_259787, Tmp6);
						if (!((i_196507 == 0))) {
						F.line = 1429;
						if (result_196505 != null) { result_196505 = (result_196505).concat(makeNimstrLit("\x0A")); } else { result_196505 = makeNimstrLit("\x0A"); };
						}
						
						L7: do {
							F.line = 1430;
							var j_196517 = 0;
							F.line = 2679;
							var colontmp__259779 = 0;
							F.line = 1430;
							colontmp__259779 = count_196503;
							F.line = 2689;
							var res_259780 = 1;
							L8: do {
								F.line = 2690;
									L9: while (true) {
									if (!(res_259780 <= colontmp__259779)) break L9;
										F.line = 1430;
										j_196517 = res_259780;
										F.line = 1431;
										if (result_196505 != null) { result_196505 = (result_196505).concat(padding_196504); } else { result_196505 = padding_196504.slice(); };
										F.line = 2692;
										res_259780 = addInt(res_259780, 1);
									}
							} while(false);
						} while(false);
						F.line = 1432;
						if (result_196505 != null) { result_196505 = (result_196505).concat(line_196508); } else { result_196505 = line_196508.slice(); };
						F.line = 1433;
						i_196507 = addInt(i_196507, 1);
						if ((eolpos_259789 == last_259788)) {
						F.line = 676;
						break L2;
						}
						
						F.line = 678;
						first_259787 = last_259788;
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_196505;

}

function len_248319(t_248324) {
	var result_248325 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_248325 = t_248324.counter;
	framePtr = F.prev;

	return result_248325;

}

function is_filled_224418(hcode_224420) {
	var result_224421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_224421 = !((hcode_224420 == 0));
	framePtr = F.prev;

	return result_224421;

}

function find_246749(a_246753, item_246754) {
	var result_246755 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 3129;
			var i_246761 = null;
			F.line = 3;
			var i_258562 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_258562 < (a_246753 != null ? a_246753.length : 0))) break L3;
						F.line = 3129;
						i_246761 = a_246753[chckIndx(i_258562, 0, a_246753.length+0-1)-0];
						if (eqStrings(i_246761, item_246754)) {
						F.line = 3130;
						break BeforeRet;
						}
						
						F.line = 3131;
						result_246755 = addInt(result_246755, 1);
						F.line = 6;
						i_258562 = addInt(i_258562, 1);
					}
			} while(false);
		} while(false);
		F.line = 3132;
		result_246755 = -1;
	} while (false);
	framePtr = F.prev;

	return result_246755;

}

function contains_246742(a_246746, item_246747) {
	var result_246748 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 3146;
		result_246748 = (0 <= find_246749(a_246746, item_246747));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_246748;

}

function get_move_248139(self_248141, game_248142) {
	var result_248143 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 189;
		var move_list_248158 = [[]];
		F.line = 190;
		var descriptive_move_list_248166 = [{data: null, counter: 0, first: 0, last: 0}];
		F.line = 191;
		var compact_description_248167 = false;
		F.line = 192;
		rawEcho([]);
		F.line = 193;
		rawEcho(makeNimstrLit("   Status:"));
		F.line = 194;
		rawEcho(nsuIndent(status_248114(game_248142), 2, makeNimstrLit("   ")));
		F.line = 195;
		set_possible_moves_248109(game_248142, move_list_248158, 0);
		if ((0 < (move_list_248158[0] != null ? move_list_248158[0].length : 0))) {
		F.line = 197;
		compact_description_248167 = true;
		}
		else {
			F.line = 199;
			set_possible_moves_248101(game_248142, descriptive_move_list_248166[0]);
			L1: do {
				F.line = 200;
				var key_249214 = null;
				F.line = 200;
				var value_249215 = null;
				F.line = 1645;
				var l_259763 = len_248319(descriptive_move_list_248166[0]);
				if ((0 < descriptive_move_list_248166[0].counter)) {
				F.line = 1257;
				var h_259764 = descriptive_move_list_248166[0].first;
				L2: do {
					F.line = 1258;
						L3: while (true) {
						if (!(0 <= h_259764)) break L3;
							F.line = 1259;
							var nxt_259766 = descriptive_move_list_248166[0].data[chckIndx(h_259764, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field1;
							if (is_filled_224418(descriptive_move_list_248166[0].data[chckIndx(h_259764, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field0)) {
							F.line = 200;
							key_249214 = descriptive_move_list_248166[0].data[chckIndx(h_259764, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field2;
							F.line = 1647;
							value_249215 = descriptive_move_list_248166[0].data[chckIndx(h_259764, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field3;
							F.line = 201;
							var Tmp4 = nimCopy(null, key_249214, NTI44040);
							if (move_list_248158[0] != null) { move_list_248158[0].push(Tmp4); } else { move_list_248158[0] = [Tmp4]; };
							if (!((len_248319(descriptive_move_list_248166[0]) == l_259763))) {
							F.line = 1648;
							failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1262;
							h_259764 = nxt_259766;
						}
				} while(false);
				}
				
			} while(false);
		}
		
		L5: do {
			F.line = 202;
				L6: while (true) {
				if (!true) break L6;
					F.line = 203;
					rawEcho(makeNimstrLit("   Possible moves:"));
					if (compact_description_248167) {
					F.line = 205;
					var disp_249226 = makeNimstrLit("      ");
					L7: do {
						F.line = 206;
						var key_249414 = null;
						F.line = 185;
						var i_259769 = 0;
						F.line = 186;
						var l_259770 = (move_list_248158[0] != null ? move_list_248158[0].length : 0);
						L8: do {
							F.line = 187;
								L9: while (true) {
								if (!(i_259769 < l_259770)) break L9;
									F.line = 206;
									key_249414 = move_list_248158[0][chckIndx(i_259769, 0, move_list_248158[0].length+0-1)-0];
									F.line = 207;
									if (disp_249226 != null) { disp_249226 = (disp_249226).concat(nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_249414, NTI44040)])); } else { disp_249226 = nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_249414, NTI44040)]).slice(); };
									F.line = 189;
									i_259769 = addInt(i_259769, 1);
									if (!(((move_list_248158[0] != null ? move_list_248158[0].length : 0) == l_259770))) {
									F.line = 190;
									failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					F.line = 208;
					rawEcho(disp_249226);
					}
					else {
						L10: do {
							F.line = 210;
							var key_249428 = null;
							F.line = 210;
							var value_249429 = null;
							F.line = 1645;
							var l_259773 = len_248319(descriptive_move_list_248166[0]);
							if ((0 < descriptive_move_list_248166[0].counter)) {
							F.line = 1257;
							var h_259774 = descriptive_move_list_248166[0].first;
							L11: do {
								F.line = 1258;
									L12: while (true) {
									if (!(0 <= h_259774)) break L12;
										F.line = 1259;
										var nxt_259776 = descriptive_move_list_248166[0].data[chckIndx(h_259774, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field1;
										if (is_filled_224418(descriptive_move_list_248166[0].data[chckIndx(h_259774, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field0)) {
										F.line = 210;
										key_249428 = descriptive_move_list_248166[0].data[chckIndx(h_259774, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field2;
										F.line = 1647;
										value_249429 = descriptive_move_list_248166[0].data[chckIndx(h_259774, 0, descriptive_move_list_248166[0].data.length+0-1)-0].Field3;
										F.line = 211;
										rawEcho((makeNimstrLit("      ") || []).concat(nsuFormatVarargs(makeNimstrLit("[$key]: $value"), [makeNimstrLit("key"), nimCopy(null, key_249428, NTI44040), makeNimstrLit("value"), nimCopy(null, value_249429, NTI44040)]) || []));
										if (!((len_248319(descriptive_move_list_248166[0]) == l_259773))) {
										F.line = 1648;
										failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										F.line = 1262;
										h_259774 = nxt_259776;
									}
							} while(false);
							}
							
						} while(false);
					}
					
					F.line = 212;
					rawEcho(makeNimstrLit("   Enter move (or \'quit\'): "));
					F.line = 213;
					var response_249442 = null;
					F.line = 216;
					response_249442 = nimCopy(null, makeNimstrLit("When compiling for Javascript, you cannot use this procedure."), NTI44040);
					if (contains_246742(move_list_248158[0], response_249442)) {
					F.line = 220;
					result_248143 = nimCopy(null, response_249442, NTI44040);
					break BeforeRet;
					}
					
					if (eqStrings(response_249442, makeNimstrLit("quit"))) {
					F.line = 222;
					result_248143 = nimCopy(null, [], NTI44040);
					break BeforeRet;
					}
					
					F.line = 223;
					rawEcho(makeNimstrLit("   BAD ENTRY. Try again."));
				}
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_248143;

}

function get_move_249641(self_248141, game_248142) {
	var result_249643 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 503;
		chckNilDisp(self_248141);
		if (isObj(self_248141.m_type, NTI252147)) {
		F.line = 188;
		result_249643 = get_move_252153(self_248141, game_248142);
		break BeforeRet;
		}
		else {
		if (isObj(self_248141.m_type, NTI248041)) {
		F.line = 188;
		result_249643 = get_move_248139(self_248141, game_248142);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_249643;

}

function current_player_249822(self_249824) {
	var result_249825 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 245;
		result_249825 = self_249824.players[chckIndx(subInt(self_249824.current_player_number, 1), 0, self_249824.players.length+0-1)-0];
	framePtr = F.prev;

	return result_249825;

}

function current_player_249854(self_249824) {
	var result_249856 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 244;
		result_249856 = current_player_249822(self_249824);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_249856;

}

function winning_player_249857(self_249859) {
	var result_249860 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((0 < self_249859.winner_player_number)) {
		F.line = 254;
		result_249860 = self_249859.players[chckIndx(subInt(self_249859.winner_player_number, 1), 0, self_249859.players.length+0-1)-0];
		break BeforeRet;
		}
		else {
		if ((self_249859.winner_player_number == 0)) {
		F.line = 256;
		result_249860 = {name: makeNimstrLit("NO WINNER YET"), m_type: NTI248041};
		break BeforeRet;
		}
		else {
			F.line = 258;
			result_249860 = {name: makeNimstrLit("STALEMATE OR TIE"), m_type: NTI248041};
			break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_249860;

}

function winning_player_249876(self_249859) {
	var result_249878 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 249;
		result_249878 = winning_player_249857(self_249859);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_249878;

}

function determine_winner_250062(self_250064) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_250067 = null;
		F.line = 3439;
		e_250067 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 305;
		e_250067.message = nimCopy(null, makeNimstrLit("determine_winner() must be overridden"), NTI44040);
		F.line = 3432;
		e_250067.parent = null;
		F.line = 305;
		raiseException(e_250067, "FieldError");
	framePtr = F.prev;

	
}

function determine_winner_250222(self_250064) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 300;
		determine_winner_250062(self_250064);
	framePtr = F.prev;

	
}

function default_setup_251024(self_251026, players_251028) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 353;
		self_251026.players = nimCopy(null, players_251028, NTI251027);
		F.line = 354;
		self_251026.player_count = (self_251026.players != null ? self_251026.players.length : 0);
		F.line = 355;
		self_251026.current_player_number = 1;
		F.line = 356;
		self_251026.winner_player_number = 0;
	framePtr = F.prev;

	
}

function default_setup_251062(self_251026, players_251028) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 340;
		default_setup_251024(self_251026, players_251028);
	framePtr = F.prev;

	
}

function new_seq_256135(len_256138) {
	var result_256140 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_256140 = new Array(len_256138); for (var i=0;i<len_256138;++i) {result_256140[i]=null;}	framePtr = F.prev;

	return result_256140;

}

function new_seq_256100(len_256103) {
	var result_256105 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_256105 = new Array(len_256103); for (var i=0;i<len_256103;++i) {result_256105[i]=0;}	framePtr = F.prev;

	return result_256105;

}

function reset_field_256092(self_256094) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 35;
		F.line = 896;
		var result_256095 = new_seq_256135(chckRange(self_256094.size, 0, 2147483647));
		L1: do {
			F.line = 897;
			var i_256096 = 0;
			F.line = 2716;
			var colontmp__259795 = 0;
			F.line = 35;
			colontmp__259795 = self_256094.size;
			F.line = 2717;
			var i_259796 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_259796 < colontmp__259795)) break L3;
						F.line = 897;
						i_256096 = i_259796;
						F.line = 35;
						result_256095[chckIndx(i_256096, 0, result_256095.length+0-1)-0] = nimCopy(null, new_seq_256100(chckRange(self_256094.size, 0, 2147483647)), NTI256104);
						F.line = 2720;
						i_259796 = addInt(i_259796, 1);
					}
			} while(false);
		} while(false);
		self_256094.field = nimCopy(null, result_256095, NTI256139);
	framePtr = F.prev;

	
}

function reset_field_256214(self_256094) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 34;
		reset_field_256092(self_256094);
	framePtr = F.prev;

	
}

function setup_256216(self_256218, players_256220) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 39;
		default_setup_251062(self_256218, players_256220);
		F.line = 40;
		reset_field_256214(self_256218);
	framePtr = F.prev;

	
}

function setup_250824(self_250826, players_250828) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_250831 = null;
		F.line = 3439;
		e_250831 = {m_type: NTI47860, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 337;
		e_250831.message = nimCopy(null, makeNimstrLit("setup() must be overridden"), NTI44040);
		F.line = 3432;
		e_250831.parent = null;
		F.line = 337;
		raiseException(e_250831, "FieldError");
	framePtr = F.prev;

	
}

function setup_251022(self_250826, players_250828) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 503;
		chckNilDisp(self_250826);
		if (isObj(self_250826.m_type, NTI256018)) {
		F.line = 333;
		setup_256216(self_250826, players_250828);
		}
		else {
		if (isObj(self_250826.m_type, NTI248034)) {
		F.line = 333;
		setup_250824(self_250826, players_250828);
		}
		}
	framePtr = F.prev;

	
}

function play_251064(self_251066) {
	var result_251068 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 362;
		result_251068 = nimCopy(null, [], NTI251081);
		F.line = 363;
		var move_251082 = [];
		L1: do {
			F.line = 364;
				L2: while (true) {
				if (!!(is_over_250042(self_251066))) break L2;
					F.line = 365;
					display_248137(current_player_249854(self_251066), makeNimstrLit("-----------------"));
					F.line = 366;
					display_248137(current_player_249854(self_251066), nsuFormatVarargs(makeNimstrLit("$1\'s Turn"), [nimCopy(null, current_player_249854(self_251066).name, NTI44040)]));
					F.line = 367;
					move_251082 = nimCopy(null, get_move_249641(current_player_249854(self_251066), self_251066), NTI44040);
					if (eqStrings(move_251082, [])) {
					F.line = 369;
					break L1;
					}
					
					F.line = 370;
					var Tmp3 = nimCopy(null, move_251082, NTI44040);
					if (result_251068 != null) { result_251068.push(Tmp3); } else { result_251068 = [Tmp3]; };
					F.line = 371;
					display_248137(current_player_249854(self_251066), []);
					F.line = 372;
					display_248137(current_player_249854(self_251066), (makeNimstrLit("   ") || []).concat(make_move_250022(self_251066, move_251082) || []));
					F.line = 373;
					determine_winner_250222(self_251066);
					if (is_over_250042(self_251066)) {
					F.line = 375;
					display_248137(current_player_249854(self_251066), []);
					if ((self_251066.winner_player_number == -1)) {
					F.line = 377;
					display_248137(current_player_249854(self_251066), makeNimstrLit("STALEMATE."));
					}
					else {
						F.line = 379;
					display_248137(current_player_249854(self_251066), nsuFormatVarargs(makeNimstrLit("WINNER IS $#"), [nimCopy(null, winning_player_249876(self_251066).name, NTI44040)]));
					}
					
					F.line = 380;
					break L1;
					}
					
					F.line = 381;
					self_251066.current_player_number = next_player_number_249901(self_251066);
				}
		} while(false);
	framePtr = F.prev;

	return result_251068;

}

function play_251110(self_251066) {
	var result_251112 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 359;
		result_251112 = play_251064(self_251066);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_251112;

}

function set_default_256074(self_256076) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 28;
		self_256076.name1 = nimCopy(null, makeNimstrLit("player 1"), NTI44040);
		F.line = 29;
		self_256076.name2 = nimCopy(null, makeNimstrLit("player 2"), NTI44040);
		F.line = 30;
		self_256076.size = 3;
		F.line = 31;
		self_256076.winCount = 3;
	framePtr = F.prev;

	
}

function set_default_256090(self_256076) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 26;
		set_default_256074(self_256076);
	framePtr = F.prev;

	
}

function setup_257690(self_257692, s_257693) {
		var Tmp1;

	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 169;
		self_257692.size = s_257693.size;
		F.line = 170;
		if ((s_257693.winCount == 0)) {
		Tmp1 = s_257693.size;
		}
		else {
		Tmp1 = s_257693.winCount;
		}
		
		self_257692.winCount = Tmp1;
		if (s_257693.ai) {
		F.line = 172;
		setup_251022(self_257692, [{name: nimCopy(null, s_257693.name1, NTI44040), m_type: NTI248041}, {name: nimCopy(null, s_257693.name2, NTI44040), depth: 3, m_type: NTI252147}]);
		}
		else {
			F.line = 174;
		setup_251022(self_257692, [{name: nimCopy(null, s_257693.name1, NTI44040), m_type: NTI248041}, {name: nimCopy(null, s_257693.name2, NTI44040), m_type: NTI248041}]);
		}
		
	framePtr = F.prev;

	
}

function setup_257727(self_257692, s_257693) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 168;
		setup_257690(self_257692, s_257693);
	framePtr = F.prev;

	
}

function play_on_cli_257729(self_257731) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		play_251110(self_257731);
	framePtr = F.prev;

	
}

function play_on_cli_257745(self_257731) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 176;
		play_on_cli_257729(self_257731);
	framePtr = F.prev;

	
}

function field_257747(self_257749) {
	var result_257752 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 180;
		result_257752 = nimCopy(null, self_257749.field, NTI256019);
	framePtr = F.prev;

	return result_257752;

}

function field_257766(self_257749) {
	var result_257768 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 179;
		result_257768 = field_257747(self_257749);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257768;

}

function size_257769(self_257771) {
	var result_257772 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 183;
		result_257772 = self_257771.size;
	framePtr = F.prev;

	return result_257772;

}

function size_257786(self_257771) {
	var result_257788 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 182;
		result_257788 = size_257769(self_257771);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257788;

}

function win_count_257789(self_257791) {
	var result_257792 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 186;
		result_257792 = self_257791.winCount;
	framePtr = F.prev;

	return result_257792;

}

function win_count_257806(self_257791) {
	var result_257808 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 185;
		result_257808 = win_count_257789(self_257791);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257808;

}

function get_player_name_257809(self_257811) {
		var Tmp1;

	var result_257812 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 190;
		if ((current_player_249854(self_257811) == null)) {
		Tmp1 = makeNimstrLit("Game is not setup yet");
		}
		else {
		Tmp1 = current_player_249854(self_257811).name;
		}
		
		result_257812 = nimCopy(null, Tmp1, NTI44040);
	framePtr = F.prev;

	return result_257812;

}

function get_player_name_257834(self_257811) {
	var result_257836 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 189;
		result_257836 = get_player_name_257809(self_257811);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257836;

}

function all_257419(s_257423, pred_257426) {
	var result_257427 = false;

	var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 539;
			var i_257458 = null;
			F.line = 3;
			var i_259812 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_259812 < (s_257423 != null ? s_257423.length : 0))) break L3;
						F.line = 539;
						i_257458 = s_257423[chckIndx(i_259812, 0, s_257423.length+0-1)-0];
						if (!(pred_257426(i_257458))) {
						F.line = 541;
						result_257427 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_259812 = addInt(i_259812, 1);
					}
			} while(false);
		} while(false);
		F.line = 542;
		result_257427 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257427;

}

function all_257259(s_257263, pred_257266) {
	var result_257267 = false;

	var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 539;
			var i_257298 = 0;
			F.line = 3;
			var i_259816 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_259816 < (s_257263 != null ? s_257263.length : 0))) break L3;
						F.line = 539;
						i_257298 = s_257263[chckIndx(i_259816, 0, s_257263.length+0-1)-0];
						if (!(pred_257266(i_257298))) {
						F.line = 541;
						result_257267 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_259816 = addInt(i_259816, 1);
					}
			} while(false);
		} while(false);
		F.line = 542;
		result_257267 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257267;

}

function field_full_257234(field_257236) {
	var result_257237 = false;

	var F={procname:"game_logic.fieldFull",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_257237 = !((field_257236 == 0));
	framePtr = F.prev;

	return result_257237;

}

function line_full_257251(line_257254) {
	var result_257255 = false;

	var F={procname:"game_logic.lineFull",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 116;
		result_257255 = all_257259(line_257254, field_full_257234);
	framePtr = F.prev;

	return result_257255;

}

function determine_winner_257325(self_257327) {
	var F={procname:"game_logic.determine_winner",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((self_257327.winner_player_number == 0))) {
		F.line = 120;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 121;
			var line_257414 = null;
			F.line = 183;
			var colontmp__259806 = null;
			F.line = 121;
			colontmp__259806 = get_lines_256970(self_257327);
			F.line = 185;
			var i_259807 = 0;
			F.line = 186;
			var l_259808 = (colontmp__259806 != null ? colontmp__259806.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_259807 < l_259808)) break L3;
						F.line = 121;
						line_257414 = colontmp__259806[chckIndx(i_259807, 0, colontmp__259806.length+0-1)-0];
						F.line = 123;
						var max_length_257415 = max_line_length_256973(line_257414);
						if ((self_257327.winCount <= max_length_257415["Field0"])) {
						F.line = 125;
						self_257327.winner_player_number = max_length_257415["Field1"];
						F.line = 126;
						break BeforeRet;
						}
						
						F.line = 189;
						i_259807 = addInt(i_259807, 1);
						if (!(((colontmp__259806 != null ? colontmp__259806.length : 0) == l_259808))) {
						F.line = 190;
						failed_assert_impl_58851(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (all_257419(self_257327.field, line_full_257251)) {
		F.line = 129;
		self_257327.winner_player_number = -1;
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function make_turn_257837(self_257839, move_257840) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_250042(self_257839)) {
		F.line = 198;
		break BeforeRet;
		}
		
		F.line = 199;
		make_move_250022(self_257839, move_257840);
		F.line = 200;
		determine_winner_257325(self_257839);
		if (is_over_250042(self_257839)) {
		F.line = 202;
		break BeforeRet;
		}
		
		F.line = 203;
		finish_turn_249920(self_257839);
		if (isObj(current_player_249854(self_257839).m_type, NTI252147)) {
		F.line = 206;
		make_move_250022(self_257839, get_move_249641(current_player_249854(self_257839), self_257839));
		F.line = 207;
		finish_turn_249920(self_257839);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function make_turn_257862(self_257839, move_257840) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 196;
		make_turn_257837(self_257839, move_257840);
	framePtr = F.prev;

	
}

function finished_257864(self_257866) {
	var result_257867 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 211;
		result_257867 = is_over_250042(self_257866);
	framePtr = F.prev;

	return result_257867;

}

function finished_257881(self_257866) {
	var result_257883 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 210;
		result_257883 = finished_257864(self_257866);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_257883;

}
