/* Generated by the Nim Compiler v1.2.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI14300076 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14310058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14310015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14300020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330113 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330111 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330109 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330107 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330103 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330105 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330213 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330198 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330183 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330168 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330153 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14330138 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14305062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14255113 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6251 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12582444 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12590272 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12711042 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12571205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571291 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571289 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12572333 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12572324 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12572323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571381 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12572331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12571383 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571267 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571265 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571644 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571271 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571269 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571642 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571640 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571287 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571285 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571638 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571636 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571275 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571273 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571634 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571239 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571237 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571231 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12571601 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571599 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571233 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571597 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571279 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571277 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571749 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12571283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571229 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571227 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12571243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12571241 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12582221 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582219 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582217 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582205 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582223 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582225 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12582321 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12582313 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12582211 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582209 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11635147 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12582296 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12582227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12582289 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12582229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12590442 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI155 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI9964007 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14226054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14226046 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14226049 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14226047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14306043 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI14306041 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI14306040 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14306038 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI14306035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14306019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14306022 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14306021 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14306020 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8970015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI622907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4200232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4455011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9964003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9964033 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI13530570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13530567 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13530564 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13410074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13410071 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13410068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI106 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI11470052 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10316004 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10316399 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10316426 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10316423 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10316420 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9671017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9836050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9836047 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9836044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI160043 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
NTI6219.base = NTI6217;
NTI6241.base = NTI6219;
var NNI160043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI114, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}]};
NTI160043.node = NNI160043;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
var NNI9836050 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9671017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}]};
NTI9836050.node = NNI9836050;
NTI9836047.base = NTI9836050;
var NNI9836044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI9836047, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI9836044.node = NNI9836044;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
NTI6233.base = NTI6219;
NTI6235.base = NTI6233;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
NTI6237.base = NTI6233;
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
NTI6249.base = NTI6219;
var NNI10316004 = {kind: 2, offset: 0, typ: null, name: null, len: 125, sons: {"0": {kind: 1, offset: 0, typ: NTI10316004, name: "UNBOUND", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10316004, name: "MOUSE_LEFT", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10316004, name: "MOUSE_RIGHT", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10316004, name: "MOUSE_MIDDLE", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10316004, name: "MOUSE_BACK", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10316004, name: "MOUSE_FORWARD", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI10316004, name: "SPACE", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI10316004, name: "APOSTROPHE", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI10316004, name: "COMMA", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI10316004, name: "MINUS", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI10316004, name: "PERIOD", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI10316004, name: "SLASH", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI10316004, name: "NUMBER_0", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI10316004, name: "NUMBER_1", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI10316004, name: "NUMBER_2", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI10316004, name: "NUMBER_3", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI10316004, name: "NUMBER_4", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI10316004, name: "NUMBER_5", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI10316004, name: "NUMBER_6", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI10316004, name: "NUMBER_7", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI10316004, name: "NUMBER_8", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI10316004, name: "NUMBER_9", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI10316004, name: "SEMICOLON", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI10316004, name: "EQUAL", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI10316004, name: "LETTER_A", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI10316004, name: "LETTER_B", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI10316004, name: "LETTER_C", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI10316004, name: "LETTER_D", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI10316004, name: "LETTER_E", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI10316004, name: "LETTER_F", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI10316004, name: "LETTER_G", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI10316004, name: "LETTER_H", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI10316004, name: "LETTER_I", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI10316004, name: "LETTER_J", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI10316004, name: "LETTER_K", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI10316004, name: "LETTER_L", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI10316004, name: "LETTER_M", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI10316004, name: "LETTER_N", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI10316004, name: "LETTER_O", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI10316004, name: "LETTER_P", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI10316004, name: "LETTER_Q", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI10316004, name: "LETTER_R", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI10316004, name: "LETTER_S", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI10316004, name: "LETTER_T", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI10316004, name: "LETTER_U", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI10316004, name: "LETTER_V", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI10316004, name: "LETTER_W", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI10316004, name: "LETTER_X", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI10316004, name: "LETTER_Y", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI10316004, name: "LETTER_Z", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI10316004, name: "LEFT_BRACKET", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI10316004, name: "BACKSLASH", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI10316004, name: "RIGHT_BRACKET", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI10316004, name: "GRAVE_ACCENT", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI10316004, name: "WORLD_1", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI10316004, name: "WORLD_2", len: 0, sons: null}, 
"256": {kind: 1, offset: 256, typ: NTI10316004, name: "ESCAPE", len: 0, sons: null}, 
"257": {kind: 1, offset: 257, typ: NTI10316004, name: "ENTER", len: 0, sons: null}, 
"258": {kind: 1, offset: 258, typ: NTI10316004, name: "TAB", len: 0, sons: null}, 
"259": {kind: 1, offset: 259, typ: NTI10316004, name: "BACKSPACE", len: 0, sons: null}, 
"260": {kind: 1, offset: 260, typ: NTI10316004, name: "INSERT", len: 0, sons: null}, 
"261": {kind: 1, offset: 261, typ: NTI10316004, name: "DELETE", len: 0, sons: null}, 
"262": {kind: 1, offset: 262, typ: NTI10316004, name: "ARROW_RIGHT", len: 0, sons: null}, 
"263": {kind: 1, offset: 263, typ: NTI10316004, name: "ARROW_LEFT", len: 0, sons: null}, 
"264": {kind: 1, offset: 264, typ: NTI10316004, name: "ARROW_DOWN", len: 0, sons: null}, 
"265": {kind: 1, offset: 265, typ: NTI10316004, name: "ARROW_UP", len: 0, sons: null}, 
"266": {kind: 1, offset: 266, typ: NTI10316004, name: "PAGE_UP", len: 0, sons: null}, 
"267": {kind: 1, offset: 267, typ: NTI10316004, name: "PAGE_DOWN", len: 0, sons: null}, 
"268": {kind: 1, offset: 268, typ: NTI10316004, name: "HOME", len: 0, sons: null}, 
"269": {kind: 1, offset: 269, typ: NTI10316004, name: "END", len: 0, sons: null}, 
"280": {kind: 1, offset: 280, typ: NTI10316004, name: "CAPS_LOCK", len: 0, sons: null}, 
"281": {kind: 1, offset: 281, typ: NTI10316004, name: "SCROLL_LOCK", len: 0, sons: null}, 
"282": {kind: 1, offset: 282, typ: NTI10316004, name: "NUM_LOCK", len: 0, sons: null}, 
"283": {kind: 1, offset: 283, typ: NTI10316004, name: "PRINT_SCREEN", len: 0, sons: null}, 
"284": {kind: 1, offset: 284, typ: NTI10316004, name: "PAUSE", len: 0, sons: null}, 
"290": {kind: 1, offset: 290, typ: NTI10316004, name: "F1", len: 0, sons: null}, 
"291": {kind: 1, offset: 291, typ: NTI10316004, name: "F2", len: 0, sons: null}, 
"292": {kind: 1, offset: 292, typ: NTI10316004, name: "F3", len: 0, sons: null}, 
"293": {kind: 1, offset: 293, typ: NTI10316004, name: "F4", len: 0, sons: null}, 
"294": {kind: 1, offset: 294, typ: NTI10316004, name: "F5", len: 0, sons: null}, 
"295": {kind: 1, offset: 295, typ: NTI10316004, name: "F6", len: 0, sons: null}, 
"296": {kind: 1, offset: 296, typ: NTI10316004, name: "F7", len: 0, sons: null}, 
"297": {kind: 1, offset: 297, typ: NTI10316004, name: "F8", len: 0, sons: null}, 
"298": {kind: 1, offset: 298, typ: NTI10316004, name: "F9", len: 0, sons: null}, 
"299": {kind: 1, offset: 299, typ: NTI10316004, name: "F10", len: 0, sons: null}, 
"300": {kind: 1, offset: 300, typ: NTI10316004, name: "F11", len: 0, sons: null}, 
"301": {kind: 1, offset: 301, typ: NTI10316004, name: "F12", len: 0, sons: null}, 
"302": {kind: 1, offset: 302, typ: NTI10316004, name: "F13", len: 0, sons: null}, 
"303": {kind: 1, offset: 303, typ: NTI10316004, name: "F14", len: 0, sons: null}, 
"304": {kind: 1, offset: 304, typ: NTI10316004, name: "F15", len: 0, sons: null}, 
"305": {kind: 1, offset: 305, typ: NTI10316004, name: "F16", len: 0, sons: null}, 
"306": {kind: 1, offset: 306, typ: NTI10316004, name: "F17", len: 0, sons: null}, 
"307": {kind: 1, offset: 307, typ: NTI10316004, name: "F18", len: 0, sons: null}, 
"308": {kind: 1, offset: 308, typ: NTI10316004, name: "F19", len: 0, sons: null}, 
"309": {kind: 1, offset: 309, typ: NTI10316004, name: "F20", len: 0, sons: null}, 
"310": {kind: 1, offset: 310, typ: NTI10316004, name: "F21", len: 0, sons: null}, 
"311": {kind: 1, offset: 311, typ: NTI10316004, name: "F22", len: 0, sons: null}, 
"312": {kind: 1, offset: 312, typ: NTI10316004, name: "F23", len: 0, sons: null}, 
"313": {kind: 1, offset: 313, typ: NTI10316004, name: "F24", len: 0, sons: null}, 
"314": {kind: 1, offset: 314, typ: NTI10316004, name: "F25", len: 0, sons: null}, 
"320": {kind: 1, offset: 320, typ: NTI10316004, name: "KP_0", len: 0, sons: null}, 
"321": {kind: 1, offset: 321, typ: NTI10316004, name: "KP_1", len: 0, sons: null}, 
"322": {kind: 1, offset: 322, typ: NTI10316004, name: "KP_2", len: 0, sons: null}, 
"323": {kind: 1, offset: 323, typ: NTI10316004, name: "KP_3", len: 0, sons: null}, 
"324": {kind: 1, offset: 324, typ: NTI10316004, name: "KP_4", len: 0, sons: null}, 
"325": {kind: 1, offset: 325, typ: NTI10316004, name: "KP_5", len: 0, sons: null}, 
"326": {kind: 1, offset: 326, typ: NTI10316004, name: "KP_6", len: 0, sons: null}, 
"327": {kind: 1, offset: 327, typ: NTI10316004, name: "KP_7", len: 0, sons: null}, 
"328": {kind: 1, offset: 328, typ: NTI10316004, name: "KP_8", len: 0, sons: null}, 
"329": {kind: 1, offset: 329, typ: NTI10316004, name: "KP_9", len: 0, sons: null}, 
"330": {kind: 1, offset: 330, typ: NTI10316004, name: "KP_DECIMAL", len: 0, sons: null}, 
"331": {kind: 1, offset: 331, typ: NTI10316004, name: "KP_DIVIDE", len: 0, sons: null}, 
"332": {kind: 1, offset: 332, typ: NTI10316004, name: "KP_MULTIPLY", len: 0, sons: null}, 
"333": {kind: 1, offset: 333, typ: NTI10316004, name: "KP_SUBTRACT", len: 0, sons: null}, 
"334": {kind: 1, offset: 334, typ: NTI10316004, name: "KP_ADD", len: 0, sons: null}, 
"335": {kind: 1, offset: 335, typ: NTI10316004, name: "KP_ENTER", len: 0, sons: null}, 
"336": {kind: 1, offset: 336, typ: NTI10316004, name: "KP_EQUAL", len: 0, sons: null}, 
"340": {kind: 1, offset: 340, typ: NTI10316004, name: "LEFT_SHIFT", len: 0, sons: null}, 
"341": {kind: 1, offset: 341, typ: NTI10316004, name: "LEFT_CONTROL", len: 0, sons: null}, 
"342": {kind: 1, offset: 342, typ: NTI10316004, name: "LEFT_ALT", len: 0, sons: null}, 
"343": {kind: 1, offset: 343, typ: NTI10316004, name: "LEFT_SUPER", len: 0, sons: null}, 
"344": {kind: 1, offset: 344, typ: NTI10316004, name: "RIGHT_SHIFT", len: 0, sons: null}, 
"345": {kind: 1, offset: 345, typ: NTI10316004, name: "RIGHT_CONTROL", len: 0, sons: null}, 
"346": {kind: 1, offset: 346, typ: NTI10316004, name: "RIGHT_ALT", len: 0, sons: null}, 
"347": {kind: 1, offset: 347, typ: NTI10316004, name: "RIGHT_SUPER", len: 0, sons: null}}};
NTI10316004.node = NNI10316004;
var NNI10316426 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9671017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10316399, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI10316004, name: "Field2", sons: null}]};
NTI10316426.node = NNI10316426;
NTI10316423.base = NTI10316426;
var NNI10316420 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI10316423, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI10316420.node = NNI10316420;
var NNI11470052 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI106, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI106, name: "y", sons: null}]};
NTI11470052.node = NNI11470052;
var NNI13410074 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9671017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI11470052, name: "Field2", sons: null}]};
NTI13410074.node = NNI13410074;
NTI13410071.base = NTI13410074;
var NNI13410068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13410071, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13410068.node = NNI13410068;
var NNI6245 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6245.node = NNI6245;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
NTI6245.base = NTI6243;
var NNI13530570 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9671017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI13530570.node = NNI13530570;
NTI13530567.base = NTI13530570;
var NNI13530564 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13530567, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13530564.node = NNI13530564;
var NNI9964033 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9964033.node = NNI9964033;
NTI9964033.base = NTI6217;
var NNI9964003 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI106, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI106, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI106, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI106, name: "a", sons: null}]};
NTI9964003.node = NNI9964003;
var NNI4455011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4200232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI4455011.node = NNI4455011;
var NNI622907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI622907.node = NNI622907;
NTI8970015.base = NTI112;
NTI14306022.base = NTI143;
NTI14306021.base = NTI14306022;
NTI14306038.base = NTI143;
NTI14306041.base = NTI14306043;
NTI14306040.base = NTI14306041;
var NNI14306035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sum", len: 0, typ: NTI14306038, name: "sum", sons: null}, 
{kind: 1, offset: "history", len: 0, typ: NTI14306040, name: "history", sons: null}]};
NTI14306035.node = NNI14306035;
NTI14306019.base = NTI14306035;
var NNI14306020 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI14306021, name: "field", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI143, name: "size", sons: null}, 
{kind: 1, offset: "winCount", len: 0, typ: NTI143, name: "winCount", sons: null}, 
{kind: 1, offset: "leaderboard", len: 0, typ: NTI14306019, name: "leaderboard", sons: null}]};
NTI14306020.node = NNI14306020;
var NNI14226054 = {kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null};
NTI14226054.node = NNI14226054;
NTI14226054.base = NTI6008;
NTI14226046.base = NTI14226054;
NTI14226049.base = NTI14226046;
var NNI14226047 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "player_count", len: 0, typ: NTI143, name: "player_count", sons: null}, 
{kind: 1, offset: "players", len: 0, typ: NTI14226049, name: "players", sons: null}, 
{kind: 1, offset: "current_player_number", len: 0, typ: NTI143, name: "current_player_number", sons: null}, 
{kind: 1, offset: "winner_player_number", len: 0, typ: NTI143, name: "winner_player_number", sons: null}]};
NTI14226047.node = NNI14226047;
NTI14226047.base = NTI6008;
NTI14306020.base = NTI14226047;
var NNI9964007 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI155, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI155, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI155, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI155, name: "a", sons: null}]};
NTI9964007.node = NNI9964007;
var NNI12582227 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI12582227, name: "nkRoot", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582227, name: "nkFrame", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582227, name: "nkGroup", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12582227, name: "nkImage", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12582227, name: "nkText", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12582227, name: "nkRectangle", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12582227, name: "nkComponent", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12582227, name: "nkInstance", len: 0, sons: null}}};
NTI12582227.node = NNI12582227;
NTI12582296.base = NTI12582229;
var NNI11635147 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI106, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI106, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI106, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI106, name: "h", sons: null}]};
NTI11635147.node = NNI11635147;
var NNI12582207 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12582207, name: "hLeft", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582207, name: "hCenter", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582207, name: "hRight", len: 0, sons: null}}};
NTI12582207.node = NNI12582207;
var NNI12582209 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12582209, name: "vTop", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582209, name: "vCenter", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582209, name: "vBottom", len: 0, sons: null}}};
NTI12582209.node = NNI12582209;
var NNI12582211 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12582211, name: "tsNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582211, name: "tsWidthAndHeight", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582211, name: "tsHeight", len: 0, sons: null}}};
NTI12582211.node = NNI12582211;
var NNI12582213 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fontFamily", len: 0, typ: NTI112, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI106, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI106, name: "fontWeight", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI106, name: "lineHeight", sons: null}, 
{kind: 1, offset: "textAlignHorizontal", len: 0, typ: NTI12582207, name: "textAlignHorizontal", sons: null}, 
{kind: 1, offset: "textAlignVertical", len: 0, typ: NTI12582209, name: "textAlignVertical", sons: null}, 
{kind: 1, offset: "autoResize", len: 0, typ: NTI12582211, name: "autoResize", sons: null}]};
NTI12582213.node = NNI12582213;
var NNI12582313 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI106, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI106, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI106, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI106, name: "Field3", sons: null}]};
NTI12582313.node = NNI12582313;
var NNI12582223 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI12582223, name: "DropShadow", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582223, name: "InnerShadow", len: 0, sons: null}}};
NTI12582223.node = NNI12582223;
var NNI12582225 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12582223, name: "kind", sons: null}, 
{kind: 1, offset: "blur", len: 0, typ: NTI106, name: "blur", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI106, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI106, name: "y", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI9964003, name: "color", sons: null}]};
NTI12582225.node = NNI12582225;
NTI12582321.base = NTI12582225;
var NNI12582205 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI12582205, name: "cMin", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582205, name: "cMax", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582205, name: "cScale", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12582205, name: "cStretch", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12582205, name: "cCenter", len: 0, sons: null}}};
NTI12582205.node = NNI12582205;
var NNI12582217 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI12582217, name: "laMin", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582217, name: "laCenter", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582217, name: "laMax", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12582217, name: "laStretch", len: 0, sons: null}}};
NTI12582217.node = NNI12582217;
var NNI12582219 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI12582219, name: "lmNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582219, name: "lmVertical", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12582219, name: "lmHorizontal", len: 0, sons: null}}};
NTI12582219.node = NNI12582219;
var NNI12582221 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI12582221, name: "csAuto", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12582221, name: "csFixed", len: 0, sons: null}}};
NTI12582221.node = NNI12582221;
var NNI12571229 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI12571229.node = NNI12571229;
NTI12571229.base = NTI6008;
NTI12571227.base = NTI12571229;
NTI12571749.base = NTI12571241;
var NNI12571283 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI114, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI114, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI114, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI12571749, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI114, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI114, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI143, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI114, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI163, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI114, name: "target", sons: null}]};
NTI12571283.node = NNI12571283;
NTI12571283.base = NTI12571243;
NTI12571281.base = NTI12571283;
var NNI12571279 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI163, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI163, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI143, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI114, name: "value", sons: null}]};
NTI12571279.node = NNI12571279;
NTI12571279.base = NTI12571243;
NTI12571277.base = NTI12571279;
NTI12571655.base = NTI12571277;
NTI12571657.base = NTI12571277;
var NNI12571243 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI12571227, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI163, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI163, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI114, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI163, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI12571281, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI163, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI12571655, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI12571657, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI143, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI143, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI114, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI163, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI114, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI143, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI143, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI143, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI143, name: "offsetTop", sons: null}]};
NTI12571243.node = NNI12571243;
NTI12571233.base = NTI12571235;
NTI12571597.base = NTI12571233;
NTI12571599.base = NTI12571233;
NTI12571601.base = NTI12571233;
var NNI12571231 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI12571231, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12571231, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12571231, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12571231, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12571231, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12571231, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12571231, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12571231, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12571231, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12571231, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12571231, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12571231, name: "NotationNode", len: 0, sons: null}}};
NTI12571231.node = NNI12571231;
var NNI12571275 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI143, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI143, name: "y", sons: null}]};
NTI12571275.node = NNI12571275;
NTI12571275.base = NTI12571243;
NTI12571273.base = NTI12571275;
NTI12571634.base = NTI12571273;
NTI12571636.base = NTI12571281;
var NNI12571287 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI143, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI163, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI143, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI143, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI114, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI114, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI143, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI143, name: "width", sons: null}]};
NTI12571287.node = NNI12571287;
NTI12571287.base = NTI12571243;
NTI12571285.base = NTI12571287;
NTI12571638.base = NTI12571285;
NTI12571640.base = NTI12571241;
var NNI12571271 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI143, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI143, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI114, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI143, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI114, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI143, name: "vspace", sons: null}]};
NTI12571271.node = NNI12571271;
NTI12571271.base = NTI12571243;
NTI12571269.base = NTI12571271;
NTI12571642.base = NTI12571269;
var NNI12571267 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI114, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI143, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI143, name: "y", sons: null}]};
NTI12571267.node = NNI12571267;
NTI12571267.base = NTI12571243;
NTI12571265.base = NTI12571267;
NTI12571644.base = NTI12571265;
var NNI12572323 = {kind: 1, offset: "then", len: 0, typ: NTI12572324, name: "then", sons: null};
NTI12572323.node = NNI12572323;
NTI12571381.base = NTI12572323;
var NNI12572331 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI12571381, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI12572333, name: "onloadingdone", sons: null}]};
NTI12572331.node = NNI12572331;
NTI12571383.base = NTI12572331;
var NNI12571239 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI12571241, name: "activeElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI114, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI114, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI12571241, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI114, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI114, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI114, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI114, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI12571241, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI114, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI114, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI114, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI114, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI114, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI114, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI12571634, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI12571636, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI12571638, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI12571640, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI12571642, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI12571644, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI12571383, name: "fonts", sons: null}]};
NTI12571239.node = NNI12571239;
NTI12571239.base = NTI12571235;
NTI12571237.base = NTI12571239;
var NNI12571291 = {kind: 2, len: 102, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI114, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI114, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI114, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI114, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI114, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI114, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI114, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI114, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI114, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI114, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI114, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI114, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI114, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI114, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI114, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI114, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI114, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI114, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI114, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI114, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI114, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI114, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI114, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI114, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI114, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI114, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI114, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI114, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI114, name: "bottom", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI114, name: "boxSizing", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI114, name: "boxShadow", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI114, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI114, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI114, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI114, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI114, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI114, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI114, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI114, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI114, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI114, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI114, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI114, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI114, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI114, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI114, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI114, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI114, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI114, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI114, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI114, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI114, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI114, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI114, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI114, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI114, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI114, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI114, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI114, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI114, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI114, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI114, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI114, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI114, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI114, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI114, name: "opacity", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI114, name: "outline", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI114, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI114, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI114, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI114, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI114, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI114, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI114, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI114, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI114, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI114, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI114, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI114, name: "position", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI114, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI114, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI114, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI114, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI114, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI114, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI114, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI114, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI114, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI114, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI114, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI114, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI114, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI114, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI114, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI114, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI114, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI114, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI114, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI114, name: "width", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI114, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI114, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI12571291.node = NNI12571291;
NTI12571291.base = NTI6008;
NTI12571289.base = NTI12571291;
var NNI12571235 = {kind: 2, len: 19, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI12571597, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI12571599, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI12571601, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI114, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI12571233, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI12571233, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI12571233, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI114, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI12571231, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI114, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI12571233, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI12571233, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI12571233, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI12571237, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI114, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI114, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI114, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI114, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI12571289, name: "style", sons: null}]};
NTI12571235.node = NNI12571235;
var NNI12571205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI12571384, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI12571388, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI12571392, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI12571396, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI12571400, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI12571404, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI12571408, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI12571412, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI12571416, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI12571420, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI12571424, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI12571428, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI12571432, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI12571436, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI12571440, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI12571444, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI12571448, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI12571452, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI12571456, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI12571460, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI12571464, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI12571468, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI12571472, name: "onloadend", sons: null}]};
NTI12571205.node = NNI12571205;
NTI12571205.base = NTI6008;
NTI12571235.base = NTI12571205;
NTI12571243.base = NTI12571235;
NTI12571241.base = NTI12571243;
var NNI12582289 = {kind: 2, len: 46, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI112, name: "id", sons: null}, 
{kind: 1, offset: "uid", len: 0, typ: NTI112, name: "uid", sons: null}, 
{kind: 1, offset: "idPath", len: 0, typ: NTI112, name: "idPath", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI12582227, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI112, name: "text", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI112, name: "code", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI12582296, name: "nodes", sons: null}, 
{kind: 1, offset: "box", len: 0, typ: NTI11635147, name: "box", sons: null}, 
{kind: 1, offset: "orgBox", len: 0, typ: NTI11635147, name: "orgBox", sons: null}, 
{kind: 1, offset: "rotation", len: 0, typ: NTI106, name: "rotation", sons: null}, 
{kind: 1, offset: "screenBox", len: 0, typ: NTI11635147, name: "screenBox", sons: null}, 
{kind: 1, offset: "textOffset", len: 0, typ: NTI11470052, name: "textOffset", sons: null}, 
{kind: 1, offset: "fill", len: 0, typ: NTI9964003, name: "fill", sons: null}, 
{kind: 1, offset: "transparency", len: 0, typ: NTI106, name: "transparency", sons: null}, 
{kind: 1, offset: "strokeWeight", len: 0, typ: NTI106, name: "strokeWeight", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI9964003, name: "stroke", sons: null}, 
{kind: 1, offset: "zLevel", len: 0, typ: NTI143, name: "zLevel", sons: null}, 
{kind: 1, offset: "resizeDone", len: 0, typ: NTI163, name: "resizeDone", sons: null}, 
{kind: 1, offset: "htmlDone", len: 0, typ: NTI163, name: "htmlDone", sons: null}, 
{kind: 1, offset: "textStyle", len: 0, typ: NTI12582213, name: "textStyle", sons: null}, 
{kind: 1, offset: "textPadding", len: 0, typ: NTI143, name: "textPadding", sons: null}, 
{kind: 1, offset: "imageName", len: 0, typ: NTI112, name: "imageName", sons: null}, 
{kind: 1, offset: "cornerRadius", len: 0, typ: NTI12582313, name: "cornerRadius", sons: null}, 
{kind: 1, offset: "editableText", len: 0, typ: NTI163, name: "editableText", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI163, name: "multiline", sons: null}, 
{kind: 1, offset: "bindingSet", len: 0, typ: NTI163, name: "bindingSet", sons: null}, 
{kind: 1, offset: "drawable", len: 0, typ: NTI163, name: "drawable", sons: null}, 
{kind: 1, offset: "cursorColor", len: 0, typ: NTI9964003, name: "cursorColor", sons: null}, 
{kind: 1, offset: "highlightColor", len: 0, typ: NTI9964003, name: "highlightColor", sons: null}, 
{kind: 1, offset: "shadows", len: 0, typ: NTI12582321, name: "shadows", sons: null}, 
{kind: 1, offset: "constraintsHorizontal", len: 0, typ: NTI12582205, name: "constraintsHorizontal", sons: null}, 
{kind: 1, offset: "constraintsVertical", len: 0, typ: NTI12582205, name: "constraintsVertical", sons: null}, 
{kind: 1, offset: "layoutAlign", len: 0, typ: NTI12582217, name: "layoutAlign", sons: null}, 
{kind: 1, offset: "layoutMode", len: 0, typ: NTI12582219, name: "layoutMode", sons: null}, 
{kind: 1, offset: "counterAxisSizingMode", len: 0, typ: NTI12582221, name: "counterAxisSizingMode", sons: null}, 
{kind: 1, offset: "horizontalPadding", len: 0, typ: NTI106, name: "horizontalPadding", sons: null}, 
{kind: 1, offset: "verticalPadding", len: 0, typ: NTI106, name: "verticalPadding", sons: null}, 
{kind: 1, offset: "itemSpacing", len: 0, typ: NTI106, name: "itemSpacing", sons: null}, 
{kind: 1, offset: "clipContent", len: 0, typ: NTI163, name: "clipContent", sons: null}, 
{kind: 1, offset: "diffIndex", len: 0, typ: NTI143, name: "diffIndex", sons: null}, 
{kind: 1, offset: "element", len: 0, typ: NTI12571241, name: "element", sons: null}, 
{kind: 1, offset: "textElement", len: 0, typ: NTI12571241, name: "textElement", sons: null}, 
{kind: 1, offset: "cache", len: 0, typ: NTI12582229, name: "cache", sons: null}, 
{kind: 1, offset: "textLayoutHeight", len: 0, typ: NTI106, name: "textLayoutHeight", sons: null}, 
{kind: 1, offset: "textLayoutWidth", len: 0, typ: NTI106, name: "textLayoutWidth", sons: null}, 
{kind: 1, offset: "selectable", len: 0, typ: NTI163, name: "selectable", sons: null}]};
NTI12582289.node = NNI12582289;
NTI12582229.base = NTI12582289;
NTI12590442.base = NTI12582229;
var NNI12711042 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}]};
NTI12711042.node = NNI12711042;
NTI12590272.base = NTI12582225;
var NNI12582444 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9671017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12582229, name: "Field2", sons: null}]};
NTI12582444.node = NNI12582444;
var NNI6251 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6251.node = NNI6251;
NTI6251.base = NTI6219;
var NNI6277 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6277.node = NNI6277;
NTI6277.base = NTI6219;
NTI14255113.base = NTI112;
var NNI14305062 = {kind: 1, offset: "depth", len: 0, typ: NTI143, name: "depth", sons: null};
NTI14305062.node = NNI14305062;
NTI14305062.base = NTI14226054;
NTI14330138.base = NTI143;
NTI14330153.base = NTI143;
NTI14330168.base = NTI143;
NTI14330183.base = NTI143;
NTI14330198.base = NTI143;
NTI14330213.base = NTI143;
NTI14330105.base = NTI143;
NTI14330103.base = NTI143;
NTI14330107.base = NTI143;
NTI14330109.base = NTI143;
NTI14330111.base = NTI143;
NTI14330113.base = NTI143;
NTI14300020.base = NTI14226046;
NTI14310015.base = NTI143;
NTI14310058.base = NTI14310015;
NTI14300076.base = NTI112;
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function arrayConstr(len_250067, value_250068, typ_250069) {
        var result = new Array(len_250067);
    for (var i = 0; i < len_250067; ++i) result[i] = nimCopy(null, value_250068, typ_250069);
    return result;
  

  
}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    e_190218.trace = nimCopy(null, raw_write_stack_trace_180059(), NTI112);
    throw e_190218;

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function divInt(a_230457, b_230458) {
        if (b_230458 == 0) raiseDivByZero();
    if (b_230458 == -1 && a_230457 == 2147483647) raiseOverflow();
    return Math.trunc(a_230457 / b_230458);
  

  
}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet3 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet4 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(101, 69);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
function nimParseBiggestFloat(s_275076, number_275078, number_275078_Idx, start_275079) {
  var result_275081 = 0;

  var F={procname:"system.nimParseBiggestFloat",prev:framePtr,filename:"jssys.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 686;
    var esign_275082 = 1.0000000000000000e+00;
    F.line = 687;
    var sign_275083 = 1.0000000000000000e+00;
    F.line = 688;
    var i_275084 = start_275079;
    F.line = 689;
    var exponent_275085 = 0;
    F.line = 690;
    var flags_275086 = 0;
    F.line = 691;
    number_275078[number_275078_Idx] = 0.0;
    if ((s_275076[i_275084] == 43)) {
    F.line = 692;
    i_275084 += 1;
    }
    else {
    if ((s_275076[i_275084] == 45)) {
    F.line = 694;
    sign_275083 = -1.0000000000000000e+00;
    F.line = 695;
    i_275084 += 1;
    }
    }
    if (((s_275076[i_275084] == 78) || (s_275076[i_275084] == 110))) {
    if (((s_275076[(i_275084 + 1)] == 65) || (s_275076[(i_275084 + 1)] == 97))) {
    if (((s_275076[(i_275084 + 2)] == 78) || (s_275076[(i_275084 + 2)] == 110))) {
    if (!((ConstSet3[s_275076[(i_275084 + 3)]] != undefined))) {
    F.line = 700;
    number_275078[number_275078_Idx] = NaN;
    F.line = 701;
    result_275081 = ((i_275084 + 3) - start_275079);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 702;
    result_275081 = 0;
    break BeforeRet;
    }
    
    if (((s_275076[i_275084] == 73) || (s_275076[i_275084] == 105))) {
    if (((s_275076[(i_275084 + 1)] == 78) || (s_275076[(i_275084 + 1)] == 110))) {
    if (((s_275076[(i_275084 + 2)] == 70) || (s_275076[(i_275084 + 2)] == 102))) {
    if (!((ConstSet4[s_275076[(i_275084 + 3)]] != undefined))) {
    F.line = 707;
    number_275078[number_275078_Idx] = (Infinity * sign_275083);
    F.line = 708;
    result_275081 = ((i_275084 + 3) - start_275079);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 709;
    result_275081 = 0;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 710;
        L2: while (true) {
        if (!(ConstSet5[s_275076[i_275084]] != undefined)) break L2;
          F.line = 712;
          flags_275086 = (flags_275086 | 1);
          F.line = 713;
          number_275078[number_275078_Idx] = ((number_275078[number_275078_Idx] * 1.0000000000000000e+01) + to_float_26459((s_275076[i_275084] - 48)));
          F.line = 714;
          i_275084 += 1;
          L3: do {
            F.line = 715;
              L4: while (true) {
              if (!(s_275076[i_275084] == 95)) break L4;
                F.line = 715;
                i_275084 += 1;
              }
          } while(false);
        }
    } while(false);
    if ((s_275076[i_275084] == 46)) {
    F.line = 718;
    var hd_290029 = 1.0000000000000000e+00;
    F.line = 719;
    i_275084 += 1;
    L5: do {
      F.line = 720;
        L6: while (true) {
        if (!(ConstSet6[s_275076[i_275084]] != undefined)) break L6;
          F.line = 722;
          flags_275086 = (flags_275086 | 2);
          F.line = 723;
          number_275078[number_275078_Idx] = ((number_275078[number_275078_Idx] * 1.0000000000000000e+01) + to_float_26459((s_275076[i_275084] - 48)));
          F.line = 724;
          hd_290029 = (hd_290029 * 1.0000000000000000e+01);
          F.line = 725;
          i_275084 += 1;
          L7: do {
            F.line = 726;
              L8: while (true) {
              if (!(s_275076[i_275084] == 95)) break L8;
                F.line = 726;
                i_275084 += 1;
              }
          } while(false);
        }
    } while(false);
    F.line = 727;
    number_275078[number_275078_Idx] = (number_275078[number_275078_Idx] / hd_290029);
    }
    
    if ((flags_275086 == 0)) {
    F.line = 729;
    result_275081 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet7[s_275076[i_275084]] != undefined)) {
    F.line = 732;
    i_275084 += 1;
    if ((s_275076[i_275084] == 43)) {
    F.line = 734;
    i_275084 += 1;
    }
    else {
    if ((s_275076[i_275084] == 45)) {
    F.line = 736;
    esign_275082 = -1.0000000000000000e+00;
    F.line = 737;
    i_275084 += 1;
    }
    }
    if (!((ConstSet8[s_275076[i_275084]] != undefined))) {
    F.line = 739;
    result_275081 = 0;
    break BeforeRet;
    }
    
    L9: do {
      F.line = 740;
        L10: while (true) {
        if (!(ConstSet9[s_275076[i_275084]] != undefined)) break L10;
          F.line = 741;
          exponent_275085 = (((exponent_275085 * 10) + s_275076[i_275084]) - 48);
          F.line = 742;
          i_275084 += 1;
          L11: do {
            F.line = 743;
              L12: while (true) {
              if (!(s_275076[i_275084] == 95)) break L12;
                F.line = 743;
                i_275084 += 1;
              }
          } while(false);
        }
    } while(false);
    }
    
    F.line = 745;
    var hd_310029 = ten_to_the_power_of_275046(exponent_275085);
    if ((0.0 < esign_275082)) {
    F.line = 746;
    number_275078[number_275078_Idx] = (number_275078[number_275078_Idx] * hd_310029);
    }
    else {
      F.line = 747;
      number_275078[number_275078_Idx] = (number_275078[number_275078_Idx] / hd_310029);
    }
    
    F.line = 749;
    number_275078[number_275078_Idx] = (number_275078[number_275078_Idx] * sign_275083);
    F.line = 750;
    result_275081 = (i_275084 - start_275079);
  } while (false);
  framePtr = F.prev;

  return result_275081;

}
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr(60, 62, 94);
var ConstSet12 = setConstr(60, 62, 94);
var ConstSet13 = setConstr(45, 43, 32);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr([65, 90], [97, 122]);
var ConstSet18 = setConstr(46, 44);
function nimCharToStr(x_156052) {
  var result_156053 = null;

    result_156053 = nimCopy(null, mnewString(1), NTI112);
    result_156053[0] = x_156052;

  return result_156053;

}
var ConstSet19 = setConstr([65, 90]);
var ConstSet20 = setConstr([97, 122]);
var ConstSet21 = setConstr(47, 47);
var ConstSet22 = setConstr(47, 47);
var ConstSet23 = setConstr(47, 47);
var ConstSet24 = setConstr(47, 47);
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
var ConstSet25 = setConstr(47, 47);
var ConstSet26 = setConstr(47, 47);
var ConstSet27 = setConstr(47, 47);
var ConstSet28 = setConstr(47, 47);
var ConstSet29 = setConstr(47, 47);
var ConstSet30 = setConstr(47, 47);
var ConstSet31 = setConstr(47, 47);
var ConstSet32 = setConstr(47, 47);
var ConstSet33 = setConstr(47, 47);
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function isObj(obj_270062, subclass_270063) {
  var result_270064 = false;

  BeforeRet: do {
    var x_270065 = obj_270062;
    if ((x_270065 == subclass_270063)) {
    result_270064 = true;
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!!((x_270065 == subclass_270063))) break L2;
          if ((x_270065 == null)) {
          result_270064 = false;
          break BeforeRet;
          }
          
          x_270065 = x_270065.base;
        }
    } while(false);
    result_270064 = true;
    break BeforeRet;
  } while (false);

  return result_270064;

}
var ConstSet34 = setConstr([48, 57]);
var ConstSet35 = setConstr(0, 125);
var ConstSet36 = setConstr([48, 57]);
var ConstSet37 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
                    var desc_14306058 = [makeNimstrLit(" "), makeNimstrLit("X"), makeNimstrLit("0")];
var ConstSet38 = setConstr([48, 57]);
var ConstSet39 = setConstr([48, 57]);
var ConstSet40 = setConstr(13, 10);
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var object_id_9675031 = [0];
function is_power_of_two_1080029(x_1080031) {
    var Tmp1;

  var result_1080032 = false;

  BeforeRet: do {
    if (!(0 < x_1080031)) Tmp1 = false; else {      Tmp1 = ((x_1080031 & (x_1080031 - 1)) == 0);    }    result_1080032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1080032;

}
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function aux_write_stack_trace_160038(f_160040) {
          var Tmp3;

  var result_160041 = [null];

    var it_160049 = f_160040;
    var i_160051 = 0;
    var total_160053 = 0;
    var temp_frames_160060 = arrayConstr(64, {Field0: null, Field1: 0}, NTI160043);
    L1: do {
        L2: while (true) {
          if (!!((it_160049 == null))) Tmp3 = false; else {            Tmp3 = (i_160051 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_160060[i_160051].Field0 = it_160049.procname;
          temp_frames_160060[i_160051].Field1 = it_160049.line;
          i_160051 += 1;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_160049 == null))) break L5;
          total_160053 += 1;
          it_160049 = it_160049.prev;
        }
    } while(false);
    result_160041[0] = nimCopy(null, [], NTI112);
    if (!((total_160053 == i_160051))) {
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("(")); } else { result_160041[0] = makeNimstrLit("("); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr(((total_160053 - i_160051))+"")); } else { result_160041[0] = cstrToNimstr(((total_160053 - i_160051))+"").slice(); };
    if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_160041[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_175236 = 0;
      var colontmp__9963503 = 0;
      colontmp__9963503 = (i_160051 - 1);
      var res_9963508 = colontmp__9963503;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_9963508)) break L8;
            j_175236 = res_9963508;
            add_142042(result_160041, 0, temp_frames_160060[j_175236].Field0);
            if ((0 < temp_frames_160060[j_175236].Field1)) {
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit(", line: ")); } else { result_160041[0] = makeNimstrLit(", line: "); };
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(cstrToNimstr((temp_frames_160060[j_175236].Field1)+"")); } else { result_160041[0] = cstrToNimstr((temp_frames_160060[j_175236].Field1)+"").slice(); };
            }
            
            if (result_160041[0] != null) { result_160041[0] = (result_160041[0]).concat(makeNimstrLit("\x0A")); } else { result_160041[0] = makeNimstrLit("\x0A"); };
            res_9963508 -= 1;
          }
      } while(false);
    } while(false);

  return result_160041[0];

}
function raw_write_stack_trace_180059() {
  var result_180061 = null;

    if (!((framePtr == null))) {
    result_180061 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_160038(framePtr) || []), NTI112);
    }
    else {
      result_180061 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI112);
    }
    

  return result_180061;

}
function new_seq_225128(len_225131) {
  var result_225133 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}  framePtr = F.prev;

  return result_225133;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(raw_write_stack_trace_180059()); } else { buf_185060[0] = raw_write_stack_trace_180059().slice(); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function sys_fatal_102618(message_102622) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");
  framePtr = F.prev;

  
}
function raise_assert_102614(msg_102616) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 22;
    sys_fatal_102618(msg_102616);
  framePtr = F.prev;

  
}
function failed_assert_impl_102680(msg_102682) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 29;
    raise_assert_102614(msg_102682);
  framePtr = F.prev;

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function init_table_9836145(initial_size_9836149) {
  var result_9836151 = {data: null, counter: 0};

  var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_1080029(initial_size_9836149))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 128;
    result_9836151.counter = 0;
    F.line = 129;
    result_9836151.data = new Array(chckRange(initial_size_9836149, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_9836149, 0, 2147483647);++i) {result_9836151.data[i]={Field0: 0, Field1: null, Field2: null};}  framePtr = F.prev;

  return result_9836151;

}
function new_table_9945747(initial_size_9945751) {
  var result_9945753 = null;

  var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 798;
    result_9945753 = {data: null, counter: 0};
    F.line = 799;
    nimCopy(result_9945753, init_table_9836145(initial_size_9945751), NTI9836044);
  framePtr = F.prev;

  return result_9945753;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function imul_9675517(a_9675519, b_9675520) {
  var result_9675521 = 0;

  var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 133;
    var mask_9675522 = 65535;
    F.line = 135;
    var a_hi_9675531 = (((a_9675519 >>> 0) >>> 16) & mask_9675522);
    F.line = 136;
    var a_lo_9675532 = (a_9675519 & mask_9675522);
    F.line = 137;
    var b_hi_9675541 = (((b_9675520 >>> 0) >>> 16) & mask_9675522);
    F.line = 138;
    var b_lo_9675542 = (b_9675520 & mask_9675522);
    F.line = 139;
    result_9675521 = ((((a_lo_9675532 * b_lo_9675542) >>> 0) + (((((a_hi_9675531 * b_lo_9675542) >>> 0) + ((a_lo_9675532 * b_hi_9675541) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_9675521;

}
function rotl32_9675601(x_9675603, r_9675604) {
  var result_9675605 = 0;

  var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 144;
    result_9675605 = ((x_9675603 << r_9675604) | ((x_9675603 >>> 0) >>> subInt(32, r_9675604)));
  framePtr = F.prev;

  return result_9675605;

}
function murmur_hash_9675629(x_9675632) {
  var result_9675633 = 0;

  var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 155;
    var size_9675643 = (x_9675632 != null ? x_9675632.length : 0);
    F.line = 156;
    var step_size_9675645 = 4;
    F.line = 157;
    var n_9675646 = divInt(size_9675643, step_size_9675645);
    F.line = 159;
    var h1_9675647 = 0;
    F.line = 160;
    var i_9675649 = 0;
    L1: do {
      F.line = 163;
        L2: while (true) {
        if (!(i_9675649 < mulInt(n_9675646, step_size_9675645))) break L2;
          F.line = 164;
          var k1_9675650 = 0;
          F.line = 166;
          var j_9675651 = step_size_9675645;
          L3: do {
            F.line = 167;
              L4: while (true) {
              if (!(0 < j_9675651)) break L4;
                F.line = 168;
                j_9675651 = subInt(j_9675651, 1);
                F.line = 169;
                k1_9675650 = ((k1_9675650 << 8) | x_9675632[chckIndx(addInt(i_9675649, j_9675651), 0, (x_9675632 != null ? x_9675632.length : 0)+0-1)-0]);
              }
          } while(false);
          F.line = 172;
          i_9675649 = addInt(i_9675649, step_size_9675645);
          F.line = 174;
          k1_9675650 = imul_9675517(k1_9675650, 3432918353);
          F.line = 175;
          k1_9675650 = rotl32_9675601(k1_9675650, 15);
          F.line = 176;
          k1_9675650 = imul_9675517(k1_9675650, 461845907);
          F.line = 178;
          h1_9675647 = (h1_9675647 ^ k1_9675650);
          F.line = 179;
          h1_9675647 = rotl32_9675601(h1_9675647, 13);
          F.line = 180;
          h1_9675647 = ((((h1_9675647 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    F.line = 183;
    var k1_9680207 = 0;
    F.line = 184;
    var rem_9680208 = modInt(size_9675643, step_size_9675645);
    L5: do {
      F.line = 185;
        L6: while (true) {
        if (!(0 < rem_9680208)) break L6;
          F.line = 186;
          rem_9680208 = subInt(rem_9680208, 1);
          F.line = 187;
          k1_9680207 = ((k1_9680207 << 8) | x_9675632[chckIndx(addInt(i_9675649, rem_9680208), 0, (x_9675632 != null ? x_9675632.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 188;
    k1_9680207 = imul_9675517(k1_9680207, 3432918353);
    F.line = 189;
    k1_9680207 = rotl32_9675601(k1_9680207, 15);
    F.line = 190;
    k1_9680207 = imul_9675517(k1_9680207, 461845907);
    F.line = 191;
    h1_9675647 = (h1_9675647 ^ k1_9680207);
    F.line = 194;
    h1_9675647 = (h1_9675647 ^ size_9675643);
    F.line = 195;
    h1_9675647 = (h1_9675647 ^ ((h1_9675647 >>> 0) >>> 16));
    F.line = 196;
    h1_9675647 = imul_9675517(h1_9675647, 2246822507);
    F.line = 197;
    h1_9675647 = (h1_9675647 ^ ((h1_9675647 >>> 0) >>> 13));
    F.line = 198;
    h1_9675647 = imul_9675517(h1_9675647, 3266489909);
    F.line = 199;
    h1_9675647 = (h1_9675647 ^ ((h1_9675647 >>> 0) >>> 16));
    F.line = 200;
    result_9675633 = (h1_9675647|0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9675633;

}
function hash_9715214(x_9715216) {
  var result_9715217 = 0;

  var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 229;
    result_9715217 = murmur_hash_9675629((x_9715216.slice(0, (x_9715216 != null ? (x_9715216.length-1) : -1)+1)));
  framePtr = F.prev;

  return result_9715217;

}
function is_filled_9737018(hcode_9737020) {
  var result_9737021 = false;

  var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_9737021 = !((hcode_9737020 == 0));
  framePtr = F.prev;

  return result_9737021;

}
function next_try_9740014(h_9740016, max_hash_9740017) {
  var result_9740018 = 0;

  var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 30;
    result_9740018 = (addInt(h_9740016, 1) & max_hash_9740017);
  framePtr = F.prev;

  return result_9740018;

}
function raw_get_9880602(t_9880606, key_9880607, hc_9880608, hc_9880608_Idx) {
            var Tmp3;

  var result_9880609 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_9880608[hc_9880608_Idx] = hash_9715214(key_9880607);
    if ((hc_9880608[hc_9880608_Idx] == 0)) {
    F.line = 65;
    hc_9880608[hc_9880608_Idx] = 314159265;
    }
    
    if (((t_9880606.data != null ? t_9880606.data.length : 0) == 0)) {
    F.line = 47;
    result_9880609 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_9890138 = (hc_9880608[hc_9880608_Idx] & (t_9880606.data != null ? (t_9880606.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_9880606.data[chckIndx(h_9890138, 0, (t_9880606.data != null ? t_9880606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_9880606.data[chckIndx(h_9890138, 0, (t_9880606.data != null ? t_9880606.data.length : 0)+0-1)-0].Field0 == hc_9880608[hc_9880608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_9880606.data[chckIndx(h_9890138, 0, (t_9880606.data != null ? t_9880606.data.length : 0)+0-1)-0].Field1, key_9880607);            }          if (Tmp3) {
          F.line = 55;
          result_9880609 = h_9890138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_9890138 = next_try_9740014(h_9890138, (t_9880606.data != null ? (t_9880606.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_9880609 = subInt(-1, h_9890138);
  } while (false);
  framePtr = F.prev;

  return result_9880609;

}
function must_rehash_9915601(t_9915604) {
  var result_9915605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_9915604.counter < (t_9915604.data != null ? t_9915604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_9915605 = ((mulInt((t_9915604.data != null ? t_9915604.data.length : 0), 2) < mulInt(t_9915604.counter, 3)) || (subInt((t_9915604.data != null ? t_9915604.data.length : 0), t_9915604.counter) < 4));
  framePtr = F.prev;

  return result_9915605;

}
function raw_insert_9941108(t_9941114, data_9941117, data_9941117_Idx, key_9941118, val_9941119, hc_9941120, h_9941121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_9941117[data_9941117_Idx][chckIndx(h_9941121, 0, (data_9941117[data_9941117_Idx] != null ? data_9941117[data_9941117_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_9941118, NTI112);
    F.line = 23;
    data_9941117[data_9941117_Idx][chckIndx(h_9941121, 0, (data_9941117[data_9941117_Idx] != null ? data_9941117[data_9941117_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, val_9941119, NTI112);
    F.line = 24;
    data_9941117[data_9941117_Idx][chckIndx(h_9941121, 0, (data_9941117[data_9941117_Idx] != null ? data_9941117[data_9941117_Idx].length : 0)+0-1)-0].Field0 = hc_9941120;
  framePtr = F.prev;

  
}
function enlarge_9940161(t_9940167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_9940175 = null;
    F.line = 268;
    n_9940175 = new Array(chckRange(mulInt((t_9940167.data != null ? t_9940167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_9940167.data != null ? t_9940167.data.length : 0), 2), 0, 2147483647);++i) {n_9940175[i]={Field0: 0, Field1: null, Field2: null};}    F.line = 269;
    var Tmp1 = t_9940167.data; t_9940167.data = n_9940175; n_9940175 = Tmp1;    L2: do {
      F.line = 270;
      var i_9940334 = 0;
      F.line = 39;
      var colontmp__9963534 = 0;
      F.line = 270;
      colontmp__9963534 = (n_9940175 != null ? (n_9940175.length-1) : -1);
      F.line = 56;
      var res_9963539 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_9963539 <= colontmp__9963534)) break L4;
            F.line = 270;
            i_9940334 = res_9963539;
            F.line = 271;
            var eh_9940483 = n_9940175[chckIndx(i_9940334, 0, (n_9940175 != null ? n_9940175.length : 0)+0-1)-0].Field0;
            if (is_filled_9737018(eh_9940483)) {
            F.line = 273;
            var j_9940490 = (eh_9940483 & (t_9940167.data != null ? (t_9940167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_9737018(t_9940167.data[chckIndx(j_9940490, 0, (t_9940167.data != null ? t_9940167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_9940490 = next_try_9740014(j_9940490, (t_9940167.data != null ? (t_9940167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_9941108(t_9940167, t_9940167, "data", n_9940175[chckIndx(i_9940334, 0, (n_9940175 != null ? n_9940175.length : 0)+0-1)-0].Field1, n_9940175[chckIndx(i_9940334, 0, (n_9940175 != null ? n_9940175.length : 0)+0-1)-0].Field2, eh_9940483, j_9940490);
            }
            
            F.line = 59;
            res_9963539 = addInt(res_9963539, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_9941593(t_9941597, key_9941598, hc_9941599) {
  var result_9941600 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_9941597.data != null ? t_9941597.data.length : 0) == 0)) {
    F.line = 47;
    result_9941600 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_9945138 = (hc_9941599 & (t_9941597.data != null ? (t_9941597.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_9941597.data[chckIndx(h_9945138, 0, (t_9941597.data != null ? t_9941597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_9941597.data[chckIndx(h_9945138, 0, (t_9941597.data != null ? t_9941597.data.length : 0)+0-1)-0].Field0 == hc_9941599) && eqStrings(t_9941597.data[chckIndx(h_9945138, 0, (t_9941597.data != null ? t_9941597.data.length : 0)+0-1)-0].Field1, key_9941598))) {
          F.line = 55;
          result_9941600 = h_9945138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_9945138 = next_try_9740014(h_9945138, (t_9941597.data != null ? (t_9941597.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_9941600 = subInt(-1, h_9945138);
  } while (false);
  framePtr = F.prev;

  return result_9941600;

}
function HEX5BHEX5DHEX3D_9855749(t_9855755, key_9855756, val_9855757) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_9855755.data != null ? t_9855755.data.length : 0) == 0)) {
    if (!(is_power_of_two_1080029(64))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 128;
    t_9855755.counter = 0;
    F.line = 129;
    t_9855755.data = new Array(64); for (var i=0;i<64;++i) {t_9855755.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    F.line = 57;
    var hc_9880601 = [0];
    F.line = 58;
    var index_9890620 = raw_get_9880602(t_9855755, key_9855756, hc_9880601, 0);
    if ((0 <= index_9890620)) {
    F.line = 59;
    t_9855755.data[chckIndx(index_9890620, 0, (t_9855755.data != null ? t_9855755.data.length : 0)+0-1)-0].Field2 = nimCopy(null, val_9855757, NTI112);
    }
    else {
      if (((t_9855755.data != null ? t_9855755.data.length : 0) == 0)) {
      if (!(is_power_of_two_1080029(64))) {
      F.line = 127;
      failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 128;
      t_9855755.counter = 0;
      F.line = 129;
      t_9855755.data = new Array(64); for (var i=0;i<64;++i) {t_9855755.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (must_rehash_9915601(t_9855755)) {
      F.line = 49;
      enlarge_9940161(t_9855755);
      F.line = 50;
      index_9890620 = raw_get_known_hc_9941593(t_9855755, key_9855756, hc_9880601[0]);
      }
      
      F.line = 51;
      index_9890620 = subInt(-1, index_9890620);
      F.line = 52;
      raw_insert_9941108(t_9855755, t_9855755, "data", key_9855756, val_9855757, hc_9880601[0], index_9890620);
      F.line = 60;
      t_9855755.counter = addInt(t_9855755.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_9946002(t_9946007, key_9946008, val_9946009) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 862;
    HEX5BHEX5DHEX3D_9855749(t_9946007, key_9946008, val_9946009);
  framePtr = F.prev;

  
}
var color_names_9945892 = [new_table_9945747(64)];
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("aliceblue"), makeNimstrLit("F0F8FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("antiquewhite"), makeNimstrLit("FAEBD7"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("aqua"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("aquamarine"), makeNimstrLit("7FFFD4"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("azure"), makeNimstrLit("F0FFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("beige"), makeNimstrLit("F5F5DC"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("bisque"), makeNimstrLit("FFE4C4"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("black"), makeNimstrLit("000000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("blanchedalmond"), makeNimstrLit("FFEBCD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("blue"), makeNimstrLit("0000FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("blueviolet"), makeNimstrLit("8A2BE2"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("brown"), makeNimstrLit("A52A2A"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("burlywood"), makeNimstrLit("DEB887"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("cadetblue"), makeNimstrLit("5F9EA0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("chartreuse"), makeNimstrLit("7FFF00"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("chocolate"), makeNimstrLit("D2691E"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("coral"), makeNimstrLit("FF7F50"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("cornflowerblue"), makeNimstrLit("6495ED"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("cornsilk"), makeNimstrLit("FFF8DC"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("crimson"), makeNimstrLit("DC143C"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("cyan"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkblue"), makeNimstrLit("00008B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkcyan"), makeNimstrLit("008B8B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkgoldenrod"), makeNimstrLit("B8860B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkgray"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkgrey"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkgreen"), makeNimstrLit("006400"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkkhaki"), makeNimstrLit("BDB76B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkmagenta"), makeNimstrLit("8B008B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkolivegreen"), makeNimstrLit("556B2F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkorange"), makeNimstrLit("FF8C00"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkorchid"), makeNimstrLit("9932CC"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkred"), makeNimstrLit("8B0000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darksalmon"), makeNimstrLit("E9967A"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkseagreen"), makeNimstrLit("8FBC8F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkslateblue"), makeNimstrLit("483D8B"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkslategray"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkslategrey"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkturquoise"), makeNimstrLit("00CED1"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("darkviolet"), makeNimstrLit("9400D3"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("deeppink"), makeNimstrLit("FF1493"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("deepskyblue"), makeNimstrLit("00BFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("dimgray"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("dimgrey"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("dodgerblue"), makeNimstrLit("1E90FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("firebrick"), makeNimstrLit("B22222"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("floralwhite"), makeNimstrLit("FFFAF0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("forestgreen"), makeNimstrLit("228B22"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("fuchsia"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("gainsboro"), makeNimstrLit("DCDCDC"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("ghostwhite"), makeNimstrLit("F8F8FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("gold"), makeNimstrLit("FFD700"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("goldenrod"), makeNimstrLit("DAA520"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("gray"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("grey"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("green"), makeNimstrLit("008000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("greenyellow"), makeNimstrLit("ADFF2F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("honeydew"), makeNimstrLit("F0FFF0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("hotpink"), makeNimstrLit("FF69B4"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("indianred"), makeNimstrLit("CD5C5C"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("indigo"), makeNimstrLit("4B0082"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("ivory"), makeNimstrLit("FFFFF0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("khaki"), makeNimstrLit("F0E68C"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lavender"), makeNimstrLit("E6E6FA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lavenderblush"), makeNimstrLit("FFF0F5"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lawngreen"), makeNimstrLit("7CFC00"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lemonchiffon"), makeNimstrLit("FFFACD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightblue"), makeNimstrLit("ADD8E6"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightcoral"), makeNimstrLit("F08080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightcyan"), makeNimstrLit("E0FFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightgoldenrodyellow"), makeNimstrLit("FAFAD2"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightgray"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightgrey"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightgreen"), makeNimstrLit("90EE90"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightpink"), makeNimstrLit("FFB6C1"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightsalmon"), makeNimstrLit("FFA07A"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightseagreen"), makeNimstrLit("20B2AA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightskyblue"), makeNimstrLit("87CEFA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightslategray"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightslategrey"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightsteelblue"), makeNimstrLit("B0C4DE"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lightyellow"), makeNimstrLit("FFFFE0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("lime"), makeNimstrLit("00FF00"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("limegreen"), makeNimstrLit("32CD32"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("linen"), makeNimstrLit("FAF0E6"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("magenta"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("maroon"), makeNimstrLit("800000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumaquamarine"), makeNimstrLit("66CDAA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumblue"), makeNimstrLit("0000CD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumorchid"), makeNimstrLit("BA55D3"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumpurple"), makeNimstrLit("9370DB"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumseagreen"), makeNimstrLit("3CB371"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumslateblue"), makeNimstrLit("7B68EE"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumspringgreen"), makeNimstrLit("00FA9A"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumturquoise"), makeNimstrLit("48D1CC"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mediumvioletred"), makeNimstrLit("C71585"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("midnightblue"), makeNimstrLit("191970"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mintcream"), makeNimstrLit("F5FFFA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("mistyrose"), makeNimstrLit("FFE4E1"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("moccasin"), makeNimstrLit("FFE4B5"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("navajowhite"), makeNimstrLit("FFDEAD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("navy"), makeNimstrLit("000080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("oldlace"), makeNimstrLit("FDF5E6"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("olive"), makeNimstrLit("808000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("olivedrab"), makeNimstrLit("6B8E23"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("orange"), makeNimstrLit("FFA500"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("orangered"), makeNimstrLit("FF4500"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("orchid"), makeNimstrLit("DA70D6"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("palegoldenrod"), makeNimstrLit("EEE8AA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("palegreen"), makeNimstrLit("98FB98"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("paleturquoise"), makeNimstrLit("AFEEEE"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("palevioletred"), makeNimstrLit("DB7093"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("papayawhip"), makeNimstrLit("FFEFD5"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("peachpuff"), makeNimstrLit("FFDAB9"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("peru"), makeNimstrLit("CD853F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("pink"), makeNimstrLit("FFC0CB"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("plum"), makeNimstrLit("DDA0DD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("powderblue"), makeNimstrLit("B0E0E6"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("purple"), makeNimstrLit("800080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("rebeccapurple"), makeNimstrLit("663399"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("red"), makeNimstrLit("FF0000"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("rosybrown"), makeNimstrLit("BC8F8F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("royalblue"), makeNimstrLit("4169E1"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("saddlebrown"), makeNimstrLit("8B4513"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("salmon"), makeNimstrLit("FA8072"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("sandybrown"), makeNimstrLit("F4A460"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("seagreen"), makeNimstrLit("2E8B57"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("seashell"), makeNimstrLit("FFF5EE"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("sienna"), makeNimstrLit("A0522D"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("silver"), makeNimstrLit("C0C0C0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("skyblue"), makeNimstrLit("87CEEB"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("slateblue"), makeNimstrLit("6A5ACD"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("slategray"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("slategrey"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("snow"), makeNimstrLit("FFFAFA"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("springgreen"), makeNimstrLit("00FF7F"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("steelblue"), makeNimstrLit("4682B4"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("tan"), makeNimstrLit("D2B48C"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("teal"), makeNimstrLit("008080"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("thistle"), makeNimstrLit("D8BFD8"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("tomato"), makeNimstrLit("FF6347"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("turquoise"), makeNimstrLit("40E0D0"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("violet"), makeNimstrLit("EE82EE"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("wheat"), makeNimstrLit("F5DEB3"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("white"), makeNimstrLit("FFFFFF"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("whitesmoke"), makeNimstrLit("F5F5F5"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("yellow"), makeNimstrLit("FFFF00"));
HEX5BHEX5DHEX3D_9946002(color_names_9945892[0], makeNimstrLit("yellowgreen"), makeNimstrLit("9ACD32"));
function new_seq_10316247(len_10316250) {
  var result_10316252 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_10316252 = new Array(len_10316250); for (var i=0;i<len_10316250;++i) {result_10316252[i]=false;}  framePtr = F.prev;

  return result_10316252;

}
var button_down_10316290 = [new_seq_10316247(348)];
var button_release_10316308 = [new_seq_10316247(348)];
var button_toggle_10316326 = [new_seq_10316247(348)];
var button_press_10316344 = [new_seq_10316247(348)];
function init_table_10316436(initial_size_10316440) {
  var result_10316442 = {data: null, counter: 0};

  var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_1080029(initial_size_10316440))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 128;
    result_10316442.counter = 0;
    F.line = 129;
    result_10316442.data = new Array(chckRange(initial_size_10316440, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_10316440, 0, 2147483647);++i) {result_10316442.data[i]={Field0: 0, Field1: 0, Field2: 0};}  framePtr = F.prev;

  return result_10316442;

}
function next_power_of_two_1085014(x_1085016) {
  var result_1085017 = 0;

    result_1085017 = (x_1085016 - 1);
    result_1085017 = (result_1085017 | (result_1085017 >> 16));
    result_1085017 = (result_1085017 | (result_1085017 >> 8));
    result_1085017 = (result_1085017 | (result_1085017 >> 4));
    result_1085017 = (result_1085017 | (result_1085017 >> 2));
    result_1085017 = (result_1085017 | (result_1085017 >> 1));
    result_1085017 += (1 + ((x_1085016 <= 0) ? 1:0));

  return result_1085017;

}
function right_size_9740048(count_9740050) {
  var result_9740051 = 0;

  var F={procname:"tables.rightSize",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 43;
    result_9740051 = next_power_of_two_1085014(addInt(divInt(mulInt(count_9740050, 3), 2), 4));
  framePtr = F.prev;

  return result_9740051;

}
function hash_9675440(x_9675443) {
  var result_9675444 = 0;

  var F={procname:"hash.hash",prev:framePtr,filename:"hashes.nim",line:0};
  framePtr = F;
    F.line = 116;
    result_9675444 = x_9675443;
  framePtr = F.prev;

  return result_9675444;

}
function raw_get_10360602(t_10360606, key_10360607, hc_10360608, hc_10360608_Idx) {
            var Tmp3;

  var result_10360609 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_10360608[hc_10360608_Idx] = hash_9675440(key_10360607);
    if ((hc_10360608[hc_10360608_Idx] == 0)) {
    F.line = 65;
    hc_10360608[hc_10360608_Idx] = 314159265;
    }
    
    if (((t_10360606.data != null ? t_10360606.data.length : 0) == 0)) {
    F.line = 47;
    result_10360609 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_10370138 = (hc_10360608[hc_10360608_Idx] & (t_10360606.data != null ? (t_10360606.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_10360606.data[chckIndx(h_10370138, 0, (t_10360606.data != null ? t_10360606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_10360606.data[chckIndx(h_10370138, 0, (t_10360606.data != null ? t_10360606.data.length : 0)+0-1)-0].Field0 == hc_10360608[hc_10360608_Idx])) Tmp3 = false; else {              Tmp3 = (t_10360606.data[chckIndx(h_10370138, 0, (t_10360606.data != null ? t_10360606.data.length : 0)+0-1)-0].Field1 == key_10360607);            }          if (Tmp3) {
          F.line = 55;
          result_10360609 = h_10370138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_10370138 = next_try_9740014(h_10370138, (t_10360606.data != null ? (t_10360606.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_10360609 = subInt(-1, h_10370138);
  } while (false);
  framePtr = F.prev;

  return result_10360609;

}
function must_rehash_10395601(t_10395604) {
  var result_10395605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_10395604.counter < (t_10395604.data != null ? t_10395604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_10395605 = ((mulInt((t_10395604.data != null ? t_10395604.data.length : 0), 2) < mulInt(t_10395604.counter, 3)) || (subInt((t_10395604.data != null ? t_10395604.data.length : 0), t_10395604.counter) < 4));
  framePtr = F.prev;

  return result_10395605;

}
function raw_insert_10421108(t_10421114, data_10421117, data_10421117_Idx, key_10421118, val_10421119, hc_10421120, h_10421121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_10421117[data_10421117_Idx][chckIndx(h_10421121, 0, (data_10421117[data_10421117_Idx] != null ? data_10421117[data_10421117_Idx].length : 0)+0-1)-0].Field1 = key_10421118;
    F.line = 23;
    data_10421117[data_10421117_Idx][chckIndx(h_10421121, 0, (data_10421117[data_10421117_Idx] != null ? data_10421117[data_10421117_Idx].length : 0)+0-1)-0].Field2 = val_10421119;
    F.line = 24;
    data_10421117[data_10421117_Idx][chckIndx(h_10421121, 0, (data_10421117[data_10421117_Idx] != null ? data_10421117[data_10421117_Idx].length : 0)+0-1)-0].Field0 = hc_10421120;
  framePtr = F.prev;

  
}
function enlarge_10420161(t_10420167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_10420175 = null;
    F.line = 268;
    n_10420175 = new Array(chckRange(mulInt((t_10420167.data != null ? t_10420167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_10420167.data != null ? t_10420167.data.length : 0), 2), 0, 2147483647);++i) {n_10420175[i]={Field0: 0, Field1: 0, Field2: 0};}    F.line = 269;
    var Tmp1 = t_10420167.data; t_10420167.data = n_10420175; n_10420175 = Tmp1;    L2: do {
      F.line = 270;
      var i_10420334 = 0;
      F.line = 39;
      var colontmp__10426067 = 0;
      F.line = 270;
      colontmp__10426067 = (n_10420175 != null ? (n_10420175.length-1) : -1);
      F.line = 56;
      var res_10426068 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_10426068 <= colontmp__10426067)) break L4;
            F.line = 270;
            i_10420334 = res_10426068;
            F.line = 271;
            var eh_10420483 = n_10420175[chckIndx(i_10420334, 0, (n_10420175 != null ? n_10420175.length : 0)+0-1)-0].Field0;
            if (is_filled_9737018(eh_10420483)) {
            F.line = 273;
            var j_10420490 = (eh_10420483 & (t_10420167.data != null ? (t_10420167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_9737018(t_10420167.data[chckIndx(j_10420490, 0, (t_10420167.data != null ? t_10420167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_10420490 = next_try_9740014(j_10420490, (t_10420167.data != null ? (t_10420167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_10421108(t_10420167, t_10420167, "data", n_10420175[chckIndx(i_10420334, 0, (n_10420175 != null ? n_10420175.length : 0)+0-1)-0].Field1, n_10420175[chckIndx(i_10420334, 0, (n_10420175 != null ? n_10420175.length : 0)+0-1)-0].Field2, eh_10420483, j_10420490);
            }
            
            F.line = 59;
            res_10426068 = addInt(res_10426068, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_10421608(t_10421612, key_10421613, hc_10421614) {
  var result_10421615 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_10421612.data != null ? t_10421612.data.length : 0) == 0)) {
    F.line = 47;
    result_10421615 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_10425138 = (hc_10421614 & (t_10421612.data != null ? (t_10421612.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_10421612.data[chckIndx(h_10425138, 0, (t_10421612.data != null ? t_10421612.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_10421612.data[chckIndx(h_10425138, 0, (t_10421612.data != null ? t_10421612.data.length : 0)+0-1)-0].Field0 == hc_10421614) && (t_10421612.data[chckIndx(h_10425138, 0, (t_10421612.data != null ? t_10421612.data.length : 0)+0-1)-0].Field1 == key_10421613))) {
          F.line = 55;
          result_10421615 = h_10425138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_10425138 = next_try_9740014(h_10425138, (t_10421612.data != null ? (t_10421612.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_10421615 = subInt(-1, h_10425138);
  } while (false);
  framePtr = F.prev;

  return result_10421615;

}
function HEX5BHEX5DHEX3D_10335789(t_10335795, key_10335796, val_10335797) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_10335795.data != null ? t_10335795.data.length : 0) == 0)) {
    if (!(is_power_of_two_1080029(64))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 128;
    t_10335795.counter = 0;
    F.line = 129;
    t_10335795.data = new Array(64); for (var i=0;i<64;++i) {t_10335795.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    F.line = 57;
    var hc_10360601 = [0];
    F.line = 58;
    var index_10370618 = raw_get_10360602(t_10335795, key_10335796, hc_10360601, 0);
    if ((0 <= index_10370618)) {
    F.line = 59;
    t_10335795.data[chckIndx(index_10370618, 0, (t_10335795.data != null ? t_10335795.data.length : 0)+0-1)-0].Field2 = val_10335797;
    }
    else {
      if (((t_10335795.data != null ? t_10335795.data.length : 0) == 0)) {
      if (!(is_power_of_two_1080029(64))) {
      F.line = 127;
      failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 128;
      t_10335795.counter = 0;
      F.line = 129;
      t_10335795.data = new Array(64); for (var i=0;i<64;++i) {t_10335795.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (must_rehash_10395601(t_10335795)) {
      F.line = 49;
      enlarge_10420161(t_10335795);
      F.line = 50;
      index_10370618 = raw_get_known_hc_10421608(t_10335795, key_10335796, hc_10360601[0]);
      }
      
      F.line = 51;
      index_10370618 = subInt(-1, index_10370618);
      F.line = 52;
      raw_insert_10421108(t_10335795, t_10335795, "data", key_10335796, val_10335797, hc_10360601[0], index_10370618);
      F.line = 60;
      t_10335795.counter = addInt(t_10335795.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function to_table_10316411(pairs_10316417) {
  var result_10316433 = [{data: null, counter: 0}];

  var F={procname:"toTable.toTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 338;
    nimCopy(result_10316433[0], init_table_10316436(right_size_9740048(chckRange((pairs_10316417 != null ? pairs_10316417.length : 0), 0, 2147483647))), NTI10316420);
    L1: do {
      F.line = 339;
      var key_10335678 = 0;
      F.line = 339;
      var val_10335679 = 0;
      F.line = 3;
      var i_10426061 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_10426061 < (pairs_10316417 != null ? pairs_10316417.length : 0))) break L3;
            F.line = 339;
            key_10335678 = pairs_10316417[chckIndx(i_10426061, 0, (pairs_10316417 != null ? pairs_10316417.length : 0)+0-1)-0]["Field0"];
            F.line = 5;
            val_10335679 = pairs_10316417[chckIndx(i_10426061, 0, (pairs_10316417 != null ? pairs_10316417.length : 0)+0-1)-0]["Field1"];
            F.line = 339;
            HEX5BHEX5DHEX3D_10335789(result_10316433[0], key_10335678, val_10335679);
            F.line = 6;
            i_10426061 = addInt(i_10426061, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_10316433[0];

}
var mouse_button_to_button_10425676 = to_table_10316411([{Field0: 0, Field1: 1}, {Field0: 2, Field1: 2}, {Field0: 1, Field1: 3}, {Field0: 3, Field1: 4}, {Field0: 4, Field1: 5}]);
var key_code_to_button_10425972 = to_table_10316411([{Field0: 32, Field1: 32}, {Field0: 222, Field1: 39}, {Field0: 188, Field1: 44}, {Field0: 189, Field1: 45}, {Field0: 190, Field1: 46}, {Field0: 191, Field1: 47}, {Field0: 48, Field1: 48}, {Field0: 49, Field1: 49}, {Field0: 50, Field1: 50}, {Field0: 51, Field1: 51}, {Field0: 52, Field1: 52}, {Field0: 53, Field1: 53}, {Field0: 54, Field1: 54}, {Field0: 55, Field1: 55}, {Field0: 56, Field1: 56}, {Field0: 57, Field1: 57}, {Field0: 186, Field1: 59}, {Field0: 187, Field1: 61}, {Field0: 65, Field1: 65}, {Field0: 66, Field1: 66}, {Field0: 67, Field1: 67}, {Field0: 68, Field1: 68}, {Field0: 69, Field1: 69}, {Field0: 70, Field1: 70}, {Field0: 71, Field1: 71}, {Field0: 72, Field1: 72}, {Field0: 73, Field1: 73}, {Field0: 74, Field1: 74}, {Field0: 75, Field1: 75}, {Field0: 76, Field1: 76}, {Field0: 77, Field1: 77}, {Field0: 78, Field1: 78}, {Field0: 79, Field1: 79}, {Field0: 80, Field1: 80}, {Field0: 81, Field1: 81}, {Field0: 82, Field1: 82}, {Field0: 83, Field1: 83}, {Field0: 84, Field1: 84}, {Field0: 85, Field1: 85}, {Field0: 86, Field1: 86}, {Field0: 87, Field1: 87}, {Field0: 88, Field1: 88}, {Field0: 89, Field1: 89}, {Field0: 90, Field1: 90}, {Field0: 219, Field1: 91}, {Field0: 220, Field1: 92}, {Field0: 221, Field1: 93}, {Field0: 192, Field1: 96}, {Field0: 0, Field1: 161}, {Field0: 0, Field1: 162}, {Field0: 27, Field1: 256}, {Field0: 13, Field1: 257}, {Field0: 9, Field1: 258}, {Field0: 8, Field1: 259}, {Field0: 45, Field1: 260}, {Field0: 46, Field1: 261}, {Field0: 39, Field1: 262}, {Field0: 37, Field1: 263}, {Field0: 40, Field1: 264}, {Field0: 38, Field1: 265}, {Field0: 33, Field1: 266}, {Field0: 34, Field1: 267}, {Field0: 36, Field1: 268}, {Field0: 35, Field1: 269}, {Field0: 20, Field1: 280}, {Field0: 145, Field1: 281}, {Field0: 144, Field1: 282}, {Field0: 44, Field1: 283}, {Field0: 19, Field1: 284}, {Field0: 112, Field1: 290}, {Field0: 113, Field1: 291}, {Field0: 114, Field1: 292}, {Field0: 115, Field1: 293}, {Field0: 116, Field1: 294}, {Field0: 117, Field1: 295}, {Field0: 118, Field1: 296}, {Field0: 119, Field1: 297}, {Field0: 120, Field1: 298}, {Field0: 121, Field1: 299}, {Field0: 122, Field1: 300}, {Field0: 124, Field1: 301}, {Field0: 96, Field1: 320}, {Field0: 97, Field1: 321}, {Field0: 98, Field1: 322}, {Field0: 99, Field1: 323}, {Field0: 100, Field1: 324}, {Field0: 101, Field1: 325}, {Field0: 102, Field1: 326}, {Field0: 103, Field1: 327}, {Field0: 104, Field1: 328}, {Field0: 105, Field1: 329}, {Field0: 110, Field1: 330}, {Field0: 111, Field1: 331}, {Field0: 106, Field1: 332}, {Field0: 109, Field1: 333}, {Field0: 107, Field1: 334}, {Field0: 0, Field1: 335}, {Field0: 0, Field1: 336}, {Field0: 16, Field1: 340}, {Field0: 17, Field1: 341}, {Field0: 18, Field1: 342}, {Field0: 91, Field1: 343}, {Field0: 0, Field1: 344}, {Field0: 0, Field1: 345}, {Field0: 0, Field1: 346}, {Field0: 92, Field1: 347}, {Field0: 93, Field1: 343}]);
var state_10487005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_10820231 = [null];
var local_instance_10820232 = [null];
var parent_12582382 = [null];
var root_12582383 = [null];
var prev_root_12582384 = [null];
var node_stack_12582386 = [null];
var current_12582387 = [null];
var scroll_box_12582388 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mega_12582389 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mini_12582390 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var mouse_12582391 = [{pos: {x: 0.0, y: 0.0}, delta: {x: 0.0, y: 0.0}, prevPos: {x: 0.0, y: 0.0}, pixelScale: 0.0, wheelDelta: 0.0, cursorStyle: 0}];
var keyboard_12582392 = [{state: 0, consumed: false, keyString: null, altKey: false, ctrlKey: false, shiftKey: false, superKey: false, focusNode: null, onFocusNode: null, onUnFocusNode: null, input: null, textCursor: 0, selectionCursor: 0}];
var requested_frame_12582393 = [false];
var num_nodes_12582394 = [0];
var popup_active_12582395 = [false];
var in_popup_12582396 = [false];
var fullscreen_12582397 = [false];
var window_size_12582398 = [{x: 0.0, y: 0.0}];
var window_frame_12582399 = [{x: 0.0, y: 0.0}];
var pixel_ratio_12582400 = [0.0];
var path_checker_12582423 = [{data: null, counter: 0}];
var compute_text_layout_12582427 = [null];
var last_uid_12582428 = [0];
var node_lookup_12582451 = [{data: null, counter: 0}];
var data_dir_12582452 = [makeNimstrLit("data")];
var http_calls_12582475 = [{data: null, counter: 0}];
mouse_12582391[0] = {pos: {x: 0.0, y: 0.0}, delta: {x: 0.0, y: 0.0}, prevPos: {x: 0.0, y: 0.0}, pixelScale: 0.0, wheelDelta: 0.0, cursorStyle: 0};
nimCopy(mouse_12582391[0].pos, {x: 0.0, y: 0.0}, NTI11470052);
var draw_main_12707004 = [null];
var tick_main_12707007 = [null];
var env_computed_13120810 = [false];
var environment_13120812 = [null];
var root_dom_node_13307025 = [null];
var canvas_node_13307026 = [null];
var ctx_13307027 = [null];
var force_text_re_layout_13307028 = [false];
var perf_13307029 = [{drawMain: 0.0, numLowLevelCalls: 0}];
var color_cache_13307052 = [{data: null, counter: 0}];
function removeTextSelection() {
  var F={procname:"htmlbackend.removeTextSelection",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 57;
    window.document.getSelection().removeAllRanges();
  framePtr = F.prev;

  
}
function init_table_13410169(initial_size_13410173) {
  var result_13410175 = {data: null, counter: 0};

  var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_1080029(initial_size_13410173))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 128;
    result_13410175.counter = 0;
    F.line = 129;
    result_13410175.data = new Array(chckRange(initial_size_13410173, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13410173, 0, 2147483647);++i) {result_13410175.data[i]={Field0: 0, Field1: null, Field2: {x: 0.0, y: 0.0}};}  framePtr = F.prev;

  return result_13410175;

}
function new_table_13520747(initial_size_13520751) {
  var result_13520753 = null;

  var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 798;
    result_13520753 = {data: null, counter: 0};
    F.line = 799;
    nimCopy(result_13520753, init_table_13410169(initial_size_13520751), NTI13410068);
  framePtr = F.prev;

  return result_13520753;

}
var compute_text_box_cache_13520892 = [new_table_13520747(64)];
var temp_div_13520893 = [null];
function raw_get_13455602(t_13455606, key_13455607, hc_13455608, hc_13455608_Idx) {
            var Tmp3;

  var result_13455609 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_13455608[hc_13455608_Idx] = hash_9715214(key_13455607);
    if ((hc_13455608[hc_13455608_Idx] == 0)) {
    F.line = 65;
    hc_13455608[hc_13455608_Idx] = 314159265;
    }
    
    if (((t_13455606.data != null ? t_13455606.data.length : 0) == 0)) {
    F.line = 47;
    result_13455609 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_13465138 = (hc_13455608[hc_13455608_Idx] & (t_13455606.data != null ? (t_13455606.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_13455606.data[chckIndx(h_13465138, 0, (t_13455606.data != null ? t_13455606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_13455606.data[chckIndx(h_13465138, 0, (t_13455606.data != null ? t_13455606.data.length : 0)+0-1)-0].Field0 == hc_13455608[hc_13455608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13455606.data[chckIndx(h_13465138, 0, (t_13455606.data != null ? t_13455606.data.length : 0)+0-1)-0].Field1, key_13455607);            }          if (Tmp3) {
          F.line = 55;
          result_13455609 = h_13465138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_13465138 = next_try_9740014(h_13465138, (t_13455606.data != null ? (t_13455606.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_13455609 = subInt(-1, h_13465138);
  } while (false);
  framePtr = F.prev;

  return result_13455609;

}
function has_key_13525458(t_13525463, key_13525464) {
  var result_13525465 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 395;
    var hc_13525466 = [0];
    F.line = 396;
    result_13525465 = (0 <= raw_get_13455602(t_13525463, key_13525464, hc_13525466, 0));
  framePtr = F.prev;

  return result_13525465;

}
function has_key_13525197(t_13525202, key_13525203) {
  var result_13525204 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 880;
    result_13525204 = has_key_13525458(t_13525202, key_13525203);
  framePtr = F.prev;

  return result_13525204;

}
function contains_13525117(t_13525122, key_13525123) {
  var result_13525124 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 890;
    result_13525124 = has_key_13525197(t_13525122, key_13525123);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13525124;

}
function HEX5BHEX5D_13525955(t_13525961, key_13525962) {
  var result_13525964 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym9740414_13525965 = [0];
    F.line = 258;
    var indexHEX60gensym9740415_13525974 = raw_get_13455602(t_13525961, key_13525962, hcHEX60gensym9740414_13525965, 0);
    if ((0 <= indexHEX60gensym9740415_13525974)) {
    F.line = 259;
    result_13525964 = t_13525961.data[chckIndx(indexHEX60gensym9740415_13525974, 0, (t_13525961.data != null ? t_13525961.data.length : 0)+0-1)-0].Field2;
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_13525962 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return result_13525964;

}
function HEX5BHEX5D_13525658(t_13525663, key_13525664) {
  var result_13525666 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 846;
    result_13525666 = HEX5BHEX5D_13525955(t_13525663, key_13525664);
  framePtr = F.prev;

  return result_13525666;

}
function must_rehash_13490601(t_13490604) {
  var result_13490605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_13490604.counter < (t_13490604.data != null ? t_13490604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_13490605 = ((mulInt((t_13490604.data != null ? t_13490604.data.length : 0), 2) < mulInt(t_13490604.counter, 3)) || (subInt((t_13490604.data != null ? t_13490604.data.length : 0), t_13490604.counter) < 4));
  framePtr = F.prev;

  return result_13490605;

}
function raw_insert_13516108(t_13516114, data_13516117, data_13516117_Idx, key_13516118, val_13516119, hc_13516120, h_13516121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_13516117[data_13516117_Idx][chckIndx(h_13516121, 0, (data_13516117[data_13516117_Idx] != null ? data_13516117[data_13516117_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_13516118, NTI112);
    F.line = 23;
    nimCopy(data_13516117[data_13516117_Idx][chckIndx(h_13516121, 0, (data_13516117[data_13516117_Idx] != null ? data_13516117[data_13516117_Idx].length : 0)+0-1)-0].Field2, val_13516119, NTI11470052);
    F.line = 24;
    data_13516117[data_13516117_Idx][chckIndx(h_13516121, 0, (data_13516117[data_13516117_Idx] != null ? data_13516117[data_13516117_Idx].length : 0)+0-1)-0].Field0 = hc_13516120;
  framePtr = F.prev;

  
}
function enlarge_13515161(t_13515167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_13515175 = null;
    F.line = 268;
    n_13515175 = new Array(chckRange(mulInt((t_13515167.data != null ? t_13515167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13515167.data != null ? t_13515167.data.length : 0), 2), 0, 2147483647);++i) {n_13515175[i]={Field0: 0, Field1: null, Field2: {x: 0.0, y: 0.0}};}    F.line = 269;
    var Tmp1 = t_13515167.data; t_13515167.data = n_13515175; n_13515175 = Tmp1;    L2: do {
      F.line = 270;
      var i_13515334 = 0;
      F.line = 39;
      var colontmp__13530537 = 0;
      F.line = 270;
      colontmp__13530537 = (n_13515175 != null ? (n_13515175.length-1) : -1);
      F.line = 56;
      var res_13530538 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_13530538 <= colontmp__13530537)) break L4;
            F.line = 270;
            i_13515334 = res_13530538;
            F.line = 271;
            var eh_13515483 = n_13515175[chckIndx(i_13515334, 0, (n_13515175 != null ? n_13515175.length : 0)+0-1)-0].Field0;
            if (is_filled_9737018(eh_13515483)) {
            F.line = 273;
            var j_13515490 = (eh_13515483 & (t_13515167.data != null ? (t_13515167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_9737018(t_13515167.data[chckIndx(j_13515490, 0, (t_13515167.data != null ? t_13515167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_13515490 = next_try_9740014(j_13515490, (t_13515167.data != null ? (t_13515167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_13516108(t_13515167, t_13515167, "data", n_13515175[chckIndx(i_13515334, 0, (n_13515175 != null ? n_13515175.length : 0)+0-1)-0].Field1, n_13515175[chckIndx(i_13515334, 0, (n_13515175 != null ? n_13515175.length : 0)+0-1)-0].Field2, eh_13515483, j_13515490);
            }
            
            F.line = 59;
            res_13530538 = addInt(res_13530538, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_13516593(t_13516597, key_13516598, hc_13516599) {
  var result_13516600 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_13516597.data != null ? t_13516597.data.length : 0) == 0)) {
    F.line = 47;
    result_13516600 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_13520138 = (hc_13516599 & (t_13516597.data != null ? (t_13516597.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_13516597.data[chckIndx(h_13520138, 0, (t_13516597.data != null ? t_13516597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_13516597.data[chckIndx(h_13520138, 0, (t_13516597.data != null ? t_13516597.data.length : 0)+0-1)-0].Field0 == hc_13516599) && eqStrings(t_13516597.data[chckIndx(h_13520138, 0, (t_13516597.data != null ? t_13516597.data.length : 0)+0-1)-0].Field1, key_13516598))) {
          F.line = 55;
          result_13516600 = h_13520138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_13520138 = next_try_9740014(h_13520138, (t_13516597.data != null ? (t_13516597.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_13516600 = subInt(-1, h_13520138);
  } while (false);
  framePtr = F.prev;

  return result_13516600;

}
function HEX5BHEX5DHEX3D_13430789(t_13430795, key_13430796, val_13430797) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_13430795.data != null ? t_13430795.data.length : 0) == 0)) {
    if (!(is_power_of_two_1080029(64))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 128;
    t_13430795.counter = 0;
    F.line = 129;
    t_13430795.data = new Array(64); for (var i=0;i<64;++i) {t_13430795.data[i]={Field0: 0, Field1: null, Field2: {x: 0.0, y: 0.0}};}    }
    
    F.line = 57;
    var hc_13455601 = [0];
    F.line = 58;
    var index_13465620 = raw_get_13455602(t_13430795, key_13430796, hc_13455601, 0);
    if ((0 <= index_13465620)) {
    F.line = 59;
    nimCopy(t_13430795.data[chckIndx(index_13465620, 0, (t_13430795.data != null ? t_13430795.data.length : 0)+0-1)-0].Field2, val_13430797, NTI11470052);
    }
    else {
      if (((t_13430795.data != null ? t_13430795.data.length : 0) == 0)) {
      if (!(is_power_of_two_1080029(64))) {
      F.line = 127;
      failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 128;
      t_13430795.counter = 0;
      F.line = 129;
      t_13430795.data = new Array(64); for (var i=0;i<64;++i) {t_13430795.data[i]={Field0: 0, Field1: null, Field2: {x: 0.0, y: 0.0}};}      }
      
      if (must_rehash_13490601(t_13430795)) {
      F.line = 49;
      enlarge_13515161(t_13430795);
      F.line = 50;
      index_13465620 = raw_get_known_hc_13516593(t_13430795, key_13430796, hc_13455601[0]);
      }
      
      F.line = 51;
      index_13465620 = subInt(-1, index_13465620);
      F.line = 52;
      raw_insert_13516108(t_13430795, t_13430795, "data", key_13430796, val_13430797, hc_13455601[0], index_13465620);
      F.line = 60;
      t_13430795.counter = addInt(t_13430795.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX5BHEX5DHEX3D_13530158(t_13530163, key_13530164, val_13530165) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 862;
    HEX5BHEX5DHEX3D_13430789(t_13530163, key_13530164, val_13530165);
  framePtr = F.prev;

  
}
function compute_text_box_13520907(text_13520909, width_13520910, font_name_13520911, font_size_13520912, font_weight_13520913, line_height_13520914) {
  var result_13520915 = {x: 0.0, y: 0.0};

  var F={procname:"htmlbackend.computeTextBox",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 72;
    var key_13520916 = (text_13520909 || []).concat(cstrToNimstr((width_13520910)+"") || [],font_name_13520911 || [],cstrToNimstr((font_size_13520912)+"") || []);
    if (contains_13525117(compute_text_box_cache_13520892[0], key_13520916)) {
    F.line = 74;
    nimCopy(result_13520915, HEX5BHEX5D_13525658(compute_text_box_cache_13520892[0], key_13520916), NTI11470052);
    break BeforeRet;
    }
    
    if ((temp_div_13520893[0] == null)) {
    F.line = 76;
    temp_div_13520893[0] = document.createElement("div");
    F.line = 77;
    root_dom_node_13307025[0].appendChild(temp_div_13520893[0]);
    F.line = 78;
    temp_div_13520893[0].style.position = "absolute";
    F.line = 79;
    temp_div_13520893[0].style.left = "-10000px";
    F.line = 80;
    temp_div_13520893[0].style.top = "-10000px";
    }
    
    F.line = 82;
    temp_div_13520893[0].style.fontSize = toJSStr((cstrToNimstr((font_size_13520912)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 83;
    temp_div_13520893[0].style.lineHeight = toJSStr((cstrToNimstr((line_height_13520914)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 84;
    temp_div_13520893[0].style.fontFamily = toJSStr(font_name_13520911);
    F.line = 85;
    temp_div_13520893[0].style.fontWeight = toJSStr(cstrToNimstr((font_weight_13520913)+""));
    F.line = 86;
    temp_div_13520893[0].style.maxWidth = toJSStr((cstrToNimstr((width_13520910)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 88;
    temp_div_13520893[0].innerText = toJSStr(text_13520909);
    F.line = 90;
    result_13520915.x = temp_div_13520893[0].clientWidth;
    F.line = 91;
    result_13520915.y = temp_div_13520893[0].clientHeight;
    F.line = 92;
    HEX5BHEX5DHEX3D_13530158(compute_text_box_cache_13520892[0], key_13520916, result_13520915);
  } while (false);
  framePtr = F.prev;

  return result_13520915;

}
function HEX3Aanonymous_13530470(node_13530472) {
  var F={procname:"htmlbackend.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 95;
    var size_13530473 = compute_text_box_13520907(node_13530472.text, node_13530472.box.w, node_13530472.textStyle.fontFamily, node_13530472.textStyle.fontSize, node_13530472.textStyle.fontWeight, node_13530472.textStyle.lineHeight);
    F.line = 103;
    node_13530472.textLayoutWidth = size_13530473.x;
    F.line = 104;
    node_13530472.textLayoutHeight = size_13530473.y;
  framePtr = F.prev;

  
}
compute_text_layout_12582427[0] = HEX3Aanonymous_13530470;
function init_table_13530665(initial_size_13530669) {
  var result_13530671 = {data: null, counter: 0};

  var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (!(is_power_of_two_1080029(initial_size_13530669))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    F.line = 128;
    result_13530671.counter = 0;
    F.line = 129;
    result_13530671.data = new Array(chckRange(initial_size_13530669, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13530669, 0, 2147483647);++i) {result_13530671.data[i]={Field0: 0, Field1: null, Field2: 0.0};}  framePtr = F.prev;

  return result_13530671;

}
function new_table_13640747(initial_size_13640751) {
  var result_13640753 = null;

  var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 798;
    result_13640753 = {data: null, counter: 0};
    F.line = 799;
    nimCopy(result_13640753, init_table_13530665(initial_size_13640751), NTI13530564);
  framePtr = F.prev;

  return result_13640753;

}
var base_line_cache_13640892 = [new_table_13640747(64)];
var start_time_13995117 = [0.0];
var prev_mouse_cursor_style_13995118 = [0];
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2943;
    var first_341028 = nimMax(first_341025, 0);
    F.line = 2944;
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    F.line = 2945;
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2946;
      var i_341039 = 0;
      F.line = 66;
      var colontmp__10295044 = 0;
      F.line = 2946;
      colontmp__10295044 = subInt(l_341030, 1);
      F.line = 77;
      var res_10295045 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_10295045 <= colontmp__10295044)) break L3;
            F.line = 2946;
            i_341039 = res_10295045;
            F.line = 2947;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            F.line = 80;
            res_10295045 = addInt(res_10295045, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_341027;

}
function nsuStrip(s_9620118, leading_9620119, trailing_9620120, chars_9620122) {
          var Tmp5;

  var result_9620123 = null;

  var F={procname:"strutils.strip",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2784;
    var first_9620125 = 0;
    F.line = 2785;
    var last_9620126 = subInt((s_9620118 != null ? s_9620118.length : 0), 1);
    if (leading_9620119) {
    L1: do {
      F.line = 2787;
        L2: while (true) {
        if (!((first_9620125 <= last_9620126) && (chars_9620122[s_9620118[chckIndx(first_9620125, 0, (s_9620118 != null ? s_9620118.length : 0)+0-1)-0]] != undefined))) break L2;
          F.line = 2787;
          first_9620125 = addInt(first_9620125, 1);
        }
    } while(false);
    }
    
    if (trailing_9620120) {
    L3: do {
      F.line = 2789;
        L4: while (true) {
          if (!(0 <= last_9620126)) Tmp5 = false; else {            Tmp5 = (chars_9620122[s_9620118[chckIndx(last_9620126, 0, (s_9620118 != null ? s_9620118.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp5) break L4;
          F.line = 2789;
          last_9620126 = subInt(last_9620126, 1);
        }
    } while(false);
    }
    
    F.line = 2790;
    result_9620123 = nimCopy(null, substr_341022(s_9620118, first_9620125, last_9620126), NTI112);
  framePtr = F.prev;

  return result_9620123;

}
function c2n_10045014(hex_10045016, i_10045017) {
  var result_10045018 = 0;

  var F={procname:"chroma.c2n",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 41;
    var c_10045023 = hex_10045016[chckIndx(i_10045017, 0, (hex_10045016 != null ? hex_10045016.length : 0)+0-1)-0];
    F.line = 42;
    switch (c_10045023) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      F.line = 43;
      result_10045018 = subInt(c_10045023, 48);
      break BeforeRet;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      F.line = 44;
      result_10045018 = subInt(addInt(10, c_10045023), 97);
      break BeforeRet;
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      F.line = 45;
      result_10045018 = subInt(addInt(10, c_10045023), 65);
      break BeforeRet;
      break;
    default: 
      F.line = 47;
      raiseException({message: makeNimstrLit("format is not hex"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_10045018;

}
function parse_html_hex_tiny_10130066(hex_10130068) {
  var result_10130069 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlHexTiny",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    if (!((hex_10130068[chckIndx(0, 0, (hex_10130068 != null ? hex_10130068.length : 0)+0-1)-0] == 35))) {
    F.line = 122;
    raiseException({message: makeNimstrLit("Expected \'#\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    if (!(((hex_10130068 != null ? hex_10130068.length : 0) == 4))) {
    F.line = 123;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.nimble/pkgs/chroma-0.1.0/chroma.nim(123, 10) `hex.len == 4` "));
    }
    
    F.line = 124;
    result_10130069.r = (c2n_10045014(hex_10130068, 1) / 1.5000000000000000e+01);
    F.line = 125;
    result_10130069.g = (c2n_10045014(hex_10130068, 2) / 1.5000000000000000e+01);
    F.line = 126;
    result_10130069.b = (c2n_10045014(hex_10130068, 3) / 1.5000000000000000e+01);
    F.line = 127;
    result_10130069.a = 1.0000000000000000e+00;
  framePtr = F.prev;

  return result_10130069;

}
function parse_hex_10050045(hex_10050047) {
  var result_10050048 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHex",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    if (!(((hex_10050047 != null ? hex_10050047.length : 0) == 6))) {
    F.line = 55;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.nimble/pkgs/chroma-0.1.0/chroma.nim(55, 10) `hex.len == 6` "));
    }
    
    F.line = 56;
    result_10050048.r = (addInt(mulInt(c2n_10045014(hex_10050047, 0), 16), c2n_10045014(hex_10050047, 1)) / 2.5500000000000000e+02);
    F.line = 57;
    result_10050048.g = (addInt(mulInt(c2n_10045014(hex_10050047, 2), 16), c2n_10045014(hex_10050047, 3)) / 2.5500000000000000e+02);
    F.line = 58;
    result_10050048.b = (addInt(mulInt(c2n_10045014(hex_10050047, 4), 16), c2n_10045014(hex_10050047, 5)) / 2.5500000000000000e+02);
    F.line = 59;
    result_10050048.a = 1.0000000000000000e+00;
  framePtr = F.prev;

  return result_10050048;

}
function HEX5BHEX5D_4455068(s_4455072, x_4455074) {
  var result_4455075 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2436;
    var a_4455201 = x_4455074.a;
    F.line = 2437;
    var l_4455401 = addInt(subInt(subInt((s_4455072 != null ? s_4455072.length : 0), x_4455074.b), a_4455201), 1);
    F.line = 2438;
    result_4455075 = nimCopy(null, mnewString(chckRange(l_4455401, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2439;
      var i_4455409 = 0;
      F.line = 106;
      var i_14426087 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14426087 < l_4455401)) break L3;
            F.line = 2439;
            i_4455409 = i_14426087;
            F.line = 2439;
            result_4455075[chckIndx(i_4455409, 0, (result_4455075 != null ? result_4455075.length : 0)+0-1)-0] = s_4455072[chckIndx(addInt(i_4455409, a_4455201), 0, (s_4455072 != null ? s_4455072.length : 0)+0-1)-0];
            F.line = 109;
            i_14426087 = addInt(i_14426087, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_4455075;

}
function HEX2EHEX2E_4455001(a_4455006, b_4455008) {
  var result_4455014 = {a: 0, b: 0};

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_4455014, {a: a_4455006, b: b_4455008}, NTI4455011);
  framePtr = F.prev;

  return result_4455014;

}
function parse_html_hex_10110061(hex_10110063) {
  var result_10110064 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlHex",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    F.line = 99;
    if (!((hex_10110063[chckIndx(0, 0, (hex_10110063 != null ? hex_10110063.length : 0)+0-1)-0] == 35))) {
    F.line = 104;
    raiseException({message: makeNimstrLit("Expected \'#\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    nimCopy(result_10110064, parse_hex_10050045(HEX5BHEX5D_4455068(hex_10110063, HEX2EHEX2E_4455001(1, 1))), NTI9964003);
  framePtr = F.prev;

  return result_10110064;

}
function HEX5BHEX5D_2005283(s_2005287, x_2005289) {
  var result_2005290 = null;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2436;
    var a_2005401 = x_2005289.a;
    F.line = 2437;
    var l_2005601 = addInt(subInt(x_2005289.b, a_2005401), 1);
    F.line = 2438;
    result_2005290 = nimCopy(null, mnewString(chckRange(l_2005601, 0, 2147483647)), NTI112);
    L1: do {
      F.line = 2439;
      var i_2005609 = 0;
      F.line = 106;
      var i_14426094 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_14426094 < l_2005601)) break L3;
            F.line = 2439;
            i_2005609 = i_14426094;
            F.line = 2439;
            result_2005290[chckIndx(i_2005609, 0, (result_2005290 != null ? result_2005290.length : 0)+0-1)-0] = s_2005287[chckIndx(addInt(i_2005609, a_2005401), 0, (s_2005287 != null ? s_2005287.length : 0)+0-1)-0];
            F.line = 109;
            i_14426094 = addInt(i_14426094, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_2005290;

}
function HEX2EHEX2E_2005220(a_2005225, b_2005227) {
  var result_2005229 = {a: 0, b: 0};

  var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 469;
    nimCopy(result_2005229, {a: a_2005225, b: b_2005227}, NTI622907);
  framePtr = F.prev;

  return result_2005229;

}
function HEX5BHEX5D_326029(s_326031, i_326032) {
  var result_326033 = 0;

  var F={procname:"system.[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2519;
    result_326033 = s_326031[chckIndx(subInt((s_326031 != null ? s_326031.length : 0), i_326032), 0, (s_326031 != null ? s_326031.length : 0)+0-1)-0];
  framePtr = F.prev;

  return result_326033;

}
function nsuFindChar(s_9370216, sub_9370217, start_9370218, last_9370219) {
    var Tmp1;

  var result_9370221 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1855;
    if ((last_9370219 == 0)) {
    Tmp1 = (s_9370216 != null ? (s_9370216.length-1) : -1);
    }
    else {
    Tmp1 = last_9370219;
    }
    
    var last_9370223 = Tmp1;
    L2: do {
      F.line = 1867;
      var i_9370606 = 0;
      F.line = 66;
      var colontmp__14426114 = 0;
      F.line = 1867;
      colontmp__14426114 = start_9370218;
      F.line = 77;
      var res_14426115 = colontmp__14426114;
      L3: do {
        F.line = 78;
          L4: while (true) {
          if (!(res_14426115 <= last_9370223)) break L4;
            F.line = 1867;
            i_9370606 = res_14426115;
            if ((sub_9370217 == s_9370216[chckIndx(i_9370606, 0, (s_9370216 != null ? s_9370216.length : 0)+0-1)-0])) {
            F.line = 1868;
            result_9370221 = i_9370606;
            break BeforeRet;
            }
            
            F.line = 80;
            res_14426115 = addInt(res_14426115, 1);
          }
      } while(false);
    } while(false);
    F.line = 1869;
    result_9370221 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9370221;

}
function substr_341053(s_341055, first_341056) {
  var result_341058 = null;

  var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2950;
    result_341058 = nimCopy(null, substr_341022(s_341055, first_341056, (s_341055 != null ? (s_341055.length-1) : -1)), NTI112);
  framePtr = F.prev;

  return result_341058;

}
function nsuInitSkipTable(a_9365081, sub_9365082) {
  var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1791;
    var m_9365083 = (sub_9365082 != null ? sub_9365082.length : 0);
    F.line = 1792;
    var i_9365085 = 0;
    L1: do {
      F.line = 1793;
        L2: while (true) {
        if (!(i_9365085 <= 248)) break L2;
          F.line = 1794;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 0), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1795;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 1), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1796;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 2), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1797;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 3), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1798;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 4), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1799;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 5), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1800;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 6), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1801;
          a_9365081[chckIndx(chckRange(addInt(i_9365085, 7), 0, 255), 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = m_9365083;
          F.line = 1802;
          i_9365085 = addInt(i_9365085, 8);
        }
    } while(false);
    L3: do {
      F.line = 1804;
      var i_9365101 = 0;
      F.line = 104;
      var colontmp__10295036 = 0;
      F.line = 1804;
      colontmp__10295036 = subInt(m_9365083, 1);
      F.line = 106;
      var i_10295037 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_10295037 < colontmp__10295036)) break L5;
            F.line = 1804;
            i_9365101 = i_10295037;
            F.line = 1805;
            a_9365081[chckIndx(sub_9365082[chckIndx(i_9365101, 0, (sub_9365082 != null ? sub_9365082.length : 0)+0-1)-0], 0, (a_9365081 != null ? a_9365081.length : 0)+0-1)-0] = subInt(subInt(m_9365083, 1), i_9365101);
            F.line = 109;
            i_10295037 = addInt(i_10295037, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function nsuFindStrA(a_9365117, s_9365118, sub_9365119, start_9365120, last_9365121) {
    var Tmp1;

  var result_9365123 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1815;
    if ((last_9365121 == 0)) {
    Tmp1 = (s_9365118 != null ? (s_9365118.length-1) : -1);
    }
    else {
    Tmp1 = last_9365121;
    }
    
    var last_9365125 = Tmp1;
    F.line = 1816;
    var sub_last_9365126 = subInt((sub_9365119 != null ? sub_9365119.length : 0), 1);
    if ((sub_last_9365126 == -1)) {
    F.line = 1821;
    result_9365123 = start_9365120;
    break BeforeRet;
    }
    
    F.line = 1825;
    var skip_9365127 = start_9365120;
    L2: do {
      F.line = 1827;
        L3: while (true) {
        if (!(sub_last_9365126 <= subInt(last_9365125, skip_9365127))) break L3;
          F.line = 1828;
          var i_9370001 = sub_last_9365126;
          L4: do {
            F.line = 1829;
              L5: while (true) {
              if (!(s_9365118[chckIndx(addInt(skip_9365127, i_9370001), 0, (s_9365118 != null ? s_9365118.length : 0)+0-1)-0] == sub_9365119[chckIndx(i_9370001, 0, (sub_9365119 != null ? sub_9365119.length : 0)+0-1)-0])) break L5;
                if ((i_9370001 == 0)) {
                F.line = 1831;
                result_9365123 = skip_9365127;
                break BeforeRet;
                }
                
                F.line = 1832;
                i_9370001 = subInt(i_9370001, 1);
              }
          } while(false);
          F.line = 1833;
          skip_9365127 = addInt(skip_9365127, a_9365117[chckIndx(s_9365118[chckIndx(addInt(skip_9365127, sub_last_9365126), 0, (s_9365118 != null ? s_9365118.length : 0)+0-1)-0], 0, (a_9365117 != null ? a_9365117.length : 0)+0-1)-0]);
        }
    } while(false);
    F.line = 1834;
    result_9365123 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9365123;

}
function nsuReplaceStr(s_9440016, sub_9440017, by_9440018) {
  var result_9440019 = null;

  var F={procname:"strutils.replace",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2056;
    result_9440019 = nimCopy(null, [], NTI112);
    F.line = 2057;
    var sub_len_9440020 = (sub_9440017 != null ? sub_9440017.length : 0);
    if ((sub_len_9440020 == 0)) {
    F.line = 2059;
    result_9440019 = nimCopy(null, s_9440016, NTI112);
    }
    else {
    if ((sub_len_9440020 == 1)) {
    F.line = 2063;
    var c_9440021 = sub_9440017[chckIndx(0, 0, (sub_9440017 != null ? sub_9440017.length : 0)+0-1)-0];
    F.line = 2064;
    var last_9440023 = (s_9440016 != null ? (s_9440016.length-1) : -1);
    F.line = 2065;
    var i_9440025 = 0;
    L1: do {
      F.line = 2066;
        L2: while (true) {
        if (!true) break L2;
          F.line = 2067;
          var j_9440026 = nsuFindChar(s_9440016, c_9440021, chckRange(i_9440025, 0, 2147483647), last_9440023);
          if ((j_9440026 < 0)) {
          F.line = 2068;
          break L1;
          }
          
          F.line = 2069;
          if (result_9440019 != null) { result_9440019 = (result_9440019).concat(substr_341022(s_9440016, i_9440025, subInt(j_9440026, 1))); } else { result_9440019 = substr_341022(s_9440016, i_9440025, subInt(j_9440026, 1)).slice(); };
          F.line = 2070;
          if (result_9440019 != null) { result_9440019 = (result_9440019).concat(by_9440018); } else { result_9440019 = by_9440018.slice(); };
          F.line = 2071;
          i_9440025 = addInt(j_9440026, sub_len_9440020);
        }
    } while(false);
    F.line = 2073;
    if (result_9440019 != null) { result_9440019 = (result_9440019).concat(substr_341053(s_9440016, i_9440025)); } else { result_9440019 = substr_341053(s_9440016, i_9440025).slice(); };
    }
    else {
      F.line = 2075;
      var a_9440027 = [new Int32Array(256)];
      F.line = 2076;
      nsuInitSkipTable(a_9440027[0], sub_9440017);
      F.line = 2077;
      var last_9440030 = (s_9440016 != null ? (s_9440016.length-1) : -1);
      F.line = 2078;
      var i_9440032 = 0;
      L3: do {
        F.line = 2079;
          L4: while (true) {
          if (!true) break L4;
            F.line = 2080;
            var j_9440033 = nsuFindStrA(a_9440027[0], s_9440016, sub_9440017, chckRange(i_9440032, 0, 2147483647), last_9440030);
            if ((j_9440033 < 0)) {
            F.line = 2081;
            break L3;
            }
            
            F.line = 2082;
            if (result_9440019 != null) { result_9440019 = (result_9440019).concat(substr_341022(s_9440016, i_9440032, subInt(j_9440033, 1))); } else { result_9440019 = substr_341022(s_9440016, i_9440032, subInt(j_9440033, 1)).slice(); };
            F.line = 2083;
            if (result_9440019 != null) { result_9440019 = (result_9440019).concat(by_9440018); } else { result_9440019 = by_9440018.slice(); };
            F.line = 2084;
            i_9440032 = addInt(j_9440033, sub_len_9440020);
          }
      } while(false);
      F.line = 2086;
      if (result_9440019 != null) { result_9440019 = (result_9440019).concat(substr_341053(s_9440016, i_9440032)); } else { result_9440019 = substr_341053(s_9440016, i_9440032).slice(); };
    }
    }
  framePtr = F.prev;

  return result_9440019;

}
function nsuSplitChar(s_8965034, sep_8965035, maxsplit_8965036) {
  var result_8965038 = null;

  var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 410;
    result_8965038 = nimCopy(null, [], NTI8970015);
    L1: do {
      F.line = 411;
      var xHEX60gensym8965039_8970016 = null;
      F.line = 382;
      var lastHEX60gensym8800133_14426123 = 0;
      F.line = 383;
      var splitsHEX60gensym8800134_14426124 = maxsplit_8965036;
      L2: do {
        F.line = 443;
          L3: while (true) {
          if (!(lastHEX60gensym8800133_14426123 <= (s_8965034 != null ? s_8965034.length : 0))) break L3;
            F.line = 386;
            var firstHEX60gensym8800135_14426126 = lastHEX60gensym8800133_14426123;
            L4: do {
              F.line = 387;
                L5: while (true) {
                if (!((lastHEX60gensym8800133_14426123 < (s_8965034 != null ? s_8965034.length : 0)) && !((s_8965034[chckIndx(lastHEX60gensym8800133_14426123, 0, (s_8965034 != null ? s_8965034.length : 0)+0-1)-0] == sep_8965035)))) break L5;
                  F.line = 388;
                  lastHEX60gensym8800133_14426123 = addInt(lastHEX60gensym8800133_14426123, 1);
                }
            } while(false);
            if ((splitsHEX60gensym8800134_14426124 == 0)) {
            F.line = 389;
            lastHEX60gensym8800133_14426123 = (s_8965034 != null ? s_8965034.length : 0);
            }
            
            F.line = 720;
            xHEX60gensym8965039_8970016 = substr_341022(s_8965034, firstHEX60gensym8800135_14426126, subInt(lastHEX60gensym8800133_14426123, 1));
            F.line = 411;
            var Tmp6 = nimCopy(null, xHEX60gensym8965039_8970016, NTI112);
            if (result_8965038 != null) { result_8965038.push(Tmp6); } else { result_8965038 = [Tmp6]; };
            if ((splitsHEX60gensym8800134_14426124 == 0)) {
            F.line = 391;
            break L2;
            }
            
            F.line = 392;
            splitsHEX60gensym8800134_14426124 = subInt(splitsHEX60gensym8800134_14426124, 1);
            F.line = 393;
            lastHEX60gensym8800133_14426123 = addInt(lastHEX60gensym8800133_14426123, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_8965038;

}
function min_80014(x_80016, y_80017) {
    var Tmp1;
      var Tmp2;

  var result_80018 = 0.0;

      if ((x_80016 <= y_80017)) Tmp2 = true; else {        Tmp2 = !((y_80017 == y_80017));      }    if (Tmp2) {
    Tmp1 = x_80016;
    }
    else {
    Tmp1 = y_80017;
    }
    
    result_80018 = Tmp1;

  return result_80018;

}
function to_float_26459(i_26461) {
  var result_26462 = 0.0;

  var F={procname:"system.toFloat",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1372;
    result_26462 = i_26461;
  framePtr = F.prev;

  return result_26462;

}
function ten_to_the_power_of_275046(b_275048) {
  var result_275049 = 0.0;

  var F={procname:"system.tenToThePowerOf",prev:framePtr,filename:"jssys.nim",line:0};
  framePtr = F;
    F.line = 669;
    var b_275050 = b_275048;
    F.line = 670;
    var a_275051 = 1.0000000000000000e+01;
    F.line = 671;
    result_275049 = 1.0000000000000000e+00;
    L1: do {
      F.line = 672;
        L2: while (true) {
        if (!true) break L2;
          if (((b_275050 & 1) == 1)) {
          F.line = 674;
          result_275049 = (result_275049 * a_275051);
          }
          
          F.line = 675;
          b_275050 = (b_275050 >> 1);
          if ((b_275050 == 0)) {
          F.line = 676;
          break L1;
          }
          
          F.line = 677;
          a_275051 = (a_275051 * a_275051);
        }
    } while(false);
  framePtr = F.prev;

  return result_275049;

}
function npuParseFloat(s_780023, number_780025, number_780025_Idx, start_780026) {
  var result_780028 = 0;

  var F={procname:"parseutils.parseFloat",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 566;
    var bf_780029 = [0.0];
    F.line = 567;
    result_780028 = nimParseBiggestFloat(s_780023, bf_780029, 0, start_780026);
    if (!((result_780028 == 0))) {
    F.line = 569;
    number_780025[number_780025_Idx] = bf_780029[0];
    }
    
  framePtr = F.prev;

  return result_780028;

}
function nsuParseFloat(s_9090017) {
      var Tmp1;

  var result_9090018 = [0.0];

  var F={procname:"strutils.parseFloat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1125;
    var l_9090020 = npuParseFloat(s_9090017, result_9090018, 0, 0);
      if (!((l_9090020 == (s_9090017 != null ? s_9090017.length : 0)))) Tmp1 = true; else {        Tmp1 = (l_9090020 == 0);      }    if (Tmp1) {
    F.line = 1127;
    raiseException({message: (makeNimstrLit("invalid float: ") || []).concat(s_9090017 || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_9090018[0];

}
function parse_html_rgba_10210038(text_10210040) {
  var result_10210041 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    if (!(eqStrings(HEX5BHEX5D_2005283(text_10210040, HEX2EHEX2E_2005220(0, 4)), makeNimstrLit("rgba(")))) {
    F.line = 181;
    raiseException({message: makeNimstrLit("Expected \'rgba(\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    if (!((HEX5BHEX5D_326029(text_10210040, 1) == 41))) {
    F.line = 183;
    raiseException({message: makeNimstrLit("Expected \')\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    F.line = 184;
    var inner_10245036 = nsuReplaceStr(HEX5BHEX5D_4455068(text_10210040, HEX2EHEX2E_4455001(5, 2)), makeNimstrLit(" "), []);
    F.line = 185;
    var arr_10245037 = nsuSplitChar(inner_10245036, 44, -1);
    if (!(((arr_10245037 != null ? arr_10245037.length : 0) == 4))) {
    F.line = 187;
    raiseException({message: makeNimstrLit("Expected 4 numbers in rgba()"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    F.line = 188;
    result_10210041.r = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10245037[chckIndx(0, 0, (arr_10245037 != null ? arr_10245037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 189;
    result_10210041.g = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10245037[chckIndx(1, 0, (arr_10245037 != null ? arr_10245037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 190;
    result_10210041.b = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10245037[chckIndx(2, 0, (arr_10245037 != null ? arr_10245037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 191;
    result_10210041.a = min_80014(1.0000000000000000e+00, nsuParseFloat(arr_10245037[chckIndx(3, 0, (arr_10245037 != null ? arr_10245037.length : 0)+0-1)-0]));
  framePtr = F.prev;

  return result_10210041;

}
function parse_html_rgb_10165061(text_10165063) {
  var result_10165064 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlRgb",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    if (!(eqStrings(HEX5BHEX5D_2005283(text_10165063, HEX2EHEX2E_2005220(0, 3)), makeNimstrLit("rgb(")))) {
    F.line = 147;
    raiseException({message: makeNimstrLit("Expected \'rgb(\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    if (!((HEX5BHEX5D_326029(text_10165063, 1) == 41))) {
    F.line = 149;
    raiseException({message: makeNimstrLit("Expected \')\'"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    F.line = 150;
    var inner_10200036 = nsuReplaceStr(HEX5BHEX5D_4455068(text_10165063, HEX2EHEX2E_4455001(4, 2)), makeNimstrLit(" "), []);
    F.line = 151;
    var arr_10200037 = nsuSplitChar(inner_10200036, 44, -1);
    if (!(((arr_10200037 != null ? arr_10200037.length : 0) == 3))) {
    F.line = 153;
    raiseException({message: makeNimstrLit("Expected 3 numbers in rgb()"), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
    F.line = 154;
    result_10165064.r = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10200037[chckIndx(0, 0, (arr_10200037 != null ? arr_10200037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 155;
    result_10165064.g = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10200037[chckIndx(1, 0, (arr_10200037 != null ? arr_10200037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 156;
    result_10165064.b = min_80014(1.0000000000000000e+00, (nsuParseFloat(arr_10200037[chckIndx(2, 0, (arr_10200037 != null ? arr_10200037.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
    F.line = 157;
    result_10165064.a = 1.0000000000000000e+00;
  framePtr = F.prev;

  return result_10165064;

}
function nsuToLowerAsciiChar(c_8720023) {
  var result_8720024 = 0;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet10[c_8720023] != undefined)) {
    F.line = 209;
    result_8720024 = chckRange(addInt(c_8720023, 32), 0, 255);
    }
    else {
      F.line = 211;
      result_8720024 = c_8720023;
    }
    
  framePtr = F.prev;

  return result_8720024;

}
function nsuToLowerAsciiStr(s_8725048) {
  var result_8725049 = null;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_8725049 = nimCopy(null, mnewString(chckRange((s_8725048 != null ? s_8725048.length : 0), 0, 2147483647)), NTI112);
    L1: do {
      F.line = 215;
      var iHEX60gensym8725050_8730009 = 0;
      F.line = 66;
      var colontmp__10295051 = 0;
      F.line = 215;
      colontmp__10295051 = subInt((s_8725048 != null ? s_8725048.length : 0), 1);
      F.line = 77;
      var res_10295052 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_10295052 <= colontmp__10295051)) break L3;
            F.line = 230;
            iHEX60gensym8725050_8730009 = res_10295052;
            F.line = 216;
            result_8725049[chckIndx(iHEX60gensym8725050_8730009, 0, (result_8725049 != null ? result_8725049.length : 0)+0-1)-0] = nsuToLowerAsciiChar(s_8725048[chckIndx(iHEX60gensym8725050_8730009, 0, (s_8725048 != null ? s_8725048.length : 0)+0-1)-0]);
            F.line = 80;
            res_10295052 = addInt(res_10295052, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_8725049;

}
function has_key_10260458(t_10260463, key_10260464) {
  var result_10260465 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 395;
    var hc_10260466 = [0];
    F.line = 396;
    result_10260465 = (0 <= raw_get_9880602(t_10260463, key_10260464, hc_10260466, 0));
  framePtr = F.prev;

  return result_10260465;

}
function has_key_10260197(t_10260202, key_10260203) {
  var result_10260204 = false;

  var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 880;
    result_10260204 = has_key_10260458(t_10260202, key_10260203);
  framePtr = F.prev;

  return result_10260204;

}
function contains_10260117(t_10260122, key_10260123) {
  var result_10260124 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 890;
    result_10260124 = has_key_10260197(t_10260122, key_10260123);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10260124;

}
function HEX5BHEX5D_10260955(t_10260961, key_10260962) {
  var result_10260964 = null;
  var result_10260964_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym9740414_10260965 = [0];
    F.line = 258;
    var indexHEX60gensym9740415_10260974 = raw_get_9880602(t_10260961, key_10260962, hcHEX60gensym9740414_10260965, 0);
    if ((0 <= indexHEX60gensym9740415_10260974)) {
    F.line = 259;
    result_10260964 = t_10260961.data[chckIndx(indexHEX60gensym9740415_10260974, 0, (t_10260961.data != null ? t_10260961.data.length : 0)+0-1)-0]; result_10260964_Idx = "Field2";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_10260962 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_10260964, result_10260964_Idx];

}
function HEX5BHEX5D_10260658(t_10260663, key_10260664) {
    var Tmp1;

  var result_10260666 = null;
  var result_10260666_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 846;
    result_10260666 = (Tmp1 = HEX5BHEX5D_10260955(t_10260663, key_10260664), Tmp1)[0]; result_10260666_Idx = Tmp1[1];
  framePtr = F.prev;

  return [result_10260666, result_10260666_Idx];

}
function parse_html_name_10255038(text_10255040) {
    var Tmp1;

  var result_10255041 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlName",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 213;
    var lower_name_10255042 = nsuToLowerAsciiStr(text_10255040);
    if (contains_10260117(color_names_9945892[0], lower_name_10255042)) {
    F.line = 215;
    nimCopy(result_10255041, parse_hex_10050045((Tmp1 = HEX5BHEX5D_10260658(color_names_9945892[0], lower_name_10255042), Tmp1)[0][Tmp1[1]]), NTI9964003);
    break BeforeRet;
    }
    else {
      F.line = 217;
      raiseException({message: makeNimstrLit("Not a valid color name."), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    
  } while (false);
  framePtr = F.prev;

  return result_10255041;

}
function parse_html_color_10270015(color_text_10270017) {
  var result_10270018 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.parseHtmlColor",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 226;
    var text_10270019 = nsuStrip(color_text_10270017, true, true, ConstSet2);
    if ((text_10270019[chckIndx(0, 0, (text_10270019 != null ? text_10270019.length : 0)+0-1)-0] == 35)) {
    if (((text_10270019 != null ? text_10270019.length : 0) == 4)) {
    F.line = 229;
    nimCopy(result_10270018, parse_html_hex_tiny_10130066(text_10270019), NTI9964003);
    break BeforeRet;
    }
    else {
    if (((text_10270019 != null ? text_10270019.length : 0) == 7)) {
    F.line = 231;
    nimCopy(result_10270018, parse_html_hex_10110061(text_10270019), NTI9964003);
    break BeforeRet;
    }
    else {
      F.line = 233;
      raiseException({message: makeNimstrLit("HTML color invalid."), parent: null, m_type: NTI9964033, name: null, trace: null, up: null}, "InvalidColor");
    }
    }
    }
    else {
    if (eqStrings(HEX5BHEX5D_2005283(text_10270019, HEX2EHEX2E_2005220(0, 3)), makeNimstrLit("rgba"))) {
    F.line = 235;
    nimCopy(result_10270018, parse_html_rgba_10210038(text_10270019), NTI9964003);
    break BeforeRet;
    }
    else {
    if (eqStrings(HEX5BHEX5D_2005283(text_10270019, HEX2EHEX2E_2005220(0, 2)), makeNimstrLit("rgb"))) {
    F.line = 237;
    nimCopy(result_10270018, parse_html_rgb_10165061(text_10270019), NTI9964003);
    break BeforeRet;
    }
    else {
      F.line = 239;
      nimCopy(result_10270018, parse_html_name_10255038(text_10270019), NTI9964003);
      break BeforeRet;
    }
    }}
  } while (false);
  framePtr = F.prev;

  return result_10270018;

}
function color_9980230(r_9980232, g_9980233, b_9980234, a_9980235) {
  var result_9980236 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"transformations.color",prev:framePtr,filename:"transformations.nim",line:0};
  framePtr = F;
    F.line = 75;
    result_9980236.r = r_9980232;
    F.line = 76;
    result_9980236.g = g_9980233;
    F.line = 77;
    result_9980236.b = b_9980234;
    F.line = 78;
    result_9980236.a = a_9980235;
  framePtr = F.prev;

  return result_9980236;

}
var colors_14426026 = {fieldLight: parse_html_color_10270015(makeNimstrLit("#AAAAAA")), fieldDark: parse_html_color_10270015(makeNimstrLit("#999999")), warn: color_9980230(1.0000000000000000e+00, 0.0, 0.0, 1.0000000000000000e+00), buttonColor: parse_html_color_10270015(makeNimstrLit("#c4c4c4")), buttonHover: parse_html_color_10270015(makeNimstrLit("#DDDDDD")), buttonPressed: parse_html_color_10270015(makeNimstrLit("#BBBBBB")), lbText: color_9980230(0.0, 0.0, 0.0, 1.0000000000000000e+00)};
function new_14427015() {
  var result_14427019 = null;

  var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 848;
    var r_14427201 = null;
    F.line = 851;
    r_14427201 = {m_type: NTI14306020, field: null, size: 0, winCount: 0, leaderboard: null, player_count: 0, players: null, current_player_number: 0, winner_player_number: 0};
    F.line = 852;
    result_14427019 = r_14427201;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14427019;

}
function new_14427238() {
  var result_14427242 = null;

  var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 848;
    var r_14427401 = null;
    F.line = 851;
    r_14427401 = {name1: null, name2: null, ai: false, size: 0, winCount: 0};
    F.line = 852;
    result_14427242 = r_14427401;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14427242;

}
var game_14427236 = new_14427015();
var settings_14427451 = new_14427238();
var winner_announced_14427452 = [false];
var game_started_14427453 = [false];
var starting_player_14427455 = [1];
set_default_14306127(settings_14427451);
setup_14425114(game_14427236, settings_14427451);
function new_uid_12582641() {
  var result_12582643 = null;

  var F={procname:"common.newUId",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    F.line = 229;
    F.line = 229;
    last_uid_12582428[0] = addInt(last_uid_12582428[0], 1);
    result_12582643 = nimCopy(null, cstrToNimstr((last_uid_12582428[0])+""), NTI112);
  framePtr = F.prev;

  return result_12582643;

}
function rgba_to_rgb_9980311(c_9980313) {
  var result_9980314 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"transformations.RGBA_to_RGB",prev:framePtr,filename:"transformations.nim",line:0};
  framePtr = F;
    F.line = 103;
    result_9980314.r = (c_9980313.r / 2.5500000000000000e+02);
    F.line = 104;
    result_9980314.g = (c_9980313.g / 2.5500000000000000e+02);
    F.line = 105;
    result_9980314.b = (c_9980313.b / 2.5500000000000000e+02);
    F.line = 106;
    result_9980314.a = (c_9980313.a / 2.5500000000000000e+02);
  framePtr = F.prev;

  return result_9980314;

}
function as_rgb_10301001(c_10301004) {
  var result_10301005 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"asRGB.asRGB",prev:framePtr,filename:"transformations.nim",line:0};
  framePtr = F;
    F.line = 522;
    nimCopy(result_10301005, rgba_to_rgb_9980311(c_10301004), NTI9964003);
  framePtr = F.prev;

  return result_10301005;

}
function to_10300878(c_10300883) {
  var result_10300885 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"to.to",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    F.line = 245;
    nimCopy(result_10300885, as_rgb_10301001(c_10300883), NTI9964003);
  framePtr = F.prev;

  return result_10300885;

}
function color_10300874(c_10300876) {
  var result_10300877 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

  var F={procname:"chroma.color",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    F.line = 327;
    nimCopy(result_10300877, to_10300878(c_10300876), NTI9964003);
  framePtr = F.prev;

  return result_10300877;

}
function rgba_10301655(r_10301657, g_10301658, b_10301659, a_10301660) {
  var result_10301661 = {r: 0, g: 0, b: 0, a: 0};

  var F={procname:"chroma.rgba",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
    F.line = 287;
    nimCopy(result_10301661, {r: r_10301657, g: g_10301658, b: b_10301659, a: a_10301660}, NTI9964007);
  framePtr = F.prev;

  return result_10301661;

}
function setup_root_12590421() {
  var F={procname:"common.setupRoot",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    if ((root_12582383[0] == null)) {
    F.line = 321;
    root_12582383[0] = {id: null, uid: null, idPath: null, kind: 0, text: null, code: null, nodes: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, textOffset: {x: 0.0, y: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0, autoResize: 0}, textPadding: 0, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, editableText: false, multiline: false, bindingSet: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null, constraintsHorizontal: 0, constraintsVertical: 0, layoutAlign: 0, layoutMode: 0, counterAxisSizingMode: 0, horizontalPadding: 0.0, verticalPadding: 0.0, itemSpacing: 0.0, clipContent: false, diffIndex: 0, element: null, textElement: null, cache: null, textLayoutHeight: 0.0, textLayoutWidth: 0.0, selectable: false};
    F.line = 322;
    root_12582383[0].kind = 0;
    F.line = 323;
    root_12582383[0].id = nimCopy(null, makeNimstrLit("root"), NTI112);
    F.line = 324;
    root_12582383[0].uid = nimCopy(null, new_uid_12582641(), NTI112);
    F.line = 325;
    nimCopy(root_12582383[0].highlightColor, parse_html_color_10270015(makeNimstrLit("#3297FD")), NTI9964003);
    F.line = 326;
    nimCopy(root_12582383[0].cursorColor, color_10300874(rgba_10301655(0, 0, 0, 255)), NTI9964003);
    }
    
    F.line = 327;
    node_stack_12582386[0] = nimCopy(null, [root_12582383[0]], NTI12590442);
    F.line = 328;
    current_12582387[0] = root_12582383[0];
    F.line = 329;
    root_12582383[0].diffIndex = 0;
  framePtr = F.prev;

  
}
function clear_13995258(t_13995264) {
  var F={procname:"clear.clear",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 110;
      var i_14000139 = 0;
      F.line = 104;
      var colontmp__15445075 = 0;
      F.line = 110;
      colontmp__15445075 = (t_13995264.data != null ? t_13995264.data.length : 0);
      F.line = 106;
      var i_15445076 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445076 < colontmp__15445075)) break L3;
            F.line = 110;
            i_14000139 = i_15445076;
            F.line = 112;
            t_13995264.data[chckIndx(i_14000139, 0, (t_13995264.data != null ? t_13995264.data.length : 0)+0-1)-0].Field0 = 0;
            F.line = 113;
            t_13995264.data[chckIndx(i_14000139, 0, (t_13995264.data != null ? t_13995264.data.length : 0)+0-1)-0].Field1 = nimCopy(null, null, NTI112);
            F.line = 114;
            t_13995264.data[chckIndx(i_14000139, 0, (t_13995264.data != null ? t_13995264.data.length : 0)+0-1)-0].Field2 = false;
            F.line = 109;
            i_15445076 = addInt(i_15445076, 1);
          }
      } while(false);
    } while(false);
    F.line = 115;
    t_13995264.counter = 0;
  framePtr = F.prev;

  
}
function get_context2d_12706722(c_12706724) {
  var result_12706725 = null;

  var F={procname:"html5_canvas.getContext2D",prev:framePtr,filename:"html5_canvas.nim",line:0};
  framePtr = F;
    F.line = 24;
    result_12706725=c_12706724.getContext('2d');
  framePtr = F.prev;

  return result_12706725;

}
function draw_start_13995147() {
  var F={procname:"htmlbackend.drawStart",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 349;
    start_time_13995117[0] = window.performance.now();
    F.line = 350;
    num_nodes_12582394[0] = 0;
    F.line = 351;
    perf_13307029[0].numLowLevelCalls = 0;
    F.line = 352;
    clear_13995258(path_checker_12582423[0]);
    F.line = 354;
    pixel_ratio_12582400[0] = window.devicePixelRatio;
    F.line = 355;
    window_size_12582398[0].x = window.innerWidth;
    F.line = 356;
    window_size_12582398[0].y = window.innerHeight;
    F.line = 357;
    window_frame_12582399[0].x = window.innerWidth;
    F.line = 358;
    window_frame_12582399[0].y = window.innerHeight;
    F.line = 361;
    root_12582383[0].box.x = 0.0;
    F.line = 362;
    root_12582383[0].box.y = 0.0;
    F.line = 363;
    root_12582383[0].box.w = window_frame_12582399[0].x;
    F.line = 364;
    root_12582383[0].box.h = window_frame_12582399[0].y;
    F.line = 365;
    root_12582383[0].transparency = 1.0000000000000000e+00;
    F.line = 367;
    scroll_box_12582388[0].x = window.scrollX;
    F.line = 368;
    scroll_box_12582388[0].y = window.scrollY;
    F.line = 369;
    scroll_box_12582388[0].w = document.body.clientWidth;
    F.line = 370;
    scroll_box_12582388[0].h = window.innerHeight;
    F.line = 372;
    scroll_box_mega_12582389[0].x = window.scrollX;
    F.line = 373;
    scroll_box_mega_12582389[0].y = (window.scrollY - 5.0000000000000000e+02);
    F.line = 374;
    scroll_box_mega_12582389[0].w = document.body.clientWidth;
    F.line = 375;
    scroll_box_mega_12582389[0].h = addInt(window.innerHeight, 1000);
    F.line = 377;
    scroll_box_mini_12582390[0].x = window.scrollX;
    F.line = 378;
    scroll_box_mini_12582390[0].y = (window.scrollY + 1.0000000000000000e+02);
    F.line = 379;
    scroll_box_mini_12582390[0].w = document.body.clientWidth;
    F.line = 380;
    scroll_box_mini_12582390[0].h = subInt(window.innerHeight, 200);
    F.line = 382;
    document.body.style.overflowX = "hidden";
    F.line = 383;
    document.body.style.overflowY = "scroll";
    if (!((document.activeElement == null))) {
    F.line = 386;
    var selection_14005009 = document.getSelection();
    F.line = 387;
    keyboard_12582392[0].textCursor = selection_14005009.anchorOffset;
    F.line = 388;
    keyboard_12582392[0].selectionCursor = selection_14005009.focusOffset;
    }
    else {
      F.line = 390;
      keyboard_12582392[0].textCursor = 0;
      F.line = 391;
      keyboard_12582392[0].selectionCursor = 0;
    }
    
    F.line = 393;
    var canvas_14005010 = canvas_node_13307026[0];
    F.line = 394;
    ctx_13307027[0] = get_context2d_12706722(canvas_14005010);
    F.line = 396;
    var width_14005011 = window.innerWidth;
    F.line = 397;
    var height_14005012 = window.innerHeight;
    F.line = 398;
    canvas_14005010.clientWidth = ((width_14005011)|0);
    F.line = 399;
    canvas_14005010.clientHeight = ((height_14005012)|0);
    F.line = 400;
    canvas_14005010.width = (((width_14005011 * pixel_ratio_12582400[0]))|0);
    F.line = 401;
    canvas_14005010.height = (((height_14005012 * pixel_ratio_12582400[0]))|0);
    F.line = 403;
    canvas_14005010.style.display = "block";
    F.line = 404;
    canvas_14005010.style.position = "absolute";
    F.line = 405;
    canvas_14005010.style.zIndex = -1;
    F.line = 406;
    canvas_14005010.style.left = toJSStr((cstrToNimstr((scroll_box_12582388[0].x)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 407;
    canvas_14005010.style.top = toJSStr((cstrToNimstr((scroll_box_12582388[0].y)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 408;
    canvas_14005010.style.width = toJSStr((cstrToNimstr((width_14005011)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 409;
    canvas_14005010.style.height = toJSStr((cstrToNimstr((height_14005012)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 411;
    ctx_13307027[0].scale(pixel_ratio_12582400[0], pixel_ratio_12582400[0]);
    F.line = 413;
    mouse_12582391[0].cursorStyle = 0;
  framePtr = F.prev;

  
}
function HEX2AHEX3D_9980362(x_9980366, x_9980366_Idx, y_9980367) {
  var F={procname:"*=.*=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2599;
    x_9980366[x_9980366_Idx] = (x_9980366[x_9980366_Idx] * y_9980367);
  framePtr = F.prev;

  
}
function HEX2BHEX3D_9980341(x_9980345, x_9980345_Idx, y_9980346) {
  var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2589;
    x_9980345[x_9980345_Idx] = (x_9980345[x_9980345_Idx] + y_9980346);
  framePtr = F.prev;

  
}
function max_90014(x_90016, y_90017) {
    var Tmp1;
      var Tmp2;

  var result_90018 = 0.0;

      if ((y_90017 <= x_90016)) Tmp2 = true; else {        Tmp2 = !((y_90017 == y_90017));      }    if (Tmp2) {
    Tmp1 = x_90016;
    }
    else {
    Tmp1 = y_90017;
    }
    
    result_90018 = Tmp1;

  return result_90018;

}
function HEX2BHEX3D_9545021(x_9545025, x_9545025_Idx, y_9545026) {
  var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2589;
    x_9545025[x_9545025_Idx] = (x_9545025[x_9545025_Idx] + y_9545026);
  framePtr = F.prev;

  
}
function compute_layout_12590741(parent_12590743, node_12590744) {
  var F={procname:"common.computeLayout",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 367;
      var n_12590751 = null;
      F.line = 184;
      var i_15445080 = 0;
      F.line = 185;
      var l_15445081 = (node_12590744.nodes != null ? node_12590744.nodes.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_15445080 < l_15445081)) break L3;
            F.line = 367;
            n_12590751 = node_12590744.nodes[chckIndx(i_15445080, 0, (node_12590744.nodes != null ? node_12590744.nodes.length : 0)+0-1)-0];
            F.line = 368;
            compute_layout_12590741(node_12590744, n_12590751);
            F.line = 188;
            i_15445080 = addInt(i_15445080, 1);
            if (!(((node_12590744.nodes != null ? node_12590744.nodes.length : 0) == l_15445081))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 371;
    switch (node_12590744.constraintsVertical) {
    case 0:
      break;
    case 1:
      F.line = 374;
      var right_space_12590752 = (parent_12590743.orgBox.w - node_12590744.box.x);
      F.line = 375;
      node_12590744.box.x = (parent_12590743.box.w - right_space_12590752);
      break;
    case 2:
      F.line = 377;
      var x_scale_12590753 = (parent_12590743.box.w / parent_12590743.orgBox.w);
      F.line = 378;
      HEX2AHEX3D_9980362(node_12590744.box, "x", x_scale_12590753);
      F.line = 379;
      HEX2AHEX3D_9980362(node_12590744.box, "w", x_scale_12590753);
      break;
    case 3:
      F.line = 381;
      var x_diff_12590768 = (parent_12590743.box.w - parent_12590743.orgBox.w);
      F.line = 382;
      HEX2BHEX3D_9980341(node_12590744.box, "w", x_diff_12590768);
      break;
    case 4:
      F.line = 384;
      node_12590744.box.x = Math.floor(((parent_12590743.box.w - node_12590744.box.w) / 2.0000000000000000e+00));
      break;
    }
    F.line = 386;
    switch (node_12590744.constraintsHorizontal) {
    case 0:
      break;
    case 1:
      F.line = 389;
      var bottom_space_12590776 = (parent_12590743.orgBox.h - node_12590744.box.y);
      F.line = 390;
      node_12590744.box.y = (parent_12590743.box.h - bottom_space_12590776);
      break;
    case 2:
      F.line = 392;
      var y_scale_12590777 = (parent_12590743.box.h / parent_12590743.orgBox.h);
      F.line = 393;
      HEX2AHEX3D_9980362(node_12590744.box, "y", y_scale_12590777);
      F.line = 394;
      HEX2AHEX3D_9980362(node_12590744.box, "h", y_scale_12590777);
      break;
    case 3:
      F.line = 396;
      var y_diff_12590792 = (parent_12590743.box.h - parent_12590743.orgBox.h);
      F.line = 397;
      HEX2BHEX3D_9980341(node_12590744.box, "h", y_diff_12590792);
      break;
    case 4:
      F.line = 399;
      node_12590744.box.y = Math.floor(((parent_12590743.box.h - node_12590744.box.h) / 2.0000000000000000e+00));
      break;
    }
    if ((node_12590744.kind == 4)) {
    F.line = 403;
    compute_text_layout_12582427[0](node_12590744);
    F.line = 405;
    switch (node_12590744.textStyle.autoResize) {
    case 0:
      break;
    case 2:
      F.line = 411;
      node_12590744.box.h = node_12590744.textLayoutHeight;
      break;
    case 1:
      F.line = 414;
      node_12590744.box.w = node_12590744.textLayoutWidth;
      F.line = 415;
      node_12590744.box.h = node_12590744.textLayoutHeight;
      break;
    }
    }
    
    if ((node_12590744.layoutMode == 1)) {
    if ((node_12590744.counterAxisSizingMode == 0)) {
    F.line = 421;
    var max_w_12590815 = 0.0;
    L4: do {
      F.line = 422;
      var n_12590822 = null;
      F.line = 184;
      var i_15445084 = 0;
      F.line = 185;
      var l_15445085 = (node_12590744.nodes != null ? node_12590744.nodes.length : 0);
      L5: do {
        F.line = 186;
          L6: while (true) {
          if (!(i_15445084 < l_15445085)) break L6;
            F.line = 422;
            n_12590822 = node_12590744.nodes[chckIndx(i_15445084, 0, (node_12590744.nodes != null ? node_12590744.nodes.length : 0)+0-1)-0];
            if (!((n_12590822.layoutAlign == 3))) {
            F.line = 424;
            max_w_12590815 = max_90014(max_w_12590815, n_12590822.box.w);
            }
            
            F.line = 188;
            i_15445084 = addInt(i_15445084, 1);
            if (!(((node_12590744.nodes != null ? node_12590744.nodes.length : 0) == l_15445085))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 425;
    node_12590744.box.w = (max_w_12590815 + (node_12590744.horizontalPadding * 2.0000000000000000e+00));
    }
    
    F.line = 427;
    var at_12595006 = [0.0];
    F.line = 428;
    HEX2BHEX3D_9545021(at_12595006, 0, node_12590744.verticalPadding);
    L7: do {
      F.line = 429;
      var i_12595070 = 0;
      F.line = 429;
      var n_12595071 = null;
      F.line = 264;
      var i_15445089 = subInt((node_12590744.nodes != null ? node_12590744.nodes.length : 0), 1);
      L8: do {
        F.line = 265;
          L9: while (true) {
          if (!(-1 < i_15445089)) break L9;
            F.line = 429;
            i_12595070 = subInt(subInt((node_12590744.nodes != null ? node_12590744.nodes.length : 0), 1), i_15445089);
            F.line = 266;
            n_12595071 = node_12590744.nodes[chckIndx(i_15445089, 0, (node_12590744.nodes != null ? node_12590744.nodes.length : 0)+0-1)-0];
            if ((0 < i_12595070)) {
            F.line = 431;
            HEX2BHEX3D_9545021(at_12595006, 0, node_12590744.itemSpacing);
            }
            
            F.line = 432;
            n_12595071.box.y = at_12595006[0];
            F.line = 433;
            switch (n_12595071.layoutAlign) {
            case 0:
              F.line = 435;
              n_12595071.box.x = node_12590744.horizontalPadding;
              break;
            case 1:
              F.line = 437;
              n_12595071.box.x = ((node_12590744.box.w / 2.0000000000000000e+00) - (n_12595071.box.w / 2.0000000000000000e+00));
              break;
            case 2:
              F.line = 439;
              n_12595071.box.x = ((node_12590744.box.w - n_12595071.box.w) - node_12590744.horizontalPadding);
              break;
            case 3:
              F.line = 441;
              n_12595071.box.x = node_12590744.horizontalPadding;
              F.line = 442;
              n_12595071.box.w = (node_12590744.box.w - (node_12590744.horizontalPadding * 2.0000000000000000e+00));
              F.line = 444;
              compute_layout_12590741(node_12590744, n_12595071);
              break;
            }
            F.line = 445;
            HEX2BHEX3D_9545021(at_12595006, 0, n_12595071.box.h);
            F.line = 267;
            i_15445089 = subInt(i_15445089, 1);
          }
      } while(false);
    } while(false);
    F.line = 446;
    HEX2BHEX3D_9545021(at_12595006, 0, node_12590744.verticalPadding);
    F.line = 447;
    node_12590744.box.h = at_12595006[0];
    }
    
    if ((node_12590744.layoutMode == 2)) {
    if ((node_12590744.counterAxisSizingMode == 0)) {
    F.line = 452;
    var max_h_12600032 = 0.0;
    L10: do {
      F.line = 453;
      var n_12600039 = null;
      F.line = 184;
      var i_15445092 = 0;
      F.line = 185;
      var l_15445093 = (node_12590744.nodes != null ? node_12590744.nodes.length : 0);
      L11: do {
        F.line = 186;
          L12: while (true) {
          if (!(i_15445092 < l_15445093)) break L12;
            F.line = 453;
            n_12600039 = node_12590744.nodes[chckIndx(i_15445092, 0, (node_12590744.nodes != null ? node_12590744.nodes.length : 0)+0-1)-0];
            if (!((n_12600039.layoutAlign == 3))) {
            F.line = 455;
            max_h_12600032 = max_90014(max_h_12600032, n_12600039.box.h);
            }
            
            F.line = 188;
            i_15445092 = addInt(i_15445092, 1);
            if (!(((node_12590744.nodes != null ? node_12590744.nodes.length : 0) == l_15445093))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 456;
    node_12590744.box.h = (max_h_12600032 + (node_12590744.verticalPadding * 2.0000000000000000e+00));
    }
    
    F.line = 458;
    var at_12605006 = [0.0];
    F.line = 459;
    HEX2BHEX3D_9545021(at_12605006, 0, node_12590744.horizontalPadding);
    L13: do {
      F.line = 460;
      var i_12605020 = 0;
      F.line = 460;
      var n_12605021 = null;
      F.line = 264;
      var i_15445096 = subInt((node_12590744.nodes != null ? node_12590744.nodes.length : 0), 1);
      L14: do {
        F.line = 265;
          L15: while (true) {
          if (!(-1 < i_15445096)) break L15;
            F.line = 460;
            i_12605020 = subInt(subInt((node_12590744.nodes != null ? node_12590744.nodes.length : 0), 1), i_15445096);
            F.line = 266;
            n_12605021 = node_12590744.nodes[chckIndx(i_15445096, 0, (node_12590744.nodes != null ? node_12590744.nodes.length : 0)+0-1)-0];
            if ((0 < i_12605020)) {
            F.line = 462;
            HEX2BHEX3D_9545021(at_12605006, 0, node_12590744.itemSpacing);
            }
            
            F.line = 463;
            n_12605021.box.x = at_12605006[0];
            F.line = 464;
            switch (n_12605021.layoutAlign) {
            case 0:
              F.line = 466;
              n_12605021.box.y = node_12590744.verticalPadding;
              break;
            case 1:
              F.line = 468;
              n_12605021.box.y = ((node_12590744.box.h / 2.0000000000000000e+00) - (n_12605021.box.h / 2.0000000000000000e+00));
              break;
            case 2:
              F.line = 470;
              n_12605021.box.y = ((node_12590744.box.h - n_12605021.box.h) - node_12590744.verticalPadding);
              break;
            case 3:
              F.line = 472;
              n_12605021.box.y = node_12590744.verticalPadding;
              F.line = 473;
              n_12605021.box.h = (node_12590744.box.h - (node_12590744.verticalPadding * 2.0000000000000000e+00));
              F.line = 475;
              compute_layout_12590741(node_12590744, n_12605021);
              break;
            }
            F.line = 476;
            HEX2BHEX3D_9545021(at_12605006, 0, n_12605021.box.w);
            F.line = 267;
            i_15445096 = subInt(i_15445096, 1);
          }
      } while(false);
    } while(false);
    F.line = 477;
    HEX2BHEX3D_9545021(at_12605006, 0, node_12590744.horizontalPadding);
    F.line = 478;
    node_12590744.box.w = at_12605006[0];
    }
    
  framePtr = F.prev;

  
}
function HEX2B_11635311(a_11635313, b_11635314) {
  var result_11635315 = {x: 0.0, y: 0.0, w: 0.0, h: 0.0};

  var F={procname:"vmath.+",prev:framePtr,filename:"vmath.nim",line:0};
  framePtr = F;
    F.line = 1441;
    result_11635315.x = (a_11635313.x + b_11635314.x);
    F.line = 1442;
    result_11635315.y = (a_11635313.y + b_11635314.y);
    F.line = 1443;
    result_11635315.w = a_11635313.w;
    F.line = 1444;
    result_11635315.h = a_11635313.h;
  framePtr = F.prev;

  return result_11635315;

}
function compute_screen_box_12610035(parent_12610037, node_12610038) {
  var F={procname:"common.computeScreenBox",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    if ((parent_12610037 == null)) {
    F.line = 483;
    nimCopy(node_12610038.screenBox, node_12610038.box, NTI11635147);
    }
    else {
      F.line = 485;
      nimCopy(node_12610038.screenBox, HEX2B_11635311(node_12610038.box, parent_12610037.screenBox), NTI11635147);
    }
    
    L1: do {
      F.line = 486;
      var n_12610053 = null;
      F.line = 184;
      var i_15445099 = 0;
      F.line = 185;
      var l_15445100 = (node_12610038.nodes != null ? node_12610038.nodes.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_15445099 < l_15445100)) break L3;
            F.line = 486;
            n_12610053 = node_12610038.nodes[chckIndx(i_15445099, 0, (node_12610038.nodes != null ? node_12610038.nodes.length : 0)+0-1)-0];
            F.line = 487;
            compute_screen_box_12610035(node_12610038, n_12610053);
            F.line = 188;
            i_15445099 = addInt(i_15445099, 1);
            if (!(((node_12610038.nodes != null ? node_12610038.nodes.length : 0) == l_15445100))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function remove_13675135(element_13675137) {
  var F={procname:"htmlbackend.remove",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 175;
    element_13675137.remove();
  framePtr = F.prev;

  
}
function raw_get_13685127(t_13685131, key_13685132, hc_13685133, hc_13685133_Idx) {
            var Tmp3;

  var result_13685134 = 0;

  var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 63;
    hc_13685133[hc_13685133_Idx] = hash_9715214(key_13685132);
    if ((hc_13685133[hc_13685133_Idx] == 0)) {
    F.line = 65;
    hc_13685133[hc_13685133_Idx] = 314159265;
    }
    
    if (((t_13685131.data != null ? t_13685131.data.length : 0) == 0)) {
    F.line = 47;
    result_13685134 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_13695138 = (hc_13685133[hc_13685133_Idx] & (t_13685131.data != null ? (t_13685131.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_13685131.data[chckIndx(h_13695138, 0, (t_13685131.data != null ? t_13685131.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_13685131.data[chckIndx(h_13695138, 0, (t_13685131.data != null ? t_13685131.data.length : 0)+0-1)-0].Field0 == hc_13685133[hc_13685133_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13685131.data[chckIndx(h_13695138, 0, (t_13685131.data != null ? t_13685131.data.length : 0)+0-1)-0].Field1, key_13685132);            }          if (Tmp3) {
          F.line = 55;
          result_13685134 = h_13695138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_13695138 = next_try_9740014(h_13695138, (t_13685131.data != null ? (t_13685131.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_13685134 = subInt(-1, h_13695138);
  } while (false);
  framePtr = F.prev;

  return result_13685134;

}
function must_rehash_13765601(t_13765604) {
  var result_13765605 = false;

  var F={procname:"mustRehash.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    if (!((t_13765604.counter < (t_13765604.data != null ? t_13765604.data.length : 0)))) {
    F.line = 33;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 34;
    result_13765605 = ((mulInt((t_13765604.data != null ? t_13765604.data.length : 0), 2) < mulInt(t_13765604.counter, 3)) || (subInt((t_13765604.data != null ? t_13765604.data.length : 0), t_13765604.counter) < 4));
  framePtr = F.prev;

  return result_13765605;

}
function raw_insert_13791108(t_13791114, data_13791117, data_13791117_Idx, key_13791118, val_13791119, hc_13791120, h_13791121) {
  var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
  framePtr = F;
    F.line = 22;
    data_13791117[data_13791117_Idx][chckIndx(h_13791121, 0, (data_13791117[data_13791117_Idx] != null ? data_13791117[data_13791117_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_13791118, NTI112);
    F.line = 23;
    data_13791117[data_13791117_Idx][chckIndx(h_13791121, 0, (data_13791117[data_13791117_Idx] != null ? data_13791117[data_13791117_Idx].length : 0)+0-1)-0].Field2 = val_13791119;
    F.line = 24;
    data_13791117[data_13791117_Idx][chckIndx(h_13791121, 0, (data_13791117[data_13791117_Idx] != null ? data_13791117[data_13791117_Idx].length : 0)+0-1)-0].Field0 = hc_13791120;
  framePtr = F.prev;

  
}
function enlarge_13790161(t_13790167) {
  var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 267;
    var n_13790175 = null;
    F.line = 268;
    n_13790175 = new Array(chckRange(mulInt((t_13790167.data != null ? t_13790167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13790167.data != null ? t_13790167.data.length : 0), 2), 0, 2147483647);++i) {n_13790175[i]={Field0: 0, Field1: null, Field2: null};}    F.line = 269;
    var Tmp1 = t_13790167.data; t_13790167.data = n_13790175; n_13790175 = Tmp1;    L2: do {
      F.line = 270;
      var i_13790334 = 0;
      F.line = 39;
      var colontmp__15445116 = 0;
      F.line = 270;
      colontmp__15445116 = (n_13790175 != null ? (n_13790175.length-1) : -1);
      F.line = 56;
      var res_15445117 = 0;
      L3: do {
        F.line = 57;
          L4: while (true) {
          if (!(res_15445117 <= colontmp__15445116)) break L4;
            F.line = 270;
            i_13790334 = res_15445117;
            F.line = 271;
            var eh_13790483 = n_13790175[chckIndx(i_13790334, 0, (n_13790175 != null ? n_13790175.length : 0)+0-1)-0].Field0;
            if (is_filled_9737018(eh_13790483)) {
            F.line = 273;
            var j_13790490 = (eh_13790483 & (t_13790167.data != null ? (t_13790167.data.length-1) : -1));
            L5: do {
              F.line = 274;
                L6: while (true) {
                if (!is_filled_9737018(t_13790167.data[chckIndx(j_13790490, 0, (t_13790167.data != null ? t_13790167.data.length : 0)+0-1)-0].Field0)) break L6;
                  F.line = 275;
                  j_13790490 = next_try_9740014(j_13790490, (t_13790167.data != null ? (t_13790167.data.length-1) : -1));
                }
            } while(false);
            F.line = 277;
            raw_insert_13791108(t_13790167, t_13790167, "data", n_13790175[chckIndx(i_13790334, 0, (n_13790175 != null ? n_13790175.length : 0)+0-1)-0].Field1, n_13790175[chckIndx(i_13790334, 0, (n_13790175 != null ? n_13790175.length : 0)+0-1)-0].Field2, eh_13790483, j_13790490);
            }
            
            F.line = 59;
            res_15445117 = addInt(res_15445117, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function raw_get_known_hc_13791593(t_13791597, key_13791598, hc_13791599) {
  var result_13791600 = 0;

  var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((t_13791597.data != null ? t_13791597.data.length : 0) == 0)) {
    F.line = 47;
    result_13791600 = -1;
    break BeforeRet;
    }
    
    F.line = 48;
    var h_13795138 = (hc_13791599 & (t_13791597.data != null ? (t_13791597.data.length-1) : -1));
    L1: do {
      F.line = 49;
        L2: while (true) {
        if (!is_filled_9737018(t_13791597.data[chckIndx(h_13795138, 0, (t_13791597.data != null ? t_13791597.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_13791597.data[chckIndx(h_13795138, 0, (t_13791597.data != null ? t_13791597.data.length : 0)+0-1)-0].Field0 == hc_13791599) && eqStrings(t_13791597.data[chckIndx(h_13795138, 0, (t_13791597.data != null ? t_13791597.data.length : 0)+0-1)-0].Field1, key_13791598))) {
          F.line = 55;
          result_13791600 = h_13795138;
          break BeforeRet;
          }
          
          F.line = 56;
          h_13795138 = next_try_9740014(h_13795138, (t_13791597.data != null ? (t_13791597.data.length-1) : -1));
        }
    } while(false);
    F.line = 57;
    result_13791600 = subInt(-1, h_13795138);
  } while (false);
  framePtr = F.prev;

  return result_13791600;

}
function HEX5BHEX5DHEX3D_13715126(t_13715132, key_13715133, val_13715134) {
  var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    if (((t_13715132.data != null ? t_13715132.data.length : 0) == 0)) {
    if (!(is_power_of_two_1080029(64))) {
    F.line = 127;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    F.line = 128;
    t_13715132.counter = 0;
    F.line = 129;
    t_13715132.data = new Array(64); for (var i=0;i<64;++i) {t_13715132.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    F.line = 57;
    var hc_13740601 = [0];
    F.line = 58;
    var index_13740610 = raw_get_13685127(t_13715132, key_13715133, hc_13740601, 0);
    if ((0 <= index_13740610)) {
    F.line = 59;
    t_13715132.data[chckIndx(index_13740610, 0, (t_13715132.data != null ? t_13715132.data.length : 0)+0-1)-0].Field2 = val_13715134;
    }
    else {
      if (((t_13715132.data != null ? t_13715132.data.length : 0) == 0)) {
      if (!(is_power_of_two_1080029(64))) {
      F.line = 127;
      failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      F.line = 128;
      t_13715132.counter = 0;
      F.line = 129;
      t_13715132.data = new Array(64); for (var i=0;i<64;++i) {t_13715132.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (must_rehash_13765601(t_13715132)) {
      F.line = 49;
      enlarge_13790161(t_13715132);
      F.line = 50;
      index_13740610 = raw_get_known_hc_13791593(t_13715132, key_13715133, hc_13740601[0]);
      }
      
      F.line = 51;
      index_13740610 = subInt(-1, index_13740610);
      F.line = 52;
      raw_insert_13791108(t_13715132, t_13715132, "data", key_13715133, val_13715134, hc_13740601[0], index_13740610);
      F.line = 60;
      t_13715132.counter = addInt(t_13715132.counter, 1);
    }
    
  framePtr = F.prev;

  
}
function HEX3DHEX3D_13835001(x_13835004, y_13835005) {
  var result_13835006 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_13835004.x == y_13835005.x))) {
    F.line = 1791;
    result_13835006 = false;
    break BeforeRet;
    }
    
    if (!((x_13835004.y == y_13835005.y))) {
    F.line = 1791;
    result_13835006 = false;
    break BeforeRet;
    }
    
    if (!((x_13835004.w == y_13835005.w))) {
    F.line = 1791;
    result_13835006 = false;
    break BeforeRet;
    }
    
    if (!((x_13835004.h == y_13835005.h))) {
    F.line = 1791;
    result_13835006 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_13835006 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13835006;

}
function HEX3DHEX3D_13320583(x_13320586, y_13320587) {
  var result_13320588 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_13320586.r == y_13320587.r))) {
    F.line = 1791;
    result_13320588 = false;
    break BeforeRet;
    }
    
    if (!((x_13320586.g == y_13320587.g))) {
    F.line = 1791;
    result_13320588 = false;
    break BeforeRet;
    }
    
    if (!((x_13320586.b == y_13320587.b))) {
    F.line = 1791;
    result_13320588 = false;
    break BeforeRet;
    }
    
    if (!((x_13320586.a == y_13320587.a))) {
    F.line = 1791;
    result_13320588 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_13320588 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13320588;

}
function to_html_rgba_10255018(c_10255020) {
  var result_10255021 = null;

  var F={procname:"chroma.toHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 203;
    result_10255021 = nimCopy(null, (makeNimstrLit("rgba(") || []).concat(cstrToNimstr(((((c_10255020.r * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_10255020.g * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_10255020.b * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr((c_10255020.a)+"") || [],makeNimstrLit(")") || []), NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10255021;

}
function HEX3DHEX3D_13895001(x_13895004, y_13895005) {
  var result_13895006 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!(eqStrings(x_13895004.fontFamily, y_13895005.fontFamily))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.fontSize == y_13895005.fontSize))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.fontWeight == y_13895005.fontWeight))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.lineHeight == y_13895005.lineHeight))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.textAlignHorizontal == y_13895005.textAlignHorizontal))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.textAlignVertical == y_13895005.textAlignVertical))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    if (!((x_13895004.autoResize == y_13895005.autoResize))) {
    F.line = 1791;
    result_13895006 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_13895006 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13895006;

}
function max_85014(x_85016, y_85017) {
    var Tmp1;
      var Tmp2;

  var result_85018 = 0.0;

      if ((y_85017 <= x_85016)) Tmp2 = true; else {        Tmp2 = !((y_85017 == y_85017));      }    if (Tmp2) {
    Tmp1 = x_85016;
    }
    else {
    Tmp1 = y_85017;
    }
    
    result_85018 = Tmp1;

  return result_85018;

}
function HEX3DHEX3D_13906025(x_13906028, y_13906029) {
  var result_13906030 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_13906028.kind == y_13906029.kind))) {
    F.line = 1791;
    result_13906030 = false;
    break BeforeRet;
    }
    
    if (!((x_13906028.blur == y_13906029.blur))) {
    F.line = 1791;
    result_13906030 = false;
    break BeforeRet;
    }
    
    if (!((x_13906028.x == y_13906029.x))) {
    F.line = 1791;
    result_13906030 = false;
    break BeforeRet;
    }
    
    if (!((x_13906028.y == y_13906029.y))) {
    F.line = 1791;
    result_13906030 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_13320583(x_13906028.color, y_13906029.color))) {
    F.line = 1791;
    result_13906030 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_13906030 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13906030;

}
function HEX3DHEX3D_13905003(x_13905007, y_13905009) {
  var result_13905010 = false;

  var F={procname:"==.==",prev:framePtr,filename:"comparisons.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var same_object_13905601 = false;
    F.line = 302;
    same_object_13905601 = x_13905007 === y_13905009
    if (same_object_13905601) {
    F.line = 303;
    result_13905010 = true;
    break BeforeRet;
    }
    
    if (!(((x_13905007 != null ? x_13905007.length : 0) == (y_13905009 != null ? y_13905009.length : 0)))) {
    F.line = 310;
    result_13905010 = false;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 312;
      var i_13906024 = 0;
      F.line = 66;
      var colontmp__15445130 = 0;
      F.line = 312;
      colontmp__15445130 = subInt((x_13905007 != null ? x_13905007.length : 0), 1);
      F.line = 77;
      var res_15445131 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445131 <= colontmp__15445130)) break L3;
            F.line = 312;
            i_13906024 = res_15445131;
            if (!(HEX3DHEX3D_13906025(x_13905007[chckIndx(i_13906024, 0, (x_13905007 != null ? x_13905007.length : 0)+0-1)-0], y_13905009[chckIndx(i_13906024, 0, (y_13905009 != null ? y_13905009.length : 0)+0-1)-0]))) {
            F.line = 314;
            result_13905010 = false;
            break BeforeRet;
            }
            
            F.line = 80;
            res_15445131 = addInt(res_15445131, 1);
          }
      } while(false);
    } while(false);
    F.line = 316;
    result_13905010 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13905010;

}
function parse_saturated_natural_735017(s_735019, b_735021, b_735021_Idx, start_735022) {
      var Tmp1;
          var Tmp4;

  var result_735024 = 0;

  var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 476;
    var i_735025 = start_735022;
    if (((i_735025 < (s_735019 != null ? s_735019.length : 0)) && (s_735019[chckIndx(i_735025, 0, (s_735019 != null ? s_735019.length : 0)+0-1)-0] == 43))) {
    F.line = 477;
    i_735025 = addInt(i_735025, 1);
    }
    
      if (!(i_735025 < (s_735019 != null ? s_735019.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet15[s_735019[chckIndx(i_735025, 0, (s_735019 != null ? s_735019.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 479;
    b_735021[b_735021_Idx] = 0;
    L2: do {
      F.line = 480;
        L3: while (true) {
          if (!(i_735025 < (s_735019 != null ? s_735019.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet16[s_735019[chckIndx(i_735025, 0, (s_735019 != null ? s_735019.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          F.line = 481;
          var c_745016 = subInt(s_735019[chckIndx(i_735025, 0, (s_735019 != null ? s_735019.length : 0)+0-1)-0], 48);
          if ((b_735021[b_735021_Idx] <= divInt(subInt(2147483647, c_745016), 10))) {
          F.line = 483;
          b_735021[b_735021_Idx] = addInt(mulInt(b_735021[b_735021_Idx], 10), c_745016);
          }
          else {
            F.line = 485;
            b_735021[b_735021_Idx] = 2147483647;
          }
          
          F.line = 486;
          i_735025 = addInt(i_735025, 1);
          L5: do {
            F.line = 487;
              L6: while (true) {
              if (!((i_735025 < (s_735019 != null ? s_735019.length : 0)) && (s_735019[chckIndx(i_735025, 0, (s_735019 != null ? s_735019.length : 0)+0-1)-0] == 95))) break L6;
                F.line = 487;
                i_735025 = addInt(i_735025, 1);
              }
          } while(false);
        }
    } while(false);
    F.line = 488;
    result_735024 = subInt(i_735025, start_735022);
    }
    
  framePtr = F.prev;

  return result_735024;

}
function parse_standard_format_specifier_11355322(s_11355324, start_11355325, ignore_unknown_suffix_11355327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_11355328 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

  var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 379;
    result_11355328.fill = 32;
    F.line = 380;
    result_11355328.align = 0;
    F.line = 381;
    result_11355328.sign = 45;
    F.line = 382;
    var i_11355331 = start_11355325;
    if (((addInt(i_11355331, 1) < (s_11355324 != null ? s_11355324.length : 0)) && (ConstSet11[s_11355324[chckIndx(addInt(i_11355331, 1), 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 384;
    result_11355328.fill = s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0];
    F.line = 385;
    result_11355328.align = s_11355324[chckIndx(addInt(i_11355331, 1), 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0];
    F.line = 386;
    i_11355331 = addInt(i_11355331, 2);
    }
    else {
    if (((i_11355331 < (s_11355324 != null ? s_11355324.length : 0)) && (ConstSet12[s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 388;
    result_11355328.align = s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0];
    F.line = 389;
    i_11355331 = addInt(i_11355331, 1);
    }
    }
    if (((i_11355331 < (s_11355324 != null ? s_11355324.length : 0)) && (ConstSet13[s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0]] != undefined))) {
    F.line = 392;
    result_11355328.sign = s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0];
    F.line = 393;
    i_11355331 = addInt(i_11355331, 1);
    }
    
    if (((i_11355331 < (s_11355324 != null ? s_11355324.length : 0)) && (s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0] == 35))) {
    F.line = 396;
    result_11355328.alternateForm = true;
    F.line = 397;
    i_11355331 = addInt(i_11355331, 1);
    }
    
      if (!((addInt(i_11355331, 1) < (s_11355324 != null ? s_11355324.length : 0)) && (s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet14[s_11355324[chckIndx(addInt(i_11355331, 1), 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 400;
    result_11355328.padWithZero = true;
    F.line = 401;
    i_11355331 = addInt(i_11355331, 1);
    }
    
    F.line = 403;
    var parsed_length_11375015 = parse_saturated_natural_735017(s_11355324, result_11355328, "minimumWidth", i_11355331);
    F.line = 404;
    i_11355331 = addInt(i_11355331, parsed_length_11375015);
    if (((i_11355331 < (s_11355324 != null ? s_11355324.length : 0)) && (s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0] == 46))) {
    F.line = 406;
    i_11355331 = addInt(i_11355331, 1);
    F.line = 407;
    var parsed_length_b_11375029 = parse_saturated_natural_735017(s_11355324, result_11355328, "precision", i_11355331);
    F.line = 408;
    i_11355331 = addInt(i_11355331, parsed_length_b_11375029);
    }
    else {
      F.line = 410;
      result_11355328.precision = -1;
    }
    
      if (!(i_11355331 < (s_11355324 != null ? s_11355324.length : 0))) Tmp2 = false; else {        Tmp2 = (ConstSet17[s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp2) {
    F.line = 413;
    result_11355328.typ = s_11355324[chckIndx(i_11355331, 0, (s_11355324 != null ? s_11355324.length : 0)+0-1)-0];
    F.line = 414;
    i_11355331 = addInt(i_11355331, 1);
    }
    
    F.line = 415;
    result_11355328.endPosition = i_11355331;
      if (!!((i_11355331 == (s_11355324 != null ? s_11355324.length : 0)))) Tmp3 = false; else {        Tmp3 = !(ignore_unknown_suffix_11355327);      }    if (Tmp3) {
    F.line = 417;
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4455068(s_11355324, HEX2EHEX2E_4455001(i_11355331, 1)) || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_11355328;

}
function nsuformatBiggestFloat(f_9510221, format_9510222, precision_9510227, decimal_sep_9510228) {
  var result_9510229 = null;

  var F={procname:"strutils.formatBiggestFloat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2310;
    var precision_9510401 = precision_9510227;
    if ((precision_9510401 == -1)) {
    F.line = 2313;
    precision_9510401 = 6;
    }
    
    F.line = 2314;
    var res_9510402 = null;
    F.line = 2315;
    switch (format_9510222) {
    case 0:
      F.line = 2317;
      res_9510402 = f_9510221.toString();
      break;
    case 1:
      F.line = 2319;
      res_9510402 = f_9510221.toFixed(precision_9510401);
      break;
    case 2:
      F.line = 2321;
      res_9510402 = f_9510221.toExponential(precision_9510401);
      break;
    }
    F.line = 2322;
    result_9510229 = nimCopy(null, cstrToNimstr(res_9510402), NTI112);
    if (((1.0000000000000000e+00 / f_9510221) == -Infinity)) {
    F.line = 2325;
    result_9510229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9510402) || []), NTI112);
    }
    
    L1: do {
      F.line = 2326;
      var i_9510410 = 0;
      F.line = 104;
      var colontmp__15445148 = 0;
      F.line = 2326;
      colontmp__15445148 = (result_9510229 != null ? result_9510229.length : 0);
      F.line = 106;
      var i_15445149 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445149 < colontmp__15445148)) break L3;
            F.line = 2326;
            i_9510410 = i_15445149;
            if ((ConstSet18[result_9510229[chckIndx(i_9510410, 0, (result_9510229 != null ? result_9510229.length : 0)+0-1)-0]] != undefined)) {
            F.line = 2329;
            result_9510229[chckIndx(i_9510410, 0, (result_9510229 != null ? result_9510229.length : 0)+0-1)-0] = decimal_sep_9510228;
            }
            
            F.line = 109;
            i_15445149 = addInt(i_15445149, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9510229;

}
function insert_335401(x_335404, x_335404_Idx, item_335405, i_335406) {
  var F={procname:"system.insert",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2706;
    var xl_335407 = (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0);
    F.line = 2707;
    (x_335404[x_335404_Idx] == null ? x_335404[x_335404_Idx] = mnewString(chckRange(addInt(xl_335407, (item_335405 != null ? item_335405.length : 0)), 0, 2147483647)) : x_335404[x_335404_Idx].length = chckRange(addInt(xl_335407, (item_335405 != null ? item_335405.length : 0)), 0, 2147483647));
    F.line = 2708;
    var j_335408 = subInt(xl_335407, 1);
    L1: do {
      F.line = 2709;
        L2: while (true) {
        if (!(i_335406 <= j_335408)) break L2;
          F.line = 2710;
          x_335404[x_335404_Idx][chckIndx(addInt(j_335408, (item_335405 != null ? item_335405.length : 0)), 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0] = x_335404[x_335404_Idx][chckIndx(j_335408, 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0];
          F.line = 2711;
          j_335408 = subInt(j_335408, 1);
        }
    } while(false);
    F.line = 2712;
    j_335408 = 0;
    L3: do {
      F.line = 2713;
        L4: while (true) {
        if (!(j_335408 < (item_335405 != null ? item_335405.length : 0))) break L4;
          F.line = 2714;
          x_335404[x_335404_Idx][chckIndx(addInt(j_335408, i_335406), 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0] = item_335405[chckIndx(j_335408, 0, (item_335405 != null ? item_335405.length : 0)+0-1)-0];
          F.line = 2715;
          j_335408 = addInt(j_335408, 1);
        }
    } while(false);
  framePtr = F.prev;

  
}
function nsuRepeatChar(c_9225048, count_9225049) {
  var result_9225050 = null;

  var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1282;
    result_9225050 = nimCopy(null, mnewString(count_9225049), NTI112);
    L1: do {
      F.line = 1283;
      var i_9225059 = 0;
      F.line = 66;
      var colontmp__15445154 = 0;
      F.line = 1283;
      colontmp__15445154 = subInt(count_9225049, 1);
      F.line = 77;
      var res_15445155 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445155 <= colontmp__15445154)) break L3;
            F.line = 1283;
            i_9225059 = res_15445155;
            F.line = 1283;
            result_9225050[chckIndx(i_9225059, 0, (result_9225050 != null ? result_9225050.length : 0)+0-1)-0] = c_9225048;
            F.line = 80;
            res_15445155 = addInt(res_15445155, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9225050;

}
function validate_utf8_1370229(s_1370231) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1370232 = 0;

  var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 172;
    var i_1370234 = 0;
    F.line = 173;
    var l_1370235 = (s_1370231 != null ? s_1370231.length : 0);
    L1: do {
      F.line = 174;
        L2: while (true) {
        if (!(i_1370234 < l_1370235)) break L2;
          if ((s_1370231[chckIndx(i_1370234, 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] <= 127)) {
          F.line = 176;
          i_1370234 = addInt(i_1370234, 1);
          }
          else {
          if ((((s_1370231[chckIndx(i_1370234, 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((s_1370231[chckIndx(i_1370234, 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] < 194)) {
          F.line = 178;
          result_1370232 = i_1370234;
          break BeforeRet;
          }
          
            if (!(addInt(i_1370234, 1) < l_1370235)) Tmp3 = false; else {              Tmp3 = (((s_1370231[chckIndx(addInt(i_1370234, 1), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          F.line = 179;
          i_1370234 = addInt(i_1370234, 2);
          }
          else {
            F.line = 180;
            result_1370232 = i_1370234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1370231[chckIndx(i_1370234, 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_1370234, 2) < l_1370235)) Tmp5 = false; else {              Tmp5 = (((s_1370231[chckIndx(addInt(i_1370234, 1), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1370231[chckIndx(addInt(i_1370234, 2), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          F.line = 183;
          i_1370234 = addInt(i_1370234, 3);
          }
          else {
            F.line = 184;
            result_1370232 = i_1370234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1370231[chckIndx(i_1370234, 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_1370234, 3) < l_1370235)) Tmp8 = false; else {              Tmp8 = (((s_1370231[chckIndx(addInt(i_1370234, 1), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1370231[chckIndx(addInt(i_1370234, 2), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1370231[chckIndx(addInt(i_1370234, 3), 0, (s_1370231 != null ? s_1370231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          F.line = 189;
          i_1370234 = addInt(i_1370234, 4);
          }
          else {
            F.line = 190;
            result_1370232 = i_1370234;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 192;
            result_1370232 = i_1370234;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    F.line = 193;
    result_1370232 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1370232;

}
function nucruneLen(s_1126829) {
  var result_1126830 = 0;

  var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    F.line = 41;
    var i_1126832 = 0;
    L1: do {
      F.line = 42;
        L2: while (true) {
        if (!(i_1126832 < (s_1126829 != null ? s_1126829.length : 0))) break L2;
          if ((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] <= 127)) {
          F.line = 43;
          i_1126832 = addInt(i_1126832, 1);
          }
          else {
          if ((((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          F.line = 44;
          i_1126832 = addInt(i_1126832, 2);
          }
          else {
          if ((((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          F.line = 45;
          i_1126832 = addInt(i_1126832, 3);
          }
          else {
          if ((((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          F.line = 46;
          i_1126832 = addInt(i_1126832, 4);
          }
          else {
          if ((((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          F.line = 47;
          i_1126832 = addInt(i_1126832, 5);
          }
          else {
          if ((((s_1126829[chckIndx(i_1126832, 0, (s_1126829 != null ? s_1126829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          F.line = 48;
          i_1126832 = addInt(i_1126832, 6);
          }
          else {
            F.line = 49;
          i_1126832 = addInt(i_1126832, 1);
          }
          }}}}}
          F.line = 50;
          result_1126830 = addInt(result_1126830, 1);
        }
    } while(false);
  framePtr = F.prev;

  return result_1126830;

}
function align_string_11355222(s_11355224, minimum_width_11355225, align_11355226, fill_11355227) {
      var Tmp1;

  var result_11355228 = null;

  var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    if ((minimum_width_11355225 == 0)) {
    F.line = 282;
    result_11355228 = nimCopy(null, s_11355224, NTI112);
    }
    else {
      F.line = 284;
      if ((validate_utf8_1370229(s_11355224) == -1)) {
      Tmp1 = nucruneLen(s_11355224);
      }
      else {
      Tmp1 = (s_11355224 != null ? s_11355224.length : 0);
      }
      
      var s_rune_len_11355229 = Tmp1;
      F.line = 285;
      var to_fill_11355230 = subInt(minimum_width_11355225, s_rune_len_11355229);
      if ((to_fill_11355230 <= 0)) {
      F.line = 287;
      result_11355228 = nimCopy(null, s_11355224, NTI112);
      }
      else {
      if (((align_11355226 == 60) || (align_11355226 == 0))) {
      F.line = 289;
      result_11355228 = nimCopy(null, (s_11355224 || []).concat(nsuRepeatChar(fill_11355227, chckRange(to_fill_11355230, 0, 2147483647)) || []), NTI112);
      }
      else {
      if ((align_11355226 == 94)) {
      F.line = 291;
      var half_11355231 = divInt(to_fill_11355230, 2);
      F.line = 292;
      result_11355228 = nimCopy(null, (nsuRepeatChar(fill_11355227, chckRange(half_11355231, 0, 2147483647)) || []).concat(s_11355224 || [],nsuRepeatChar(fill_11355227, chckRange(subInt(to_fill_11355230, half_11355231), 0, 2147483647)) || []), NTI112);
      }
      else {
        F.line = 294;
        result_11355228 = nimCopy(null, (nsuRepeatChar(fill_11355227, chckRange(to_fill_11355230, 0, 2147483647)) || []).concat(s_11355224 || []), NTI112);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_11355228;

}
function nsuToUpperAsciiChar(c_8740016) {
  var result_8740017 = 0;

  var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet20[c_8740016] != undefined)) {
    F.line = 248;
    result_8740017 = chckRange(subInt(c_8740016, 32), 0, 255);
    }
    else {
      F.line = 250;
      result_8740017 = c_8740016;
    }
    
  framePtr = F.prev;

  return result_8740017;

}
function nsuToUpperAsciiStr(s_8745037) {
  var result_8745038 = null;

  var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 214;
    result_8745038 = nimCopy(null, mnewString(chckRange((s_8745037 != null ? s_8745037.length : 0), 0, 2147483647)), NTI112);
    L1: do {
      F.line = 215;
      var iHEX60gensym8745039_8750009 = 0;
      F.line = 66;
      var colontmp__15445180 = 0;
      F.line = 215;
      colontmp__15445180 = subInt((s_8745037 != null ? s_8745037.length : 0), 1);
      F.line = 77;
      var res_15445181 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445181 <= colontmp__15445180)) break L3;
            F.line = 264;
            iHEX60gensym8745039_8750009 = res_15445181;
            F.line = 216;
            result_8745038[chckIndx(iHEX60gensym8745039_8750009, 0, (result_8745038 != null ? result_8745038.length : 0)+0-1)-0] = nsuToUpperAsciiChar(s_8745037[chckIndx(iHEX60gensym8745039_8750009, 0, (s_8745037 != null ? s_8745037.length : 0)+0-1)-0]);
            F.line = 80;
            res_15445181 = addInt(res_15445181, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_8745038;

}
function format_value_11505001(result_11505004, result_11505004_Idx, value_11505005, specifier_11505006) {
    var Tmp1;

  var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((specifier_11505006 != null ? specifier_11505006.length : 0) == 0)) {
    F.line = 446;
    if (result_11505004[result_11505004_Idx] != null) { result_11505004[result_11505004_Idx] = (result_11505004[result_11505004_Idx]).concat(cstrToNimstr((value_11505005)+"")); } else { result_11505004[result_11505004_Idx] = cstrToNimstr((value_11505005)+"").slice(); };
    F.line = 447;
    break BeforeRet;
    }
    
    F.line = 448;
    var spec_11505007 = parse_standard_format_specifier_11355322(specifier_11505006, 0, false);
    F.line = 450;
    var fmode_11505008 = 0;
    F.line = 451;
    switch (spec_11505007.typ) {
    case 101:
    case 69:
      F.line = 453;
      fmode_11505008 = 2;
      break;
    case 102:
    case 70:
      F.line = 455;
      fmode_11505008 = 1;
      break;
    case 103:
    case 71:
      F.line = 457;
      fmode_11505008 = 0;
      break;
    case 0:
      break;
    default: 
      F.line = 460;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_11505007.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    F.line = 464;
    var f_11510002 = [nsuformatBiggestFloat(value_11505005, fmode_11505008, chckRange(spec_11505007.precision, -1, 32), 46)];
    F.line = 465;
    var sign_11510003 = false;
    if ((0.0 <= value_11505005)) {
    if (!((spec_11505007.sign == 45))) {
    F.line = 468;
    sign_11510003 = true;
    if ((value_11505005 == 0.0)) {
    if (((1.0000000000000000e+00 / value_11505005) == Infinity)) {
    F.line = 472;
    insert_335401(f_11510002, 0, nimCharToStr(spec_11505007.sign), 0);
    }
    
    }
    else {
      F.line = 474;
    insert_335401(f_11510002, 0, nimCharToStr(spec_11505007.sign), 0);
    }
    
    }
    
    }
    else {
      F.line = 476;
      sign_11510003 = true;
    }
    
    if (spec_11505007.padWithZero) {
    F.line = 479;
    var sign_str_11510006 = [];
    if (sign_11510003) {
    F.line = 481;
    sign_str_11510006 = nimCopy(null, nimCharToStr(f_11510002[0][chckIndx(0, 0, (f_11510002[0] != null ? f_11510002[0].length : 0)+0-1)-0]), NTI112);
    F.line = 482;
    f_11510002[0] = nimCopy(null, HEX5BHEX5D_4455068(f_11510002[0], HEX2EHEX2E_4455001(1, 1)), NTI112);
    }
    
    F.line = 484;
    var to_fill_11520040 = subInt(subInt(spec_11505007.minimumWidth, (f_11510002[0] != null ? f_11510002[0].length : 0)), (sign_11510003 ? 1:0));
    if ((0 < to_fill_11520040)) {
    F.line = 486;
    f_11510002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_11520040, 0, 2147483647)) || []).concat(f_11510002[0] || []), NTI112);
    }
    
    if (sign_11510003) {
    F.line = 488;
    f_11510002[0] = nimCopy(null, (sign_str_11510006 || []).concat(f_11510002[0] || []), NTI112);
    }
    
    }
    
    F.line = 491;
    if ((spec_11505007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_11505007.align;
    }
    
    var align_11520041 = Tmp1;
    F.line = 492;
    var res_11520042 = align_string_11355222(f_11510002[0], spec_11505007.minimumWidth, align_11520041, spec_11505007.fill);
    if ((ConstSet19[spec_11505007.typ] != undefined)) {
    F.line = 494;
    if (result_11505004[result_11505004_Idx] != null) { result_11505004[result_11505004_Idx] = (result_11505004[result_11505004_Idx]).concat(nsuToUpperAsciiStr(res_11520042)); } else { result_11505004[result_11505004_Idx] = nsuToUpperAsciiStr(res_11520042).slice(); };
    }
    else {
      F.line = 496;
    if (result_11505004[result_11505004_Idx] != null) { result_11505004[result_11505004_Idx] = (result_11505004[result_11505004_Idx]).concat(res_11520042); } else { result_11505004[result_11505004_Idx] = res_11520042.slice(); };
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function rune_len_at_1126931(s_1126933, i_1126934) {
  var result_1126935 = 0;

  var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
    if ((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] <= 127)) {
    F.line = 62;
    result_1126935 = 1;
    }
    else {
    if ((((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
    F.line = 63;
    result_1126935 = 2;
    }
    else {
    if ((((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
    F.line = 64;
    result_1126935 = 3;
    }
    else {
    if ((((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
    F.line = 65;
    result_1126935 = 4;
    }
    else {
    if ((((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
    F.line = 66;
    result_1126935 = 5;
    }
    else {
    if ((((s_1126933[chckIndx(i_1126934, 0, (s_1126933 != null ? s_1126933.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
    F.line = 67;
    result_1126935 = 6;
    }
    else {
      F.line = 68;
      result_1126935 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_1126935;

}
function rune_offset_1750244(s_1750246, pos_1750247, start_1750248) {
  var result_1750249 = 0;

  var F={procname:"unicode.runeOffset",prev:framePtr,filename:"unicode.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 319;
    var i_1750251 = 0;
    F.line = 320;
    var o_1750252 = start_1750248;
    L1: do {
      F.line = 321;
        L2: while (true) {
        if (!(i_1750251 < pos_1750247)) break L2;
          F.line = 322;
          o_1750252 = addInt(o_1750252, chckRange(rune_len_at_1126931(s_1750246, o_1750252), 0, 2147483647));
          if (((s_1750246 != null ? s_1750246.length : 0) <= o_1750252)) {
          F.line = 324;
          result_1750249 = -1;
          break BeforeRet;
          }
          
          F.line = 325;
          i_1750251 = addInt(i_1750251, 1);
        }
    } while(false);
    F.line = 326;
    result_1750249 = o_1750252;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1750249;

}
function format_value_11400080(result_11400083, result_11400083_Idx, value_11400084, specifier_11400085) {
  var F={procname:"strformat.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 502;
    var spec_11400086 = parse_standard_format_specifier_11355322(specifier_11400085, 0, false);
    F.line = 503;
    var value_11400087 = nimCopy(null, value_11400084, NTI112);
    F.line = 504;
    switch (spec_11400086.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 507;
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_11400086.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    if (!((spec_11400086.precision == -1))) {
    if ((spec_11400086.precision < nucruneLen(value_11400087))) {
    F.line = 512;
    (value_11400087 == null ? value_11400087 = mnewString(chckRange(rune_offset_1750244(value_11400087, chckRange(spec_11400086.precision, 0, 2147483647), 0), 0, 2147483647)) : value_11400087.length = chckRange(rune_offset_1750244(value_11400087, chckRange(spec_11400086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    F.line = 513;
    if (result_11400083[result_11400083_Idx] != null) { result_11400083[result_11400083_Idx] = (result_11400083[result_11400083_Idx]).concat(align_string_11355222(value_11400087, spec_11400086.minimumWidth, spec_11400086.align, spec_11400086.fill)); } else { result_11400083[result_11400083_Idx] = align_string_11355222(value_11400087, spec_11400086.minimumWidth, spec_11400086.align, spec_11400086.fill).slice(); };
  framePtr = F.prev;

  
}
function normalize_path_end_12827416(path_12827419, path_12827419_Idx, trailing_sep_12827420) {
            var Tmp3;
            var Tmp4;

  var F={procname:"os.normalizePathEnd",prev:framePtr,filename:"os.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((path_12827419[path_12827419_Idx] != null ? path_12827419[path_12827419_Idx].length : 0) == 0)) {
    F.line = 106;
    break BeforeRet;
    }
    
    F.line = 107;
    var i_12827421 = (path_12827419[path_12827419_Idx] != null ? path_12827419[path_12827419_Idx].length : 0);
    L1: do {
      F.line = 108;
        L2: while (true) {
        if (!(1 <= i_12827421)) break L2;
          if ((ConstSet23[path_12827419[path_12827419_Idx][chckIndx(subInt(i_12827421, 1), 0, (path_12827419[path_12827419_Idx] != null ? path_12827419[path_12827419_Idx].length : 0)+0-1)-0]] != undefined)) {
          F.line = 109;
          i_12827421 = subInt(i_12827421, 1);
          }
          else {
            if (!(path_12827419[path_12827419_Idx][chckIndx(subInt(i_12827421, 1), 0, (path_12827419[path_12827419_Idx] != null ? path_12827419[path_12827419_Idx].length : 0)+0-1)-0] == 46)) Tmp4 = false; else {              Tmp4 = (2 <= i_12827421);            }            if (!Tmp4) Tmp3 = false; else {              Tmp3 = (ConstSet24[path_12827419[path_12827419_Idx][chckIndx(subInt(i_12827421, 2), 0, (path_12827419[path_12827419_Idx] != null ? path_12827419[path_12827419_Idx].length : 0)+0-1)-0]] != undefined);            }          if (Tmp3) {
          F.line = 110;
          i_12827421 = subInt(i_12827421, 1);
          }
          else {
            F.line = 111;
            break L1;
          }
          }
        }
    } while(false);
    if (trailing_sep_12827420) {
    F.line = 114;
    (path_12827419[path_12827419_Idx] == null ? path_12827419[path_12827419_Idx] = mnewString(chckRange(i_12827421, 0, 2147483647)) : path_12827419[path_12827419_Idx].length = chckRange(i_12827421, 0, 2147483647));
    F.line = 116;
    if (path_12827419[path_12827419_Idx] != null) { addChar(path_12827419[path_12827419_Idx], 47); } else { path_12827419[path_12827419_Idx] = [47]; };
    }
    else {
    if ((0 < i_12827421)) {
    F.line = 119;
    (path_12827419[path_12827419_Idx] == null ? path_12827419[path_12827419_Idx] = mnewString(chckRange(i_12827421, 0, 2147483647)) : path_12827419[path_12827419_Idx].length = chckRange(i_12827421, 0, 2147483647));
    }
    else {
      F.line = 122;
      path_12827419[path_12827419_Idx] = nimCopy(null, makeNimstrLit("/"), NTI112);
    }
    }
  } while (false);
  framePtr = F.prev;

  
}
function has_next_12711019(it_12711021, x_12711022) {
  var result_12711023 = false;

  var F={procname:"pathnorm.hasNext",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 25;
    result_12711023 = (it_12711021.i < (x_12711022 != null ? x_12711022.length : 0));
  framePtr = F.prev;

  return result_12711023;

}
function next_12711037(it_12711040, x_12711041) {
      var Tmp1;
            var Tmp4;
          var Tmp7;

  var result_12711043 = {Field0: 0, Field1: 0};

  var F={procname:"pathnorm.next",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 28;
    it_12711040.prev = it_12711040.i;
      if (!!(it_12711040.notFirst)) Tmp1 = false; else {        Tmp1 = (ConstSet26[x_12711041[chckIndx(it_12711040.i, 0, (x_12711041 != null ? x_12711041.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 31;
    it_12711040.i = addInt(it_12711040.i, 1);
    }
    else {
      L2: do {
        F.line = 37;
          L3: while (true) {
            if (!(it_12711040.i < (x_12711041 != null ? x_12711041.length : 0))) Tmp4 = false; else {              Tmp4 = !((ConstSet27[x_12711041[chckIndx(it_12711040.i, 0, (x_12711041 != null ? x_12711041.length : 0)+0-1)-0]] != undefined));            }          if (!Tmp4) break L3;
            F.line = 37;
            it_12711040.i = addInt(it_12711040.i, 1);
          }
      } while(false);
    }
    
    if ((it_12711040.prev < it_12711040.i)) {
    F.line = 39;
    var colontmp__15445204 = it_12711040.prev;
    F.line = 39;
    var colontmp__15445205 = subInt(it_12711040.i, 1);
    F.line = 39;
    nimCopy(result_12711043, {Field0: colontmp__15445204, Field1: colontmp__15445205}, NTI12711042);
    }
    else {
    if (has_next_12711019(it_12711040, x_12711041)) {
    F.line = 41;
    nimCopy(result_12711043, next_12711037(it_12711040, x_12711041), NTI12711042);
    }
    }
    L5: do {
      F.line = 43;
        L6: while (true) {
          if (!(it_12711040.i < (x_12711041 != null ? x_12711041.length : 0))) Tmp7 = false; else {            Tmp7 = (ConstSet28[x_12711041[chckIndx(it_12711040.i, 0, (x_12711041 != null ? x_12711041.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp7) break L6;
          F.line = 43;
          it_12711040.i = addInt(it_12711040.i, 1);
        }
    } while(false);
    F.line = 44;
    it_12711040.notFirst = true;
  framePtr = F.prev;

  return result_12711043;

}
function is_slash_12730099(x_12730101, bounds_12730103) {
  var result_12730104 = false;

  var F={procname:"pathnorm.isSlash",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 57;
    result_12730104 = ((bounds_12730103["Field1"] == bounds_12730103["Field0"]) && (ConstSet29[x_12730101[chckIndx(bounds_12730103["Field0"], 0, (x_12730101 != null ? x_12730101.length : 0)+0-1)-0]] != undefined));
  framePtr = F.prev;

  return result_12730104;

}
function is_dot_dot_12730080(x_12730082, bounds_12730084) {
  var result_12730085 = false;

  var F={procname:"pathnorm.isDotDot",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 54;
    result_12730085 = (((bounds_12730084["Field1"] == addInt(bounds_12730084["Field0"], 1)) && (x_12730082[chckIndx(bounds_12730084["Field0"], 0, (x_12730082 != null ? x_12730082.length : 0)+0-1)-0] == 46)) && (x_12730082[chckIndx(addInt(bounds_12730084["Field0"], 1), 0, (x_12730082 != null ? x_12730082.length : 0)+0-1)-0] == 46));
  framePtr = F.prev;

  return result_12730085;

}
function is_dot_12730061(x_12730063, bounds_12730065) {
  var result_12730066 = false;

  var F={procname:"pathnorm.isDot",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 51;
    result_12730066 = ((bounds_12730065["Field1"] == bounds_12730065["Field0"]) && (x_12730063[chckIndx(bounds_12730065["Field0"], 0, (x_12730063 != null ? x_12730063.length : 0)+0-1)-0] == 46));
  framePtr = F.prev;

  return result_12730066;

}
function add_normalize_path_12735021(x_12735023, result_12735025, result_12735025_Idx, state_12735027, state_12735027_Idx, dir_sep_12735028) {
            var Tmp5;
            var Tmp6;
                var Tmp9;
              var Tmp10;
            var Tmp11;
      var Tmp12;

  var F={procname:"pathnorm.addNormalizePath",prev:framePtr,filename:"pathnorm.nim",line:0};
  framePtr = F;
    F.line = 65;
    var it_12735029 = [{i: 0, prev: 0, notFirst: false}];
    F.line = 66;
    it_12735029[0].notFirst = (0 < (state_12735027[state_12735027_Idx] >> 1));
    if (it_12735029[0].notFirst) {
    L1: do {
      F.line = 68;
        L2: while (true) {
        if (!((it_12735029[0].i < (x_12735023 != null ? x_12735023.length : 0)) && (ConstSet25[x_12735023[chckIndx(it_12735029[0].i, 0, (x_12735023 != null ? x_12735023.length : 0)+0-1)-0]] != undefined))) break L2;
          F.line = 68;
          it_12735029[0].i = addInt(it_12735029[0].i, 1);
        }
    } while(false);
    }
    
    L3: do {
      F.line = 69;
        L4: while (true) {
        if (!has_next_12711019(it_12735029[0], x_12735023)) break L4;
          F.line = 70;
          var b_12745015 = next_12711037(it_12735029[0], x_12735023);
            if (!((state_12735027[state_12735027_Idx] >> 1) == 0)) Tmp5 = false; else {              Tmp5 = is_slash_12730099(x_12735023, b_12745015);            }          if (Tmp5) {
            if (((result_12735025[result_12735025_Idx] != null ? result_12735025[result_12735025_Idx].length : 0) == 0)) Tmp6 = true; else {              Tmp6 = !((ConstSet30[HEX5BHEX5D_326029(result_12735025[result_12735025_Idx], 1)] != undefined));            }          if (Tmp6) {
          F.line = 73;
          if (result_12735025[result_12735025_Idx] != null) { addChar(result_12735025[result_12735025_Idx], dir_sep_12735028); } else { result_12735025[result_12735025_Idx] = [dir_sep_12735028]; };
          }
          
          F.line = 74;
          state_12735027[state_12735027_Idx] = (state_12735027[state_12735027_Idx] | 1);
          }
          else {
          if (is_dot_dot_12730080(x_12735023, b_12745015)) {
          if ((1 <= (state_12735027[state_12735027_Idx] >> 1))) {
          F.line = 77;
          var d_12760008 = (result_12735025[result_12735025_Idx] != null ? result_12735025[result_12735025_Idx].length : 0);
          L7: do {
            F.line = 84;
              L8: while (true) {
                if (!((state_12735027[state_12735027_Idx] & 1) < subInt(d_12760008, 1))) Tmp9 = false; else {                  Tmp9 = !((ConstSet31[result_12735025[result_12735025_Idx][chckIndx(subInt(d_12760008, 1), 0, (result_12735025[result_12735025_Idx] != null ? result_12735025[result_12735025_Idx].length : 0)+0-1)-0]] != undefined));                }              if (!Tmp9) break L8;
                F.line = 85;
                d_12760008 = subInt(d_12760008, 1);
              }
          } while(false);
          if ((0 < d_12760008)) {
          F.line = 87;
          (result_12735025[result_12735025_Idx] == null ? result_12735025[result_12735025_Idx] = mnewString(chckRange(subInt(d_12760008, 1), 0, 2147483647)) : result_12735025[result_12735025_Idx].length = chckRange(subInt(d_12760008, 1), 0, 2147483647));
          F.line = 88;
          state_12735027[state_12735027_Idx] = subInt(state_12735027[state_12735027_Idx], 2);
          }
          
          }
          else {
              if (!(0 < (result_12735025[result_12735025_Idx] != null ? result_12735025[result_12735025_Idx].length : 0))) Tmp10 = false; else {                Tmp10 = !((ConstSet32[HEX5BHEX5D_326029(result_12735025[result_12735025_Idx], 1)] != undefined));              }            if (Tmp10) {
            F.line = 91;
            if (result_12735025[result_12735025_Idx] != null) { addChar(result_12735025[result_12735025_Idx], dir_sep_12735028); } else { result_12735025[result_12735025_Idx] = [dir_sep_12735028]; };
            }
            
            F.line = 92;
            if (result_12735025[result_12735025_Idx] != null) { result_12735025[result_12735025_Idx] = (result_12735025[result_12735025_Idx]).concat(substr_341022(x_12735023, b_12745015["Field0"], b_12745015["Field1"])); } else { result_12735025[result_12735025_Idx] = substr_341022(x_12735023, b_12745015["Field0"], b_12745015["Field1"]).slice(); };
          }
          
          }
          else {
          if (is_dot_12730061(x_12735023, b_12745015)) {
          }
          else {
          if ((b_12745015["Field0"] <= b_12745015["Field1"])) {
            if (!(0 < (result_12735025[result_12735025_Idx] != null ? result_12735025[result_12735025_Idx].length : 0))) Tmp11 = false; else {              Tmp11 = !((ConstSet33[HEX5BHEX5D_326029(result_12735025[result_12735025_Idx], 1)] != undefined));            }          if (Tmp11) {
          F.line = 97;
          if (result_12735025[result_12735025_Idx] != null) { addChar(result_12735025[result_12735025_Idx], dir_sep_12735028); } else { result_12735025[result_12735025_Idx] = [dir_sep_12735028]; };
          }
          
          F.line = 98;
          if (result_12735025[result_12735025_Idx] != null) { result_12735025[result_12735025_Idx] = (result_12735025[result_12735025_Idx]).concat(substr_341022(x_12735023, b_12745015["Field0"], b_12745015["Field1"])); } else { result_12735025[result_12735025_Idx] = substr_341022(x_12735023, b_12745015["Field0"], b_12745015["Field1"]).slice(); };
          F.line = 99;
          state_12735027[state_12735027_Idx] = addInt(state_12735027[state_12735027_Idx], 2);
          }
          }}}
        }
    } while(false);
      if (!eqStrings(result_12735025[result_12735025_Idx], [])) Tmp12 = false; else {        Tmp12 = !(eqStrings(x_12735023, []));      }    if (Tmp12) {
    F.line = 100;
    result_12735025[result_12735025_Idx] = nimCopy(null, makeNimstrLit("."), NTI112);
    }
    
  framePtr = F.prev;

  
}
function join_path_impl_12860222(result_12860225, result_12860225_Idx, state_12860227, state_12860227_Idx, tail_12860228) {
    var Tmp1;
    var Tmp2;
      var Tmp3;
        var Tmp4;

  var F={procname:"os.joinPathImpl",prev:framePtr,filename:"os.nim",line:0};
  framePtr = F;
    F.line = 143;
    if (!(0 < (tail_12860228 != null ? tail_12860228.length : 0))) Tmp2 = false; else {      Tmp2 = (ConstSet21[HEX5BHEX5D_326029(tail_12860228, 1)] != undefined);    }    if (Tmp2) Tmp1 = true; else {      if (!((tail_12860228 != null ? tail_12860228.length : 0) == 0)) Tmp3 = false; else {        if (!(0 < (result_12860225[result_12860225_Idx] != null ? result_12860225[result_12860225_Idx].length : 0))) Tmp4 = false; else {          Tmp4 = (ConstSet22[HEX5BHEX5D_326029(result_12860225[result_12860225_Idx], 1)] != undefined);        }        Tmp3 = Tmp4;      }      Tmp1 = Tmp3;    }    var trailing_sep_12900011 = Tmp1;
    F.line = 144;
    normalize_path_end_12827416(result_12860225, result_12860225_Idx, false);
    F.line = 145;
    add_normalize_path_12735021(tail_12860228, result_12860225, result_12860225_Idx, state_12860227, state_12860227_Idx, 47);
    F.line = 146;
    normalize_path_end_12827416(result_12860225, result_12860225_Idx, trailing_sep_12900011);
  framePtr = F.prev;

  
}
function nosjoinPath(head_12900027, tail_12900028) {
  var result_12900029 = [null];

  var F={procname:"os.joinPath",prev:framePtr,filename:"os.nim",line:0};
  framePtr = F;
    F.line = 174;
    result_12900029[0] = nimCopy(null, mnewString(0), NTI112);
    F.line = 175;
    var state_12900031 = [0];
    F.line = 176;
    join_path_impl_12860222(result_12900029, 0, state_12900031, 0, head_12900027);
    F.line = 177;
    join_path_impl_12860222(result_12900029, 0, state_12900031, 0, tail_12900028);
  framePtr = F.prev;

  return result_12900029[0];

}
function HEX2F_12900264(head_12900266, tail_12900267) {
  var result_12900268 = null;

  var F={procname:"os./",prev:framePtr,filename:"os.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 236;
    result_12900268 = nimCopy(null, nosjoinPath(head_12900266, tail_12900267), NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12900268;

}
function HEX3DHEX3D_13995001(x_13995004, y_13995005) {
  var result_13995006 = false;

  var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_13995004["Field0"] == y_13995005["Field0"]))) {
    F.line = 1791;
    result_13995006 = false;
    break BeforeRet;
    }
    
    if (!((x_13995004["Field1"] == y_13995005["Field1"]))) {
    F.line = 1791;
    result_13995006 = false;
    break BeforeRet;
    }
    
    if (!((x_13995004["Field2"] == y_13995005["Field2"]))) {
    F.line = 1791;
    result_13995006 = false;
    break BeforeRet;
    }
    
    if (!((x_13995004["Field3"] == y_13995005["Field3"]))) {
    F.line = 1791;
    result_13995006 = false;
    break BeforeRet;
    }
    
    F.line = 1792;
    result_13995006 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_13995006;

}
function draw_13697043(node_13697045, parent_13697046) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
      var Tmp7;
      var Tmp8;
      var Tmp9;
      var Tmp10;
      var Tmp11;
        var Tmp12;
        var Tmp16;
        var Tmp17;
        var Tmp18;
        var Tmp19;
          var Tmp20;
        var Tmp21;

  var F={procname:"htmlbackend.draw",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
      if (!!((node_13697045.cache == null))) Tmp1 = false; else {        Tmp1 = !(((node_13697045.cache.kind == 4) == (node_13697045.kind == 4)));      }    if (Tmp1) {
    if (!((node_13697045.element == null))) {
    F.line = 193;
    remove_13675135(node_13697045.element);
    F.line = 194;
    node_13697045.element = null;
    }
    
    if (!((node_13697045.textElement == null))) {
    F.line = 196;
    remove_13675135(node_13697045.textElement);
    F.line = 197;
    node_13697045.textElement = null;
    }
    
    }
    
    if ((node_13697045.element == null)) {
    F.line = 200;
    node_13697045.element = document.createElement("div");
    F.line = 201;
    node_13697045.element.setAttribute("uid", toJSStr(node_13697045.uid));
    F.line = 202;
    HEX5BHEX5DHEX3D_13715126(node_lookup_12582451[0], node_13697045.uid, node_13697045);
    if ((parent_13697046 == null)) {
    F.line = 204;
    root_dom_node_13307025[0].appendChild(node_13697045.element);
    }
    else {
      F.line = 206;
    parent_13697046.element.appendChild(node_13697045.element);
    }
    
    F.line = 207;
    node_13697045.cache = {id: null, uid: null, idPath: null, kind: 0, text: null, code: null, nodes: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, textOffset: {x: 0.0, y: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0, autoResize: 0}, textPadding: 0, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, editableText: false, multiline: false, bindingSet: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null, constraintsHorizontal: 0, constraintsVertical: 0, layoutAlign: 0, layoutMode: 0, counterAxisSizingMode: 0, horizontalPadding: 0.0, verticalPadding: 0.0, itemSpacing: 0.0, clipContent: false, diffIndex: 0, element: null, textElement: null, cache: null, textLayoutHeight: 0.0, textLayoutWidth: 0.0, selectable: false};
    F.line = 208;
    node_13697045.cache.kind = node_13697045.kind;
    }
    
      if (!!((node_13697045.kind == 4))) Tmp2 = false; else {        Tmp2 = !((node_13697045.textElement == null));      }    if (Tmp2) {
    F.line = 212;
    node_13697045.textElement.style.display = "hidden";
    }
    
      if (!(node_13697045.kind == 4)) Tmp3 = false; else {        Tmp3 = (node_13697045.textElement == null);      }    if (Tmp3) {
    F.line = 216;
    node_13697045.textElement = document.createElement("div");
    F.line = 217;
    node_13697045.textElement.setAttribute("uid", toJSStr(node_13697045.uid));
    F.line = 218;
    node_13697045.textElement.style.display = "table-cell";
    F.line = 219;
    node_13697045.textElement.style.position = "unset";
    F.line = 220;
    node_13697045.textElement.style.whiteSpace = "pre";
    F.line = 222;
    node_13697045.element.appendChild(node_13697045.textElement);
    }
    
      if (!((node_13697045.cache.editableText == node_13697045.editableText))) {
      F.line = 169;
      node_13697045.cache.editableText = node_13697045.editableText;
      Tmp4 = true;
      }
      else {
      Tmp4 = false;
      }
      
    if (Tmp4) {
    if (node_13697045.editableText) {
    F.line = 227;
    node_13697045.textElement.setAttribute("contenteditable", "true");
    F.line = 228;
    node_13697045.element.style.overflowX = "hidden";
    F.line = 229;
    node_13697045.element.style.overflowY = "auto";
    }
    else {
      F.line = 231;
      node_13697045.textElement.setAttribute("contenteditable", "true");
      F.line = 232;
      node_13697045.element.style.overflowX = "visible";
      F.line = 233;
      node_13697045.element.style.overflowY = "visible";
    }
    
    }
    
      if (!(eqStrings(node_13697045.cache.id, node_13697045.id))) {
      F.line = 169;
      node_13697045.cache.id = nimCopy(null, node_13697045.id, NTI112);
      Tmp5 = true;
      }
      else {
      Tmp5 = false;
      }
      
    if (Tmp5) {
    F.line = 237;
    node_13697045.element.setAttribute("id", toJSStr(node_13697045.id));
    }
    
      if (!(HEX3DHEX3D_13835001(node_13697045.cache.box, node_13697045.box))) {
      F.line = 169;
      nimCopy(node_13697045.cache.box, node_13697045.box, NTI11635147);
      Tmp6 = true;
      }
      else {
      Tmp6 = false;
      }
      
    if (Tmp6) {
    F.line = 241;
    node_13697045.element.style.left = toJSStr((cstrToNimstr((node_13697045.box.x)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 242;
    node_13697045.element.style.top = toJSStr((cstrToNimstr((node_13697045.box.y)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 243;
    node_13697045.element.style.width = toJSStr((cstrToNimstr((node_13697045.box.w)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 244;
    node_13697045.element.style.height = toJSStr((cstrToNimstr((node_13697045.box.h)+"") || []).concat(makeNimstrLit("px") || []));
    if (!((node_13697045.textElement == null))) {
    F.line = 247;
    node_13697045.textElement.style.width = toJSStr((cstrToNimstr((node_13697045.box.w)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 248;
    node_13697045.textElement.style.height = toJSStr((cstrToNimstr((node_13697045.box.h)+"") || []).concat(makeNimstrLit("px") || []));
    }
    
    }
    
      if (!((node_13697045.cache.transparency == node_13697045.transparency))) {
      F.line = 169;
      node_13697045.cache.transparency = node_13697045.transparency;
      Tmp7 = true;
      }
      else {
      Tmp7 = false;
      }
      
    if (Tmp7) {
    F.line = 252;
    node_13697045.element.style.opacity = toJSStr(cstrToNimstr((node_13697045.transparency)+""));
    }
    
      if (!((node_13697045.cache.clipContent == node_13697045.clipContent))) {
      F.line = 169;
      node_13697045.cache.clipContent = node_13697045.clipContent;
      Tmp8 = true;
      }
      else {
      Tmp8 = false;
      }
      
    if (Tmp8) {
    if (node_13697045.clipContent) {
    F.line = 256;
    node_13697045.element.style.overflow = "hidden";
    }
    else {
      F.line = 258;
      node_13697045.element.style.overflow = "visable";
    }
    
    }
    
    if ((node_13697045.kind == 4)) {
      if (!(HEX3DHEX3D_13320583(node_13697045.cache.fill, node_13697045.fill))) {
      F.line = 169;
      nimCopy(node_13697045.cache.fill, node_13697045.fill, NTI9964003);
      Tmp9 = true;
      }
      else {
      Tmp9 = false;
      }
      
    if (Tmp9) {
    F.line = 265;
    node_13697045.textElement.style.color = toJSStr(to_html_rgba_10255018(node_13697045.fill));
    }
    
      if (!(eqStrings(node_13697045.cache.text, node_13697045.text))) {
      F.line = 169;
      node_13697045.cache.text = nimCopy(null, node_13697045.text, NTI112);
      Tmp10 = true;
      }
      else {
      Tmp10 = false;
      }
      
    if (Tmp10) {
    if (!((keyboard_12582392[0].focusNode == node_13697045))) {
    F.line = 269;
    node_13697045.textElement.innerText = toJSStr(node_13697045.text);
    }
    else {
    }
    
    }
    
      if (!(HEX3DHEX3D_13895001(node_13697045.cache.textStyle, node_13697045.textStyle))) {
      F.line = 169;
      nimCopy(node_13697045.cache.textStyle, node_13697045.textStyle, NTI12582213);
      Tmp11 = true;
      }
      else {
      Tmp11 = false;
      }
      
    if (Tmp11) {
    F.line = 276;
    node_13697045.textElement.style.fontFamily = toJSStr(node_13697045.textStyle.fontFamily);
    F.line = 277;
    node_13697045.textElement.style.fontSize = toJSStr((cstrToNimstr((node_13697045.textStyle.fontSize)+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 278;
    node_13697045.textElement.style.fontWeight = toJSStr(cstrToNimstr((node_13697045.textStyle.fontWeight)+""));
    F.line = 279;
    node_13697045.textElement.style.lineHeight = toJSStr((cstrToNimstr((max_85014(0.0, node_13697045.textStyle.lineHeight))+"") || []).concat(makeNimstrLit("px") || []));
    F.line = 281;
    switch (node_13697045.textStyle.textAlignHorizontal) {
    case 0:
      F.line = 283;
      node_13697045.textElement.style.textAlign = "left";
      break;
    case 1:
      F.line = 285;
      node_13697045.textElement.style.textAlign = "center";
      break;
    case 2:
      F.line = 287;
      node_13697045.textElement.style.textAlign = "right";
      break;
    }
    F.line = 288;
    switch (node_13697045.textStyle.textAlignVertical) {
    case 0:
      F.line = 290;
      node_13697045.textElement.style.verticalAlign = "top";
      break;
    case 1:
      F.line = 292;
      node_13697045.textElement.style.verticalAlign = "middle";
      break;
    case 2:
      F.line = 294;
      node_13697045.textElement.style.verticalAlign = "bottom";
      break;
    }
    }
    
    }
    else {
        if (!(HEX3DHEX3D_13905003(node_13697045.cache.shadows, node_13697045.shadows))) {
        F.line = 169;
        node_13697045.cache.shadows = nimCopy(null, node_13697045.shadows, NTI12582321);
        Tmp12 = true;
        }
        else {
        Tmp12 = false;
        }
        
      if (Tmp12) {
      F.line = 301;
      var box_shadow_string_13906086 = [];
      L13: do {
        F.line = 302;
        var s_13915214 = {kind: 0, blur: 0.0, x: 0.0, y: 0.0, color: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}};
        F.line = 184;
        var i_15445105 = 0;
        F.line = 185;
        var l_15445106 = (node_13697045.shadows != null ? node_13697045.shadows.length : 0);
        L14: do {
          F.line = 186;
            L15: while (true) {
            if (!(i_15445105 < l_15445106)) break L15;
              F.line = 302;
              nimCopy(s_13915214, node_13697045.shadows[chckIndx(i_15445105, 0, (node_13697045.shadows != null ? node_13697045.shadows.length : 0)+0-1)-0], NTI12582225);
              if ((s_13915214.kind == 0)) {
              F.line = 304;
              F.line = 304;
              var fmt_res_13915220 = [mnewString(0)];
              F.line = 304;
              format_value_11505001(fmt_res_13915220, 0, s_13915214.x, []);
              F.line = 304;
              if (fmt_res_13915220[0] != null) { fmt_res_13915220[0] = (fmt_res_13915220[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13915220[0] = makeNimstrLit("px "); };
              F.line = 304;
              format_value_11505001(fmt_res_13915220, 0, s_13915214.y, []);
              F.line = 304;
              if (fmt_res_13915220[0] != null) { fmt_res_13915220[0] = (fmt_res_13915220[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13915220[0] = makeNimstrLit("px "); };
              F.line = 304;
              format_value_11505001(fmt_res_13915220, 0, s_13915214.blur, []);
              F.line = 304;
              if (fmt_res_13915220[0] != null) { fmt_res_13915220[0] = (fmt_res_13915220[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13915220[0] = makeNimstrLit("px "); };
              F.line = 304;
              format_value_11400080(fmt_res_13915220, 0, to_html_rgba_10255018(s_13915214.color), []);
              F.line = 304;
              if (fmt_res_13915220[0] != null) { fmt_res_13915220[0] = (fmt_res_13915220[0]).concat(makeNimstrLit(",")); } else { fmt_res_13915220[0] = makeNimstrLit(","); };
              if (box_shadow_string_13906086 != null) { box_shadow_string_13906086 = (box_shadow_string_13906086).concat(fmt_res_13915220[0]); } else { box_shadow_string_13906086 = fmt_res_13915220[0].slice(); };
              }
              
              if ((s_13915214.kind == 1)) {
              F.line = 306;
              F.line = 306;
              var fmt_res_13920029 = [mnewString(0)];
              F.line = 306;
              if (fmt_res_13920029[0] != null) { fmt_res_13920029[0] = (fmt_res_13920029[0]).concat(makeNimstrLit("inset ")); } else { fmt_res_13920029[0] = makeNimstrLit("inset "); };
              F.line = 306;
              format_value_11505001(fmt_res_13920029, 0, s_13915214.x, []);
              F.line = 306;
              if (fmt_res_13920029[0] != null) { fmt_res_13920029[0] = (fmt_res_13920029[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13920029[0] = makeNimstrLit("px "); };
              F.line = 306;
              format_value_11505001(fmt_res_13920029, 0, s_13915214.y, []);
              F.line = 306;
              if (fmt_res_13920029[0] != null) { fmt_res_13920029[0] = (fmt_res_13920029[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13920029[0] = makeNimstrLit("px "); };
              F.line = 306;
              format_value_11505001(fmt_res_13920029, 0, s_13915214.blur, []);
              F.line = 306;
              if (fmt_res_13920029[0] != null) { fmt_res_13920029[0] = (fmt_res_13920029[0]).concat(makeNimstrLit("px ")); } else { fmt_res_13920029[0] = makeNimstrLit("px "); };
              F.line = 306;
              format_value_11400080(fmt_res_13920029, 0, to_html_rgba_10255018(s_13915214.color), []);
              F.line = 306;
              if (fmt_res_13920029[0] != null) { fmt_res_13920029[0] = (fmt_res_13920029[0]).concat(makeNimstrLit(",")); } else { fmt_res_13920029[0] = makeNimstrLit(","); };
              if (box_shadow_string_13906086 != null) { box_shadow_string_13906086 = (box_shadow_string_13906086).concat(fmt_res_13920029[0]); } else { box_shadow_string_13906086 = fmt_res_13920029[0].slice(); };
              }
              
              F.line = 188;
              i_15445105 = addInt(i_15445105, 1);
              if (!(((node_13697045.shadows != null ? node_13697045.shadows.length : 0) == l_15445106))) {
              F.line = 189;
              failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      if ((0 < (box_shadow_string_13906086 != null ? box_shadow_string_13906086.length : 0))) {
      F.line = 308;
      (box_shadow_string_13906086 == null ? box_shadow_string_13906086 = mnewString(chckRange(subInt((box_shadow_string_13906086 != null ? box_shadow_string_13906086.length : 0), 1), 0, 2147483647)) : box_shadow_string_13906086.length = chckRange(subInt((box_shadow_string_13906086 != null ? box_shadow_string_13906086.length : 0), 1), 0, 2147483647));
      }
      
      F.line = 309;
      node_13697045.element.style.boxShadow = toJSStr(box_shadow_string_13906086);
      }
      
        if (!(eqStrings(node_13697045.cache.imageName, node_13697045.imageName))) {
        F.line = 169;
        node_13697045.cache.imageName = nimCopy(null, node_13697045.imageName, NTI112);
        Tmp16 = true;
        }
        else {
        Tmp16 = false;
        }
        
      if (Tmp16) {
      if (!(eqStrings(node_13697045.imageName, []))) {
      F.line = 314;
      F.line = 314;
      var fmt_res_13945003 = [mnewString(0)];
      F.line = 314;
      if (fmt_res_13945003[0] != null) { fmt_res_13945003[0] = (fmt_res_13945003[0]).concat(makeNimstrLit("url(")); } else { fmt_res_13945003[0] = makeNimstrLit("url("); };
      F.line = 314;
      format_value_11400080(fmt_res_13945003, 0, HEX2F_12900264(data_dir_12582452[0], node_13697045.imageName), []);
      F.line = 314;
      if (fmt_res_13945003[0] != null) { fmt_res_13945003[0] = (fmt_res_13945003[0]).concat(makeNimstrLit(")")); } else { fmt_res_13945003[0] = makeNimstrLit(")"); };
      node_13697045.element.style.backgroundImage = toJSStr(fmt_res_13945003[0]);
      F.line = 315;
      node_13697045.element.style.backgroundSize = "100% 100%";
      }
      else {
        F.line = 317;
        node_13697045.element.style.backgroundImage = "";
      }
      
      }
      
        if (!(HEX3DHEX3D_13320583(node_13697045.cache.fill, node_13697045.fill))) {
        F.line = 169;
        nimCopy(node_13697045.cache.fill, node_13697045.fill, NTI9964003);
        Tmp17 = true;
        }
        else {
        Tmp17 = false;
        }
        
      if (Tmp17) {
      F.line = 321;
      node_13697045.element.style.backgroundColor = toJSStr(to_html_rgba_10255018(node_13697045.fill));
      }
      
        if (!((node_13697045.cache.strokeWeight == node_13697045.strokeWeight))) {
        F.line = 169;
        node_13697045.cache.strokeWeight = node_13697045.strokeWeight;
        Tmp19 = true;
        }
        else {
        Tmp19 = false;
        }
        
        if (Tmp19) Tmp18 = true; else {          if (!(HEX3DHEX3D_13320583(node_13697045.cache.stroke, node_13697045.stroke))) {
          F.line = 169;
          nimCopy(node_13697045.cache.stroke, node_13697045.stroke, NTI9964003);
          Tmp20 = true;
          }
          else {
          Tmp20 = false;
          }
          
          Tmp18 = Tmp20;        }      if (Tmp18) {
      if (!((node_13697045.strokeWeight == 0.0))) {
      F.line = 326;
      node_13697045.element.style.borderWidth = toJSStr((cstrToNimstr((node_13697045.strokeWeight)+"") || []).concat(makeNimstrLit("px") || []));
      F.line = 327;
      node_13697045.element.style.borderColor = toJSStr(to_html_rgba_10255018(node_13697045.stroke));
      F.line = 328;
      node_13697045.element.style.boxSizing = "border-box";
      F.line = 329;
      node_13697045.element.style.borderStyle = "solid";
      }
      else {
        F.line = 331;
        node_13697045.element.style.borderStyle = "none";
      }
      
      }
      
        if (!(HEX3DHEX3D_13995001(node_13697045.cache.cornerRadius, node_13697045.cornerRadius))) {
        F.line = 169;
        nimCopy(node_13697045.cache.cornerRadius, node_13697045.cornerRadius, NTI12582313);
        Tmp21 = true;
        }
        else {
        Tmp21 = false;
        }
        
      if (Tmp21) {
      F.line = 339;
      node_13697045.element.style.borderRadius = toJSStr((cstrToNimstr((node_13697045.cornerRadius["Field0"])+"") || []).concat(makeNimstrLit("px ") || [],cstrToNimstr((node_13697045.cornerRadius["Field1"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((node_13697045.cornerRadius["Field2"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((node_13697045.cornerRadius["Field3"])+"") || [],makeNimstrLit("px") || []));
      }
      
    }
    
    L22: do {
      F.line = 342;
      var n_13995073 = null;
      F.line = 258;
      var i_15445110 = subInt((node_13697045.nodes != null ? node_13697045.nodes.length : 0), 1);
      L23: do {
        F.line = 259;
          L24: while (true) {
          if (!(-1 < i_15445110)) break L24;
            F.line = 342;
            n_13995073 = node_13697045.nodes[chckIndx(i_15445110, 0, (node_13697045.nodes != null ? node_13697045.nodes.length : 0)+0-1)-0];
            F.line = 343;
            draw_13697043(n_13995073, node_13697045);
            F.line = 261;
            i_15445110 = subInt(i_15445110, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function any_12590536(s_12590540, pred_12590543) {
  var result_12590544 = false;

  var F={procname:"any.any",prev:framePtr,filename:"sequtils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 677;
      var i_12590575 = false;
      F.line = 3;
      var i_15445213 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_15445213 < (s_12590540 != null ? s_12590540.length : 0))) break L3;
            F.line = 677;
            i_12590575 = s_12590540[chckIndx(i_15445213, 0, (s_12590540 != null ? s_12590540.length : 0)+0-1)-0];
            if (pred_12590543(i_12590575)) {
            F.line = 679;
            result_12590544 = true;
            break BeforeRet;
            }
            
            F.line = 6;
            i_15445213 = addInt(i_15445213, 1);
          }
      } while(false);
    } while(false);
    F.line = 680;
    result_12590544 = false;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_12590544;

}
function clear_inputs_12590501() {
      function HEX3Aanonymous_12590517(b_12590519) {
        var result_12590520 = false;

        var F={procname:"clearInputs.:anonymous",prev:framePtr,filename:"common.nim",line:0};
        framePtr = F;
          F.line = 340;
          result_12590520 = b_12590519;
        framePtr = F.prev;

        return result_12590520;

      }

  var F={procname:"common.clearInputs",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    F.line = 333;
    mouse_12582391[0].wheelDelta = 0.0;
    L1: do {
      F.line = 336;
      var i_12590515 = 0;
      F.line = 104;
      var colontmp__15445208 = 0;
      F.line = 336;
      colontmp__15445208 = (button_press_10316344[0] != null ? button_press_10316344[0].length : 0);
      F.line = 106;
      var i_15445209 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445209 < colontmp__15445208)) break L3;
            F.line = 336;
            i_12590515 = i_15445209;
            F.line = 337;
            button_press_10316344[0][chckIndx(i_12590515, 0, (button_press_10316344[0] != null ? button_press_10316344[0].length : 0)+0-1)-0] = false;
            F.line = 338;
            button_release_10316308[0][chckIndx(i_12590515, 0, (button_release_10316308[0] != null ? button_release_10316308[0].length : 0)+0-1)-0] = false;
            F.line = 109;
            i_15445209 = addInt(i_15445209, 1);
          }
      } while(false);
    } while(false);
    if (any_12590536(button_down_10316290[0], HEX3Aanonymous_12590517)) {
    F.line = 341;
    keyboard_12582392[0].state = 2;
    }
    else {
      F.line = 343;
      keyboard_12582392[0].state = 0;
    }
    
  framePtr = F.prev;

  
}
function draw_finish_14005041() {
  var F={procname:"htmlbackend.drawFinish",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 417;
    perf_13307029[0].drawMain = (window.performance.now() - start_time_13995117[0]);
    if (!((prev_mouse_cursor_style_13995118[0] == mouse_12582391[0].cursorStyle))) {
    F.line = 425;
    prev_mouse_cursor_style_13995118[0] = mouse_12582391[0].cursorStyle;
    F.line = 426;
    switch (mouse_12582391[0].cursorStyle) {
    case 0:
      F.line = 428;
      root_dom_node_13307025[0].style.cursor = "default";
      break;
    case 1:
      F.line = 430;
      root_dom_node_13307025[0].style.cursor = "pointer";
      break;
    case 2:
      F.line = 432;
      root_dom_node_13307025[0].style.cursor = "grab";
      break;
    case 3:
      F.line = 434;
      root_dom_node_13307025[0].style.cursor = "ns-resize";
      break;
    }
    }
    
    F.line = 436;
    clear_inputs_12590501();
  framePtr = F.prev;

  
}
function hard_redraw_14010019() {
  var F={procname:"htmlbackend.hardRedraw",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((root_dom_node_13307025[0] == null)) {
    F.line = 440;
    break BeforeRet;
    }
    
    F.line = 442;
    setup_root_12590421();
    F.line = 444;
    draw_start_13995147();
    F.line = 445;
    draw_main_12707004[0]();
    F.line = 447;
    compute_layout_12590741(null, root_12582383[0]);
    F.line = 448;
    compute_screen_box_12610035(null, root_12582383[0]);
    F.line = 450;
    draw_13697043(root_12582383[0], null);
    F.line = 452;
    draw_finish_14005041();
  } while (false);
  framePtr = F.prev;

  
}
function request_hard_redraw_14010042(time_14010044) {
  var F={procname:"htmlbackend.requestHardRedraw",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 455;
    requested_frame_12582393[0] = false;
    F.line = 456;
    hard_redraw_14010019();
  framePtr = F.prev;

  
}
function refresh_14010058() {
  var F={procname:"htmlbackend.refresh",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    if (!(requested_frame_12582393[0])) {
    F.line = 460;
    requested_frame_12582393[0] = true;
    F.line = 461;
    window.requestAnimationFrame(request_hard_redraw_14010042);
    }
    
  framePtr = F.prev;

  
}
function HEX5BHEX5D_14010309(t_14010314, key_14010315) {
  var result_14010316 = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym9740396_14010317 = [0];
    F.line = 258;
    var indexHEX60gensym9740397_14010326 = raw_get_10360602(t_14010314, key_14010315, hcHEX60gensym9740396_14010317, 0);
    if ((0 <= indexHEX60gensym9740397_14010326)) {
    F.line = 259;
    result_14010316 = t_14010314.data[chckIndx(indexHEX60gensym9740397_14010326, 0, (t_14010314.data != null ? t_14010314.data.length : 0)+0-1)-0].Field2;
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_14010315)+"") || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return result_14010316;

}
function HEX5BHEX5DHEX3D_10316377(buttons_10316381, buttons_10316381_Idx, button_10316382, value_10316383) {
  var F={procname:"input.[]=",prev:framePtr,filename:"input.nim",line:0};
  framePtr = F;
    F.line = 150;
    buttons_10316381[buttons_10316381_Idx][chckIndx(button_10316382, 0, (buttons_10316381[buttons_10316381_Idx] != null ? buttons_10316381[buttons_10316381_Idx].length : 0)+0-1)-0] = value_10316383;
  framePtr = F.prev;

  
}
function HEX5BHEX5D_10316358(buttons_10316361, button_10316362) {
  var result_10316363 = false;

  var F={procname:"input.[]",prev:framePtr,filename:"input.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 147;
    result_10316363 = buttons_10316361[chckIndx(button_10316362, 0, (buttons_10316361 != null ? buttons_10316361.length : 0)+0-1)-0];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_10316363;

}
function nsuFindStr(s_9375022, sub_9375023, start_9375024, last_9375025) {
  var result_9375027 = 0;

  var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((s_9375022 != null ? s_9375022.length : 0) < (sub_9375023 != null ? sub_9375023.length : 0))) {
    F.line = 1900;
    result_9375027 = -1;
    break BeforeRet;
    }
    
    if (((sub_9375023 != null ? sub_9375023.length : 0) == 1)) {
    F.line = 1901;
    result_9375027 = nsuFindChar(s_9375022, sub_9375023[chckIndx(0, 0, (sub_9375023 != null ? sub_9375023.length : 0)+0-1)-0], start_9375024, last_9375025);
    break BeforeRet;
    }
    
    F.line = 1902;
    var a_9380001 = [new Int32Array(256)];
    F.line = 1903;
    nsuInitSkipTable(a_9380001[0], sub_9375023);
    F.line = 1904;
    result_9375027 = nsuFindStrA(a_9380001[0], s_9375022, sub_9375023, start_9375024, last_9375025);
  } while (false);
  framePtr = F.prev;

  return result_9375027;

}
function contains_9430277(s_9430279, sub_9430280) {
  var result_9430281 = false;

  var F={procname:"strutils.contains",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 2037;
    result_9430281 = (0 <= nsuFindStr(s_9430279, sub_9430280, 0, 0));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9430281;

}
function HEX5BHEX5D_14030163(t_14030169, key_14030170) {
  var result_14030172 = null;
  var result_14030172_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 257;
    var hcHEX60gensym9740414_14030173 = [0];
    F.line = 258;
    var indexHEX60gensym9740415_14030182 = raw_get_13685127(t_14030169, key_14030170, hcHEX60gensym9740414_14030173, 0);
    if ((0 <= indexHEX60gensym9740415_14030182)) {
    F.line = 259;
    result_14030172 = t_14030169.data[chckIndx(indexHEX60gensym9740415_14030182, 0, (t_14030169.data != null ? t_14030169.data.length : 0)+0-1)-0]; result_14030172_Idx = "Field2";
    }
    else {
      F.line = 262;
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14030170 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_14030172, result_14030172_Idx];

}
function clear_14035186(t_14035191) {
  var F={procname:"clear.clear",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 110;
      var i_14040139 = 0;
      F.line = 104;
      var colontmp__15445228 = 0;
      F.line = 110;
      colontmp__15445228 = (t_14035191.data != null ? t_14035191.data.length : 0);
      F.line = 106;
      var i_15445229 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445229 < colontmp__15445228)) break L3;
            F.line = 110;
            i_14040139 = i_15445229;
            F.line = 112;
            t_14035191.data[chckIndx(i_14040139, 0, (t_14035191.data != null ? t_14035191.data.length : 0)+0-1)-0].Field0 = 0;
            F.line = 113;
            t_14035191.data[chckIndx(i_14040139, 0, (t_14035191.data != null ? t_14035191.data.length : 0)+0-1)-0].Field1 = nimCopy(null, null, NTI112);
            F.line = 114;
            nimCopy(t_14035191.data[chckIndx(i_14040139, 0, (t_14035191.data != null ? t_14035191.data.length : 0)+0-1)-0].Field2, {x: 0.0, y: 0.0}, NTI11470052);
            F.line = 109;
            i_15445229 = addInt(i_15445229, 1);
          }
      } while(false);
    } while(false);
    F.line = 115;
    t_14035191.counter = 0;
  framePtr = F.prev;

  
}
function start_fidget_14010103(draw_14010107, w_14010108, h_14010110) {
    function HEX3Aanonymous_14010112(event_14010114) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 470;
        root_dom_node_13307025[0] = document.createElement("div");
        F.line = 471;
        root_dom_node_13307025[0].style.position = "absolute";
        F.line = 472;
        root_dom_node_13307025[0].style.top = "0px";
        F.line = 473;
        root_dom_node_13307025[0].style.left = "0px";
        F.line = 474;
        document.body.appendChild(root_dom_node_13307025[0]);
        F.line = 476;
        canvas_node_13307026[0] = document.createElement("canvas");
        F.line = 477;
        document.body.appendChild(canvas_node_13307026[0]);
        F.line = 479;
        var style_node_14010115 = document.createElement("style");
        F.line = 4;
        style_node_14010115.innerText = "div {\n  border: none;\n  outline: none;\n  background-color: transparent;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0;\n  margin: 0;\n  resize: none;\n  position: absolute;\n  display: block;\n}\n";
        F.line = 481;
        document.head.appendChild(style_node_14010115);
        F.line = 482;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14010129(event_14010131) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 486;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14010145(event_14010147) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 490;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14010161(event_14010163) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 494;
        var event_14010164 = event_14010163;
        F.line = 495;
        var key_14015015 = HEX5BHEX5D_14010309(mouse_button_to_button_10425676, event_14010164.button);
        F.line = 496;
        HEX5BHEX5DHEX3D_10316377(button_press_10316344, 0, key_14015015, true);
        F.line = 497;
        HEX5BHEX5DHEX3D_10316377(button_down_10316290, 0, key_14015015, true);
        F.line = 498;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14015050(event_14015052) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 502;
        var event_14015053 = event_14015052;
        F.line = 503;
        var key_14015205 = HEX5BHEX5D_14010309(mouse_button_to_button_10425676, event_14015053.button);
        F.line = 504;
        HEX5BHEX5DHEX3D_10316377(button_down_10316290, 0, key_14015205, false);
        F.line = 505;
        HEX5BHEX5DHEX3D_10316377(button_release_10316308, 0, key_14015205, true);
        F.line = 506;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14015225(event_14015227) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 510;
        var event_14015228 = event_14015227;
        F.line = 511;
        mouse_12582391[0].pos.x = event_14015228.pageX;
        F.line = 512;
        mouse_12582391[0].pos.y = event_14015228.pageY;
        F.line = 513;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14015242(event_14015244) {
          var Tmp1;

      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 516;
        var event_14015245 = event_14015244;
          if (!!((keyboard_12582392[0].focusNode == null))) Tmp1 = false; else {            Tmp1 = !(keyboard_12582392[0].focusNode.multiline);          }        if (Tmp1) {
        if ((event_14015245.keyCode == 13)) {
        F.line = 519;
        event_14015245.preventDefault();
        }
        
        }
        
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14020052(event_14020054) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 524;
        var event_14020055 = event_14020054;
        F.line = 526;
        keyboard_12582392[0].state = 4;
        F.line = 527;
        var key_14020208 = HEX5BHEX5D_14010309(key_code_to_button_10425972, event_14020055.keyCode);
        F.line = 528;
        HEX5BHEX5DHEX3D_10316377(button_toggle_10316326, 0, key_14020208, !(HEX5BHEX5D_10316358(button_toggle_10316326[0], key_14020208)));
        F.line = 529;
        HEX5BHEX5DHEX3D_10316377(button_press_10316344, 0, key_14020208, true);
        F.line = 530;
        HEX5BHEX5DHEX3D_10316377(button_down_10316290, 0, key_14020208, true);
        F.line = 531;
        hard_redraw_14010019();
        if (keyboard_12582392[0].consumed) {
        F.line = 533;
        event_14020055.preventDefault();
        F.line = 534;
        keyboard_12582392[0].consumed = false;
        }
        
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14020235(event_14020237) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 539;
        var event_14020238 = event_14020237;
        F.line = 540;
        var key_14020390 = HEX5BHEX5D_14010309(key_code_to_button_10425972, event_14020238.keyCode);
        F.line = 541;
        HEX5BHEX5DHEX3D_10316377(button_down_10316290, 0, key_14020390, false);
        F.line = 542;
        HEX5BHEX5DHEX3D_10316377(button_release_10316308, 0, key_14020390, true);
        F.line = 543;
        keyboard_12582392[0].state = 1;
        F.line = 544;
        hard_redraw_14010019();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14020411(event_14020413) {
          var Tmp1;

      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 548;
        keyboard_12582392[0].input = nimCopy(null, cstrToNimstr(document.activeElement.innerText), NTI112);
        F.line = 549;
        keyboard_12582392[0].state = 4;
          if (!!((keyboard_12582392[0].focusNode == null))) Tmp1 = false; else {            Tmp1 = !(keyboard_12582392[0].focusNode.multiline);          }        if (Tmp1) {
        if (contains_9430277(keyboard_12582392[0].input, makeNimstrLit("\x0A"))) {
        F.line = 553;
        keyboard_12582392[0].input = nimCopy(null, nsuReplaceStr(keyboard_12582392[0].input, makeNimstrLit("\x0A"), []), NTI112);
        F.line = 554;
        document.activeElement.innerText = toJSStr(keyboard_12582392[0].input);
        }
        
        }
        
        F.line = 556;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14030015(event_14030017) {
        var Tmp1;

      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 562;
        var uid_14030018 = cstrToNimstr(document.activeElement.getAttribute("uid"));
        F.line = 564;
        var node_14035028 = (Tmp1 = HEX5BHEX5D_14030163(node_lookup_12582451[0], uid_14030018), Tmp1)[0][Tmp1[1]];
        F.line = 565;
        keyboard_12582392[0].input = nimCopy(null, node_14035028.text, NTI112);
        F.line = 566;
        keyboard_12582392[0].onFocusNode = node_14035028;
        F.line = 567;
        keyboard_12582392[0].focusNode = node_14035028;
        F.line = 568;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14035042(event_14035044) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 575;
        keyboard_12582392[0].onUnFocusNode = keyboard_12582392[0].focusNode;
        F.line = 577;
        keyboard_12582392[0].onFocusNode = null;
        F.line = 578;
        keyboard_12582392[0].focusNode = null;
        F.line = 579;
        keyboard_12582392[0].input = nimCopy(null, [], NTI112);
        F.line = 580;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14035058(event_14035060) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 584;
        refresh_14010058();
      framePtr = F.prev;

      
    }
    function HEX3Aanonymous_14035074(event_14035076) {
      var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"htmlbackend.nim",line:0};
      framePtr = F;
        F.line = 587;
        clear_14035186(compute_text_box_cache_13520892[0]);
        F.line = 588;
        force_text_re_layout_13307028[0] = true;
        F.line = 589;
        hard_redraw_14010019();
        F.line = 590;
        force_text_re_layout_13307028[0] = false;
      framePtr = F.prev;

      
    }

  var F={procname:"htmlbackend.startFidget",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    F.line = 466;
    draw_main_12707004[0] = draw_14010107;
    F.line = 468;
    window.addEventListener("load", HEX3Aanonymous_14010112, false);
    F.line = 484;
    window.addEventListener("resize", HEX3Aanonymous_14010129, false);
    F.line = 488;
    window.addEventListener("scroll", HEX3Aanonymous_14010145, false);
    F.line = 492;
    window.addEventListener("mousedown", HEX3Aanonymous_14010161, false);
    F.line = 500;
    window.addEventListener("mouseup", HEX3Aanonymous_14015050, false);
    F.line = 508;
    window.addEventListener("mousemove", HEX3Aanonymous_14015225, false);
    F.line = 515;
    window.addEventListener("keypress", HEX3Aanonymous_14015242, false);
    F.line = 521;
    window.addEventListener("keydown", HEX3Aanonymous_14020052, false);
    F.line = 536;
    window.addEventListener("keyup", HEX3Aanonymous_14020235, false);
    F.line = 546;
    window.addEventListener("input", HEX3Aanonymous_14020411, false);
    F.line = 558;
    window.addEventListener("focusin", HEX3Aanonymous_14030015, false);
    F.line = 570;
    window.addEventListener("focusout", HEX3Aanonymous_14035042, false);
    F.line = 582;
    window.addEventListener("popstate", HEX3Aanonymous_14035058, false);
    F.line = 586;
    document.fonts.onloadingdone = HEX3Aanonymous_14035074;
  framePtr = F.prev;

  
}
function HEX5BHEX5D_14160005(s_14160010, i_14160011) {
  var result_14160013 = null;
  var result_14160013_Idx = 0;

  var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2522;
    result_14160013 = s_14160010; result_14160013_Idx = chckIndx(subInt((s_14160010 != null ? s_14160010.length : 0), i_14160011), 0, (s_14160010 != null ? s_14160010.length : 0)+0-1)-0;
  framePtr = F.prev;

  return [result_14160013, result_14160013_Idx];

}
function rect_11635152(x_11635154, y_11635155, w_11635156, h_11635157) {
  var result_11635158 = {x: 0.0, y: 0.0, w: 0.0, h: 0.0};

  var F={procname:"vmath.rect",prev:framePtr,filename:"vmath.nim",line:0};
  framePtr = F;
    F.line = 1402;
    result_11635158.x = x_11635154;
    F.line = 1403;
    result_11635158.y = y_11635155;
    F.line = 1404;
    result_11635158.w = w_11635156;
    F.line = 1405;
    result_11635158.h = h_11635157;
  framePtr = F.prev;

  return result_11635158;

}
function vec2_11470055(x_11470057, y_11470058) {
  var result_11470059 = {x: 0.0, y: 0.0};

  var F={procname:"vmath.vec2",prev:framePtr,filename:"vmath.nim",line:0};
  framePtr = F;
    F.line = 32;
    result_11470059.x = x_11470057;
    F.line = 33;
    result_11470059.y = y_11470058;
  framePtr = F.prev;

  return result_11470059;

}
function reset_to_default_12590254(node_12590256) {
  var F={procname:"common.resetToDefault",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    F.line = 275;
    node_12590256.text = nimCopy(null, [], NTI112);
    F.line = 276;
    node_12590256.code = nimCopy(null, [], NTI112);
    F.line = 278;
    nimCopy(node_12590256.box, rect_11635152(0.0, 0.0, 0.0, 0.0), NTI11635147);
    F.line = 279;
    nimCopy(node_12590256.orgBox, rect_11635152(0.0, 0.0, 0.0, 0.0), NTI11635147);
    F.line = 280;
    node_12590256.rotation = 0.0;
    F.line = 282;
    nimCopy(node_12590256.textOffset, vec2_11470055(0.0, 0.0), NTI11470052);
    F.line = 283;
    nimCopy(node_12590256.fill, color_9980230(0.0, 0.0, 0.0, 0.0), NTI9964003);
    F.line = 284;
    node_12590256.transparency = 0.0;
    F.line = 285;
    node_12590256.strokeWeight = 0.0;
    F.line = 286;
    nimCopy(node_12590256.stroke, color_9980230(0.0, 0.0, 0.0, 0.0), NTI9964003);
    F.line = 287;
    node_12590256.zLevel = 0;
    F.line = 288;
    node_12590256.resizeDone = false;
    F.line = 289;
    node_12590256.htmlDone = false;
    F.line = 290;
    node_12590256.textStyle.fontFamily = nimCopy(null, [], NTI112);
    F.line = 291;
    node_12590256.textStyle.fontSize = 0.0;
    F.line = 292;
    node_12590256.textStyle.fontWeight = 0.0;
    F.line = 293;
    node_12590256.textStyle.lineHeight = 0.0;
    F.line = 294;
    node_12590256.textStyle.textAlignHorizontal = 0;
    F.line = 295;
    node_12590256.textStyle.textAlignVertical = 0;
    F.line = 296;
    node_12590256.textStyle.autoResize = 0;
    F.line = 297;
    node_12590256.textPadding = 0;
    F.line = 298;
    node_12590256.imageName = nimCopy(null, [], NTI112);
    F.line = 299;
    var colontmp__15445239 = 0.0;
    F.line = 299;
    var colontmp__15445240 = 0.0;
    F.line = 299;
    var colontmp__15445241 = 0.0;
    F.line = 299;
    var colontmp__15445242 = 0.0;
    F.line = 299;
    nimCopy(node_12590256.cornerRadius, {Field0: colontmp__15445239, Field1: colontmp__15445240, Field2: colontmp__15445241, Field3: colontmp__15445242}, NTI12582313);
    F.line = 300;
    node_12590256.editableText = false;
    F.line = 301;
    node_12590256.multiline = false;
    F.line = 302;
    node_12590256.bindingSet = false;
    F.line = 303;
    node_12590256.drawable = false;
    F.line = 304;
    nimCopy(node_12590256.cursorColor, color_9980230(0.0, 0.0, 0.0, 0.0), NTI9964003);
    F.line = 305;
    nimCopy(node_12590256.highlightColor, color_9980230(0.0, 0.0, 0.0, 0.0), NTI9964003);
    F.line = 306;
    node_12590256.shadows = nimCopy(null, [], NTI12590272);
    F.line = 307;
    node_12590256.constraintsHorizontal = 0;
    F.line = 308;
    node_12590256.constraintsVertical = 0;
    F.line = 309;
    node_12590256.layoutAlign = 0;
    F.line = 310;
    node_12590256.layoutMode = 0;
    F.line = 311;
    node_12590256.counterAxisSizingMode = 0;
    F.line = 312;
    node_12590256.horizontalPadding = 0.0;
    F.line = 313;
    node_12590256.verticalPadding = 0.0;
    F.line = 314;
    node_12590256.itemSpacing = 0.0;
    F.line = 315;
    node_12590256.clipContent = false;
    F.line = 316;
    node_12590256.diffIndex = 0;
    F.line = 317;
    node_12590256.selectable = false;
  framePtr = F.prev;

  
}
function pre_node_14156214(kind_14156216, id_14156217) {
    var Tmp1;

  var F={procname:"fidget.preNode",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 19;
    parent_12582382[0] = (Tmp1 = HEX5BHEX5D_14160005(node_stack_12582386[0], 1), Tmp1)[0][Tmp1[1]];
    if (((parent_12582382[0].nodes != null ? parent_12582382[0].nodes.length : 0) <= parent_12582382[0].diffIndex)) {
    F.line = 25;
    current_12582387[0] = {id: null, uid: null, idPath: null, kind: 0, text: null, code: null, nodes: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, textOffset: {x: 0.0, y: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0, autoResize: 0}, textPadding: 0, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, editableText: false, multiline: false, bindingSet: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null, constraintsHorizontal: 0, constraintsVertical: 0, layoutAlign: 0, layoutMode: 0, counterAxisSizingMode: 0, horizontalPadding: 0.0, verticalPadding: 0.0, itemSpacing: 0.0, clipContent: false, diffIndex: 0, element: null, textElement: null, cache: null, textLayoutHeight: 0.0, textLayoutWidth: 0.0, selectable: false};
    F.line = 26;
    current_12582387[0].id = nimCopy(null, id_14156217, NTI112);
    F.line = 27;
    current_12582387[0].uid = nimCopy(null, new_uid_12582641(), NTI112);
    F.line = 28;
    if (parent_12582382[0].nodes != null) { parent_12582382[0].nodes.push(current_12582387[0]); } else { parent_12582382[0].nodes = [current_12582387[0]]; };
    }
    else {
      F.line = 31;
      current_12582387[0] = parent_12582382[0].nodes[chckIndx(parent_12582382[0].diffIndex, 0, (parent_12582382[0].nodes != null ? parent_12582382[0].nodes.length : 0)+0-1)-0];
      if (eqStrings(current_12582387[0].id, id_14156217)) {
      }
      else {
        F.line = 37;
        current_12582387[0].id = nimCopy(null, id_14156217, NTI112);
      }
      
      F.line = 38;
      reset_to_default_12590254(current_12582387[0]);
    }
    
    F.line = 40;
    current_12582387[0].kind = kind_14156216;
    F.line = 41;
    nimCopy(current_12582387[0].textStyle, parent_12582382[0].textStyle, NTI12582213);
    F.line = 42;
    nimCopy(current_12582387[0].cursorColor, parent_12582382[0].cursorColor, NTI9964003);
    F.line = 43;
    nimCopy(current_12582387[0].highlightColor, parent_12582382[0].highlightColor, NTI9964003);
    F.line = 44;
    current_12582387[0].transparency = parent_12582382[0].transparency;
    F.line = 45;
    if (node_stack_12582386[0] != null) { node_stack_12582386[0].push(current_12582387[0]); } else { node_stack_12582386[0] = [current_12582387[0]]; };
    F.line = 46;
    parent_12582382[0].diffIndex = addInt(parent_12582382[0].diffIndex, 1);
    F.line = 48;
    current_12582387[0].idPath = nimCopy(null, [], NTI112);
    L2: do {
      F.line = 49;
      var i_14170214 = 0;
      F.line = 49;
      var g_14170215 = null;
      F.line = 117;
      var i_15445235 = 0;
      F.line = 118;
      var l_15445236 = (node_stack_12582386[0] != null ? node_stack_12582386[0].length : 0);
      L3: do {
        F.line = 119;
          L4: while (true) {
          if (!(i_15445235 < l_15445236)) break L4;
            F.line = 49;
            i_14170214 = i_15445235;
            F.line = 120;
            g_14170215 = node_stack_12582386[0][chckIndx(i_15445235, 0, (node_stack_12582386[0] != null ? node_stack_12582386[0].length : 0)+0-1)-0];
            if (!((i_14170214 == 0))) {
            F.line = 51;
            if (current_12582387[0].idPath != null) { current_12582387[0].idPath = (current_12582387[0].idPath).concat(makeNimstrLit(".")); } else { current_12582387[0].idPath = makeNimstrLit("."); };
            }
            
            if (!(eqStrings(g_14170215.id, []))) {
            F.line = 53;
            if (current_12582387[0].idPath != null) { current_12582387[0].idPath = (current_12582387[0].idPath).concat(g_14170215.id); } else { current_12582387[0].idPath = g_14170215.id.slice(); };
            }
            else {
              F.line = 55;
            if (current_12582387[0].idPath != null) { current_12582387[0].idPath = (current_12582387[0].idPath).concat(cstrToNimstr((g_14170215.diffIndex)+"")); } else { current_12582387[0].idPath = cstrToNimstr((g_14170215.diffIndex)+"").slice(); };
            }
            
            F.line = 121;
            i_15445235 = addInt(i_15445235, 1);
            if (!(((node_stack_12582386[0] != null ? node_stack_12582386[0].length : 0) == l_15445236))) {
            F.line = 122;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 57;
    current_12582387[0].diffIndex = 0;
  framePtr = F.prev;

  
}
function org_box_15235007(x_15235013, y_15235014, w_15235015, h_15235016) {
  var F={procname:"orgBox.orgBox",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 284;
    current_12582387[0].orgBox.x = x_15235013;
    F.line = 285;
    current_12582387[0].orgBox.y = y_15235014;
    F.line = 286;
    current_12582387[0].orgBox.w = w_15235015;
    F.line = 287;
    current_12582387[0].orgBox.h = h_15235016;
  framePtr = F.prev;

  
}
function box_14215032(x_14215034, y_14215035, w_14215036, h_14215037) {
  var F={procname:"fidget.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 264;
    current_12582387[0].box.x = x_14215034;
    F.line = 265;
    current_12582387[0].box.y = y_14215035;
    F.line = 266;
    current_12582387[0].box.w = w_14215036;
    F.line = 267;
    current_12582387[0].box.h = h_14215037;
  framePtr = F.prev;

  
}
function box_14215078(rect_14215080) {
  var F={procname:"fidget.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 280;
    box_14215032(rect_14215080.x, rect_14215080.y, rect_14215080.w, rect_14215080.h);
  framePtr = F.prev;

  
}
function constraints_14215502(v_con_14215504, h_con_14215505) {
  var F={procname:"fidget.constraints",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 390;
    current_12582387[0].constraintsVertical = v_con_14215504;
    F.line = 391;
    current_12582387[0].constraintsHorizontal = h_con_14215505;
  framePtr = F.prev;

  
}
function fill_14215167(color_14215169, alpha_14215170) {
  var F={procname:"fidget.fill",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 304;
    nimCopy(current_12582387[0].fill, parse_html_color_10270015(color_14215169), NTI9964003);
    F.line = 305;
    current_12582387[0].fill.a = alpha_14215170;
  framePtr = F.prev;

  
}
function box_14500005(x_14500011, y_14500012, w_14500013, h_14500014) {
  var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 276;
    box_14215032(x_14500011, y_14500012, w_14500013, h_14500014);
  framePtr = F.prev;

  
}
function corner_radius_14215265(a_14215267, b_14215268, c_14215269, d_14215270) {
  var F={procname:"fidget.cornerRadius",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 330;
    var colontmp__15445251 = a_14215267;
    F.line = 330;
    var colontmp__15445252 = b_14215268;
    F.line = 330;
    var colontmp__15445253 = c_14215269;
    F.line = 330;
    var colontmp__15445254 = d_14215270;
    F.line = 330;
    nimCopy(current_12582387[0].cornerRadius, {Field0: colontmp__15445251, Field1: colontmp__15445252, Field2: colontmp__15445253, Field3: colontmp__15445254}, NTI12582313);
  framePtr = F.prev;

  
}
function corner_radius_14215285(radius_14215287) {
  var F={procname:"fidget.cornerRadius",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 334;
    corner_radius_14215265(radius_14215287, radius_14215287, radius_14215287, radius_14215287);
  framePtr = F.prev;

  
}
function stroke_weight_14215233(weight_14215235) {
  var F={procname:"fidget.strokeWeight",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 322;
    current_12582387[0].strokeWeight = weight_14215235;
  framePtr = F.prev;

  
}
function font_14210100(font_family_14210102, font_size_14210103, font_weight_14210104, line_height_14210105, text_align_horizontal_14210106, text_align_vertical_14210107) {
  var F={procname:"fidget.font",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 217;
    current_12582387[0].textStyle.fontFamily = nimCopy(null, font_family_14210102, NTI112);
    F.line = 218;
    current_12582387[0].textStyle.fontSize = font_size_14210103;
    F.line = 219;
    current_12582387[0].textStyle.fontWeight = font_weight_14210104;
    F.line = 220;
    current_12582387[0].textStyle.lineHeight = line_height_14210105;
    F.line = 221;
    current_12582387[0].textStyle.textAlignHorizontal = text_align_horizontal_14210106;
    F.line = 222;
    current_12582387[0].textStyle.textAlignVertical = text_align_vertical_14210107;
  framePtr = F.prev;

  
}
function characters_14210234(text_14210236) {
  var F={procname:"fidget.characters",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    if (!(eqStrings(current_12582387[0].text, text_14210236))) {
    F.line = 256;
    current_12582387[0].text = nimCopy(null, text_14210236, NTI112);
    }
    
  framePtr = F.prev;

  
}
function is_empty_9737001(hcode_9737003) {
  var result_9737004 = false;

  var F={procname:"tables.isEmpty",prev:framePtr,filename:"hashcommon.nim",line:0};
  framePtr = F;
    F.line = 24;
    result_9737004 = (hcode_9737003 == 0);
  framePtr = F.prev;

  return result_9737004;

}
function del_13685118(t_13685124, key_13685125) {
                    var Tmp6;
                    var Tmp7;
                    var Tmp8;
                      var Tmp9;
                      var Tmp10;

  var F={procname:"del.del",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 105;
    var hc_13685126 = [0];
    F.line = 106;
    var i_13695635 = raw_get_13685127(t_13685124, key_13685125, hc_13685126, 0);
    F.line = 82;
    var mskHEX60gensym9740563_13695642 = (t_13685124.data != null ? (t_13685124.data.length-1) : -1);
    if ((0 <= i_13695635)) {
    F.line = 84;
    t_13685124.counter = subInt(t_13685124.counter, 1);
    L1: do {
      L2: do {
        F.line = 86;
          L3: while (true) {
          if (!true) break L3;
            F.line = 87;
            var jHEX60gensym9740565_13695650 = i_13695635;
            F.line = 88;
            var rHEX60gensym9740566_13695651 = jHEX60gensym9740565_13695650;
            F.line = 89;
            t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0].Field0 = 0;
            F.line = 90;
            t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0].Field1 = nimCopy(null, null, NTI112);
            F.line = 91;
            t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0].Field2 = null;
            L4: do {
              F.line = 92;
                L5: while (true) {
                if (!true) break L5;
                  F.line = 93;
                  i_13695635 = (addInt(i_13695635, 1) & mskHEX60gensym9740563_13695642);
                  if (is_empty_9737001(t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0].Field0)) {
                  F.line = 95;
                  break L1;
                  }
                  
                  F.line = 96;
                  rHEX60gensym9740566_13695651 = (t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0].Field0 & mskHEX60gensym9740563_13695642);
                    if (!(rHEX60gensym9740566_13695651 <= i_13695635)) Tmp8 = false; else {                      Tmp8 = (jHEX60gensym9740565_13695650 < rHEX60gensym9740566_13695651);                    }                    if (Tmp8) Tmp7 = true; else {                      if (!(jHEX60gensym9740565_13695650 < rHEX60gensym9740566_13695651)) Tmp9 = false; else {                        Tmp9 = (i_13695635 < jHEX60gensym9740565_13695650);                      }                      Tmp7 = Tmp9;                    }                    if (Tmp7) Tmp6 = true; else {                      if (!(i_13695635 < jHEX60gensym9740565_13695650)) Tmp10 = false; else {                        Tmp10 = (rHEX60gensym9740566_13695651 <= i_13695635);                      }                      Tmp6 = Tmp10;                    }                  if (!(Tmp6)) {
                  F.line = 98;
                  break L4;
                  }
                  
                }
            } while(false);
            F.line = 100;
            nimCopy(t_13685124.data[chckIndx(jHEX60gensym9740565_13695650, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0], t_13685124.data[chckIndx(i_13695635, 0, (t_13685124.data != null ? t_13685124.data.length : 0)+0-1)-0], NTI12582444);
          }
      } while(false);
    } while(false);
    }
    
  framePtr = F.prev;

  
}
function remove_13675151(node_13675153) {
  var F={procname:"htmlbackend.remove",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
    if (!((node_13675153.element == null))) {
    F.line = 180;
    remove_13675135(node_13675153.element);
    F.line = 181;
    node_13675153.element = null;
    }
    
    if (!((node_13675153.textElement == null))) {
    F.line = 183;
    remove_13675135(node_13675153.textElement);
    F.line = 184;
    node_13675153.textElement = null;
    }
    
    F.line = 185;
    del_13685118(node_lookup_12582451[0], node_13675153.uid);
    F.line = 186;
    node_13675153.cache = null;
  framePtr = F.prev;

  
}
function pop_14180048(s_14180053, s_14180053_Idx) {
  var result_14180054 = null;

  var F={procname:"pop.pop",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 1779;
    var l_14180060 = subInt((s_14180053[s_14180053_Idx] != null ? s_14180053[s_14180053_Idx].length : 0), 1);
    F.line = 1784;
    result_14180054 = s_14180053[s_14180053_Idx][chckIndx(l_14180060, 0, (s_14180053[s_14180053_Idx] != null ? s_14180053[s_14180053_Idx].length : 0)+0-1)-0];
    F.line = 1785;
    if (s_14180053[s_14180053_Idx] === null) s_14180053[s_14180053_Idx] = [];
               if (s_14180053[s_14180053_Idx].length < chckRange(l_14180060, 0, 2147483647)) { for (var i=s_14180053[s_14180053_Idx].length;i<chckRange(l_14180060, 0, 2147483647);++i) s_14180053[s_14180053_Idx].push(null); }
               else { s_14180053[s_14180053_Idx].length = chckRange(l_14180060, 0, 2147483647); };
  framePtr = F.prev;

  return result_14180054;

}
function post_node_14180028() {
    var Tmp4;
    var Tmp5;

  var F={procname:"fidget.postNode",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 63;
      var i_14180040 = 0;
      F.line = 104;
      var colontmp__15445256 = 0;
      F.line = 63;
      colontmp__15445256 = (current_12582387[0].nodes != null ? current_12582387[0].nodes.length : 0);
      F.line = 106;
      var i_15445257 = current_12582387[0].diffIndex;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445257 < colontmp__15445256)) break L3;
            F.line = 63;
            i_14180040 = i_15445257;
            F.line = 64;
            remove_13675151(current_12582387[0].nodes[chckIndx(i_14180040, 0, (current_12582387[0].nodes != null ? current_12582387[0].nodes.length : 0)+0-1)-0]);
            F.line = 109;
            i_15445257 = addInt(i_15445257, 1);
          }
      } while(false);
    } while(false);
    F.line = 65;
    if (current_12582387[0].nodes === null) current_12582387[0].nodes = [];
               if (current_12582387[0].nodes.length < chckRange(current_12582387[0].diffIndex, 0, 2147483647)) { for (var i=current_12582387[0].nodes.length;i<chckRange(current_12582387[0].diffIndex, 0, 2147483647);++i) current_12582387[0].nodes.push(null); }
               else { current_12582387[0].nodes.length = chckRange(current_12582387[0].diffIndex, 0, 2147483647); };
    F.line = 68;
    pop_14180048(node_stack_12582386, 0);
    if ((1 < (node_stack_12582386[0] != null ? node_stack_12582386[0].length : 0))) {
    F.line = 70;
    current_12582387[0] = (Tmp4 = HEX5BHEX5D_14160005(node_stack_12582386[0], 1), Tmp4)[0][Tmp4[1]];
    }
    else {
      F.line = 72;
      current_12582387[0] = null;
    }
    
    if ((2 < (node_stack_12582386[0] != null ? node_stack_12582386[0].length : 0))) {
    F.line = 74;
    parent_12582382[0] = (Tmp5 = HEX5BHEX5D_14160005(node_stack_12582386[0], 2), Tmp5)[0][Tmp5[1]];
    }
    else {
      F.line = 76;
      parent_12582382[0] = null;
    }
    
  framePtr = F.prev;

  
}
function min_75281(x_75283, y_75284) {
    var Tmp1;
      var Tmp2;

  var result_75285 = 0.0;

      if ((x_75283 <= y_75284)) Tmp2 = true; else {        Tmp2 = !((y_75284 == y_75284));      }    if (Tmp2) {
    Tmp1 = x_75283;
    }
    else {
    Tmp1 = y_75284;
    }
    
    result_75285 = Tmp1;

  return result_75285;

}
function HEX2F_325648(x_325650, y_325651) {
  var result_325652 = 0.0;

  var F={procname:"system./",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2376;
    result_325652 = (to_float_26459(x_325650) / to_float_26459(y_325651));
  framePtr = F.prev;

  return result_325652;

}
function box_14470001(x_14470007, y_14470008, w_14470009, h_14470010) {
  var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 276;
    box_14215032(x_14470007, y_14470008, w_14470009, h_14470010);
  framePtr = F.prev;

  
}
function fill_14215134(color_14215136) {
  var F={procname:"fidget.fill",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 295;
    nimCopy(current_12582387[0].fill, color_14215136, NTI9964003);
  framePtr = F.prev;

  
}
function click_12590664(mouse_12590666) {
  var result_12590667 = false;

  var F={procname:"common.click",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    F.line = 346;
    result_12590667 = HEX5BHEX5D_10316358(button_press_10316344[0], 1);
  framePtr = F.prev;

  return result_12590667;

}
function inside_11640043(pos_11640045, rect_11640046) {
  var result_11640047 = false;

  var F={procname:"vmath.inside",prev:framePtr,filename:"vmath.nim",line:0};
  framePtr = F;
    F.line = 1450;
    result_11640047 = (((rect_11640046.x <= pos_11640045.x) && (pos_11640045.x <= (rect_11640046.x + rect_11640046.w))) && ((rect_11640046.y <= pos_11640045.y) && (pos_11640045.y <= (rect_11640046.y + rect_11640046.h))));
  framePtr = F.prev;

  return result_11640047;

}
function mouse_overlap_logic_14200081() {
    var Tmp1;
    var Tmp2;
    var Tmp3;

  var result_14200083 = false;

  var F={procname:"fidget.mouseOverlapLogic",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 139;
    if (!(!(popup_active_12582395[0]) || in_popup_12582396[0])) Tmp3 = false; else {      Tmp3 = (0.0 < current_12582387[0].screenBox.w);    }    if (!Tmp3) Tmp2 = false; else {      Tmp2 = (0.0 < current_12582387[0].screenBox.h);    }    if (!Tmp2) Tmp1 = false; else {      Tmp1 = inside_11640043(mouse_12582391[0].pos, current_12582387[0].screenBox);    }    result_14200083 = Tmp1;
  framePtr = F.prev;

  return result_14200083;

}
function check_winner_14435028() {
  var F={procname:"fidgetClient.checkWinner",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    if (!(winner_announced_14427452[0])) {
    if (!((game_14427236.winner_player_number == 0))) {
    if ((game_14427236.winner_player_number == -1)) {
    F.line = 37;
    rawEcho(makeNimstrLit("Draw"));
    }
    else {
      F.line = 39;
    rawEcho((get_player_name_14425221(game_14427236) || []).concat(makeNimstrLit(" won the game!") || []));
    }
    
    }
    
    }
    
  framePtr = F.prev;

  
}
function image_14215016(image_name_14215018) {
  var F={procname:"fidget.image",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 260;
    current_12582387[0].imageName = nimCopy(null, image_name_14215018, NTI112);
  framePtr = F.prev;

  
}
function draw_game_field_14440022() {
    var Tmp1;

  var F={procname:"fidgetClient.drawGameField",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 43;
    var field_width_14440024 = min_75281(current_12582387[0].box.w, current_12582387[0].box.h);
    F.line = 44;
    var box_width_14440031 = (HEX2F_325648((((field_width_14440024 - 2.0000000000000000e+00))|0), ((Tmp1 = field_14425153(game_14427236), Tmp1) != null ? Tmp1.length : 0)) - 2.0000000000000000e+00);
    F.line = 45;
    var x_14440032 = [2.0000000000000000e+00];
    F.line = 45;
    var y_14440033 = [2.0000000000000000e+00];
    F.line = 46;
    var dark_14440034 = false;
    L2: do {
      F.line = 47;
      var i_14450229 = 0;
      F.line = 47;
      var row_14450230 = null;
      F.line = 115;
      var colontmp__15445270 = null;
      F.line = 47;
      colontmp__15445270 = field_14425153(game_14427236);
      F.line = 117;
      var i_15445272 = 0;
      F.line = 118;
      var l_15445273 = (colontmp__15445270 != null ? colontmp__15445270.length : 0);
      L3: do {
        F.line = 119;
          L4: while (true) {
          if (!(i_15445272 < l_15445273)) break L4;
            F.line = 47;
            i_14450229 = i_15445272;
            F.line = 120;
            row_14450230 = colontmp__15445270[chckIndx(i_15445272, 0, (colontmp__15445270 != null ? colontmp__15445270.length : 0)+0-1)-0];
            F.line = 48;
            x_14440032[0] = 2.0000000000000000e+00;
            L5: do {
              F.line = 49;
              var j_14460214 = 0;
              F.line = 49;
              var field_14460215 = 0;
              F.line = 117;
              var i_15445267 = 0;
              F.line = 118;
              var l_15445268 = (row_14450230 != null ? row_14450230.length : 0);
              L6: do {
                F.line = 119;
                  L7: while (true) {
                  if (!(i_15445267 < l_15445268)) break L7;
                    F.line = 49;
                    j_14460214 = i_15445267;
                    F.line = 120;
                    field_14460215 = row_14450230[chckIndx(i_15445267, 0, (row_14450230 != null ? row_14450230.length : 0)+0-1)-0];
                    F.line = 80;
                    pre_node_14156214(5, makeNimstrLit("field"));
                    F.line = 51;
                    box_14470001(x_14440032[0], y_14440033[0], box_width_14440031, box_width_14440031);
                    if (dark_14440034) {
                    F.line = 53;
                    fill_14215134(colors_14426026.fieldDark);
                    }
                    else {
                      F.line = 55;
                    fill_14215134(colors_14426026.fieldLight);
                    }
                    
                    F.line = 56;
                    dark_14440034 = !(dark_14440034);
                    if (((field_14460215 == 0) && game_started_14427453[0])) {
                    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
                    F.line = 60;
                    make_turn_14425249(game_14427236, (cstrToNimstr((addInt(i_14450229, 1))+"") || []).concat(makeNimstrLit(".") || [],cstrToNimstr((addInt(j_14460214, 1))+"") || []));
                    F.line = 61;
                    check_winner_14435028();
                    }
                    
                    }
                    
                    F.line = 80;
                    pre_node_14156214(5, makeNimstrLit("symbol"));
                    F.line = 63;
                    box_14215032(5.0000000000000000e+00, 5.0000000000000000e+00, (parent_12582382[0].box.w - 1.0000000000000000e+01), (parent_12582382[0].box.h - 1.0000000000000000e+01));
                    if ((field_14460215 == 1)) {
                    F.line = 65;
                    image_14215016(makeNimstrLit("x.png"));
                    }
                    
                    if ((field_14460215 == 2)) {
                    F.line = 67;
                    image_14215016(makeNimstrLit("0.png"));
                    }
                    
                    F.line = 62;
                    post_node_14180028();
                    F.line = 50;
                    post_node_14180028();
                    F.line = 68;
                    HEX2BHEX3D_9545021(x_14440032, 0, (box_width_14440031 + 2.0000000000000000e+00));
                    F.line = 121;
                    i_15445267 = addInt(i_15445267, 1);
                    if (!(((row_14450230 != null ? row_14450230.length : 0) == l_15445268))) {
                    F.line = 122;
                    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            F.line = 69;
            HEX2BHEX3D_9545021(y_14440033, 0, (box_width_14440031 + 2.0000000000000000e+00));
            F.line = 121;
            i_15445272 = addInt(i_15445272, 1);
            if (!(((colontmp__15445270 != null ? colontmp__15445270.length : 0) == l_15445273))) {
            F.line = 122;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function draw_leaderboard_14485030() {
    var Tmp1;

  var F={procname:"fidgetClient.drawLeaderboard",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 73;
    var history_14485032 = nimCopy(null, get_leaderboard_14306108(game_14427236).history, NTI14306040);
    F.line = 74;
    var hist_len_14485038 = (history_14485032 != null ? history_14485032.length : 0);
    if ((0 < hist_len_14485038)) {
    F.line = 76;
    var max_entries_14490002 = ((Math.floor((current_12582387[0].box.h / 4.0000000000000000e+01)))|0);
    F.line = 77;
    var entries_14490003 = nimMin(max_entries_14490002, hist_len_14485038);
    F.line = 78;
    if ((entries_14490003 == hist_len_14485038)) {
    Tmp1 = 0;
    }
    else {
    Tmp1 = subInt(hist_len_14485038, entries_14490003);
    }
    
    var start_entry_14490005 = Tmp1;
    L2: do {
      F.line = 79;
      var i_14490011 = 0;
      F.line = 66;
      var colontmp__15445281 = 0;
      F.line = 79;
      colontmp__15445281 = subInt(addInt(start_entry_14490005, entries_14490003), 1);
      F.line = 77;
      var res_15445282 = start_entry_14490005;
      L3: do {
        F.line = 78;
          L4: while (true) {
          if (!(res_15445282 <= colontmp__15445281)) break L4;
            F.line = 79;
            i_14490011 = res_15445282;
            F.line = 80;
            pre_node_14156214(2, makeNimstrLit("entry"));
            F.line = 81;
            box_14500005(0, mulInt(subInt(i_14490011, start_entry_14490005), 40), 40, 300);
            F.line = 80;
            pre_node_14156214(4, makeNimstrLit("round"));
            F.line = 83;
            box_14500005(0, 0, 99, 40);
            F.line = 84;
            font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.2000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
            F.line = 85;
            fill_14215134(colors_14426026.lbText);
            F.line = 86;
            characters_14210234(cstrToNimstr((addInt(i_14490011, 1))+""));
            if ((history_14485032[chckIndx(i_14490011, 0, (history_14485032 != null ? history_14485032.length : 0)+0-1)-0] == 1)) {
            F.line = 80;
            pre_node_14156214(5, makeNimstrLit("x"));
            F.line = 89;
            box_14500005(134, 4, 32, 32);
            F.line = 90;
            image_14215016(makeNimstrLit("x.png"));
            F.line = 88;
            post_node_14180028();
            }
            
            if ((history_14485032[chckIndx(i_14490011, 0, (history_14485032 != null ? history_14485032.length : 0)+0-1)-0] == 2)) {
            F.line = 80;
            pre_node_14156214(5, makeNimstrLit("0"));
            F.line = 93;
            box_14500005(234, 4, 32, 32);
            F.line = 94;
            image_14215016(makeNimstrLit("0.png"));
            F.line = 92;
            post_node_14180028();
            }
            
            F.line = 82;
            post_node_14180028();
            F.line = 80;
            post_node_14180028();
            F.line = 80;
            res_15445282 = addInt(res_15445282, 1);
          }
      } while(false);
    } while(false);
    }
    
  framePtr = F.prev;

  
}
function down_12590685(mouse_12590687) {
  var result_12590688 = false;

  var F={procname:"common.down",prev:framePtr,filename:"common.nim",line:0};
  framePtr = F;
    F.line = 349;
    result_12590688 = HEX5BHEX5D_10316358(button_down_10316290[0], 1);
  framePtr = F.prev;

  return result_12590688;

}
function draw_info_14530044() {
    var Tmp1;
    var Tmp2;

  var F={procname:"fidgetClient.drawInfo",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("Info"));
    F.line = 98;
    box_14500005(20, 40, 300, 655);
    F.line = 99;
    constraints_14215502(0, 3);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 4"));
    F.line = 101;
    box_14500005(20, 10, 260, 50);
    F.line = 102;
    constraints_14215502(0, 0);
    F.line = 103;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 104;
    corner_radius_14215285(2.5000000000000000e+01);
    F.line = 105;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("current Game"));
    F.line = 107;
    box_14500005(0, 0, 260, 50);
    F.line = 108;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 109;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 110;
    characters_14210234(makeNimstrLit("current Game"));
    F.line = 106;
    post_node_14180028();
    F.line = 100;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("SettingButtons"));
    F.line = 112;
    box_14500005(45, 252, 200, 50);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("resetButton"));
    F.line = 114;
    box_14500005(0, 0, 200, 50);
    F.line = 115;
    constraints_14215502(0, 0);
    F.line = 116;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 117;
    corner_radius_14215285(2.5000000000000000e+01);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 119;
    game_started_14427453[0] = false;
    }
    
    if (mouse_overlap_logic_14200081()) {
    F.line = 121;
    fill_14215134(colors_14426026.buttonHover);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 123;
    fill_14215134(colors_14426026.buttonPressed);
    }
    
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("reset"));
    F.line = 125;
    box_14500005(0, 0, 200, 50);
    F.line = 126;
    constraints_14215502(0, 0);
    F.line = 127;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 128;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 129;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 130;
    characters_14210234(makeNimstrLit("reset"));
    F.line = 124;
    post_node_14180028();
    F.line = 113;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("next"));
    F.line = 132;
    box_14500005(0, 60, 200, 50);
    F.line = 133;
    constraints_14215502(0, 0);
    F.line = 134;
    fill_14215134(colors_14426026.buttonColor);
    F.line = 135;
    corner_radius_14215285(2.5000000000000000e+01);
    F.line = 136;
    stroke_weight_14215233(1.0000000000000000e+00);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 138;
    setup_14425114(game_14427236, settings_14427451);
    F.line = 139;
    if ((starting_player_14427455[0] == 1)) {
    Tmp1 = 2;
    }
    else {
    Tmp1 = 1;
    }
    
    starting_player_14427455[0] = Tmp1;
    F.line = 140;
    game_14427236.current_player_number = starting_player_14427455[0];
    }
    
    if (mouse_overlap_logic_14200081()) {
    F.line = 142;
    fill_14215134(colors_14426026.buttonHover);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 144;
    fill_14215134(colors_14426026.buttonPressed);
    }
    
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("start"));
    F.line = 146;
    box_14215032(0.0, 0.0, parent_12582382[0].box.w, parent_12582382[0].box.h);
    F.line = 147;
    constraints_14215502(0, 0);
    F.line = 148;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 149;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 150;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 151;
    characters_14210234(makeNimstrLit("next round"));
    F.line = 145;
    post_node_14180028();
    F.line = 131;
    post_node_14180028();
    F.line = 111;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("current Player"));
    F.line = 153;
    box_14500005(0, 155, 294, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("player"));
    F.line = 155;
    box_14500005(0, 0, 170, 40);
    F.line = 156;
    constraints_14215502(0, 0);
    F.line = 157;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 158;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 159;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 160;
    characters_14210234(makeNimstrLit("current player: "));
    F.line = 154;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("curPlayer"));
    F.line = 162;
    box_14500005(172, 0, 122, 40);
    F.line = 163;
    constraints_14215502(0, 0);
    F.line = 164;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 165;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 166;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 167;
    if ((game_14427236.current_player_number == 1)) {
    Tmp2 = settings_14427451.name1;
    }
    else {
    Tmp2 = settings_14427451.name2;
    }
    
    characters_14210234(Tmp2);
    F.line = 161;
    post_node_14180028();
    F.line = 152;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("current Symbol"));
    F.line = 169;
    box_14500005(0, 204, 214, 33);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("symbol"));
    F.line = 171;
    box_14500005(0, 0, 178, 33);
    F.line = 172;
    constraints_14215502(0, 0);
    F.line = 173;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 174;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 175;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 176;
    characters_14210234(makeNimstrLit("current symbol: "));
    F.line = 170;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("curSymbol"));
    F.line = 178;
    box_14500005(182, 0, 32, 33);
    F.line = 179;
    constraints_14215502(0, 0);
    F.line = 180;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 181;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 182;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 183;
    characters_14210234(makeNimstrLit("X"));
    F.line = 177;
    post_node_14180028();
    F.line = 168;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("winLength"));
    F.line = 185;
    box_14500005(0, 110, 267, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("line-length to win:"));
    F.line = 187;
    box_14500005(0, 0, 213, 40);
    F.line = 188;
    constraints_14215502(0, 0);
    F.line = 189;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 190;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 191;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 192;
    characters_14210234(makeNimstrLit("line-length to win: "));
    F.line = 186;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("winLength"));
    F.line = 194;
    box_14500005(213, 0, 54, 40);
    F.line = 195;
    constraints_14215502(0, 0);
    F.line = 196;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 197;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 198;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 199;
    characters_14210234(makeNimstrLit("3"));
    F.line = 193;
    post_node_14180028();
    F.line = 184;
    post_node_14180028();
    F.line = 97;
    post_node_14180028();
  framePtr = F.prev;

  
}
function start_game_14427616() {
  var F={procname:"fidgetClient.startGame",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 19;
    setup_14425114(game_14427236, settings_14427451);
    F.line = 20;
    reset_leaderboard_14310249(game_14427236);
    F.line = 21;
    game_started_14427453[0] = true;
  framePtr = F.prev;

  
}
function selectable_14215615(v_14215617) {
  var F={procname:"fidget.selectable",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 419;
    current_12582387[0].selectable = v_14215617;
  framePtr = F.prev;

  
}
function editable_text_14215301(editable_text_14215303) {
  var F={procname:"fidget.editableText",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 338;
    current_12582387[0].editableText = editable_text_14215303;
  framePtr = F.prev;

  
}
function has_keyboard_focus_14210040(node_14210042) {
  var result_14210043 = false;

  var F={procname:"fidget.hasKeyboardFocus",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 177;
    result_14210043 = (keyboard_12582392[0].focusNode == node_14210042);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14210043;

}
function focus_13405666(keyboard_13405668, node_13405669) {
  var F={procname:"htmlbackend.focus",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
  framePtr = F.prev;

  
}
function un_focus_13405683(keyboard_13405685, node_13405686) {
  var F={procname:"htmlbackend.unFocus",prev:framePtr,filename:"htmlbackend.nim",line:0};
  framePtr = F;
  framePtr = F.prev;

  
}
function box_15045004(x_15045010, y_15045011, w_15045012, h_15045013) {
  var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 276;
    box_14215032(x_15045010, y_15045011, w_15045012, h_15045013);
  framePtr = F.prev;

  
}
function box_15080004(x_15080010, y_15080011, w_15080012, h_15080013) {
  var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
  framePtr = F;
    F.line = 276;
    box_14215032(x_15080010, y_15080011, w_15080012, h_15080013);
  framePtr = F.prev;

  
}
function draw_settings_14730030() {
      var Tmp1;
      var Tmp2;

  var F={procname:"fidgetClient.drawSettings",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("Settings"));
    F.line = 203;
    var button_color_14740001 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};
    F.line = 204;
    box_14500005(20, 40, 300, 655);
    F.line = 205;
    constraints_14215502(0, 3);
    F.line = 206;
    corner_radius_14215285(0.0);
    F.line = 207;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 4"));
    F.line = 209;
    box_14500005(20, 10, 260, 50);
    F.line = 210;
    constraints_14215502(0, 0);
    F.line = 211;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 212;
    corner_radius_14215285(2.5000000000000000e+01);
    F.line = 213;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Settings"));
    F.line = 215;
    box_14500005(0, 0, 260, 50);
    F.line = 216;
    constraints_14215502(0, 0);
    F.line = 217;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 218;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 219;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 220;
    characters_14210234(makeNimstrLit("Settings"));
    F.line = 214;
    post_node_14180028();
    F.line = 208;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("SettingButtons"));
    F.line = 222;
    box_14500005(45, 360, 200, 50);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("startButton"));
    F.line = 224;
    box_14500005(0, 0, 200, 50);
    F.line = 225;
    constraints_14215502(0, 0);
    F.line = 226;
    fill_14215134(colors_14426026.buttonColor);
    F.line = 227;
    corner_radius_14215285(2.5000000000000000e+01);
    F.line = 228;
    stroke_weight_14215233(1.0000000000000000e+00);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 230;
    start_game_14427616();
    }
    
    if (mouse_overlap_logic_14200081()) {
    F.line = 232;
    fill_14215134(colors_14426026.buttonHover);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 234;
    fill_14215134(colors_14426026.buttonPressed);
    }
    
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("start"));
    F.line = 236;
    box_14500005(0, 0, 200, 50);
    F.line = 237;
    constraints_14215502(0, 0);
    F.line = 238;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 239;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 240;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 241;
    characters_14210234(makeNimstrLit("start"));
    F.line = 235;
    post_node_14180028();
    F.line = 223;
    post_node_14180028();
    F.line = 221;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("P2Name"));
    F.line = 243;
    box_14500005(0, 155, 276, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Player 2:"));
    F.line = 245;
    box_14500005(0, 0, 120, 40);
    F.line = 246;
    constraints_14215502(0, 0);
    F.line = 247;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 248;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 249;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 250;
    characters_14210234(makeNimstrLit("Player 2: "));
    F.line = 244;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 252;
    box_14500005(121, 1, 154, 38);
    F.line = 253;
    constraints_14215502(0, 0);
    F.line = 254;
    fill_14215167(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
    F.line = 255;
    corner_radius_14215285(0.0);
    F.line = 256;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("P2NameInput"));
    F.line = 258;
    box_14500005(0, 0, 154, 38);
    F.line = 259;
    constraints_14215502(0, 0);
    F.line = 260;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 261;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 262;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 423;
    current_12582387[0].bindingSet = true;
    F.line = 424;
    selectable_14215615(true);
    F.line = 425;
    editable_text_14215301(true);
    if (!(has_keyboard_focus_14210040(current_12582387[0]))) {
    F.line = 427;
    characters_14210234(settings_14427451.name2);
    }
    
    if (false) {
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 430;
    focus_13405666(keyboard_12582392[0], current_12582387[0]);
    }
    
    if ((click_12590664(mouse_12582391[0]) && !(mouse_overlap_logic_14200081()))) {
    F.line = 432;
    un_focus_13405683(keyboard_12582392[0], current_12582387[0]);
    }
    
    }
    
      if (!(keyboard_12582392[0].state == 4)) Tmp1 = false; else {        Tmp1 = has_keyboard_focus_14210040(current_12582387[0]);      }    if (Tmp1) {
    if (!(eqStrings(settings_14427451.name2, keyboard_12582392[0].input))) {
    F.line = 435;
    settings_14427451.name2 = nimCopy(null, keyboard_12582392[0].input, NTI112);
    }
    
    }
    
    F.line = 257;
    post_node_14180028();
    F.line = 251;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 265;
    box_14500005(120, 0, 156, 40);
    F.line = 266;
    constraints_14215502(0, 0);
    F.line = 267;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 268;
    corner_radius_14215285(0.0);
    F.line = 269;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 264;
    post_node_14180028();
    F.line = 242;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("P1Name"));
    F.line = 271;
    box_14500005(0, 110, 276, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Player 1:"));
    F.line = 273;
    box_14500005(0, 0, 120, 40);
    F.line = 274;
    constraints_14215502(0, 0);
    F.line = 275;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 276;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 277;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 278;
    characters_14210234(makeNimstrLit("Player 1: "));
    F.line = 272;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 280;
    box_14500005(121, 1, 154, 38);
    F.line = 281;
    constraints_14215502(0, 0);
    F.line = 282;
    fill_14215167(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
    F.line = 283;
    corner_radius_14215285(0.0);
    F.line = 284;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("P1NameInput"));
    F.line = 286;
    box_14500005(0, 0, 154, 38);
    F.line = 287;
    constraints_14215502(0, 0);
    F.line = 288;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 289;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 290;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 423;
    current_12582387[0].bindingSet = true;
    F.line = 424;
    selectable_14215615(true);
    F.line = 425;
    editable_text_14215301(true);
    if (!(has_keyboard_focus_14210040(current_12582387[0]))) {
    F.line = 427;
    characters_14210234(settings_14427451.name1);
    }
    
    if (false) {
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 430;
    focus_13405666(keyboard_12582392[0], current_12582387[0]);
    }
    
    if ((click_12590664(mouse_12582391[0]) && !(mouse_overlap_logic_14200081()))) {
    F.line = 432;
    un_focus_13405683(keyboard_12582392[0], current_12582387[0]);
    }
    
    }
    
      if (!(keyboard_12582392[0].state == 4)) Tmp2 = false; else {        Tmp2 = has_keyboard_focus_14210040(current_12582387[0]);      }    if (Tmp2) {
    if (!(eqStrings(settings_14427451.name1, keyboard_12582392[0].input))) {
    F.line = 435;
    settings_14427451.name1 = nimCopy(null, keyboard_12582392[0].input, NTI112);
    }
    
    }
    
    F.line = 285;
    post_node_14180028();
    F.line = 279;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 293;
    box_14500005(120, 0, 156, 40);
    F.line = 294;
    constraints_14215502(0, 0);
    F.line = 295;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 296;
    corner_radius_14215285(0.0);
    F.line = 297;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 292;
    post_node_14180028();
    F.line = 270;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("FieldSize"));
    F.line = 299;
    box_14500005(0, 225, 265, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Field Size:"));
    F.line = 301;
    box_14500005(0, 0, 130, 40);
    F.line = 302;
    constraints_14215502(0, 0);
    F.line = 303;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 304;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 305;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 306;
    characters_14210234(makeNimstrLit("Field Size:"));
    F.line = 300;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 308;
    box_14500005(182, 1, 48, 38);
    F.line = 309;
    constraints_14215502(0, 0);
    F.line = 310;
    fill_14215167(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
    F.line = 311;
    corner_radius_14215285(0.0);
    F.line = 312;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("FieldSizeInput"));
    F.line = 314;
    box_14500005(0, 0, 48, 38);
    F.line = 315;
    constraints_14215502(0, 0);
    F.line = 316;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 317;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 318;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 319;
    characters_14210234(cstrToNimstr((settings_14427451.size)+""));
    F.line = 313;
    post_node_14180028();
    F.line = 307;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 321;
    box_14500005(181, 0, 50, 40);
    F.line = 322;
    constraints_14215502(0, 0);
    F.line = 323;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 324;
    corner_radius_14215285(0.0);
    F.line = 325;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 320;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("MinField"));
    F.line = 327;
    box_14500005(145, 5, 30, 30);
    F.line = 328;
    constraints_14215502(0, 0);
    F.line = 329;
    nimCopy(button_color_14740001, colors_14426026.buttonColor, NTI9964003);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    if ((settings_14427451.winCount < settings_14427451.size)) {
    F.line = 332;
    settings_14427451.size = subInt(settings_14427451.size, 1);
    }
    
    }
    
    if (mouse_overlap_logic_14200081()) {
    F.line = 334;
    nimCopy(button_color_14740001, colors_14426026.buttonHover, NTI9964003);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 336;
    nimCopy(button_color_14740001, colors_14426026.buttonPressed, NTI9964003);
    }
    
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 8"));
    F.line = 338;
    box_15045004(0, 1.2500000000000000e+01, 30, 5);
    F.line = 339;
    constraints_14215502(0, 0);
    F.line = 340;
    fill_14215134(button_color_14740001);
    F.line = 341;
    corner_radius_14215285(0.0);
    F.line = 337;
    post_node_14180028();
    F.line = 326;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("plusField"));
    F.line = 343;
    box_14500005(235, 5, 30, 30);
    F.line = 344;
    constraints_14215502(0, 0);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    if ((settings_14427451.size < 9)) {
    F.line = 347;
    settings_14427451.size = addInt(settings_14427451.size, 1);
    }
    
    }
    
    F.line = 348;
    nimCopy(button_color_14740001, colors_14426026.buttonColor, NTI9964003);
    if (mouse_overlap_logic_14200081()) {
    F.line = 350;
    nimCopy(button_color_14740001, colors_14426026.buttonHover, NTI9964003);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 352;
    nimCopy(button_color_14740001, colors_14426026.buttonPressed, NTI9964003);
    }
    
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 7"));
    F.line = 354;
    box_15080004(1.2500000000000000e+01, 0, 5, 30);
    F.line = 355;
    constraints_14215502(0, 0);
    F.line = 356;
    fill_14215134(button_color_14740001);
    F.line = 357;
    corner_radius_14215285(0.0);
    F.line = 358;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 353;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 8"));
    F.line = 360;
    box_15045004(0, 1.2500000000000000e+01, 30, 5);
    F.line = 361;
    constraints_14215502(0, 0);
    F.line = 362;
    fill_14215134(button_color_14740001);
    F.line = 363;
    corner_radius_14215285(0.0);
    F.line = 364;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 359;
    post_node_14180028();
    F.line = 342;
    post_node_14180028();
    F.line = 298;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("Win Count"));
    F.line = 366;
    box_14500005(0, 270, 265, 40);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Win Count:"));
    F.line = 368;
    box_14500005(0, 0, 130, 40);
    F.line = 369;
    constraints_14215502(0, 0);
    F.line = 370;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 371;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 372;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 1);
    F.line = 373;
    characters_14210234(makeNimstrLit("Win Count: "));
    F.line = 367;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 375;
    box_14500005(182, 1, 48, 38);
    F.line = 376;
    constraints_14215502(0, 0);
    F.line = 377;
    fill_14215167(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
    F.line = 378;
    corner_radius_14215285(0.0);
    F.line = 379;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("WinCountInput"));
    F.line = 381;
    box_14500005(0, 0, 48, 38);
    F.line = 382;
    constraints_14215502(0, 0);
    F.line = 383;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 384;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 385;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 386;
    characters_14210234(cstrToNimstr((settings_14427451.winCount)+""));
    F.line = 380;
    post_node_14180028();
    F.line = 374;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("P1Name"));
    F.line = 388;
    box_14500005(181, 0, 50, 40);
    F.line = 389;
    constraints_14215502(0, 0);
    F.line = 390;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 391;
    corner_radius_14215285(0.0);
    F.line = 392;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 387;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("MinField"));
    F.line = 394;
    box_14500005(145, 5, 30, 30);
    F.line = 395;
    constraints_14215502(0, 0);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    if ((0 < settings_14427451.winCount)) {
    F.line = 398;
    settings_14427451.winCount = subInt(settings_14427451.winCount, 1);
    }
    
    }
    
    F.line = 399;
    nimCopy(button_color_14740001, colors_14426026.buttonColor, NTI9964003);
    if (mouse_overlap_logic_14200081()) {
    F.line = 401;
    nimCopy(button_color_14740001, colors_14426026.buttonHover, NTI9964003);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 403;
    nimCopy(button_color_14740001, colors_14426026.buttonPressed, NTI9964003);
    }
    
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 8"));
    F.line = 405;
    box_15045004(0, 1.2500000000000000e+01, 30, 5);
    F.line = 406;
    constraints_14215502(0, 0);
    F.line = 407;
    fill_14215134(button_color_14740001);
    F.line = 408;
    corner_radius_14215285(0.0);
    F.line = 409;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 404;
    post_node_14180028();
    F.line = 393;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("plusField"));
    F.line = 411;
    box_14500005(235, 5, 30, 30);
    F.line = 412;
    constraints_14215502(0, 0);
    if ((click_12590664(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    if ((settings_14427451.winCount < settings_14427451.size)) {
    F.line = 415;
    settings_14427451.winCount = addInt(settings_14427451.winCount, 1);
    }
    
    }
    
    F.line = 416;
    nimCopy(button_color_14740001, colors_14426026.buttonColor, NTI9964003);
    if (mouse_overlap_logic_14200081()) {
    F.line = 418;
    nimCopy(button_color_14740001, colors_14426026.buttonHover, NTI9964003);
    }
    
    if ((down_12590685(mouse_12582391[0]) && mouse_overlap_logic_14200081())) {
    F.line = 420;
    nimCopy(button_color_14740001, colors_14426026.buttonPressed, NTI9964003);
    }
    
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 7"));
    F.line = 422;
    box_15080004(1.2500000000000000e+01, 0, 5, 30);
    F.line = 423;
    constraints_14215502(0, 0);
    F.line = 424;
    fill_14215134(button_color_14740001);
    F.line = 425;
    corner_radius_14215285(0.0);
    F.line = 426;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 421;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 8"));
    F.line = 428;
    box_15045004(0, 1.2500000000000000e+01, 30, 5);
    F.line = 429;
    constraints_14215502(0, 0);
    F.line = 430;
    fill_14215134(button_color_14740001);
    F.line = 431;
    corner_radius_14215285(0.0);
    F.line = 432;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 427;
    post_node_14180028();
    F.line = 410;
    post_node_14180028();
    F.line = 365;
    post_node_14180028();
    F.line = 202;
    post_node_14180028();
  framePtr = F.prev;

  
}
function draw_main_frame_15225027() {
    var Tmp1;
    var Tmp2;

  var F={procname:"fidgetClient.drawMainFrame",prev:framePtr,filename:"fidgetClient.nim",line:0};
  framePtr = F;
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("Frame 1"));
    F.line = 436;
    org_box_15235007(0, 0, 1280, 720);
    F.line = 437;
    box_14215078(root_12582383[0].box);
    F.line = 438;
    constraints_14215502(0, 0);
    F.line = 439;
    fill_14215167(makeNimstrLit("#ffffff"), 1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Heading"));
    F.line = 441;
    box_14500005(400, 20, 480, 60);
    F.line = 442;
    constraints_14215502(4, 0);
    F.line = 443;
    fill_14215167(makeNimstrLit("#d7ba56"), 1.0000000000000000e+00);
    F.line = 444;
    corner_radius_14215285(3.0000000000000000e+01);
    F.line = 445;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Tic-Tac-Toe"));
    F.line = 447;
    box_14500005(0, 0, 480, 60);
    F.line = 448;
    constraints_14215502(0, 0);
    F.line = 449;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 450;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 451;
    font_14210100(makeNimstrLit("IBM Plex Sans Bold"), 4.8000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 452;
    characters_14210234(makeNimstrLit("Tic-Tac-Toe"));
    F.line = 446;
    post_node_14180028();
    F.line = 440;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("GameFrame"));
    F.line = 454;
    box_14500005(335, 90, 610, 610);
    F.line = 455;
    constraints_14215502(4, 4);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 2"));
    F.line = 457;
    box_14215032(0.0, 0.0, parent_12582382[0].box.h, parent_12582382[0].box.w);
    F.line = 458;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 3"));
    F.line = 460;
    box_14215032(5.0000000000000000e+00, 5.0000000000000000e+00, (parent_12582382[0].box.w - 1.0000000000000000e+01), (parent_12582382[0].box.h - 1.0000000000000000e+01));
    F.line = 461;
    fill_14215167(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
    F.line = 462;
    draw_game_field_14440022();
    F.line = 459;
    post_node_14180028();
    F.line = 456;
    post_node_14180028();
    F.line = 453;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("Leaderboard"));
    F.line = 464;
    box_14500005(960, 40, 300, 655);
    F.line = 465;
    org_box_15235007(960, 40, 300, 655);
    F.line = 466;
    constraints_14215502(1, 3);
    F.line = 467;
    corner_radius_14215285(0.0);
    F.line = 468;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 4"));
    F.line = 470;
    box_14500005(20, 10, 260, 50);
    F.line = 471;
    constraints_14215502(0, 0);
    F.line = 472;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 473;
    corner_radius_14215285(2.5000000000000000e+01);
    F.line = 474;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Leaderboard"));
    F.line = 476;
    box_14500005(0, 0, 260, 50);
    F.line = 477;
    constraints_14215502(0, 0);
    F.line = 478;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 479;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 480;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 481;
    characters_14210234(makeNimstrLit("Leaderboard"));
    F.line = 475;
    post_node_14180028();
    F.line = 469;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(2, makeNimstrLit("Table"));
    F.line = 483;
    box_14500005(0, 70, 300, 585);
    F.line = 484;
    org_box_15235007(0, 70, 300, 585);
    F.line = 485;
    constraints_14215502(0, 3);
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("Rectangle 6"));
    F.line = 487;
    box_14500005(0, 41, 300, 40);
    F.line = 488;
    constraints_14215502(0, 0);
    F.line = 489;
    fill_14215167(makeNimstrLit("#d7ba56"), 1.0000000000000000e+00);
    F.line = 490;
    corner_radius_14215285(0.0);
    F.line = 491;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Sum"));
    F.line = 493;
    box_14500005(0, 0, 100, 40);
    F.line = 494;
    constraints_14215502(0, 0);
    F.line = 495;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 496;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 497;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 498;
    characters_14210234(makeNimstrLit("Sum"));
    F.line = 492;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Score1"));
    F.line = 500;
    box_14500005(100, 0, 100, 40);
    F.line = 501;
    constraints_14215502(0, 0);
    F.line = 502;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 503;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 504;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 505;
    characters_14210234(cstrToNimstr(((Tmp1 = get_leaderboard_14306108(game_14427236).sum, Tmp1)[chckIndx(1, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0])+""));
    F.line = 499;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Score2"));
    F.line = 507;
    box_14500005(200, 0, 100, 40);
    F.line = 508;
    constraints_14215502(0, 0);
    F.line = 509;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 510;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 511;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 512;
    characters_14210234(cstrToNimstr(((Tmp2 = get_leaderboard_14306108(game_14427236).sum, Tmp2)[chckIndx(2, 0, (Tmp2 != null ? Tmp2.length : 0)+0-1)-0])+""));
    F.line = 506;
    post_node_14180028();
    F.line = 486;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Player1"));
    F.line = 514;
    box_14500005(100, 1, 100, 40);
    F.line = 515;
    constraints_14215502(0, 0);
    F.line = 516;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 517;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 518;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 519;
    characters_14210234(makeNimstrLit("Player 1"));
    F.line = 513;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Player2"));
    F.line = 521;
    box_14500005(200, 1, 100, 40);
    F.line = 522;
    constraints_14215502(0, 0);
    F.line = 523;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 524;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 525;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 526;
    characters_14210234(makeNimstrLit("Player 2"));
    F.line = 520;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("hline"));
    F.line = 528;
    box_14500005(0, 40, 300, 2);
    F.line = 529;
    constraints_14215502(0, 0);
    F.line = 530;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 531;
    corner_radius_14215285(0.0);
    F.line = 532;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 527;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("hline"));
    F.line = 534;
    box_14500005(0, 80, 300, 2);
    F.line = 535;
    constraints_14215502(0, 0);
    F.line = 536;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 537;
    corner_radius_14215285(0.0);
    F.line = 538;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 533;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("vline1"));
    F.line = 540;
    box_14500005(99, 0, 2, 585);
    F.line = 541;
    constraints_14215502(0, 3);
    F.line = 542;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 543;
    corner_radius_14215285(0.0);
    F.line = 544;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 539;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(5, makeNimstrLit("vline2"));
    F.line = 546;
    box_14500005(199, 0, 2, 585);
    F.line = 547;
    constraints_14215502(0, 3);
    F.line = 548;
    fill_14215167(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
    F.line = 549;
    corner_radius_14215285(0.0);
    F.line = 550;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 545;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(4, makeNimstrLit("Match"));
    F.line = 552;
    box_14500005(0, 1, 100, 40);
    F.line = 553;
    constraints_14215502(0, 0);
    F.line = 554;
    fill_14215167(makeNimstrLit("#000000"), 1.0000000000000000e+00);
    F.line = 555;
    stroke_weight_14215233(1.0000000000000000e+00);
    F.line = 556;
    font_14210100(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 1, 1);
    F.line = 557;
    characters_14210234(makeNimstrLit("Match"));
    F.line = 551;
    post_node_14180028();
    F.line = 80;
    pre_node_14156214(1, makeNimstrLit("tableContent"));
    F.line = 559;
    box_14500005(0, 82, 300, 500);
    F.line = 560;
    constraints_14215502(0, 3);
    F.line = 561;
    draw_leaderboard_14485030();
    F.line = 558;
    post_node_14180028();
    F.line = 482;
    post_node_14180028();
    F.line = 463;
    post_node_14180028();
    if (game_started_14427453[0]) {
    F.line = 563;
    draw_info_14530044();
    }
    else {
      F.line = 565;
    draw_settings_14730030();
    }
    
    F.line = 435;
    post_node_14180028();
  framePtr = F.prev;

  
}
start_fidget_14010103(draw_main_frame_15225027, 0, 0);
function set_possible_moves_14226073(self_14226075, moves_14226102) {
  var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 244;
    raiseException({message: makeNimstrLit("set_possible_moves(OrderedTable) must be overridden"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  
}
function set_possible_moves_14226103(self_14226075, moves_14226102) {
  var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 176;
    set_possible_moves_14226073(self_14226075, moves_14226102);
  framePtr = F.prev;

  
}
function sys_fatal_235018(message_235022) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 49;
    raiseException({message: nimCopy(null, message_235022, NTI112), m_type: NTI6277, parent: null, name: null, trace: null, up: null}, "NilAccessError");
  framePtr = F.prev;

  
}
function chckNilDisp(p_235016, p_235016_Idx) {
    if ((p_235016 == null && p_235016_Idx == 0)) {
    sys_fatal_235018(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}
function mk_digit_11348041(v_11348043, typ_11348044) {
      var Tmp1;

  var result_11348045 = null;

  var F={procname:"strformat.mkDigit",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    if (!((v_11348043 < 26))) {
    F.line = 270;
    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/strformat.nim(270, 9) `v < 26` "));
    }
    
    if ((v_11348043 < 10)) {
    F.line = 272;
    result_11348045 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_11348043), 0, 255)), NTI112);
    }
    else {
      F.line = 274;
      if ((typ_11348044 == 120)) {
      Tmp1 = 97;
      }
      else {
      Tmp1 = 65;
      }
      
      result_11348045 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_11348043), 10), 0, 255)), NTI112);
    }
    
  framePtr = F.prev;

  return result_11348045;

}
function format_int_14320002(n_14320005, radix_14320006, spec_14320007) {
    var Tmp7;

  var result_14320008 = null;

  var F={procname:"formatInt.formatInt",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
    F.line = 318;
    var v_14320201 = n_14320005;
    F.line = 319;
    var negative_14320202 = (v_14320201 < 0);
    if (negative_14320202) {
    F.line = 322;
    v_14320201 = mulInt(v_14320201, -1);
    }
    
    F.line = 324;
    var xx_14320203 = [];
    if (spec_14320007.alternateForm) {
    F.line = 326;
    switch (spec_14320007.typ) {
    case 88:
      F.line = 327;
      xx_14320203 = nimCopy(null, makeNimstrLit("0x"), NTI112);
      break;
    case 120:
      F.line = 328;
      xx_14320203 = nimCopy(null, makeNimstrLit("0x"), NTI112);
      break;
    case 98:
      F.line = 329;
      xx_14320203 = nimCopy(null, makeNimstrLit("0b"), NTI112);
      break;
    case 111:
      F.line = 330;
      xx_14320203 = nimCopy(null, makeNimstrLit("0o"), NTI112);
      break;
    default: 
      break;
    }
    }
    
    if ((v_14320201 == 0)) {
    F.line = 334;
    result_14320008 = nimCopy(null, makeNimstrLit("0"), NTI112);
    }
    else {
      F.line = 336;
      result_14320008 = nimCopy(null, [], NTI112);
      L1: do {
        F.line = 337;
          L2: while (true) {
          if (!(0 < v_14320201)) break L2;
            F.line = 338;
            var d_14320206 = modInt(v_14320201, radix_14320006);
            F.line = 339;
            v_14320201 = divInt(v_14320201, radix_14320006);
            F.line = 340;
            if (result_14320008 != null) { result_14320008 = (result_14320008).concat(mk_digit_11348041(chckRange(d_14320206, -2147483648, 2147483647), spec_14320007.typ)); } else { result_14320008 = mk_digit_11348041(chckRange(d_14320206, -2147483648, 2147483647), spec_14320007.typ).slice(); };
          }
      } while(false);
      L3: do {
        F.line = 341;
        var idx_14320215 = 0;
        F.line = 104;
        var colontmp__15445330 = 0;
        F.line = 341;
        colontmp__15445330 = divInt((result_14320008 != null ? result_14320008.length : 0), 2);
        F.line = 106;
        var i_15445331 = 0;
        L4: do {
          F.line = 107;
            L5: while (true) {
            if (!(i_15445331 < colontmp__15445330)) break L5;
              F.line = 341;
              idx_14320215 = i_15445331;
              F.line = 342;
              var Tmp6 = result_14320008[chckIndx(idx_14320215, 0, (result_14320008 != null ? result_14320008.length : 0)+0-1)-0]; result_14320008[chckIndx(idx_14320215, 0, (result_14320008 != null ? result_14320008.length : 0)+0-1)-0] = result_14320008[chckIndx(subInt(subInt((result_14320008 != null ? result_14320008.length : 0), idx_14320215), 1), 0, (result_14320008 != null ? result_14320008.length : 0)+0-1)-0]; result_14320008[chckIndx(subInt(subInt((result_14320008 != null ? result_14320008.length : 0), idx_14320215), 1), 0, (result_14320008 != null ? result_14320008.length : 0)+0-1)-0] = Tmp6;              F.line = 109;
              i_15445331 = addInt(i_15445331, 1);
            }
        } while(false);
      } while(false);
    }
    
    if (spec_14320007.padWithZero) {
    F.line = 344;
    if (negative_14320202) Tmp7 = true; else {      Tmp7 = !((spec_14320007.sign == 45));    }    var sign_14330008 = Tmp7;
    F.line = 345;
    var to_fill_14330013 = subInt(subInt(subInt(spec_14320007.minimumWidth, (result_14320008 != null ? result_14320008.length : 0)), (xx_14320203 != null ? xx_14320203.length : 0)), (sign_14330008 ? 1:0));
    if ((0 < to_fill_14330013)) {
    F.line = 347;
    result_14320008 = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_14330013, 0, 2147483647)) || []).concat(result_14320008 || []), NTI112);
    }
    
    }
    
    if (negative_14320202) {
    F.line = 350;
    result_14320008 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_14320203 || [],result_14320008 || []), NTI112);
    }
    else {
    if (!((spec_14320007.sign == 45))) {
    F.line = 352;
    result_14320008 = nimCopy(null, [spec_14320007.sign].concat(xx_14320203 || [],result_14320008 || []), NTI112);
    }
    else {
      F.line = 354;
      result_14320008 = nimCopy(null, (xx_14320203 || []).concat(result_14320008 || []), NTI112);
    }
    }
    if ((spec_14320007.align == 60)) {
    L8: do {
      F.line = 357;
      var i_14330019 = 0;
      F.line = 104;
      var colontmp__15445334 = 0;
      F.line = 357;
      colontmp__15445334 = (result_14320008 != null ? result_14320008.length : 0);
      F.line = 106;
      var i_15445335 = colontmp__15445334;
      L9: do {
        F.line = 107;
          L10: while (true) {
          if (!(i_15445335 < spec_14320007.minimumWidth)) break L10;
            F.line = 357;
            i_14330019 = i_15445335;
            F.line = 358;
            if (result_14320008 != null) { addChar(result_14320008, spec_14320007.fill); } else { result_14320008 = [spec_14320007.fill]; };
            F.line = 109;
            i_15445335 = addInt(i_15445335, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      F.line = 360;
      var to_fill_14330020 = subInt(spec_14320007.minimumWidth, (result_14320008 != null ? result_14320008.length : 0));
      if ((spec_14320007.align == 94)) {
      F.line = 362;
      var half_14330021 = divInt(to_fill_14330020, 2);
      F.line = 363;
      result_14320008 = nimCopy(null, (nsuRepeatChar(spec_14320007.fill, chckRange(half_14330021, 0, 2147483647)) || []).concat(result_14320008 || [],nsuRepeatChar(spec_14320007.fill, chckRange(subInt(to_fill_14330020, half_14330021), 0, 2147483647)) || []), NTI112);
      }
      else {
        if ((0 < to_fill_14330020)) {
        F.line = 366;
        result_14320008 = nimCopy(null, (nsuRepeatChar(spec_14320007.fill, chckRange(to_fill_14330020, 0, 2147483647)) || []).concat(result_14320008 || []), NTI112);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_14320008;

}
function format_value_14315001(result_14315004, result_14315004_Idx, value_14315005, specifier_14315006) {
  var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (((specifier_14315006 != null ? specifier_14315006.length : 0) == 0)) {
    F.line = 426;
    if (result_14315004[result_14315004_Idx] != null) { result_14315004[result_14315004_Idx] = (result_14315004[result_14315004_Idx]).concat(cstrToNimstr((value_14315005)+"")); } else { result_14315004[result_14315004_Idx] = cstrToNimstr((value_14315005)+"").slice(); };
    F.line = 427;
    break BeforeRet;
    }
    
    F.line = 428;
    var spec_14315007 = parse_standard_format_specifier_11355322(specifier_14315006, 0, false);
    F.line = 429;
    var radix_14315009 = 10;
    F.line = 430;
    switch (spec_14315007.typ) {
    case 120:
    case 88:
      F.line = 431;
      radix_14315009 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 433;
      radix_14315009 = 2;
      break;
    case 111:
      F.line = 434;
      radix_14315009 = 8;
      break;
    default: 
      F.line = 436;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_14315007.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    F.line = 439;
    if (result_14315004[result_14315004_Idx] != null) { result_14315004[result_14315004_Idx] = (result_14315004[result_14315004_Idx]).concat(format_int_14320002(value_14315005, radix_14315009, spec_14315007)); } else { result_14315004[result_14315004_Idx] = format_int_14320002(value_14315005, radix_14315009, spec_14315007).slice(); };
  } while (false);
  framePtr = F.prev;

  
}
function set_possible_moves_14310289(self_14310291, moves_14310294, moves_14310294_Idx) {
  var F={procname:"game_logic.set_possible_moves",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 56;
      var y_14310303 = 0;
      F.line = 66;
      var colontmp__15445319 = 0;
      F.line = 56;
      colontmp__15445319 = subInt(self_14310291.size, 1);
      F.line = 77;
      var res_15445320 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445320 <= colontmp__15445319)) break L3;
            F.line = 56;
            y_14310303 = res_15445320;
            L4: do {
              F.line = 57;
              var x_14310312 = 0;
              F.line = 66;
              var colontmp__15445313 = 0;
              F.line = 57;
              colontmp__15445313 = subInt(self_14310291.size, 1);
              F.line = 77;
              var res_15445314 = 0;
              L5: do {
                F.line = 78;
                  L6: while (true) {
                  if (!(res_15445314 <= colontmp__15445313)) break L6;
                    F.line = 57;
                    x_14310312 = res_15445314;
                    if ((self_14310291.field[chckIndx(x_14310312, 0, (self_14310291.field != null ? self_14310291.field.length : 0)+0-1)-0][chckIndx(y_14310303, 0, (self_14310291.field[chckIndx(x_14310312, 0, (self_14310291.field != null ? self_14310291.field.length : 0)+0-1)-0] != null ? self_14310291.field[chckIndx(x_14310312, 0, (self_14310291.field != null ? self_14310291.field.length : 0)+0-1)-0].length : 0)+0-1)-0] == 0)) {
                    F.line = 59;
                    F.line = 59;
                    var fmt_res_14310313 = [mnewString(0)];
                    F.line = 59;
                    format_value_14315001(fmt_res_14310313, 0, addInt(x_14310312, 1), []);
                    F.line = 59;
                    if (fmt_res_14310313[0] != null) { fmt_res_14310313[0] = (fmt_res_14310313[0]).concat(makeNimstrLit(".")); } else { fmt_res_14310313[0] = makeNimstrLit("."); };
                    F.line = 59;
                    format_value_14315001(fmt_res_14310313, 0, addInt(y_14310303, 1), []);
                    var Tmp7 = nimCopy(null, fmt_res_14310313[0], NTI112);
                    if (moves_14310294[moves_14310294_Idx] != null) { moves_14310294[moves_14310294_Idx].push(Tmp7); } else { moves_14310294[moves_14310294_Idx] = [Tmp7]; };
                    }
                    
                    F.line = 80;
                    res_15445314 = addInt(res_15445314, 1);
                  }
              } while(false);
            } while(false);
            F.line = 80;
            res_15445320 = addInt(res_15445320, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function set_possible_moves_14226105(self_14226107, moves_14226110, moves_14226110_Idx) {
  var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 238;
    moves_14226110[moves_14226110_Idx] = nimCopy(null, [], NTI14255113);
  framePtr = F.prev;

  
}
function set_possible_moves_14226111(self_14226107, moves_14226110, moves_14226110_Idx) {
  var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 510;
    chckNilDisp(self_14226107);
    if (isObj(self_14226107.m_type, NTI14306020)) {
    F.line = 177;
    set_possible_moves_14310289(self_14226107, moves_14226110, moves_14226110_Idx);
    }
    else {
    if (isObj(self_14226107.m_type, NTI14226047)) {
    F.line = 177;
    set_possible_moves_14226105(self_14226107, moves_14226110, moves_14226110_Idx);
    }
    else {
    if (isObj(self_14226107.m_type, NTI14226047)) {
    F.line = 177;
    set_possible_moves_14226105(self_14226107, moves_14226110, moves_14226110_Idx);
    }
    }}
  framePtr = F.prev;

  
}
function invalid_format_string_9570046() {
  var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2624;
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
  framePtr = F.prev;

  
}
function nsuCmpIgnoreStyle(a_8780022, b_8780023) {
          var Tmp7;
          var Tmp8;

  var result_8780024 = 0;

  BeforeRet: do {
    var i_8780026 = 0;
    var j_8780028 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          L3: do {
              L4: while (true) {
              if (!((i_8780026 < (a_8780022 != null ? a_8780022.length : 0)) && (a_8780022[i_8780026] == 95))) break L4;
                i_8780026 += 1;
              }
          } while(false);
          L5: do {
              L6: while (true) {
              if (!((j_8780028 < (b_8780023 != null ? b_8780023.length : 0)) && (b_8780023[j_8780028] == 95))) break L6;
                j_8780028 += 1;
              }
          } while(false);
          if ((i_8780026 < (a_8780022 != null ? a_8780022.length : 0))) {
          Tmp7 = nsuToLowerAsciiChar(a_8780022[i_8780026]);
          }
          else {
          Tmp7 = 0;
          }
          
          var aa_8780041 = Tmp7;
          if ((j_8780028 < (b_8780023 != null ? b_8780023.length : 0))) {
          Tmp8 = nsuToLowerAsciiChar(b_8780023[j_8780028]);
          }
          else {
          Tmp8 = 0;
          }
          
          var bb_8780042 = Tmp8;
          result_8780024 = (aa_8780041 - bb_8780042);
          if (!((result_8780024 == 0))) {
          break BeforeRet;
          }
          
          if (((a_8780022 != null ? a_8780022.length : 0) <= i_8780026)) {
          if (((b_8780023 != null ? b_8780023.length : 0) <= j_8780028)) {
          result_8780024 = 0;
          break BeforeRet;
          }
          
          result_8780024 = -1;
          break BeforeRet;
          }
          else {
          if (((b_8780023 != null ? b_8780023.length : 0) <= j_8780028)) {
          result_8780024 = 1;
          break BeforeRet;
          }
          }
          i_8780026 += 1;
          j_8780028 += 1;
        }
    } while(false);
  } while (false);

  return result_8780024;

}
function find_normalized_9570014(x_9570016, in_array_9570018) {
  var result_9570019 = 0;

  var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 2616;
    var i_9570021 = 0;
    L1: do {
      F.line = 2617;
        L2: while (true) {
        if (!(i_9570021 < (in_array_9570018 != null ? (in_array_9570018.length-1) : -1))) break L2;
          if ((nsuCmpIgnoreStyle(x_9570016, in_array_9570018[chckIndx(i_9570021, 0, (in_array_9570018 != null ? in_array_9570018.length : 0)+0-1)-0]) == 0)) {
          F.line = 2618;
          result_9570019 = i_9570021;
          break BeforeRet;
          }
          
          F.line = 2619;
          i_9570021 = addInt(i_9570021, 2);
        }
    } while(false);
    F.line = 2621;
    result_9570019 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_9570019;

}
function nsuAddf(s_9575018, s_9575018_Idx, formatstr_9575019, a_9575021) {
                  var Tmp5;
            var Tmp6;
              var Tmp7;
            var Tmp10;
              var Tmp11;
                var Tmp12;
                  var Tmp15;
              var Tmp16;

  var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2630;
    var i_9575025 = 0;
    F.line = 2631;
    var num_9575027 = 0;
    L1: do {
      F.line = 2632;
        L2: while (true) {
        if (!(i_9575025 < (formatstr_9575019 != null ? formatstr_9575019.length : 0))) break L2;
          if (((formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0] == 36) && (addInt(i_9575025, 1) < (formatstr_9575019 != null ? formatstr_9575019.length : 0)))) {
          F.line = 2634;
          switch (formatstr_9575019[chckIndx(addInt(i_9575025, 1), 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]) {
          case 35:
            if (((a_9575021 != null ? (a_9575021.length-1) : -1) < num_9575027)) {
            F.line = 2636;
            invalid_format_string_9570046();
            }
            
            F.line = 2637;
            if (s_9575018[s_9575018_Idx] != null) { s_9575018[s_9575018_Idx] = (s_9575018[s_9575018_Idx]).concat(a_9575021[chckIndx(num_9575027, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = a_9575021[chckIndx(num_9575027, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0].slice(); };
            F.line = 2638;
            i_9575025 = addInt(i_9575025, 2);
            F.line = 2639;
            num_9575027 = addInt(num_9575027, 1);
            break;
          case 36:
            F.line = 2641;
            if (s_9575018[s_9575018_Idx] != null) { addChar(s_9575018[s_9575018_Idx], 36); } else { s_9575018[s_9575018_Idx] = [36]; };
            F.line = 2642;
            i_9575025 = addInt(i_9575025, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            F.line = 2644;
            var j_9580025 = 0;
            F.line = 2645;
            i_9575025 = addInt(i_9575025, 1);
            F.line = 2646;
            var negative_9580032 = (formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0] == 45);
            if (negative_9580032) {
            F.line = 2647;
            i_9575025 = addInt(i_9575025, 1);
            }
            
            L3: do {
              F.line = 2648;
                L4: while (true) {
                  if (!(i_9575025 < (formatstr_9575019 != null ? formatstr_9575019.length : 0))) Tmp5 = false; else {                    Tmp5 = (ConstSet34[formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp5) break L4;
                  F.line = 2649;
                  j_9580025 = subInt(addInt(mulInt(j_9580025, 10), formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]), 48);
                  F.line = 2650;
                  i_9575025 = addInt(i_9575025, 1);
                }
            } while(false);
            F.line = 2651;
            if (!(negative_9580032)) {
            Tmp6 = subInt(j_9580025, 1);
            }
            else {
            Tmp6 = subInt((a_9575021 != null ? a_9575021.length : 0), j_9580025);
            }
            
            var idx_9585025 = Tmp6;
              if ((idx_9585025 < 0)) Tmp7 = true; else {                Tmp7 = ((a_9575021 != null ? (a_9575021.length-1) : -1) < idx_9585025);              }            if (Tmp7) {
            F.line = 2652;
            invalid_format_string_9570046();
            }
            
            F.line = 2653;
            if (s_9575018[s_9575018_Idx] != null) { s_9575018[s_9575018_Idx] = (s_9575018[s_9575018_Idx]).concat(a_9575021[chckIndx(idx_9585025, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = a_9575021[chckIndx(idx_9585025, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0].slice(); };
            break;
          case 123:
            F.line = 2655;
            var j_9590006 = addInt(i_9575025, 2);
            F.line = 2656;
            var k_9590008 = 0;
            F.line = 2657;
            var negative_9590009 = (formatstr_9575019[chckIndx(j_9590006, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0] == 45);
            if (negative_9590009) {
            F.line = 2658;
            j_9590006 = addInt(j_9590006, 1);
            }
            
            F.line = 2659;
            var is_number_9590017 = 0;
            L8: do {
              F.line = 2660;
                L9: while (true) {
                if (!((j_9590006 < (formatstr_9575019 != null ? formatstr_9575019.length : 0)) && !((ConstSet35[formatstr_9575019[chckIndx(j_9590006, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]] != undefined)))) break L9;
                  if ((ConstSet36[formatstr_9575019[chckIndx(j_9590006, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]] != undefined)) {
                  F.line = 2662;
                  k_9590008 = subInt(addInt(mulInt(k_9590008, 10), formatstr_9575019[chckIndx(j_9590006, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]), 48);
                  if ((is_number_9590017 == 0)) {
                  F.line = 2663;
                  is_number_9590017 = 1;
                  }
                  
                  }
                  else {
                    F.line = 2665;
                    is_number_9590017 = -1;
                  }
                  
                  F.line = 2666;
                  j_9590006 = addInt(j_9590006, 1);
                }
            } while(false);
            if ((is_number_9590017 == 1)) {
            F.line = 2668;
            if (!(negative_9590009)) {
            Tmp10 = subInt(k_9590008, 1);
            }
            else {
            Tmp10 = subInt((a_9575021 != null ? a_9575021.length : 0), k_9590008);
            }
            
            var idx_9600025 = Tmp10;
              if ((idx_9600025 < 0)) Tmp11 = true; else {                Tmp11 = ((a_9575021 != null ? (a_9575021.length-1) : -1) < idx_9600025);              }            if (Tmp11) {
            F.line = 2669;
            invalid_format_string_9570046();
            }
            
            F.line = 2670;
            if (s_9575018[s_9575018_Idx] != null) { s_9575018[s_9575018_Idx] = (s_9575018[s_9575018_Idx]).concat(a_9575021[chckIndx(idx_9600025, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = a_9575021[chckIndx(idx_9600025, 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0].slice(); };
            }
            else {
              F.line = 2672;
              var x_9605006 = find_normalized_9570014(substr_341022(formatstr_9575019, addInt(i_9575025, 2), subInt(j_9590006, 1)), a_9575021);
                if (!(0 <= x_9605006)) Tmp12 = false; else {                  Tmp12 = (x_9605006 < (a_9575021 != null ? (a_9575021.length-1) : -1));                }              if (Tmp12) {
              F.line = 2673;
              if (s_9575018[s_9575018_Idx] != null) { s_9575018[s_9575018_Idx] = (s_9575018[s_9575018_Idx]).concat(a_9575021[chckIndx(addInt(x_9605006, 1), 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = a_9575021[chckIndx(addInt(x_9605006, 1), 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0].slice(); };
              }
              else {
                F.line = 2674;
              invalid_format_string_9570046();
              }
              
            }
            
            F.line = 2675;
            i_9575025 = addInt(j_9590006, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            F.line = 2677;
            var j_9610006 = addInt(i_9575025, 1);
            L13: do {
              F.line = 2678;
                L14: while (true) {
                  if (!(j_9610006 < (formatstr_9575019 != null ? formatstr_9575019.length : 0))) Tmp15 = false; else {                    Tmp15 = (ConstSet37[formatstr_9575019[chckIndx(j_9610006, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]] != undefined);                  }                if (!Tmp15) break L14;
                  F.line = 2678;
                  j_9610006 = addInt(j_9610006, 1);
                }
            } while(false);
            F.line = 2679;
            var x_9615013 = find_normalized_9570014(substr_341022(formatstr_9575019, addInt(i_9575025, 1), subInt(j_9610006, 1)), a_9575021);
              if (!(0 <= x_9615013)) Tmp16 = false; else {                Tmp16 = (x_9615013 < (a_9575021 != null ? (a_9575021.length-1) : -1));              }            if (Tmp16) {
            F.line = 2680;
            if (s_9575018[s_9575018_Idx] != null) { s_9575018[s_9575018_Idx] = (s_9575018[s_9575018_Idx]).concat(a_9575021[chckIndx(addInt(x_9615013, 1), 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = a_9575021[chckIndx(addInt(x_9615013, 1), 0, (a_9575021 != null ? a_9575021.length : 0)+0-1)-0].slice(); };
            }
            else {
              F.line = 2681;
            invalid_format_string_9570046();
            }
            
            F.line = 2682;
            i_9575025 = j_9610006;
            break;
          default: 
            F.line = 2684;
            invalid_format_string_9570046();
            break;
          }
          }
          else {
            F.line = 2686;
            if (s_9575018[s_9575018_Idx] != null) { addChar(s_9575018[s_9575018_Idx], formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]); } else { s_9575018[s_9575018_Idx] = [formatstr_9575019[chckIndx(i_9575025, 0, (formatstr_9575019 != null ? formatstr_9575019.length : 0)+0-1)-0]]; };
            F.line = 2687;
            i_9575025 = addInt(i_9575025, 1);
          }
          
        }
    } while(false);
  framePtr = F.prev;

  
}
function nsuFormatVarargs(formatstr_9620094, a_9620096) {
  var result_9620097 = [null];

  var F={procname:"strutils.format",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 2752;
    result_9620097[0] = nimCopy(null, mnewString(0), NTI112);
    F.line = 2753;
    nsuAddf(result_9620097, 0, formatstr_9620094, a_9620096);
  framePtr = F.prev;

  return result_9620097[0];

}
function status_14410141(self_14410143) {
  var result_14410144 = null;

  var F={procname:"game_logic.status",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 148;
    var top_line_14410145 = [];
    L1: do {
      F.line = 149;
      var i_14410154 = 0;
      F.line = 77;
      var res_15445338 = 1;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445338 <= self_14410143.size)) break L3;
            F.line = 149;
            i_14410154 = res_15445338;
            F.line = 150;
            F.line = 150;
            var fmt_res_14410155 = [mnewString(0)];
            F.line = 150;
            if (fmt_res_14410155[0] != null) { fmt_res_14410155[0] = (fmt_res_14410155[0]).concat(makeNimstrLit("  ")); } else { fmt_res_14410155[0] = makeNimstrLit("  "); };
            F.line = 150;
            format_value_14315001(fmt_res_14410155, 0, i_14410154, []);
            if (top_line_14410145 != null) { top_line_14410145 = (top_line_14410145).concat(fmt_res_14410155[0]); } else { top_line_14410145 = fmt_res_14410155[0].slice(); };
            F.line = 80;
            res_15445338 = addInt(res_15445338, 1);
          }
      } while(false);
    } while(false);
    F.line = 151;
    rawEcho(top_line_14410145);
    L4: do {
      F.line = 152;
      var y_14415020 = 0;
      F.line = 66;
      var colontmp__15445351 = 0;
      F.line = 152;
      colontmp__15445351 = subInt(self_14410143.size, 1);
      F.line = 77;
      var res_15445352 = 0;
      L5: do {
        F.line = 78;
          L6: while (true) {
          if (!(res_15445352 <= colontmp__15445351)) break L6;
            F.line = 152;
            y_14415020 = res_15445352;
            F.line = 153;
            var line_14415021 = cstrToNimstr((addInt(y_14415020, 1))+"");
            L7: do {
              F.line = 154;
              var x_14415030 = 0;
              F.line = 66;
              var colontmp__15445345 = 0;
              F.line = 154;
              colontmp__15445345 = subInt(self_14410143.size, 1);
              F.line = 77;
              var res_15445346 = 0;
              L8: do {
                F.line = 78;
                  L9: while (true) {
                  if (!(res_15445346 <= colontmp__15445345)) break L9;
                    F.line = 154;
                    x_14415030 = res_15445346;
                    F.line = 155;
                    if (line_14415021 != null) { line_14415021 = (line_14415021).concat(nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_14306058[chckIndx(self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0][chckIndx(y_14415020, 0, (self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0] != null ? self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0].length : 0)+0-1)-0], 0, (desc_14306058 != null ? desc_14306058.length : 0)+0-1)-0], NTI112)])); } else { line_14415021 = nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_14306058[chckIndx(self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0][chckIndx(y_14415020, 0, (self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0] != null ? self_14410143.field[chckIndx(x_14415030, 0, (self_14410143.field != null ? self_14410143.field.length : 0)+0-1)-0].length : 0)+0-1)-0], 0, (desc_14306058 != null ? desc_14306058.length : 0)+0-1)-0], NTI112)]).slice(); };
                    F.line = 80;
                    res_15445346 = addInt(res_15445346, 1);
                  }
              } while(false);
            } while(false);
            F.line = 156;
            rawEcho(line_14415021);
            F.line = 80;
            res_15445352 = addInt(res_15445352, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_14410144;

}
function is_over_14270018(self_14270020) {
  var result_14270021 = false;

  var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 289;
    result_14270021 = !((self_14270020.winner_player_number == 0));
  framePtr = F.prev;

  return result_14270021;

}
function is_over_14275014(self_14270020) {
  var result_14275016 = false;

  var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 288;
    result_14275016 = is_over_14270018(self_14270020);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14275016;

}
function status_14226113(self_14226115) {
  var result_14275020 = null;

  var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (is_over_14275014(self_14226115)) {
    F.line = 298;
    result_14275020 = nimCopy(null, makeNimstrLit("game is over"), NTI112);
    break BeforeRet;
    }
    else {
      F.line = 300;
      result_14275020 = nimCopy(null, makeNimstrLit("game is active"), NTI112);
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_14275020;

}
function status_14226116(self_14226115) {
  var result_14275020 = null;

  var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 510;
    chckNilDisp(self_14226115);
    if (isObj(self_14226115.m_type, NTI14306020)) {
    F.line = 178;
    result_14275020 = status_14410141(self_14226115);
    break BeforeRet;
    }
    else {
    if (isObj(self_14226115.m_type, NTI14226047)) {
    F.line = 178;
    result_14275020 = status_14226113(self_14226115);
    break BeforeRet;
    }
    else {
    if (isObj(self_14226115.m_type, NTI14226047)) {
    F.line = 178;
    result_14275020 = status_14226113(self_14226115);
    break BeforeRet;
    }
    }}
  } while (false);
  framePtr = F.prev;

  return result_14275020;

}
function display_14226118(self_14226120, msg_14226121) {
  var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 188;
    rawEcho(msg_14226121);
  framePtr = F.prev;

  
}
function display_14226140(self_14226120, msg_14226121) {
  var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 187;
    display_14226118(self_14226120, msg_14226121);
  framePtr = F.prev;

  
}
function get_lines_14330096(self_14330098) {
                    var Tmp7;
                    var Tmp8;
                    var Tmp9;
                    var Tmp10;

  var result_14330101 = null;

  var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 68;
    var s_14330102 = subInt(self_14330098.size, 1);
    F.line = 69;
    var v_line_14330104 = null;
    F.line = 70;
    var h_line_14330106 = null;
    F.line = 71;
    var s_line1_14330108 = null;
    F.line = 72;
    var s_line2_14330110 = null;
    F.line = 73;
    var s_line3_14330112 = null;
    F.line = 74;
    var s_line4_14330114 = null;
    L1: do {
      F.line = 75;
      var i_14330123 = 0;
      F.line = 77;
      var res_15445387 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445387 <= s_14330102)) break L3;
            F.line = 75;
            i_14330123 = res_15445387;
            F.line = 76;
            v_line_14330104 = nimCopy(null, [], NTI14330138);
            F.line = 77;
            h_line_14330106 = nimCopy(null, [], NTI14330153);
            F.line = 78;
            s_line1_14330108 = nimCopy(null, [], NTI14330168);
            F.line = 79;
            s_line2_14330110 = nimCopy(null, [], NTI14330183);
            F.line = 80;
            s_line3_14330112 = nimCopy(null, [], NTI14330198);
            F.line = 81;
            s_line4_14330114 = nimCopy(null, [], NTI14330213);
            L4: do {
              F.line = 82;
              var j_14330222 = 0;
              F.line = 77;
              var res_15445382 = 0;
              L5: do {
                F.line = 78;
                  L6: while (true) {
                  if (!(res_15445382 <= s_14330102)) break L6;
                    F.line = 82;
                    j_14330222 = res_15445382;
                    F.line = 84;
                    if (v_line_14330104 != null) { v_line_14330104.push(self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0][chckIndx(j_14330222, 0, (self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0] != null ? self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0].length : 0)+0-1)-0]); } else { v_line_14330104 = [self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0][chckIndx(j_14330222, 0, (self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0] != null ? self_14330098.field[chckIndx(i_14330123, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0].length : 0)+0-1)-0]]; };
                    F.line = 86;
                    if (h_line_14330106 != null) { h_line_14330106.push(self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0][chckIndx(i_14330123, 0, (self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0] != null ? self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0].length : 0)+0-1)-0]); } else { h_line_14330106 = [self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0][chckIndx(i_14330123, 0, (self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0] != null ? self_14330098.field[chckIndx(j_14330222, 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0].length : 0)+0-1)-0]]; };
                    if ((addInt(i_14330123, j_14330222) <= s_14330102)) {
                    F.line = 89;
                    if (s_line1_14330108 != null) { s_line1_14330108.push((Tmp7 = self_14330098.field[chckIndx(addInt(i_14330123, j_14330222), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp7)[chckIndx(j_14330222, 0, (Tmp7 != null ? Tmp7.length : 0)+0-1)-0]); } else { s_line1_14330108 = [(Tmp7 = self_14330098.field[chckIndx(addInt(i_14330123, j_14330222), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp7)[chckIndx(j_14330222, 0, (Tmp7 != null ? Tmp7.length : 0)+0-1)-0]]; };
                    F.line = 90;
                    if (s_line2_14330110 != null) { s_line2_14330110.push((Tmp8 = self_14330098.field[chckIndx(addInt(i_14330123, j_14330222), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp8)[chckIndx(subInt(s_14330102, j_14330222), 0, (Tmp8 != null ? Tmp8.length : 0)+0-1)-0]); } else { s_line2_14330110 = [(Tmp8 = self_14330098.field[chckIndx(addInt(i_14330123, j_14330222), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp8)[chckIndx(subInt(s_14330102, j_14330222), 0, (Tmp8 != null ? Tmp8.length : 0)+0-1)-0]]; };
                    if ((0 < i_14330123)) {
                    F.line = 92;
                    if (s_line3_14330112 != null) { s_line3_14330112.push((Tmp9 = self_14330098.field[chckIndx(subInt(s_14330102, addInt(i_14330123, j_14330222)), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp9)[chckIndx(j_14330222, 0, (Tmp9 != null ? Tmp9.length : 0)+0-1)-0]); } else { s_line3_14330112 = [(Tmp9 = self_14330098.field[chckIndx(subInt(s_14330102, addInt(i_14330123, j_14330222)), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp9)[chckIndx(j_14330222, 0, (Tmp9 != null ? Tmp9.length : 0)+0-1)-0]]; };
                    F.line = 93;
                    if (s_line4_14330114 != null) { s_line4_14330114.push((Tmp10 = self_14330098.field[chckIndx(subInt(s_14330102, addInt(i_14330123, j_14330222)), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp10)[chckIndx(subInt(s_14330102, j_14330222), 0, (Tmp10 != null ? Tmp10.length : 0)+0-1)-0]); } else { s_line4_14330114 = [(Tmp10 = self_14330098.field[chckIndx(subInt(s_14330102, addInt(i_14330123, j_14330222)), 0, (self_14330098.field != null ? self_14330098.field.length : 0)+0-1)-0], Tmp10)[chckIndx(subInt(s_14330102, j_14330222), 0, (Tmp10 != null ? Tmp10.length : 0)+0-1)-0]]; };
                    }
                    
                    }
                    
                    F.line = 80;
                    res_15445382 = addInt(res_15445382, 1);
                  }
              } while(false);
            } while(false);
            if ((self_14330098.winCount <= (h_line_14330106 != null ? h_line_14330106.length : 0))) {
            F.line = 95;
            var Tmp11 = nimCopy(null, h_line_14330106, NTI14330105);
            if (result_14330101 != null) { result_14330101.push(Tmp11); } else { result_14330101 = [Tmp11]; };
            }
            
            if ((self_14330098.winCount <= (v_line_14330104 != null ? v_line_14330104.length : 0))) {
            F.line = 97;
            var Tmp12 = nimCopy(null, v_line_14330104, NTI14330103);
            if (result_14330101 != null) { result_14330101.push(Tmp12); } else { result_14330101 = [Tmp12]; };
            }
            
            if ((self_14330098.winCount <= (s_line1_14330108 != null ? s_line1_14330108.length : 0))) {
            F.line = 99;
            var Tmp13 = nimCopy(null, s_line1_14330108, NTI14330107);
            if (result_14330101 != null) { result_14330101.push(Tmp13); } else { result_14330101 = [Tmp13]; };
            }
            
            if ((self_14330098.winCount <= (s_line2_14330110 != null ? s_line2_14330110.length : 0))) {
            F.line = 101;
            var Tmp14 = nimCopy(null, s_line2_14330110, NTI14330109);
            if (result_14330101 != null) { result_14330101.push(Tmp14); } else { result_14330101 = [Tmp14]; };
            }
            
            if ((0 < i_14330123)) {
            if ((self_14330098.winCount <= (s_line3_14330112 != null ? s_line3_14330112.length : 0))) {
            F.line = 104;
            var Tmp15 = nimCopy(null, s_line3_14330112, NTI14330111);
            if (result_14330101 != null) { result_14330101.push(Tmp15); } else { result_14330101 = [Tmp15]; };
            }
            
            if ((self_14330098.winCount <= (s_line4_14330114 != null ? s_line4_14330114.length : 0))) {
            F.line = 106;
            var Tmp16 = nimCopy(null, s_line4_14330114, NTI14330113);
            if (result_14330101 != null) { result_14330101.push(Tmp16); } else { result_14330101 = [Tmp16]; };
            }
            
            }
            
            F.line = 80;
            res_15445387 = addInt(res_15445387, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_14330101;

}
function get_lines_14370026(self_14330098) {
  var result_14370028 = null;

  var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 67;
    result_14370028 = get_lines_14330096(self_14330098);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14370028;

}
function max_line_length_14370029(line_14370032) {
  var result_14370034 = {Field0: 0, Field1: 0};

  var F={procname:"game_logic.maxLineLength",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 112;
    result_14370034["Field1"] = line_14370032[chckIndx(0, 0, (line_14370032 != null ? line_14370032.length : 0)+0-1)-0];
    L1: do {
      F.line = 113;
      var field_14380214 = 0;
      F.line = 184;
      var i_15445394 = 0;
      F.line = 185;
      var l_15445395 = (line_14370032 != null ? line_14370032.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_15445394 < l_15445395)) break L3;
            F.line = 113;
            field_14380214 = line_14370032[chckIndx(i_15445394, 0, (line_14370032 != null ? line_14370032.length : 0)+0-1)-0];
            if (!((field_14380214 == 0))) {
            if ((field_14380214 == result_14370034["Field1"])) {
            F.line = 117;
            result_14370034["Field0"] = addInt(result_14370034["Field0"], 1);
            }
            else {
              F.line = 120;
              result_14370034["Field0"] = 1;
              F.line = 121;
              result_14370034["Field1"] = field_14380214;
            }
            
            }
            
            F.line = 188;
            i_15445394 = addInt(i_15445394, 1);
            if (!(((line_14370032 != null ? line_14370032.length : 0) == l_15445395))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_14370034;

}
function HEX2DHEX3D_14420008(x_14420012, x_14420012_Idx, y_14420013) {
  var F={procname:"-=.-=",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 2594;
    x_14420012[x_14420012_Idx] = (x_14420012[x_14420012_Idx] - y_14420013);
  framePtr = F.prev;

  
}
function scoring_14415122(self_14415124) {
  var result_14415125 = [0.0];

  var F={procname:"game_logic.scoring",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 169;
      var line_14415132 = null;
      F.line = 182;
      var colontmp__15445375 = null;
      F.line = 169;
      colontmp__15445375 = get_lines_14370026(self_14415124);
      F.line = 184;
      var i_15445377 = 0;
      F.line = 185;
      var l_15445378 = (colontmp__15445375 != null ? colontmp__15445375.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_15445377 < l_15445378)) break L3;
            F.line = 169;
            line_14415132 = colontmp__15445375[chckIndx(i_15445377, 0, (colontmp__15445375 != null ? colontmp__15445375.length : 0)+0-1)-0];
            F.line = 170;
            var max_len_14415133 = max_line_length_14370029(line_14415132);
            if ((self_14415124.winCount <= max_len_14415133["Field0"])) {
            if ((self_14415124.current_player_number == max_len_14415133["Field1"])) {
            F.line = 173;
            HEX2BHEX3D_9545021(result_14415125, 0, 1.0000000000000000e+06);
            }
            else {
              F.line = 175;
            HEX2DHEX3D_14420008(result_14415125, 0, 1.0000000000000000e+06);
            }
            
            }
            else {
              if ((1 < max_len_14415133["Field0"])) {
              if ((self_14415124.current_player_number == max_len_14415133["Field1"])) {
              F.line = 179;
              HEX2BHEX3D_9545021(result_14415125, 0, (1.0000000000000000e+03 * max_len_14415133["Field0"]));
              }
              else {
                F.line = 181;
              HEX2DHEX3D_14420008(result_14415125, 0, (1.0000000000000000e+03 * max_len_14415133["Field0"]));
              }
              
              }
              
            }
            
            F.line = 188;
            i_15445377 = addInt(i_15445377, 1);
            if (!(((colontmp__15445375 != null ? colontmp__15445375.length : 0) == l_15445378))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_14415125[0];

}
function scoring_14280017(self_14280019) {
  var result_14280020 = 0.0;

  var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 321;
    raiseException({message: makeNimstrLit("scoring() must be overridden (if used)"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  return result_14280020;

}
function scoring_14285015(self_14280019) {
  var result_14285017 = 0.0;

  var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 510;
    chckNilDisp(self_14280019);
    if (isObj(self_14280019.m_type, NTI14306020)) {
    F.line = 316;
    result_14285017 = scoring_14415122(self_14280019);
    break BeforeRet;
    }
    else {
    if (isObj(self_14280019.m_type, NTI14226047)) {
    F.line = 316;
    result_14285017 = scoring_14280017(self_14280019);
    break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_14285017;

}
function abs_75247(x_75249) {
    var Tmp1;

  var result_75250 = 0.0;

    if ((x_75249 < 0.0)) {
    Tmp1 = -(x_75249);
    }
    else {
    Tmp1 = x_75249;
    }
    
    result_75250 = Tmp1;

  return result_75250;

}
function get_state_14415052(self_14415054) {
  var result_14415055 = null;

  var F={procname:"game_logic.get_state",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 159;
      var y_14415064 = 0;
      F.line = 66;
      var colontmp__15445406 = 0;
      F.line = 159;
      colontmp__15445406 = subInt(self_14415054.size, 1);
      F.line = 77;
      var res_15445407 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445407 <= colontmp__15445406)) break L3;
            F.line = 159;
            y_14415064 = res_15445407;
            L4: do {
              F.line = 160;
              var x_14415073 = 0;
              F.line = 66;
              var colontmp__15445400 = 0;
              F.line = 160;
              colontmp__15445400 = subInt(self_14415054.size, 1);
              F.line = 77;
              var res_15445401 = 0;
              L5: do {
                F.line = 78;
                  L6: while (true) {
                  if (!(res_15445401 <= colontmp__15445400)) break L6;
                    F.line = 160;
                    x_14415073 = res_15445401;
                    F.line = 161;
                    if (result_14415055 != null) { result_14415055 = (result_14415055).concat(cstrToNimstr((self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0][chckIndx(y_14415064, 0, (self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0] != null ? self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0].length : 0)+0-1)-0])+"")); } else { result_14415055 = cstrToNimstr((self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0][chckIndx(y_14415064, 0, (self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0] != null ? self_14415054.field[chckIndx(x_14415073, 0, (self_14415054.field != null ? self_14415054.field.length : 0)+0-1)-0].length : 0)+0-1)-0])+"").slice(); };
                    F.line = 80;
                    res_15445401 = addInt(res_15445401, 1);
                  }
              } while(false);
            } while(false);
            F.line = 80;
            res_15445407 = addInt(res_15445407, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_14415055;

}
function get_state_14285018(self_14285020) {
  var result_14285021 = null;

  var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 330;
    raiseException({message: makeNimstrLit("get_state() must be overridden (if used)"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  return result_14285021;

}
function get_state_14290015(self_14285020) {
  var result_14290017 = null;

  var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 510;
    chckNilDisp(self_14285020);
    if (isObj(self_14285020.m_type, NTI14306020)) {
    F.line = 324;
    result_14290017 = get_state_14415052(self_14285020);
    break BeforeRet;
    }
    else {
    if (isObj(self_14285020.m_type, NTI14226047)) {
    F.line = 324;
    result_14290017 = get_state_14285018(self_14285020);
    break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_14290017;

}
function integer_out_of_range_error_700049() {
  var F={procname:"parseutils.integerOutOfRangeError",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 397;
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
  framePtr = F.prev;

  
}
function raw_parse_int_705201(s_705203, b_705205, b_705205_Idx, start_705206) {
      var Tmp1;
          var Tmp4;
      var Tmp7;

  var result_705208 = 0;

  var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 405;
    var sign_705209 = -1;
    F.line = 406;
    var i_705210 = start_705206;
    if ((i_705210 < (s_705203 != null ? s_705203.length : 0))) {
    if ((s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0] == 43)) {
    F.line = 408;
    i_705210 += 1;
    }
    else {
    if ((s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0] == 45)) {
    F.line = 410;
    i_705210 += 1;
    F.line = 411;
    sign_705209 = 1;
    }
    }
    }
    
      if (!(i_705210 < (s_705203 != null ? s_705203.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet38[s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    F.line = 413;
    b_705205[b_705205_Idx] = 0;
    L2: do {
      F.line = 414;
        L3: while (true) {
          if (!(i_705210 < (s_705203 != null ? s_705203.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet39[s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          F.line = 415;
          var c_715016 = (s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0] - 48);
          if ((Math.trunc((-9223372036854775808 + c_715016) / 10) <= b_705205[b_705205_Idx])) {
          F.line = 417;
          b_705205[b_705205_Idx] = ((b_705205[b_705205_Idx] * 10) - c_715016);
          }
          else {
            F.line = 419;
          integer_out_of_range_error_700049();
          }
          
          F.line = 420;
          i_705210 += 1;
          L5: do {
            F.line = 421;
              L6: while (true) {
              if (!((i_705210 < (s_705203 != null ? s_705203.length : 0)) && (s_705203[chckIndx(i_705210, 0, (s_705203 != null ? s_705203.length : 0)+0-1)-0] == 95))) break L6;
                F.line = 421;
                i_705210 += 1;
              }
          } while(false);
        }
    } while(false);
      if (!(sign_705209 == -1)) Tmp7 = false; else {        Tmp7 = (b_705205[b_705205_Idx] == -9223372036854775808);      }    if (Tmp7) {
    F.line = 423;
    integer_out_of_range_error_700049();
    }
    else {
      F.line = 425;
      b_705205[b_705205_Idx] = (b_705205[b_705205_Idx] * sign_705209);
      F.line = 426;
      result_705208 = (i_705210 - start_705206);
    }
    
    }
    
  framePtr = F.prev;

  return result_705208;

}
function npuParseBiggestInt(s_720203, number_720205, number_720205_Idx, start_720206) {
  var result_720208 = 0;

  var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 440;
    var res_720209 = [0];
    F.line = 443;
    result_720208 = raw_parse_int_705201(s_720203, res_720209, 0, start_720206);
    if (!((result_720208 == 0))) {
    F.line = 445;
    number_720205[number_720205_Idx] = res_720209[0];
    }
    
  framePtr = F.prev;

  return result_720208;

}
function npuParseInt(s_725016, number_725018, number_725018_Idx, start_725019) {
      var Tmp1;

  var result_725021 = 0;

  var F={procname:"parseutils.parseInt",prev:framePtr,filename:"parseutils.nim",line:0};
  framePtr = F;
    F.line = 458;
    var res_725022 = [0];
    F.line = 459;
    result_725021 = npuParseBiggestInt(s_725016, res_725022, 0, start_725019);
      if ((res_725022[0] < -2147483648)) Tmp1 = true; else {        Tmp1 = (2147483647 < res_725022[0]);      }    if (Tmp1) {
    F.line = 462;
    integer_out_of_range_error_700049();
    }
    
    if (!((result_725021 == 0))) {
    F.line = 464;
    number_725018[number_725018_Idx] = chckRange(res_725022[0], -2147483648, 2147483647);
    }
    
  framePtr = F.prev;

  return result_725021;

}
function nsuParseInt(s_9050419) {
      var Tmp1;

  var result_9050420 = [0];

  var F={procname:"strutils.parseInt",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1085;
    var l_9050422 = npuParseInt(s_9050419, result_9050420, 0, 0);
      if (!((l_9050422 == (s_9050419 != null ? s_9050419.length : 0)))) Tmp1 = true; else {        Tmp1 = (l_9050422 == 0);      }    if (Tmp1) {
    F.line = 1087;
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_9050419 || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_9050420[0];

}
function make_move_14330076(self_14330078, move_14330079) {
    var Tmp1;
    var Tmp2;
    var Tmp3;

  var result_14330080 = null;

  var F={procname:"game_logic.make_move",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 63;
    (Tmp3 = self_14330078.field[chckIndx(subInt(nsuParseInt((Tmp1 = nsuSplitChar(move_14330079, 46, -1), Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0]), 1), 0, (self_14330078.field != null ? self_14330078.field.length : 0)+0-1)-0], Tmp3)[chckIndx(subInt(nsuParseInt((Tmp2 = nsuSplitChar(move_14330079, 46, -1), Tmp2)[chckIndx(1, 0, (Tmp2 != null ? Tmp2.length : 0)+0-1)-0]), 1), 0, (Tmp3 != null ? Tmp3.length : 0)+0-1)-0] = self_14330078.current_player_number;
    F.line = 64;
    result_14330080 = nimCopy(null, (makeNimstrLit("set mark at ") || []).concat(move_14330079 || []), NTI112);
  framePtr = F.prev;

  return result_14330080;

}
function make_move_14265070(self_14265072, move_14265073) {
  var result_14265074 = null;

  var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 285;
    raiseException({message: makeNimstrLit("make_move() must be overridden"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  return result_14265074;

}
function make_move_14270015(self_14265072, move_14265073) {
  var result_14270017 = null;

  var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 510;
    chckNilDisp(self_14265072);
    if (isObj(self_14265072.m_type, NTI14306020)) {
    F.line = 277;
    result_14270017 = make_move_14330076(self_14265072, move_14265073);
    break BeforeRet;
    }
    else {
    if (isObj(self_14265072.m_type, NTI14226047)) {
    F.line = 277;
    result_14270017 = make_move_14265070(self_14265072, move_14265073);
    break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_14270017;

}
function HEX25HEX25_3856(x_3858, y_3859) {
  var result_3860 = 0;

  var F={procname:"system.%%",prev:framePtr,filename:"arithmetics.nim",line:0};
  framePtr = F;
    F.line = 470;
    result_3860 = (((x_3858 >>> 0) % (y_3859 >>> 0))|0);
  framePtr = F.prev;

  return result_3860;

}
function next_player_number_14265032(self_14265034) {
  var result_14265035 = 0;

  var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 265;
    result_14265035 = addInt(HEX25HEX25_3856(self_14265034.current_player_number, self_14265034.player_count), 1);
  framePtr = F.prev;

  return result_14265035;

}
function next_player_number_14265049(self_14265034) {
  var result_14265051 = 0;

  var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 264;
    result_14265051 = next_player_number_14265032(self_14265034);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14265051;

}
function finish_turn_14265052(self_14265054) {
  var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 274;
    self_14265054.current_player_number = next_player_number_14265049(self_14265054);
  framePtr = F.prev;

  
}
function finish_turn_14265068(self_14265054) {
  var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 269;
    finish_turn_14265052(self_14265054);
  framePtr = F.prev;

  
}
function restore_state_14415087(self_14415089, state_14415090) {
  var F={procname:"game_logic.restore_state",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    L1: do {
      F.line = 164;
      var y_14415099 = 0;
      F.line = 66;
      var colontmp__15445435 = 0;
      F.line = 164;
      colontmp__15445435 = subInt(self_14415089.size, 1);
      F.line = 77;
      var res_15445436 = 0;
      L2: do {
        F.line = 78;
          L3: while (true) {
          if (!(res_15445436 <= colontmp__15445435)) break L3;
            F.line = 164;
            y_14415099 = res_15445436;
            L4: do {
              F.line = 165;
              var x_14415108 = 0;
              F.line = 66;
              var colontmp__15445429 = 0;
              F.line = 165;
              colontmp__15445429 = subInt(self_14415089.size, 1);
              F.line = 77;
              var res_15445430 = 0;
              L5: do {
                F.line = 78;
                  L6: while (true) {
                  if (!(res_15445430 <= colontmp__15445429)) break L6;
                    F.line = 165;
                    x_14415108 = res_15445430;
                    F.line = 166;
                    self_14415089.field[chckIndx(x_14415108, 0, (self_14415089.field != null ? self_14415089.field.length : 0)+0-1)-0][chckIndx(y_14415099, 0, (self_14415089.field[chckIndx(x_14415108, 0, (self_14415089.field != null ? self_14415089.field.length : 0)+0-1)-0] != null ? self_14415089.field[chckIndx(x_14415108, 0, (self_14415089.field != null ? self_14415089.field.length : 0)+0-1)-0].length : 0)+0-1)-0] = nsuParseInt(nimCharToStr(state_14415090[chckIndx(addInt(mulInt(y_14415099, self_14415089.size), x_14415108), 0, (state_14415090 != null ? state_14415090.length : 0)+0-1)-0]));
                    F.line = 80;
                    res_15445430 = addInt(res_15445430, 1);
                  }
              } while(false);
            } while(false);
            F.line = 80;
            res_15445436 = addInt(res_15445436, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  
}
function restore_state_14290018(self_14290020, state_14290021) {
  var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 338;
    raiseException({message: makeNimstrLit("restore_state() must be overridden (if used)"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  
}
function restore_state_14295015(self_14290020, state_14290021) {
  var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 510;
    chckNilDisp(self_14290020);
    if (isObj(self_14290020.m_type, NTI14306020)) {
    F.line = 333;
    restore_state_14415087(self_14290020, state_14290021);
    }
    else {
    if (isObj(self_14290020.m_type, NTI14226047)) {
    F.line = 333;
    restore_state_14290018(self_14290020, state_14290021);
    }
    }
  framePtr = F.prev;

  
}
function negamax_core_14301029(game_14301032, game_14301032_Idx, ai_choice_14301034, ai_choice_14301034_Idx, depth_14301035, orig_depth_14301036, alpha_in_14301037, beta_in_14301038) {
      var Tmp1;
      var Tmp2;

  var result_14301039 = 0.0;

  var F={procname:"negamax.negamax_core",prev:framePtr,filename:"negamax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 112;
    var possible_moves_14301056 = [[]];
    F.line = 113;
    var starting_state_14301057 = null;
    F.line = 114;
    var move_alpha_14301058 = 0.0;
    F.line = 115;
    var alpha_14301059 = alpha_in_14301037;
    F.line = 116;
    var beta_14301060 = beta_in_14301038;
    F.line = 119;
    set_possible_moves_14226111(game_14301032[game_14301032_Idx], possible_moves_14301056, 0);
      if ((depth_14301035 == 0)) Tmp2 = true; else {        Tmp2 = is_over_14275014(game_14301032[game_14301032_Idx]);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = ((possible_moves_14301056[0] != null ? possible_moves_14301056[0].length : 0) == 0);      }    if (Tmp1) {
    F.line = 124;
    var score_14301067 = scoring_14285015(game_14301032[game_14301032_Idx]);
    if ((score_14301067 == 0.0)) {
    F.line = 127;
    result_14301039 = score_14301067;
    break BeforeRet;
    }
    else {
      F.line = 129;
      result_14301039 = (score_14301067 - (((1.0000000000000000e-02 * depth_14301035) * abs_75247(score_14301067)) / score_14301067));
      break BeforeRet;
    }
    
    }
    
    F.line = 133;
    starting_state_14301057 = nimCopy(null, get_state_14290015(game_14301032[game_14301032_Idx]), NTI112);
    F.line = 138;
    var best_move_14301068 = nimCopy(null, possible_moves_14301056[0][chckIndx(0, 0, (possible_moves_14301056[0] != null ? possible_moves_14301056[0].length : 0)+0-1)-0], NTI112);
    F.line = 139;
    var best_value_14301069 = -Infinity;
    L3: do {
      F.line = 141;
      var move_14301076 = null;
      F.line = 184;
      var i_15445369 = 0;
      F.line = 185;
      var l_15445370 = (possible_moves_14301056[0] != null ? possible_moves_14301056[0].length : 0);
      L4: do {
        F.line = 186;
          L5: while (true) {
          if (!(i_15445369 < l_15445370)) break L5;
            F.line = 141;
            move_14301076 = possible_moves_14301056[0][chckIndx(i_15445369, 0, (possible_moves_14301056[0] != null ? possible_moves_14301056[0].length : 0)+0-1)-0];
            F.line = 145;
            make_move_14270015(game_14301032[game_14301032_Idx], move_14301076);
            F.line = 146;
            finish_turn_14265068(game_14301032[game_14301032_Idx]);
            F.line = 150;
            move_alpha_14301058 = -(negamax_core_14301029(game_14301032, game_14301032_Idx, ai_choice_14301034, ai_choice_14301034_Idx, subInt(depth_14301035, 1), orig_depth_14301036, -(beta_14301060), -(alpha_14301059)));
            F.line = 159;
            restore_state_14295015(game_14301032[game_14301032_Idx], starting_state_14301057);
            if ((best_value_14301069 < move_alpha_14301058)) {
            F.line = 164;
            best_value_14301069 = move_alpha_14301058;
            F.line = 165;
            best_move_14301068 = nimCopy(null, move_14301076, NTI112);
            }
            
            if ((alpha_14301059 < move_alpha_14301058)) {
            F.line = 167;
            alpha_14301059 = move_alpha_14301058;
            if ((depth_14301035 == orig_depth_14301036)) {
            F.line = 169;
            ai_choice_14301034[ai_choice_14301034_Idx] = nimCopy(null, best_move_14301068, NTI112);
            }
            
            if ((beta_14301060 <= alpha_14301059)) {
            F.line = 171;
            break L3;
            }
            
            }
            
            F.line = 188;
            i_15445369 = addInt(i_15445369, 1);
            if (!(((possible_moves_14301056[0] != null ? possible_moves_14301056[0].length : 0) == l_15445370))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 173;
    result_14301039 = best_value_14301069;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14301039;

}
function negamax_14305014(game_14305017, game_14305017_Idx, depth_14305018) {
  var result_14305019 = null;

  var F={procname:"negamax.negamax",prev:framePtr,filename:"negamax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 188;
    var alpha_14305020 = 0.0;
    F.line = 189;
    var beta_14305021 = 0.0;
    F.line = 190;
    var ai_choice_14305022 = [null];
    F.line = 191;
    var possible_moves_14305039 = [[]];
    F.line = 193;
    alpha_14305020 = -Infinity;
    F.line = 194;
    beta_14305021 = Infinity;
    F.line = 198;
    set_possible_moves_14226111(game_14305017[game_14305017_Idx], possible_moves_14305039, 0);
    if (((possible_moves_14305039[0] != null ? possible_moves_14305039[0].length : 0) == 0)) {
    F.line = 200;
    result_14305019 = nimCopy(null, [], NTI112);
    break BeforeRet;
    }
    
    F.line = 201;
    ai_choice_14305022[0] = nimCopy(null, possible_moves_14305039[0][chckIndx(0, 0, (possible_moves_14305039[0] != null ? possible_moves_14305039[0].length : 0)+0-1)-0], NTI112);
    F.line = 203;
    alpha_14305020 = negamax_core_14301029(game_14305017, game_14305017_Idx, ai_choice_14305022, 0, depth_14305018, depth_14305018, alpha_14305020, beta_14305021);
    F.line = 211;
    result_14305019 = nimCopy(null, ai_choice_14305022[0], NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14305019;

}
function get_move_14305065(self_14305067, game_14305068) {
  var result_14305069 = null;

  var F={procname:"negamax.get_move",prev:framePtr,filename:"negamax.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 224;
    var new_game_14305070 = [null];
    F.line = 226;
    new_game_14305070[0] = game_14305068;
    F.line = 229;
    var choice_14305202 = negamax_14305014(new_game_14305070, 0, self_14305067.depth);
    F.line = 230;
    result_14305069 = nimCopy(null, choice_14305202, NTI112);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14305069;

}
function nsuIndent(s_9245016, count_9245017, padding_9245018) {
            var Tmp6;

  var result_9245019 = null;

  var F={procname:"strutils.indent",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    F.line = 1418;
    result_9245019 = nimCopy(null, [], NTI112);
    F.line = 1419;
    var i_9245021 = 0;
    L1: do {
      F.line = 1420;
      var line_9245022 = null;
      F.line = 646;
      var first_15445468 = 0;
      F.line = 647;
      var last_15445469 = 0;
      F.line = 648;
      var eolpos_15445470 = 0;
      L2: do {
        F.line = 649;
          L3: while (true) {
          if (!true) break L3;
            L4: do {
              F.line = 650;
                L5: while (true) {
                if (!((last_15445469 < (s_9245016 != null ? s_9245016.length : 0)) && !((ConstSet40[s_9245016[chckIndx(last_15445469, 0, (s_9245016 != null ? s_9245016.length : 0)+0-1)-0]] != undefined)))) break L5;
                  F.line = 650;
                  last_15445469 = addInt(last_15445469, 1);
                }
            } while(false);
            F.line = 652;
            eolpos_15445470 = last_15445469;
            if ((last_15445469 < (s_9245016 != null ? s_9245016.length : 0))) {
            if ((s_9245016[chckIndx(last_15445469, 0, (s_9245016 != null ? s_9245016.length : 0)+0-1)-0] == 10)) {
            F.line = 654;
            last_15445469 = addInt(last_15445469, 1);
            }
            else {
            if ((s_9245016[chckIndx(last_15445469, 0, (s_9245016 != null ? s_9245016.length : 0)+0-1)-0] == 13)) {
            F.line = 656;
            last_15445469 = addInt(last_15445469, 1);
            if (((last_15445469 < (s_9245016 != null ? s_9245016.length : 0)) && (s_9245016[chckIndx(last_15445469, 0, (s_9245016 != null ? s_9245016.length : 0)+0-1)-0] == 10))) {
            F.line = 657;
            last_15445469 = addInt(last_15445469, 1);
            }
            
            }
            }
            }
            
            F.line = 1420;
            if (false) {
            Tmp6 = subInt(last_15445469, 1);
            }
            else {
            Tmp6 = subInt(eolpos_15445470, 1);
            }
            
            line_9245022 = substr_341022(s_9245016, first_15445468, Tmp6);
            if (!((i_9245021 == 0))) {
            F.line = 1422;
            if (result_9245019 != null) { result_9245019 = (result_9245019).concat(makeNimstrLit("\x0A")); } else { result_9245019 = makeNimstrLit("\x0A"); };
            }
            
            L7: do {
              F.line = 1423;
              var j_9250009 = 0;
              F.line = 66;
              var colontmp__15445460 = 0;
              F.line = 1423;
              colontmp__15445460 = count_9245017;
              F.line = 77;
              var res_15445461 = 1;
              L8: do {
                F.line = 78;
                  L9: while (true) {
                  if (!(res_15445461 <= colontmp__15445460)) break L9;
                    F.line = 1423;
                    j_9250009 = res_15445461;
                    F.line = 1424;
                    if (result_9245019 != null) { result_9245019 = (result_9245019).concat(padding_9245018); } else { result_9245019 = padding_9245018.slice(); };
                    F.line = 80;
                    res_15445461 = addInt(res_15445461, 1);
                  }
              } while(false);
            } while(false);
            F.line = 1425;
            if (result_9245019 != null) { result_9245019 = (result_9245019).concat(line_9245022); } else { result_9245019 = line_9245022.slice(); };
            F.line = 1426;
            i_9245021 = addInt(i_9245021, 1);
            if ((eolpos_15445470 == last_15445469)) {
            F.line = 663;
            break L2;
            }
            
            F.line = 665;
            first_15445468 = last_15445469;
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_9245019;

}
function len_14230140(t_14230145) {
  var result_14230146 = 0;

  var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
  framePtr = F;
    F.line = 1467;
    result_14230146 = t_14230145.counter;
  framePtr = F.prev;

  return result_14230146;

}
function find_14255009(a_14255013, item_14255014) {
  var result_14255015 = 0;

  var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 1751;
      var i_14255021 = null;
      F.line = 3;
      var i_15445475 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_15445475 < (a_14255013 != null ? a_14255013.length : 0))) break L3;
            F.line = 1751;
            i_14255021 = a_14255013[chckIndx(i_15445475, 0, (a_14255013 != null ? a_14255013.length : 0)+0-1)-0];
            if (eqStrings(i_14255021, item_14255014)) {
            F.line = 1752;
            break BeforeRet;
            }
            
            F.line = 1753;
            result_14255015 = addInt(result_14255015, 1);
            F.line = 6;
            i_15445475 = addInt(i_15445475, 1);
          }
      } while(false);
    } while(false);
    F.line = 1754;
    result_14255015 = -1;
  } while (false);
  framePtr = F.prev;

  return result_14255015;

}
function contains_14255002(a_14255006, item_14255007) {
  var result_14255008 = false;

  var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1768;
    result_14255008 = (0 <= find_14255009(a_14255006, item_14255007));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14255008;

}
function get_move_14226142(self_14226144, game_14226145) {
  var result_14226146 = null;

  var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 192;
    var move_list_14226163 = [[]];
    F.line = 193;
    var descriptive_move_list_14226171 = [{data: null, counter: 0, first: 0, last: 0}];
    F.line = 194;
    var compact_description_14226172 = false;
    F.line = 195;
    rawEcho([]);
    F.line = 196;
    rawEcho(makeNimstrLit("   Status:"));
    F.line = 197;
    rawEcho(nsuIndent(status_14226116(game_14226145), 2, makeNimstrLit("   ")));
    F.line = 198;
    set_possible_moves_14226111(game_14226145, move_list_14226163, 0);
    if ((0 < (move_list_14226163[0] != null ? move_list_14226163[0].length : 0))) {
    F.line = 200;
    compact_description_14226172 = true;
    }
    else {
      F.line = 202;
      set_possible_moves_14226103(game_14226145, descriptive_move_list_14226171[0]);
      L1: do {
        F.line = 203;
        var key_14240214 = null;
        F.line = 203;
        var value_14240215 = null;
        F.line = 1672;
        var l_15445444 = len_14230140(descriptive_move_list_14226171[0]);
        if ((0 < descriptive_move_list_14226171[0].counter)) {
        F.line = 1251;
        var h_15445445 = descriptive_move_list_14226171[0].first;
        L2: do {
          F.line = 1252;
            L3: while (true) {
            if (!(0 <= h_15445445)) break L3;
              F.line = 1253;
              var nxt_15445447 = descriptive_move_list_14226171[0].data[chckIndx(h_15445445, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field1;
              if (is_filled_9737018(descriptive_move_list_14226171[0].data[chckIndx(h_15445445, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field0)) {
              F.line = 203;
              key_14240214 = descriptive_move_list_14226171[0].data[chckIndx(h_15445445, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field2;
              F.line = 1674;
              value_14240215 = descriptive_move_list_14226171[0].data[chckIndx(h_15445445, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field3;
              F.line = 204;
              var Tmp4 = nimCopy(null, key_14240214, NTI112);
              if (move_list_14226163[0] != null) { move_list_14226163[0].push(Tmp4); } else { move_list_14226163[0] = [Tmp4]; };
              if (!((len_14230140(descriptive_move_list_14226171[0]) == l_15445444))) {
              F.line = 1675;
              failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1256;
              h_15445445 = nxt_15445447;
            }
        } while(false);
        }
        
      } while(false);
    }
    
    L5: do {
      F.line = 205;
        L6: while (true) {
        if (!true) break L6;
          F.line = 206;
          rawEcho(makeNimstrLit("   Possible moves:"));
          if (compact_description_14226172) {
          F.line = 208;
          var disp_14240227 = makeNimstrLit("      ");
          L7: do {
            F.line = 209;
            var key_14250214 = null;
            F.line = 184;
            var i_15445450 = 0;
            F.line = 185;
            var l_15445451 = (move_list_14226163[0] != null ? move_list_14226163[0].length : 0);
            L8: do {
              F.line = 186;
                L9: while (true) {
                if (!(i_15445450 < l_15445451)) break L9;
                  F.line = 209;
                  key_14250214 = move_list_14226163[0][chckIndx(i_15445450, 0, (move_list_14226163[0] != null ? move_list_14226163[0].length : 0)+0-1)-0];
                  F.line = 210;
                  if (disp_14240227 != null) { disp_14240227 = (disp_14240227).concat(nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_14250214, NTI112)])); } else { disp_14240227 = nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_14250214, NTI112)]).slice(); };
                  F.line = 188;
                  i_15445450 = addInt(i_15445450, 1);
                  if (!(((move_list_14226163[0] != null ? move_list_14226163[0].length : 0) == l_15445451))) {
                  F.line = 189;
                  failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while(false);
          } while(false);
          F.line = 211;
          rawEcho(disp_14240227);
          }
          else {
            L10: do {
              F.line = 213;
              var key_14250230 = null;
              F.line = 213;
              var value_14250231 = null;
              F.line = 1672;
              var l_15445454 = len_14230140(descriptive_move_list_14226171[0]);
              if ((0 < descriptive_move_list_14226171[0].counter)) {
              F.line = 1251;
              var h_15445455 = descriptive_move_list_14226171[0].first;
              L11: do {
                F.line = 1252;
                  L12: while (true) {
                  if (!(0 <= h_15445455)) break L12;
                    F.line = 1253;
                    var nxt_15445457 = descriptive_move_list_14226171[0].data[chckIndx(h_15445455, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field1;
                    if (is_filled_9737018(descriptive_move_list_14226171[0].data[chckIndx(h_15445455, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field0)) {
                    F.line = 213;
                    key_14250230 = descriptive_move_list_14226171[0].data[chckIndx(h_15445455, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field2;
                    F.line = 1674;
                    value_14250231 = descriptive_move_list_14226171[0].data[chckIndx(h_15445455, 0, (descriptive_move_list_14226171[0].data != null ? descriptive_move_list_14226171[0].data.length : 0)+0-1)-0].Field3;
                    F.line = 214;
                    rawEcho((makeNimstrLit("      ") || []).concat(nsuFormatVarargs(makeNimstrLit("[$key]: $value"), [makeNimstrLit("key"), nimCopy(null, key_14250230, NTI112), makeNimstrLit("value"), nimCopy(null, value_14250231, NTI112)]) || []));
                    if (!((len_14230140(descriptive_move_list_14226171[0]) == l_15445454))) {
                    F.line = 1675;
                    failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/pure/collections/tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    F.line = 1256;
                    h_15445455 = nxt_15445457;
                  }
              } while(false);
              }
              
            } while(false);
          }
          
          F.line = 215;
          rawEcho(makeNimstrLit("   Enter move (or \'quit\'): "));
          F.line = 216;
          var response_14250250 = null;
          F.line = 219;
          response_14250250 = nimCopy(null, makeNimstrLit("When compiling for Javascript, you cannot use this procedure."), NTI112);
          if (contains_14255002(move_list_14226163[0], response_14250250)) {
          F.line = 223;
          result_14226146 = nimCopy(null, response_14250250, NTI112);
          break BeforeRet;
          }
          
          if (eqStrings(response_14250250, makeNimstrLit("quit"))) {
          F.line = 225;
          result_14226146 = nimCopy(null, [], NTI112);
          break BeforeRet;
          }
          
          F.line = 226;
          rawEcho(makeNimstrLit("   BAD ENTRY. Try again."));
        }
    } while(false);
  } while (false);
  framePtr = F.prev;

  return result_14226146;

}
function get_move_14255090(self_14226144, game_14226145) {
  var result_14255092 = null;

  var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 510;
    chckNilDisp(self_14226144);
    if (isObj(self_14226144.m_type, NTI14305062)) {
    F.line = 191;
    result_14255092 = get_move_14305065(self_14226144, game_14226145);
    break BeforeRet;
    }
    else {
    if (isObj(self_14226144.m_type, NTI14226054)) {
    F.line = 191;
    result_14255092 = get_move_14226142(self_14226144, game_14226145);
    break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_14255092;

}
function current_player_14260015(self_14260017) {
  var result_14260018 = null;

  var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 248;
    result_14260018 = self_14260017.players[chckIndx(subInt(self_14260017.current_player_number, 1), 0, (self_14260017.players != null ? self_14260017.players.length : 0)+0-1)-0];
  framePtr = F.prev;

  return result_14260018;

}
function current_player_14260047(self_14260017) {
  var result_14260049 = null;

  var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 247;
    result_14260049 = current_player_14260015(self_14260017);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14260049;

}
function winning_player_14260050(self_14260052) {
  var result_14260053 = null;

  var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((0 < self_14260052.winner_player_number)) {
    F.line = 257;
    result_14260053 = self_14260052.players[chckIndx(subInt(self_14260052.winner_player_number, 1), 0, (self_14260052.players != null ? self_14260052.players.length : 0)+0-1)-0];
    break BeforeRet;
    }
    else {
    if ((self_14260052.winner_player_number == 0)) {
    F.line = 259;
    result_14260053 = {name: makeNimstrLit("NO WINNER YET"), m_type: NTI14226054};
    break BeforeRet;
    }
    else {
      F.line = 261;
      result_14260053 = {name: makeNimstrLit("STALEMATE OR TIE"), m_type: NTI14226054};
      break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_14260053;

}
function winning_player_14265029(self_14260052) {
  var result_14265031 = null;

  var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 252;
    result_14265031 = winning_player_14260050(self_14260052);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14265031;

}
function determine_winner_14275034(self_14275036) {
  var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 313;
    raiseException({message: makeNimstrLit("determine_winner() must be overridden"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  
}
function determine_winner_14280015(self_14275036) {
  var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 303;
    determine_winner_14275034(self_14275036);
  framePtr = F.prev;

  
}
function default_setup_14300017(self_14300019, players_14300021) {
  var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 361;
    self_14300019.players = nimCopy(null, players_14300021, NTI14300020);
    F.line = 362;
    self_14300019.player_count = (self_14300019.players != null ? self_14300019.players.length : 0);
    F.line = 363;
    self_14300019.current_player_number = 1;
    F.line = 364;
    self_14300019.winner_player_number = 0;
  framePtr = F.prev;

  
}
function default_setup_14300055(self_14300019, players_14300021) {
  var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 348;
    default_setup_14300017(self_14300019, players_14300021);
  framePtr = F.prev;

  
}
function new_seq_14310054(len_14310057) {
  var result_14310059 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_14310059 = new Array(len_14310057); for (var i=0;i<len_14310057;++i) {result_14310059[i]=null;}  framePtr = F.prev;

  return result_14310059;

}
function new_seq_14310011(len_14310014) {
  var result_14310016 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 643;
    result_14310016 = new Array(len_14310014); for (var i=0;i<len_14310014;++i) {result_14310016[i]=0;}  framePtr = F.prev;

  return result_14310016;

}
function reset_field_14306129(self_14306131) {
  var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 42;
    F.line = 985;
    var resultHEX60gensym14306132_14310095 = new_seq_14310054(chckRange(self_14306131.size, 0, 2147483647));
    L1: do {
      F.line = 986;
      var iHEX60gensym14306133_14310103 = 0;
      F.line = 106;
      var i_15445481 = 0;
      L2: do {
        F.line = 107;
          L3: while (true) {
          if (!(i_15445481 < self_14306131.size)) break L3;
            F.line = 986;
            iHEX60gensym14306133_14310103 = i_15445481;
            F.line = 42;
            resultHEX60gensym14306132_14310095[chckIndx(iHEX60gensym14306133_14310103, 0, (resultHEX60gensym14306132_14310095 != null ? resultHEX60gensym14306132_14310095.length : 0)+0-1)-0] = nimCopy(null, new_seq_14310011(chckRange(self_14306131.size, 0, 2147483647)), NTI14310015);
            F.line = 109;
            i_15445481 = addInt(i_15445481, 1);
          }
      } while(false);
    } while(false);
    self_14306131.field = nimCopy(null, resultHEX60gensym14306132_14310095, NTI14310058);
  framePtr = F.prev;

  
}
function reset_field_14310135(self_14306131) {
  var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 41;
    reset_field_14306129(self_14306131);
  framePtr = F.prev;

  
}
function new_14310141() {
  var result_14310145 = null;

  var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 848;
    var r_14310201 = null;
    F.line = 851;
    r_14310201 = {sum: new Int32Array(3), history: null};
    F.line = 852;
    result_14310145 = r_14310201;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14310145;

}
function reset_leaderboard_14310137(self_14310139) {
  var F={procname:"game_logic.resetLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 46;
    self_14310139.leaderboard = new_14310141();
  framePtr = F.prev;

  
}
function reset_leaderboard_14310249(self_14310139) {
  var F={procname:"game_logic.resetLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 45;
    reset_leaderboard_14310137(self_14310139);
  framePtr = F.prev;

  
}
function setup_14310251(self_14310253, players_14310255) {
  var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 49;
    default_setup_14300055(self_14310253, players_14310255);
    F.line = 50;
    reset_field_14310135(self_14310253);
    if ((self_14310253.leaderboard == null)) {
    F.line = 52;
    reset_leaderboard_14310249(self_14310253);
    }
    
  framePtr = F.prev;

  
}
function setup_14295017(self_14295019, players_14295021) {
  var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 345;
    raiseException({message: makeNimstrLit("setup() must be overridden"), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");
  framePtr = F.prev;

  
}
function setup_14300015(self_14295019, players_14295021) {
  var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 510;
    chckNilDisp(self_14295019);
    if (isObj(self_14295019.m_type, NTI14306020)) {
    F.line = 341;
    setup_14310251(self_14295019, players_14295021);
    }
    else {
    if (isObj(self_14295019.m_type, NTI14226047)) {
    F.line = 341;
    setup_14295017(self_14295019, players_14295021);
    }
    }
  framePtr = F.prev;

  
}
function play_14300057(self_14300059) {
  var result_14300061 = null;

  var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
    F.line = 370;
    result_14300061 = nimCopy(null, [], NTI14300076);
    F.line = 371;
    var move_14300077 = [];
    L1: do {
      F.line = 372;
        L2: while (true) {
        if (!!(is_over_14275014(self_14300059))) break L2;
          F.line = 373;
          display_14226140(current_player_14260047(self_14300059), makeNimstrLit("-----------------"));
          F.line = 374;
          display_14226140(current_player_14260047(self_14300059), nsuFormatVarargs(makeNimstrLit("$1\'s Turn"), [nimCopy(null, current_player_14260047(self_14300059).name, NTI112)]));
          F.line = 375;
          move_14300077 = nimCopy(null, get_move_14255090(current_player_14260047(self_14300059), self_14300059), NTI112);
          if (eqStrings(move_14300077, [])) {
          F.line = 377;
          break L1;
          }
          
          F.line = 378;
          display_14226140(current_player_14260047(self_14300059), []);
          F.line = 379;
          display_14226140(current_player_14260047(self_14300059), nsuFormatVarargs(makeNimstrLit("$1 chose \"$2\""), [nimCopy(null, current_player_14260047(self_14300059).name, NTI112), nimCopy(null, move_14300077, NTI112)]));
          F.line = 380;
          var Tmp3 = nimCopy(null, move_14300077, NTI112);
          if (result_14300061 != null) { result_14300061.push(Tmp3); } else { result_14300061 = [Tmp3]; };
          F.line = 381;
          display_14226140(current_player_14260047(self_14300059), []);
          F.line = 382;
          display_14226140(current_player_14260047(self_14300059), (makeNimstrLit("   ") || []).concat(make_move_14270015(self_14300059, move_14300077) || []));
          F.line = 383;
          determine_winner_14280015(self_14300059);
          if (is_over_14275014(self_14300059)) {
          F.line = 385;
          display_14226140(current_player_14260047(self_14300059), []);
          if ((self_14300059.winner_player_number == -1)) {
          F.line = 387;
          display_14226140(current_player_14260047(self_14300059), makeNimstrLit("STALEMATE."));
          }
          else {
            F.line = 389;
          display_14226140(current_player_14260047(self_14300059), nsuFormatVarargs(makeNimstrLit("WINNER IS $#"), [nimCopy(null, winning_player_14265029(self_14300059).name, NTI112)]));
          }
          
          F.line = 390;
          break L1;
          }
          
          F.line = 391;
          self_14300059.current_player_number = next_player_number_14265049(self_14300059);
        }
    } while(false);
  framePtr = F.prev;

  return result_14300061;

}
function play_14300127(self_14300059) {
  var result_14300129 = null;

  var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 367;
    result_14300129 = play_14300057(self_14300059);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14300129;

}
function get_leaderboard_14306076(self_14306078) {
  var result_14306079 = null;

  var F={procname:"game_logic.getLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 31;
    result_14306079 = self_14306078.leaderboard;
  framePtr = F.prev;

  return result_14306079;

}
function get_leaderboard_14306108(self_14306078) {
  var result_14306110 = null;

  var F={procname:"game_logic.getLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 31;
    result_14306110 = get_leaderboard_14306076(self_14306078);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14306110;

}
function set_default_14306111(self_14306113) {
  var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 35;
    self_14306113.name1 = nimCopy(null, makeNimstrLit("X"), NTI112);
    F.line = 36;
    self_14306113.name2 = nimCopy(null, makeNimstrLit("O"), NTI112);
    F.line = 37;
    self_14306113.size = 3;
    F.line = 38;
    self_14306113.winCount = 3;
  framePtr = F.prev;

  
}
function set_default_14306127(self_14306113) {
  var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 33;
    set_default_14306111(self_14306113);
  framePtr = F.prev;

  
}
function setup_14425030(self_14425032, s_14425033) {
    var Tmp1;

  var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 185;
    self_14425032.size = s_14425033.size;
    F.line = 186;
    if ((s_14425033.winCount == 0)) {
    Tmp1 = s_14425033.size;
    }
    else {
    Tmp1 = s_14425033.winCount;
    }
    
    self_14425032.winCount = Tmp1;
    if (s_14425033.ai) {
    F.line = 188;
    setup_14300015(self_14425032, [{name: nimCopy(null, s_14425033.name1, NTI112), m_type: NTI14226054}, {name: nimCopy(null, s_14425033.name2, NTI112), depth: 3, m_type: NTI14305062}]);
    }
    else {
      F.line = 190;
    setup_14300015(self_14425032, [{name: nimCopy(null, s_14425033.name1, NTI112), m_type: NTI14226054}, {name: nimCopy(null, s_14425033.name2, NTI112), m_type: NTI14226054}]);
    }
    
  framePtr = F.prev;

  
}
function setup_14425114(self_14425032, s_14425033) {
  var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 184;
    setup_14425030(self_14425032, s_14425033);
  framePtr = F.prev;

  
}
function play_on_cli_14425116(self_14425118) {
  var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    play_14300127(self_14425118);
  framePtr = F.prev;

  
}
function play_on_cli_14425132(self_14425118) {
  var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 192;
    play_on_cli_14425116(self_14425118);
  framePtr = F.prev;

  
}
function field_14425134(self_14425136) {
  var result_14425139 = null;

  var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 196;
    result_14425139 = nimCopy(null, self_14425136.field, NTI14306021);
  framePtr = F.prev;

  return result_14425139;

}
function field_14425153(self_14425136) {
  var result_14425155 = null;

  var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 195;
    result_14425155 = field_14425134(self_14425136);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14425155;

}
function size_14425156(self_14425158) {
  var result_14425159 = 0;

  var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 199;
    result_14425159 = self_14425158.size;
  framePtr = F.prev;

  return result_14425159;

}
function size_14425173(self_14425158) {
  var result_14425175 = 0;

  var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 198;
    result_14425175 = size_14425156(self_14425158);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14425175;

}
function win_count_14425176(self_14425178) {
  var result_14425179 = 0;

  var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 202;
    result_14425179 = self_14425178.winCount;
  framePtr = F.prev;

  return result_14425179;

}
function win_count_14425193(self_14425178) {
  var result_14425195 = 0;

  var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 201;
    result_14425195 = win_count_14425176(self_14425178);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14425195;

}
function get_player_name_14425196(self_14425198) {
    var Tmp1;

  var result_14425199 = null;

  var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 206;
    if ((current_player_14260047(self_14425198) == null)) {
    Tmp1 = makeNimstrLit("Game is not setup yet");
    }
    else {
    Tmp1 = current_player_14260047(self_14425198).name;
    }
    
    result_14425199 = nimCopy(null, Tmp1, NTI112);
  framePtr = F.prev;

  return result_14425199;

}
function get_player_name_14425221(self_14425198) {
  var result_14425223 = null;

  var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 205;
    result_14425223 = get_player_name_14425196(self_14425198);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14425223;

}
function all_14410017(s_14410021, pred_14410024) {
  var result_14410025 = false;

  var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 635;
      var i_14410056 = null;
      F.line = 3;
      var i_15445498 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_15445498 < (s_14410021 != null ? s_14410021.length : 0))) break L3;
            F.line = 635;
            i_14410056 = s_14410021[chckIndx(i_15445498, 0, (s_14410021 != null ? s_14410021.length : 0)+0-1)-0];
            if (!(pred_14410024(i_14410056))) {
            F.line = 637;
            result_14410025 = false;
            break BeforeRet;
            }
            
            F.line = 6;
            i_15445498 = addInt(i_15445498, 1);
          }
      } while(false);
    } while(false);
    F.line = 638;
    result_14410025 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14410025;

}
function all_14390022(s_14390026, pred_14390029) {
  var result_14390030 = false;

  var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    L1: do {
      F.line = 635;
      var i_14390036 = 0;
      F.line = 3;
      var i_15445502 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_15445502 < (s_14390026 != null ? s_14390026.length : 0))) break L3;
            F.line = 635;
            i_14390036 = s_14390026[chckIndx(i_15445502, 0, (s_14390026 != null ? s_14390026.length : 0)+0-1)-0];
            if (!(pred_14390029(i_14390036))) {
            F.line = 637;
            result_14390030 = false;
            break BeforeRet;
            }
            
            F.line = 6;
            i_15445502 = addInt(i_15445502, 1);
          }
      } while(false);
    } while(false);
    F.line = 638;
    result_14390030 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14390030;

}
function field_full_14385020(field_14385022) {
  var result_14385023 = false;

  var F={procname:"game_logic.fieldFull",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 125;
    result_14385023 = !((field_14385022 == 0));
  framePtr = F.prev;

  return result_14385023;

}
function line_full_14390014(line_14390017) {
  var result_14390018 = false;

  var F={procname:"game_logic.lineFull",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 128;
    result_14390018 = all_14390022(line_14390017, field_full_14385020);
  framePtr = F.prev;

  return result_14390018;

}
function determine_winner_14390093(self_14390095) {
  var F={procname:"game_logic.determine_winner",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (!((self_14390095.winner_player_number == 0))) {
    F.line = 132;
    break BeforeRet;
    }
    
    L1: do {
      F.line = 133;
      var line_14405214 = null;
      F.line = 182;
      var colontmp__15445492 = null;
      F.line = 133;
      colontmp__15445492 = get_lines_14370026(self_14390095);
      F.line = 184;
      var i_15445493 = 0;
      F.line = 185;
      var l_15445494 = (colontmp__15445492 != null ? colontmp__15445492.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_15445493 < l_15445494)) break L3;
            F.line = 133;
            line_14405214 = colontmp__15445492[chckIndx(i_15445493, 0, (colontmp__15445492 != null ? colontmp__15445492.length : 0)+0-1)-0];
            F.line = 135;
            var max_length_14405215 = max_line_length_14370029(line_14405214);
            if ((self_14390095.winCount <= max_length_14405215["Field0"])) {
            F.line = 137;
            self_14390095.winner_player_number = max_length_14405215["Field1"];
            F.line = 138;
            self_14390095.leaderboard.sum[chckIndx(self_14390095.winner_player_number, 0, (self_14390095.leaderboard.sum != null ? self_14390095.leaderboard.sum.length : 0)+0-1)-0] = addInt(self_14390095.leaderboard.sum[chckIndx(self_14390095.winner_player_number, 0, (self_14390095.leaderboard.sum != null ? self_14390095.leaderboard.sum.length : 0)+0-1)-0], 1);
            F.line = 139;
            var Tmp4 = nimCopy(null, chckRange(self_14390095.winner_player_number, 0, 2), NTI14306041);
            if (self_14390095.leaderboard.history != null) { self_14390095.leaderboard.history.push(Tmp4); } else { self_14390095.leaderboard.history = [Tmp4]; };
            F.line = 140;
            break BeforeRet;
            }
            
            F.line = 188;
            i_15445493 = addInt(i_15445493, 1);
            if (!(((colontmp__15445492 != null ? colontmp__15445492.length : 0) == l_15445494))) {
            F.line = 189;
            failed_assert_impl_102680(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.2.0/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (all_14410017(self_14390095.field, line_full_14390014)) {
    F.line = 143;
    self_14390095.winner_player_number = -1;
    F.line = 144;
    self_14390095.leaderboard.sum[chckIndx(0, 0, (self_14390095.leaderboard.sum != null ? self_14390095.leaderboard.sum.length : 0)+0-1)-0] = addInt(self_14390095.leaderboard.sum[chckIndx(0, 0, (self_14390095.leaderboard.sum != null ? self_14390095.leaderboard.sum.length : 0)+0-1)-0], 1);
    F.line = 145;
    if (self_14390095.leaderboard.history != null) { self_14390095.leaderboard.history.push(0); } else { self_14390095.leaderboard.history = [0]; };
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function make_turn_14425224(self_14425226, move_14425227) {
  var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if (is_over_14275014(self_14425226)) {
    F.line = 214;
    break BeforeRet;
    }
    
    F.line = 215;
    make_move_14270015(self_14425226, move_14425227);
    F.line = 216;
    determine_winner_14390093(self_14425226);
    if (is_over_14275014(self_14425226)) {
    F.line = 218;
    break BeforeRet;
    }
    
    F.line = 219;
    finish_turn_14265068(self_14425226);
    if (isObj(current_player_14260047(self_14425226).m_type, NTI14305062)) {
    F.line = 222;
    make_move_14270015(self_14425226, get_move_14255090(current_player_14260047(self_14425226), self_14425226));
    F.line = 223;
    finish_turn_14265068(self_14425226);
    }
    
  } while (false);
  framePtr = F.prev;

  
}
function make_turn_14425249(self_14425226, move_14425227) {
  var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 212;
    make_turn_14425224(self_14425226, move_14425227);
  framePtr = F.prev;

  
}
function finished_14425251(self_14425253) {
  var result_14425254 = false;

  var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
    F.line = 227;
    result_14425254 = is_over_14275014(self_14425253);
  framePtr = F.prev;

  return result_14425254;

}
function finished_14425268(self_14425253) {
  var result_14425270 = false;

  var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    F.line = 226;
    result_14425270 = finished_14425251(self_14425253);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_14425270;

}
