/* Generated by the Nim Compiler v1.0.6 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI352084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354203 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354168 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI352028 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354941 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354939 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354937 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354935 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354931 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354933 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI355041 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI355026 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI355011 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354996 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354981 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354966 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI353138 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI350714 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI47486 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI304255 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI304248 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI304215 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI304736 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI320925 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI304207 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI304211 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI304213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI304278 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI304270 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI301690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI349054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI349046 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI349049 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI349047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI354043 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI354041 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI354040 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354038 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI354035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI354019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI354022 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354021 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI354020 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47430 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI202476 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI107907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI151432 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI154247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI272112 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI272114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI316172 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI316192 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI316189 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI316186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI44028 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI297102 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI95017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI249065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI249062 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI249059 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI65156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47514 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI44016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI44040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI44042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI47508 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI47426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI47450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47450.node = NNI47450;
var NNI47428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47428.node = NNI47428;
NTI47508.base = NTI47426;
NTI47514.base = NTI47426;
var NNI47426 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI47508, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI44040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI44040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI44016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI47514, name: "up", sons: null}]};
NTI47426.node = NNI47426;
var NNI47408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47408.node = NNI47408;
NTI47426.base = NTI47408;
NTI47428.base = NTI47426;
NTI47450.base = NTI47428;
var NNI65156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}]};
NTI65156.node = NNI65156;
var NNI47462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47462.node = NNI47462;
NTI47462.base = NTI47428;
var NNI249065 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI95017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44040, name: "Field2", sons: null}]};
NTI249065.node = NNI249065;
NTI249062.base = NTI249065;
var NNI249059 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI249062, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI249059.node = NNI249059;
var NNI47444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47444.node = NNI47444;
var NNI47442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47442.node = NNI47442;
NTI47442.base = NTI47428;
NTI47444.base = NTI47442;
var NNI47446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47446.node = NNI47446;
NTI47446.base = NTI47442;
var NNI47458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47458.node = NNI47458;
NTI47458.base = NTI47428;
var NNI297102 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI44028, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI44028, name: "y", sons: null}]};
NTI297102.node = NNI297102;
var NNI316172 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44026, name: "Field1", sons: null}]};
NTI316172.node = NNI316172;
var NNI316192 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI95017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI316172, name: "Field2", sons: null}]};
NTI316192.node = NNI316192;
NTI316189.base = NTI316192;
var NNI316186 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI316189, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI316186.node = NNI316186;
var NNI272114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI272114.node = NNI272114;
NTI272114.base = NTI47426;
var NNI272112 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI44028, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI44028, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI44028, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI44028, name: "a", sons: null}]};
NTI272112.node = NNI272112;
var NNI154247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI151432, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI44006, name: "b", sons: null}]};
NTI154247.node = NNI154247;
var NNI107907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI44006, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI44006, name: "b", sons: null}]};
NTI107907.node = NNI107907;
NTI202476.base = NTI44040;
var NNI47452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47452.node = NNI47452;
var NNI47430 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47430.node = NNI47430;
NTI47430.base = NTI47426;
NTI47452.base = NTI47430;
var NNI47454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47454.node = NNI47454;
NTI47454.base = NTI47452;
NTI354022.base = NTI44006;
NTI354021.base = NTI354022;
NTI354038.base = NTI44006;
NTI354041.base = NTI354043;
NTI354040.base = NTI354041;
var NNI354035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sum", len: 0, typ: NTI354038, name: "sum", sons: null}, 
{kind: 1, offset: "history", len: 0, typ: NTI354040, name: "history", sons: null}]};
NTI354035.node = NNI354035;
NTI354019.base = NTI354035;
var NNI354020 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI354021, name: "field", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI44006, name: "size", sons: null}, 
{kind: 1, offset: "winCount", len: 0, typ: NTI44006, name: "winCount", sons: null}, 
{kind: 1, offset: "leaderboard", len: 0, typ: NTI354019, name: "leaderboard", sons: null}]};
NTI354020.node = NNI354020;
var NNI349054 = {kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null};
NTI349054.node = NNI349054;
NTI349054.base = NTI47408;
NTI349046.base = NTI349054;
NTI349049.base = NTI349046;
var NNI349047 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "player_count", len: 0, typ: NTI44006, name: "player_count", sons: null}, 
{kind: 1, offset: "players", len: 0, typ: NTI349049, name: "players", sons: null}, 
{kind: 1, offset: "current_player_number", len: 0, typ: NTI44006, name: "current_player_number", sons: null}, 
{kind: 1, offset: "winner_player_number", len: 0, typ: NTI44006, name: "winner_player_number", sons: null}]};
NTI349047.node = NNI349047;
NTI349047.base = NTI47408;
NTI354020.base = NTI349047;
var NNI301690 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI44028, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI44028, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI44028, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI44028, name: "h", sons: null}]};
NTI301690.node = NNI301690;
var NNI304270 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44026, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44026, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI44026, name: "Field3", sons: null}]};
NTI304270.node = NNI304270;
var NNI304211 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI304211, name: "DropShadow", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI304211, name: "InnerShadow", len: 0, sons: null}}};
NTI304211.node = NNI304211;
var NNI304213 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI304211, name: "kind", sons: null}, 
{kind: 1, offset: "blur", len: 0, typ: NTI44026, name: "blur", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI44026, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI44026, name: "y", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI272112, name: "color", sons: null}]};
NTI304213.node = NNI304213;
NTI304278.base = NTI304213;
var NNI304207 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fontFamily", len: 0, typ: NTI44040, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI44026, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI44026, name: "fontWeight", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI44026, name: "lineHeight", sons: null}, 
{kind: 1, offset: "textAlignHorizontal", len: 0, typ: NTI44006, name: "textAlignHorizontal", sons: null}, 
{kind: 1, offset: "textAlignVertical", len: 0, typ: NTI44006, name: "textAlignVertical", sons: null}]};
NTI304207.node = NNI304207;
var NNI320925 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44026, name: "Field1", sons: null}]};
NTI320925.node = NNI320925;
NTI304255.base = NTI304215;
var NNI304248 = {kind: 2, len: 28, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI44040, name: "id", sons: null}, 
{kind: 1, offset: "idPath", len: 0, typ: NTI44040, name: "idPath", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI44040, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI44040, name: "text", sons: null}, 
{kind: 1, offset: "placeholder", len: 0, typ: NTI44040, name: "placeholder", sons: null}, 
{kind: 1, offset: "code", len: 0, typ: NTI44040, name: "code", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI304255, name: "kids", sons: null}, 
{kind: 1, offset: "box", len: 0, typ: NTI301690, name: "box", sons: null}, 
{kind: 1, offset: "orgBox", len: 0, typ: NTI301690, name: "orgBox", sons: null}, 
{kind: 1, offset: "rotation", len: 0, typ: NTI44026, name: "rotation", sons: null}, 
{kind: 1, offset: "screenBox", len: 0, typ: NTI301690, name: "screenBox", sons: null}, 
{kind: 1, offset: "fill", len: 0, typ: NTI272112, name: "fill", sons: null}, 
{kind: 1, offset: "transparency", len: 0, typ: NTI44026, name: "transparency", sons: null}, 
{kind: 1, offset: "strokeWeight", len: 0, typ: NTI44026, name: "strokeWeight", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI272112, name: "stroke", sons: null}, 
{kind: 1, offset: "zLevel", len: 0, typ: NTI44006, name: "zLevel", sons: null}, 
{kind: 1, offset: "resizeDone", len: 0, typ: NTI44032, name: "resizeDone", sons: null}, 
{kind: 1, offset: "htmlDone", len: 0, typ: NTI44032, name: "htmlDone", sons: null}, 
{kind: 1, offset: "textStyle", len: 0, typ: NTI304207, name: "textStyle", sons: null}, 
{kind: 1, offset: "imageName", len: 0, typ: NTI44040, name: "imageName", sons: null}, 
{kind: 1, offset: "cornerRadius", len: 0, typ: NTI304270, name: "cornerRadius", sons: null}, 
{kind: 1, offset: "wasDrawn", len: 0, typ: NTI44032, name: "wasDrawn", sons: null}, 
{kind: 1, offset: "editableText", len: 0, typ: NTI44032, name: "editableText", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI44032, name: "multiline", sons: null}, 
{kind: 1, offset: "drawable", len: 0, typ: NTI44032, name: "drawable", sons: null}, 
{kind: 1, offset: "cursorColor", len: 0, typ: NTI272112, name: "cursorColor", sons: null}, 
{kind: 1, offset: "highlightColor", len: 0, typ: NTI272112, name: "highlightColor", sons: null}, 
{kind: 1, offset: "shadows", len: 0, typ: NTI304278, name: "shadows", sons: null}]};
NTI304248.node = NNI304248;
NTI304215.base = NTI304248;
NTI304736.base = NTI304215;
var NNI47460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47460.node = NNI47460;
NTI47460.base = NTI47428;
var NNI47486 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47486.node = NNI47486;
NTI47486.base = NTI47428;
NTI350714.base = NTI44040;
var NNI353138 = {kind: 1, offset: "depth", len: 0, typ: NTI44006, name: "depth", sons: null};
NTI353138.node = NNI353138;
NTI353138.base = NTI349054;
NTI354966.base = NTI44006;
NTI354981.base = NTI44006;
NTI354996.base = NTI44006;
NTI355011.base = NTI44006;
NTI355026.base = NTI44006;
NTI355041.base = NTI44006;
NTI354933.base = NTI44006;
NTI354931.base = NTI44006;
NTI354935.base = NTI44006;
NTI354937.base = NTI44006;
NTI354939.base = NTI44006;
NTI354941.base = NTI44006;
NTI352028.base = NTI349046;
NTI354168.base = NTI44006;
NTI354203.base = NTI354168;
NTI352084.base = NTI44040;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_68827, src_68828, ti_68829) {
	var result_69019 = null;

		switch (ti_68829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_68801(ti_68829))) {
			result_69019 = src_68828;
			}
			else {
				result_69019 = [src_68828[0], src_68828[1]];
			}
			
			break;
		case 19:
			      if (dest_68827 === null || dest_68827 === undefined) {
        dest_68827 = {};
      }
      else {
        for (var key in dest_68827) { delete dest_68827[key]; }
      }
      for (var key in src_68828) { dest_68827[key] = src_68828[key]; }
      result_69019 = dest_68827;
    
			break;
		case 18:
		case 17:
			if (!((ti_68829.base == null))) {
			result_69019 = nimCopy(dest_68827, src_68828, ti_68829.base);
			}
			else {
			if ((ti_68829.kind == 17)) {
			result_69019 = (dest_68827 === null || dest_68827 === undefined) ? {m_type: ti_68829} : dest_68827;
			}
			else {
				result_69019 = (dest_68827 === null || dest_68827 === undefined) ? {} : dest_68827;
			}
			}
			nimCopyAux(result_69019, src_68828, ti_68829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_68828 === null) {
        result_69019 = null;
      }
      else {
        if (dest_68827 === null || dest_68827 === undefined) {
          dest_68827 = new Array(src_68828.length);
        }
        else {
          dest_68827.length = src_68828.length;
        }
        result_69019 = dest_68827;
        for (var i = 0; i < src_68828.length; ++i) {
          result_69019[i] = nimCopy(result_69019[i], src_68828[i], ti_68829.base);
        }
      }
    
			break;
		case 28:
			      if (src_68828 !== null) {
        result_69019 = src_68828.slice(0);
      }
    
			break;
		default: 
			result_69019 = src_68828;
			break;
		}

	return result_69019;

}

function makeNimstrLit(c_67270) {
		  var ln = c_67270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_67270.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_69086, value_69087, typ_69088) {
		    var result = new Array(len_69086);
    for (var i = 0; i < len_69086; ++i) result[i] = nimCopy(null, value_69087, typ_69088);
    return result;
  

	
}

function cstrToNimstr(c_67287) {
		  var ln = c_67287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_67287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_67287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_67304) {
										var Tmp5;
						var Tmp7;

	var result_67305 = null;

		var res_67363 = new_seq_67336((s_67304 != null ? s_67304.length : 0));
		var i_67365 = 0;
		var j_67367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_67365 < (s_67304 != null ? s_67304.length : 0))) break L2;
					var c_67368 = s_67304[i_67365];
					if ((c_67368 < 128)) {
					res_67363[j_67367] = String.fromCharCode(c_67368);
					i_67365 += 1;
					}
					else {
						var helper_67391 = new_seq_67336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_67392 = c_67368.toString(16);
									if (((code_67392 != null ? code_67392.length : 0) == 1)) {
									if (helper_67391 != null) { helper_67391.push("%0"); } else { helper_67391 = ["%0"]; };
									}
									else {
									if (helper_67391 != null) { helper_67391.push("%"); } else { helper_67391 = ["%"]; };
									}
									
									if (helper_67391 != null) { helper_67391.push(code_67392); } else { helper_67391 = [code_67392]; };
									i_67365 += 1;
										if (((s_67304 != null ? s_67304.length : 0) <= i_67365)) Tmp5 = true; else {											Tmp5 = (s_67304[i_67365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_67368 = s_67304[i_67365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_67363[j_67367] = decodeURIComponent(helper_67391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_67363[j_67367] = helper_67391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_67367 += 1;
				}
		} while(false);
		if (res_67363 === null) res_67363 = [];
               if (res_67363.length < j_67367) { for (var i=res_67363.length;i<j_67367;++i) res_67363.push(null); }
               else { res_67363.length = j_67367; };
		result_67305 = res_67363.join("");

	return result_67305;

}

function raiseException(e_65618, ename_65619) {
		e_65618.name = ename_65619;
		if ((excHandler == 0)) {
		unhandledException(e_65618);
		}
		
		e_65618.trace = nimCopy(null, raw_write_stack_trace_65468(), NTI44040);
		throw e_65618;

	
}

function chckRange(i_69124, a_69125, b_69126) {
			var Tmp1;

	var result_69127 = 0;

	BeforeRet: do {
			if (!(a_69125 <= i_69124)) Tmp1 = false; else {				Tmp1 = (i_69124 <= b_69126);			}		if (Tmp1) {
		result_69127 = i_69124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_69127;

}

function divInt(a_67857, b_67858) {
		    if (b_67858 == 0) raiseDivByZero();
    if (b_67858 == -1 && a_67857 == 2147483647) raiseOverflow();
    return Math.trunc(a_67857 / b_67858);
  

	
}

function mulInt(a_67839, b_67840) {
		    var result = a_67839 * b_67840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function subInt(a_67821, b_67822) {
		    var result = a_67821 - b_67822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_67803, b_67804) {
		    var result = a_67803 + b_67804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_69105, a_69106, b_69107) {
			var Tmp1;

	var result_69108 = 0;

	BeforeRet: do {
			if (!(a_69106 <= i_69105)) Tmp1 = false; else {				Tmp1 = (i_69105 <= b_69107);			}		if (Tmp1) {
		result_69108 = i_69105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_69105, a_69106, b_69107);
		}
		
	} while (false);

	return result_69108;

}

function modInt(a_67875, b_67876) {
		    if (b_67876 == 0) raiseDivByZero();
    if (b_67876 == -1 && a_67875 == 2147483647) raiseOverflow();
    return Math.trunc(a_67875 % b_67876);
  

	
}

function eqStrings(a_67641, b_67642) {
		    if (a_67641 == b_67642) return true;
    if (a_67641 === null && b_67642.length == 0) return true;
    if (b_67642 === null && a_67641.length == 0) return true;
    if ((!a_67641) || (!b_67642)) return false;
    var alen = a_67641.length;
    if (alen != b_67642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_67641[i] != b_67642[i]) return false;
    return true;
  

	
}

function nimMax(a_68221, b_68222) {
		var Tmp1;

	var result_68223 = 0;

	BeforeRet: do {
		if ((b_68222 <= a_68221)) {
		Tmp1 = a_68221;
		}
		else {
		Tmp1 = b_68222;
		}
		
		result_68223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68223;

}

function nimMin(a_68203, b_68204) {
		var Tmp1;

	var result_68205 = 0;

	BeforeRet: do {
		if ((a_68203 <= b_68204)) {
		Tmp1 = a_68203;
		}
		else {
		Tmp1 = b_68204;
		}
		
		result_68205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68205;

}

function mnewString(len_67463) {
		    return new Array(len_67463);
  

	
}
var ConstSet2 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet3 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet4 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(101, 69);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);

function nimParseBiggestFloat(s_69356, number_69358, number_69358_Idx, start_69359) {
	var result_69361 = 0;

	var F={procname:"system.nimParseBiggestFloat",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 686;
		var esign_69362 = 1.0000000000000000e+00;
		F.line = 687;
		var sign_69363 = 1.0000000000000000e+00;
		F.line = 688;
		var i_69364 = start_69359;
		F.line = 689;
		var exponent_69365 = 0;
		F.line = 690;
		var flags_69366 = 0;
		F.line = 691;
		number_69358[number_69358_Idx] = 0.0;
		if ((s_69356[i_69364] == 43)) {
		F.line = 692;
		i_69364 += 1;
		}
		else {
		if ((s_69356[i_69364] == 45)) {
		F.line = 694;
		sign_69363 = -1.0000000000000000e+00;
		F.line = 695;
		i_69364 += 1;
		}
		}
		if (((s_69356[i_69364] == 78) || (s_69356[i_69364] == 110))) {
		if (((s_69356[(i_69364 + 1)] == 65) || (s_69356[(i_69364 + 1)] == 97))) {
		if (((s_69356[(i_69364 + 2)] == 78) || (s_69356[(i_69364 + 2)] == 110))) {
		if (!((ConstSet3[s_69356[(i_69364 + 3)]] != undefined))) {
		F.line = 700;
		number_69358[number_69358_Idx] = NaN;
		F.line = 701;
		result_69361 = ((i_69364 + 3) - start_69359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 702;
		result_69361 = 0;
		break BeforeRet;
		}
		
		if (((s_69356[i_69364] == 73) || (s_69356[i_69364] == 105))) {
		if (((s_69356[(i_69364 + 1)] == 78) || (s_69356[(i_69364 + 1)] == 110))) {
		if (((s_69356[(i_69364 + 2)] == 70) || (s_69356[(i_69364 + 2)] == 102))) {
		if (!((ConstSet4[s_69356[(i_69364 + 3)]] != undefined))) {
		F.line = 707;
		number_69358[number_69358_Idx] = (Infinity * sign_69363);
		F.line = 708;
		result_69361 = ((i_69364 + 3) - start_69359);
		break BeforeRet;
		}
		
		}
		
		}
		
		F.line = 709;
		result_69361 = 0;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 710;
				L2: while (true) {
				if (!(ConstSet5[s_69356[i_69364]] != undefined)) break L2;
					F.line = 712;
					flags_69366 = (flags_69366 | 1);
					F.line = 713;
					number_69358[number_69358_Idx] = ((number_69358[number_69358_Idx] * 1.0000000000000000e+01) + to_float_54457((s_69356[i_69364] - 48)));
					F.line = 714;
					i_69364 += 1;
					L3: do {
						F.line = 715;
							L4: while (true) {
							if (!(s_69356[i_69364] == 95)) break L4;
								F.line = 715;
								i_69364 += 1;
							}
					} while(false);
				}
		} while(false);
		if ((s_69356[i_69364] == 46)) {
		F.line = 718;
		var hd_69420 = 1.0000000000000000e+00;
		F.line = 719;
		i_69364 += 1;
		L5: do {
			F.line = 720;
				L6: while (true) {
				if (!(ConstSet6[s_69356[i_69364]] != undefined)) break L6;
					F.line = 722;
					flags_69366 = (flags_69366 | 2);
					F.line = 723;
					number_69358[number_69358_Idx] = ((number_69358[number_69358_Idx] * 1.0000000000000000e+01) + to_float_54457((s_69356[i_69364] - 48)));
					F.line = 724;
					hd_69420 = (hd_69420 * 1.0000000000000000e+01);
					F.line = 725;
					i_69364 += 1;
					L7: do {
						F.line = 726;
							L8: while (true) {
							if (!(s_69356[i_69364] == 95)) break L8;
								F.line = 726;
								i_69364 += 1;
							}
					} while(false);
				}
		} while(false);
		F.line = 727;
		number_69358[number_69358_Idx] = (number_69358[number_69358_Idx] / hd_69420);
		}
		
		if ((flags_69366 == 0)) {
		F.line = 729;
		result_69361 = 0;
		break BeforeRet;
		}
		
		if ((ConstSet7[s_69356[i_69364]] != undefined)) {
		F.line = 732;
		i_69364 += 1;
		if ((s_69356[i_69364] == 43)) {
		F.line = 734;
		i_69364 += 1;
		}
		else {
		if ((s_69356[i_69364] == 45)) {
		F.line = 736;
		esign_69362 = -1.0000000000000000e+00;
		F.line = 737;
		i_69364 += 1;
		}
		}
		if (!((ConstSet8[s_69356[i_69364]] != undefined))) {
		F.line = 739;
		result_69361 = 0;
		break BeforeRet;
		}
		
		L9: do {
			F.line = 740;
				L10: while (true) {
				if (!(ConstSet9[s_69356[i_69364]] != undefined)) break L10;
					F.line = 741;
					exponent_69365 = (((exponent_69365 * 10) + s_69356[i_69364]) - 48);
					F.line = 742;
					i_69364 += 1;
					L11: do {
						F.line = 743;
							L12: while (true) {
							if (!(s_69356[i_69364] == 95)) break L12;
								F.line = 743;
								i_69364 += 1;
							}
					} while(false);
				}
		} while(false);
		}
		
		F.line = 745;
		var hd_69514 = ten_to_the_power_of_69326(exponent_69365);
		if ((0.0 < esign_69362)) {
		F.line = 746;
		number_69358[number_69358_Idx] = (number_69358[number_69358_Idx] * hd_69514);
		}
		else {
			F.line = 747;
			number_69358[number_69358_Idx] = (number_69358[number_69358_Idx] / hd_69514);
		}
		
		F.line = 749;
		number_69358[number_69358_Idx] = (number_69358[number_69358_Idx] * sign_69363);
		F.line = 750;
		result_69361 = (i_69364 - start_69359);
	} while (false);
	framePtr = F.prev;

	return result_69361;

}
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr(60, 62, 94);
var ConstSet12 = setConstr(60, 62, 94);
var ConstSet13 = setConstr(45, 43, 32);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr([65, 90], [97, 122]);
var ConstSet18 = setConstr(46, 44);

function nimCharToStr(x_65062) {
	var result_65063 = null;

		result_65063 = nimCopy(null, mnewString(1), NTI44040);
		result_65063[0] = x_65062;

	return result_65063;

}
var ConstSet19 = setConstr([65, 90]);
var ConstSet20 = setConstr([97, 122]);

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function isObj(obj_69270, subclass_69271) {
	var result_69272 = false;

	BeforeRet: do {
		var x_69273 = obj_69270;
		if ((x_69273 == subclass_69271)) {
		result_69272 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_69273 == subclass_69271))) break L2;
					if ((x_69273 == null)) {
					result_69272 = false;
					break BeforeRet;
					}
					
					x_69273 = x_69273.base;
				}
		} while(false);
		result_69272 = true;
		break BeforeRet;
	} while (false);

	return result_69272;

}

function addChar(x_69311, c_69312) {
		x_69311.push(c_69312);

	
}
var ConstSet21 = setConstr([48, 57]);
var ConstSet22 = setConstr(0, 125);
var ConstSet23 = setConstr([48, 57]);
var ConstSet24 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
										var desc_354085 = [makeNimstrLit(" "), makeNimstrLit("X"), makeNimstrLit("0")];
var ConstSet25 = setConstr([48, 57]);
var ConstSet26 = setConstr([48, 57]);
var ConstSet27 = setConstr(13, 10);
var nim_program_result = 0;
var global_raise_hook_62618 = [null];
var local_raise_hook_62623 = [null];
var out_of_mem_hook_62626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_95237 = [0];

function is_power_of_two_103062(x_103064) {
		var Tmp1;

	var result_103065 = false;

	BeforeRet: do {
		if (!(0 < x_103064)) Tmp1 = false; else {			Tmp1 = ((x_103064 & (x_103064 - 1)) == 0);		}		result_103065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_103065;

}

function is_fat_pointer_68801(ti_68803) {
	var result_68804 = false;

	BeforeRet: do {
		result_68804 = !((ConstSet1[ti_68803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_68804;

}

function nimCopyAux(dest_68832, src_68833, n_68835) {
		switch (n_68835.kind) {
		case 0:
			break;
		case 1:
			      dest_68832[n_68835.offset] = nimCopy(dest_68832[n_68835.offset], src_68833[n_68835.offset], n_68835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_68835.sons.length; i++) {
      nimCopyAux(dest_68832, src_68833, n_68835.sons[i]);
    }
    
			break;
		case 3:
			      dest_68832[n_68835.offset] = nimCopy(dest_68832[n_68835.offset], src_68833[n_68835.offset], n_68835.typ);
      for (var i = 0; i < n_68835.sons.length; ++i) {
        nimCopyAux(dest_68832, src_68833, n_68835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_62638(x_62641, x_62641_Idx, y_62642) {
		      if (x_62641[x_62641_Idx] === null) { x_62641[x_62641_Idx] = []; }
      var off = x_62641[x_62641_Idx].length;
      x_62641[x_62641_Idx].length += y_62642.length;
      for (var i = 0; i < y_62642.length; ++i) {
        x_62641[x_62641_Idx][off+i] = y_62642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_65151(f_65153) {
					var Tmp3;

	var result_65154 = [null];

		var it_65162 = f_65153;
		var i_65164 = 0;
		var total_65166 = 0;
		var temp_frames_65173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI65156);
		L1: do {
				L2: while (true) {
					if (!!((it_65162 == null))) Tmp3 = false; else {						Tmp3 = (i_65164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_65173[i_65164].Field0 = it_65162.procname;
					temp_frames_65173[i_65164].Field1 = it_65162.line;
					i_65164 += 1;
					total_65166 += 1;
					it_65162 = it_65162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_65162 == null))) break L5;
					total_65166 += 1;
					it_65162 = it_65162.prev;
				}
		} while(false);
		result_65154[0] = nimCopy(null, [], NTI44040);
		if (!((total_65166 == i_65164))) {
		if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(makeNimstrLit("(")); } else { result_65154[0] = makeNimstrLit("("); };
		if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(cstrToNimstr(((total_65166 - i_65164))+"")); } else { result_65154[0] = cstrToNimstr(((total_65166 - i_65164))+"").slice(); };
		if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_65154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_65421 = 0;
			var colontmp__271287 = 0;
			colontmp__271287 = (i_65164 - 1);
			var res_271292 = colontmp__271287;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_271292)) break L8;
						j_65421 = res_271292;
						add_62638(result_65154, 0, temp_frames_65173[j_65421].Field0);
						if ((0 < temp_frames_65173[j_65421].Field1)) {
						if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(makeNimstrLit(", line: ")); } else { result_65154[0] = makeNimstrLit(", line: "); };
						if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(cstrToNimstr((temp_frames_65173[j_65421].Field1)+"")); } else { result_65154[0] = cstrToNimstr((temp_frames_65173[j_65421].Field1)+"").slice(); };
						}
						
						if (result_65154[0] != null) { result_65154[0] = (result_65154[0]).concat(makeNimstrLit("\x0A")); } else { result_65154[0] = makeNimstrLit("\x0A"); };
						res_271292 -= 1;
					}
			} while(false);
		} while(false);

	return result_65154[0];

}

function raw_write_stack_trace_65468() {
	var result_65470 = null;

		if (!((framePtr == null))) {
		result_65470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_65151(framePtr) || []), NTI44040);
		}
		else {
			result_65470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI44040);
		}
		

	return result_65470;

}

function new_seq_67336(len_67339) {
	var result_67341 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_67341 = new Array(len_67339); for (var i=0;i<len_67339;++i) {result_67341[i]=null;}	framePtr = F.prev;

	return result_67341;

}

function unhandledException(e_65529) {
		var buf_65530 = [[]];
		if (!(((e_65529.message != null ? e_65529.message.length : 0) == 0))) {
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_65530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(e_65529.message); } else { buf_65530[0] = e_65529.message.slice(); };
		}
		else {
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_65530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit(" [")); } else { buf_65530[0] = makeNimstrLit(" ["); };
		add_62638(buf_65530, 0, e_65529.name);
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_65530[0] = makeNimstrLit("]\x0A"); };
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(raw_write_stack_trace_65468()); } else { buf_65530[0] = raw_write_stack_trace_65468().slice(); };
		var cbuf_65601 = toJSStr(buf_65530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_65601);
  }
  else {
    throw cbuf_65601;
  }
  

	
}

function sys_fatal_58862(message_58866) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_59003 = null;
		F.line = 37;
		e_59003 = {m_type: NTI47450, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_59003.message = nimCopy(null, message_58866, NTI44040);
		F.line = 39;
		raiseException(e_59003, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_58858(msg_58860) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_58862(msg_58860);
	framePtr = F.prev;

	
}

function failed_assert_impl_59066(msg_59068) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_58858(msg_59068);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var eHEX60gensym66457_66603 = null;
		eHEX60gensym66457_66603 = {m_type: NTI47462, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym66457_66603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI44040);
		eHEX60gensym66457_66603.parent = null;
		raiseException(eHEX60gensym66457_66603, "RangeError");

	
}

function init_table_249179(initial_size_249183) {
	var result_249185 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_103062(initial_size_249183))) {
		F.line = 118;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_249185.counter = 0;
		F.line = 120;
		result_249185.data = new Array(chckRange(initial_size_249183, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_249183, 0, 2147483647);++i) {result_249185.data[i]={Field0: 0, Field1: null, Field2: null};}	framePtr = F.prev;

	return result_249185;

}

function new_table_253531(initial_size_253535) {
	var result_253537 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 810;
		result_253537 = {data: null, counter: 0};
		F.line = 811;
		nimCopy(result_253537, init_table_249179(initial_size_253535), NTI249059);
	framePtr = F.prev;

	return result_253537;

}

function raiseDivByZero() {
		var eHEX60gensym66257_66403 = null;
		eHEX60gensym66257_66403 = {m_type: NTI47444, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym66257_66403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI44040);
		eHEX60gensym66257_66403.parent = null;
		raiseException(eHEX60gensym66257_66403, "DivByZeroError");

	
}

function raiseOverflow() {
		var eHEX60gensym66058_66203 = null;
		eHEX60gensym66058_66203 = {m_type: NTI47446, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym66058_66203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI44040);
		eHEX60gensym66058_66203.parent = null;
		raiseException(eHEX60gensym66058_66203, "OverflowError");

	
}

function raiseIndexError(i_66655, a_66656, b_66657) {
		var Tmp1;

		var eHEX60gensym66802_67003 = null;
		eHEX60gensym66802_67003 = {m_type: NTI47458, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_66657 < a_66656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_66655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_66656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_66657)+"") || []);
		}
		
		eHEX60gensym66802_67003.message = nimCopy(null, Tmp1, NTI44040);
		eHEX60gensym66802_67003.parent = null;
		raiseException(eHEX60gensym66802_67003, "IndexError");

	
}

function imul_95768(a_95770, b_95771) {
	var result_95772 = 0;

	var F={procname:"hashes.imul",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 154;
		var mask_95773 = 65535;
		F.line = 156;
		var a_hi_95786 = (((a_95770 >>> 0) >>> 16) & mask_95773);
		F.line = 157;
		var a_lo_95792 = (a_95770 & mask_95773);
		F.line = 158;
		var b_hi_95805 = (((b_95771 >>> 0) >>> 16) & mask_95773);
		F.line = 159;
		var b_lo_95811 = (b_95771 & mask_95773);
		F.line = 160;
		result_95772 = ((((a_lo_95792 * b_lo_95811) >>> 0) + (((((a_hi_95786 * b_lo_95811) >>> 0) + ((a_lo_95792 * b_hi_95805) >>> 0)) >>> 0) << 16)) >>> 0);
	framePtr = F.prev;

	return result_95772;

}

function rotl32_96001(x_96003, r_96004) {
	var result_96005 = 0;

	var F={procname:"hashes.rotl32",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		result_96005 = ((x_96003 << r_96004) | ((x_96003 >>> 0) >>> subInt(32, r_96004)));
	framePtr = F.prev;

	return result_96005;

}

function murmur_hash_96037(x_96040) {
	var result_96041 = 0;

	var F={procname:"hashes.murmurHash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 176;
		var size_96051 = (x_96040 != null ? x_96040.length : 0);
		F.line = 177;
		var step_size_96053 = 4;
		F.line = 178;
		var n_96054 = divInt(size_96051, step_size_96053);
		F.line = 180;
		var h1_96055 = 0;
		F.line = 181;
		var i_96057 = 0;
		L1: do {
			F.line = 184;
				L2: while (true) {
				if (!(i_96057 < mulInt(n_96054, step_size_96053))) break L2;
					F.line = 185;
					var k1_96058 = 0;
					F.line = 187;
					var j_96059 = step_size_96053;
					L3: do {
						F.line = 188;
							L4: while (true) {
							if (!(0 < j_96059)) break L4;
								F.line = 189;
								j_96059 = subInt(j_96059, 1);
								F.line = 190;
								k1_96058 = ((k1_96058 << 8) | x_96040[chckIndx(addInt(i_96057, j_96059), 0, (x_96040 != null ? x_96040.length : 0)+0-1)-0]);
							}
					} while(false);
					F.line = 193;
					i_96057 = addInt(i_96057, step_size_96053);
					F.line = 195;
					k1_96058 = imul_95768(k1_96058, 3432918353);
					F.line = 196;
					k1_96058 = rotl32_96001(k1_96058, 15);
					F.line = 197;
					k1_96058 = imul_95768(k1_96058, 461845907);
					F.line = 199;
					h1_96055 = (h1_96055 ^ k1_96058);
					F.line = 200;
					h1_96055 = rotl32_96001(h1_96055, 13);
					F.line = 201;
					h1_96055 = ((((h1_96055 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		F.line = 204;
		var k1_96223 = 0;
		F.line = 205;
		var rem_96224 = modInt(size_96051, step_size_96053);
		L5: do {
			F.line = 206;
				L6: while (true) {
				if (!(0 < rem_96224)) break L6;
					F.line = 207;
					rem_96224 = subInt(rem_96224, 1);
					F.line = 208;
					k1_96223 = ((k1_96223 << 8) | x_96040[chckIndx(addInt(i_96057, rem_96224), 0, (x_96040 != null ? x_96040.length : 0)+0-1)-0]);
				}
		} while(false);
		F.line = 209;
		k1_96223 = imul_95768(k1_96223, 3432918353);
		F.line = 210;
		k1_96223 = rotl32_96001(k1_96223, 15);
		F.line = 211;
		k1_96223 = imul_95768(k1_96223, 461845907);
		F.line = 212;
		h1_96055 = (h1_96055 ^ k1_96223);
		F.line = 215;
		h1_96055 = (h1_96055 ^ size_96051);
		F.line = 216;
		h1_96055 = (h1_96055 ^ ((h1_96055 >>> 0) >>> 16));
		F.line = 217;
		h1_96055 = imul_95768(h1_96055, 2246822507);
		F.line = 218;
		h1_96055 = (h1_96055 ^ ((h1_96055 >>> 0) >>> 13));
		F.line = 219;
		h1_96055 = imul_95768(h1_96055, 3266489909);
		F.line = 220;
		h1_96055 = (h1_96055 ^ ((h1_96055 >>> 0) >>> 16));
		F.line = 221;
		result_96041 = (h1_96055|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_96041;

}

function hash_96814(x_96816) {
	var result_96817 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 250;
		result_96817 = murmur_hash_96037((x_96816.slice(0, (x_96816 != null ? (x_96816.length-1) : -1)+1)));
	framePtr = F.prev;

	return result_96817;

}

function is_filled_110018(hcode_110020) {
	var result_110021 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_110021 = !((hcode_110020 == 0));
	framePtr = F.prev;

	return result_110021;

}

function next_try_110035(h_110037, max_hash_110038) {
	var result_110039 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_110039 = (addInt(h_110037, 1) & max_hash_110038);
	framePtr = F.prev;

	return result_110039;

}

function raw_get_250002(t_250006, key_250007, hc_250008, hc_250008_Idx) {
						var Tmp3;

	var result_250009 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_250008[hc_250008_Idx] = hash_96814(key_250007);
		if ((hc_250008[hc_250008_Idx] == 0)) {
		F.line = 56;
		hc_250008[hc_250008_Idx] = 314159265;
		}
		
		if (((t_250006.data != null ? t_250006.data.length : 0) == 0)) {
		F.line = 38;
		result_250009 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_250151 = (hc_250008[hc_250008_Idx] & (t_250006.data != null ? (t_250006.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_110018(t_250006.data[chckIndx(h_250151, 0, (t_250006.data != null ? t_250006.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_250006.data[chckIndx(h_250151, 0, (t_250006.data != null ? t_250006.data.length : 0)+0-1)-0].Field0 == hc_250008[hc_250008_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_250006.data[chckIndx(h_250151, 0, (t_250006.data != null ? t_250006.data.length : 0)+0-1)-0].Field1, key_250007);						}					if (Tmp3) {
					F.line = 46;
					result_250009 = h_250151;
					break BeforeRet;
					}
					
					F.line = 47;
					h_250151 = next_try_110035(h_250151, (t_250006.data != null ? (t_250006.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_250009 = subInt(-1, h_250151);
	} while (false);
	framePtr = F.prev;

	return result_250009;

}

function must_rehash_110053(length_110055, counter_110056) {
	var result_110057 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_110056 < length_110055))) {
		F.line = 33;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_110057 = ((mulInt(length_110055, 2) < mulInt(counter_110056, 3)) || (subInt(length_110055, counter_110056) < 4));
	framePtr = F.prev;

	return result_110057;

}

function raw_insert_252308(t_252314, data_252317, data_252317_Idx, key_252318, val_252319, hc_252320, h_252321) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_252317[data_252317_Idx][chckIndx(h_252321, 0, (data_252317[data_252317_Idx] != null ? data_252317[data_252317_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_252318, NTI44040);
		F.line = 23;
		data_252317[data_252317_Idx][chckIndx(h_252321, 0, (data_252317[data_252317_Idx] != null ? data_252317[data_252317_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, val_252319, NTI44040);
		F.line = 24;
		data_252317[data_252317_Idx][chckIndx(h_252321, 0, (data_252317[data_252317_Idx] != null ? data_252317[data_252317_Idx].length : 0)+0-1)-0].Field0 = hc_252320;
	framePtr = F.prev;

	
}

function enlarge_251348(t_251354) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 269;
		var n_251362 = null;
		F.line = 270;
		n_251362 = new Array(chckRange(mulInt((t_251354.data != null ? t_251354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_251354.data != null ? t_251354.data.length : 0), 2), 0, 2147483647);++i) {n_251362[i]={Field0: 0, Field1: null, Field2: null};}		F.line = 271;
		var Tmp1 = t_251354.data; t_251354.data = n_251362; n_251362 = Tmp1;		L2: do {
			F.line = 272;
			var i_251521 = 0;
			F.line = 2672;
			var colontmp__271314 = 0;
			F.line = 272;
			colontmp__271314 = (n_251362 != null ? (n_251362.length-1) : -1);
			F.line = 2689;
			var res_271319 = 0;
			L3: do {
				F.line = 2690;
					L4: while (true) {
					if (!(res_271319 <= colontmp__271314)) break L4;
						F.line = 272;
						i_251521 = res_271319;
						F.line = 273;
						var eh_251670 = n_251362[chckIndx(i_251521, 0, (n_251362 != null ? n_251362.length : 0)+0-1)-0].Field0;
						if (is_filled_110018(eh_251670)) {
						F.line = 275;
						var j_251677 = (eh_251670 & (t_251354.data != null ? (t_251354.data.length-1) : -1));
						L5: do {
							F.line = 276;
								L6: while (true) {
								if (!is_filled_110018(t_251354.data[chckIndx(j_251677, 0, (t_251354.data != null ? t_251354.data.length : 0)+0-1)-0].Field0)) break L6;
									F.line = 277;
									j_251677 = next_try_110035(j_251677, (t_251354.data != null ? (t_251354.data.length-1) : -1));
								}
						} while(false);
						F.line = 279;
						raw_insert_252308(t_251354, t_251354, "data", n_251362[chckIndx(i_251521, 0, (n_251362 != null ? n_251362.length : 0)+0-1)-0].Field1, n_251362[chckIndx(i_251521, 0, (n_251362 != null ? n_251362.length : 0)+0-1)-0].Field2, eh_251670, j_251677);
						}
						
						F.line = 2692;
						res_271319 = addInt(res_271319, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_252793(t_252797, key_252798, hc_252799) {
	var result_252800 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_252797.data != null ? t_252797.data.length : 0) == 0)) {
		F.line = 38;
		result_252800 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_252939 = (hc_252799 & (t_252797.data != null ? (t_252797.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_110018(t_252797.data[chckIndx(h_252939, 0, (t_252797.data != null ? t_252797.data.length : 0)+0-1)-0].Field0)) break L2;
					if (((t_252797.data[chckIndx(h_252939, 0, (t_252797.data != null ? t_252797.data.length : 0)+0-1)-0].Field0 == hc_252799) && eqStrings(t_252797.data[chckIndx(h_252939, 0, (t_252797.data != null ? t_252797.data.length : 0)+0-1)-0].Field1, key_252798))) {
					F.line = 46;
					result_252800 = h_252939;
					break BeforeRet;
					}
					
					F.line = 47;
					h_252939 = next_try_110035(h_252939, (t_252797.data != null ? (t_252797.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_252800 = subInt(-1, h_252939);
	} while (false);
	framePtr = F.prev;

	return result_252800;

}

function HEX5BHEX5DHEX3D_249549(t_249555, key_249556, val_249557) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_249555.data != null ? t_249555.data.length : 0) == 0)) {
		if (!(is_power_of_two_103062(64))) {
		F.line = 118;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_249555.counter = 0;
		F.line = 120;
		t_249555.data = new Array(64); for (var i=0;i<64;++i) {t_249555.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		F.line = 57;
		var hc_250001 = [0];
		F.line = 58;
		var index_250619 = raw_get_250002(t_249555, key_249556, hc_250001, 0);
		if ((0 <= index_250619)) {
		F.line = 59;
		t_249555.data[chckIndx(index_250619, 0, (t_249555.data != null ? t_249555.data.length : 0)+0-1)-0].Field2 = nimCopy(null, val_249557, NTI44040);
		}
		else {
			if (((t_249555.data != null ? t_249555.data.length : 0) == 0)) {
			if (!(is_power_of_two_103062(64))) {
			F.line = 118;
			failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_249555.counter = 0;
			F.line = 120;
			t_249555.data = new Array(64); for (var i=0;i<64;++i) {t_249555.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_110053((t_249555.data != null ? t_249555.data.length : 0), t_249555.counter)) {
			F.line = 49;
			enlarge_251348(t_249555);
			F.line = 50;
			index_250619 = raw_get_known_hc_252793(t_249555, key_249556, hc_250001[0]);
			}
			
			F.line = 51;
			index_250619 = subInt(-1, index_250619);
			F.line = 52;
			raw_insert_252308(t_249555, t_249555, "data", key_249556, val_249557, hc_250001[0], index_250619);
			F.line = 60;
			t_249555.counter = addInt(t_249555.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_253786(t_253791, key_253792, val_253793) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 874;
		HEX5BHEX5DHEX3D_249549(t_253791, key_253792, val_253793);
	framePtr = F.prev;

	
}
var color_names_253676 = [new_table_253531(64)];
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("aliceblue"), makeNimstrLit("F0F8FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("antiquewhite"), makeNimstrLit("FAEBD7"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("aqua"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("aquamarine"), makeNimstrLit("7FFFD4"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("azure"), makeNimstrLit("F0FFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("beige"), makeNimstrLit("F5F5DC"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("bisque"), makeNimstrLit("FFE4C4"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("black"), makeNimstrLit("000000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("blanchedalmond"), makeNimstrLit("FFEBCD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("blue"), makeNimstrLit("0000FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("blueviolet"), makeNimstrLit("8A2BE2"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("brown"), makeNimstrLit("A52A2A"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("burlywood"), makeNimstrLit("DEB887"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("cadetblue"), makeNimstrLit("5F9EA0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("chartreuse"), makeNimstrLit("7FFF00"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("chocolate"), makeNimstrLit("D2691E"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("coral"), makeNimstrLit("FF7F50"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("cornflowerblue"), makeNimstrLit("6495ED"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("cornsilk"), makeNimstrLit("FFF8DC"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("crimson"), makeNimstrLit("DC143C"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("cyan"), makeNimstrLit("00FFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkblue"), makeNimstrLit("00008B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkcyan"), makeNimstrLit("008B8B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkgoldenrod"), makeNimstrLit("B8860B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkgray"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkgrey"), makeNimstrLit("A9A9A9"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkgreen"), makeNimstrLit("006400"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkkhaki"), makeNimstrLit("BDB76B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkmagenta"), makeNimstrLit("8B008B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkolivegreen"), makeNimstrLit("556B2F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkorange"), makeNimstrLit("FF8C00"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkorchid"), makeNimstrLit("9932CC"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkred"), makeNimstrLit("8B0000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darksalmon"), makeNimstrLit("E9967A"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkseagreen"), makeNimstrLit("8FBC8F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkslateblue"), makeNimstrLit("483D8B"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkslategray"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkslategrey"), makeNimstrLit("2F4F4F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkturquoise"), makeNimstrLit("00CED1"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("darkviolet"), makeNimstrLit("9400D3"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("deeppink"), makeNimstrLit("FF1493"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("deepskyblue"), makeNimstrLit("00BFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("dimgray"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("dimgrey"), makeNimstrLit("696969"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("dodgerblue"), makeNimstrLit("1E90FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("firebrick"), makeNimstrLit("B22222"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("floralwhite"), makeNimstrLit("FFFAF0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("forestgreen"), makeNimstrLit("228B22"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("fuchsia"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("gainsboro"), makeNimstrLit("DCDCDC"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("ghostwhite"), makeNimstrLit("F8F8FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("gold"), makeNimstrLit("FFD700"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("goldenrod"), makeNimstrLit("DAA520"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("gray"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("grey"), makeNimstrLit("808080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("green"), makeNimstrLit("008000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("greenyellow"), makeNimstrLit("ADFF2F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("honeydew"), makeNimstrLit("F0FFF0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("hotpink"), makeNimstrLit("FF69B4"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("indianred"), makeNimstrLit("CD5C5C"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("indigo"), makeNimstrLit("4B0082"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("ivory"), makeNimstrLit("FFFFF0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("khaki"), makeNimstrLit("F0E68C"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lavender"), makeNimstrLit("E6E6FA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lavenderblush"), makeNimstrLit("FFF0F5"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lawngreen"), makeNimstrLit("7CFC00"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lemonchiffon"), makeNimstrLit("FFFACD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightblue"), makeNimstrLit("ADD8E6"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightcoral"), makeNimstrLit("F08080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightcyan"), makeNimstrLit("E0FFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightgoldenrodyellow"), makeNimstrLit("FAFAD2"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightgray"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightgrey"), makeNimstrLit("D3D3D3"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightgreen"), makeNimstrLit("90EE90"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightpink"), makeNimstrLit("FFB6C1"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightsalmon"), makeNimstrLit("FFA07A"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightseagreen"), makeNimstrLit("20B2AA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightskyblue"), makeNimstrLit("87CEFA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightslategray"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightslategrey"), makeNimstrLit("778899"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightsteelblue"), makeNimstrLit("B0C4DE"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lightyellow"), makeNimstrLit("FFFFE0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("lime"), makeNimstrLit("00FF00"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("limegreen"), makeNimstrLit("32CD32"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("linen"), makeNimstrLit("FAF0E6"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("magenta"), makeNimstrLit("FF00FF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("maroon"), makeNimstrLit("800000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumaquamarine"), makeNimstrLit("66CDAA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumblue"), makeNimstrLit("0000CD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumorchid"), makeNimstrLit("BA55D3"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumpurple"), makeNimstrLit("9370DB"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumseagreen"), makeNimstrLit("3CB371"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumslateblue"), makeNimstrLit("7B68EE"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumspringgreen"), makeNimstrLit("00FA9A"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumturquoise"), makeNimstrLit("48D1CC"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mediumvioletred"), makeNimstrLit("C71585"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("midnightblue"), makeNimstrLit("191970"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mintcream"), makeNimstrLit("F5FFFA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("mistyrose"), makeNimstrLit("FFE4E1"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("moccasin"), makeNimstrLit("FFE4B5"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("navajowhite"), makeNimstrLit("FFDEAD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("navy"), makeNimstrLit("000080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("oldlace"), makeNimstrLit("FDF5E6"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("olive"), makeNimstrLit("808000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("olivedrab"), makeNimstrLit("6B8E23"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("orange"), makeNimstrLit("FFA500"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("orangered"), makeNimstrLit("FF4500"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("orchid"), makeNimstrLit("DA70D6"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("palegoldenrod"), makeNimstrLit("EEE8AA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("palegreen"), makeNimstrLit("98FB98"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("paleturquoise"), makeNimstrLit("AFEEEE"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("palevioletred"), makeNimstrLit("DB7093"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("papayawhip"), makeNimstrLit("FFEFD5"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("peachpuff"), makeNimstrLit("FFDAB9"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("peru"), makeNimstrLit("CD853F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("pink"), makeNimstrLit("FFC0CB"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("plum"), makeNimstrLit("DDA0DD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("powderblue"), makeNimstrLit("B0E0E6"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("purple"), makeNimstrLit("800080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("rebeccapurple"), makeNimstrLit("663399"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("red"), makeNimstrLit("FF0000"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("rosybrown"), makeNimstrLit("BC8F8F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("royalblue"), makeNimstrLit("4169E1"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("saddlebrown"), makeNimstrLit("8B4513"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("salmon"), makeNimstrLit("FA8072"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("sandybrown"), makeNimstrLit("F4A460"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("seagreen"), makeNimstrLit("2E8B57"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("seashell"), makeNimstrLit("FFF5EE"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("sienna"), makeNimstrLit("A0522D"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("silver"), makeNimstrLit("C0C0C0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("skyblue"), makeNimstrLit("87CEEB"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("slateblue"), makeNimstrLit("6A5ACD"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("slategray"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("slategrey"), makeNimstrLit("708090"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("snow"), makeNimstrLit("FFFAFA"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("springgreen"), makeNimstrLit("00FF7F"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("steelblue"), makeNimstrLit("4682B4"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("tan"), makeNimstrLit("D2B48C"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("teal"), makeNimstrLit("008080"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("thistle"), makeNimstrLit("D8BFD8"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("tomato"), makeNimstrLit("FF6347"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("turquoise"), makeNimstrLit("40E0D0"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("violet"), makeNimstrLit("EE82EE"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("wheat"), makeNimstrLit("F5DEB3"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("white"), makeNimstrLit("FFFFFF"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("whitesmoke"), makeNimstrLit("F5F5F5"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("yellow"), makeNimstrLit("FFFF00"));
HEX5BHEX5DHEX3D_253786(color_names_253676[0], makeNimstrLit("yellowgreen"), makeNimstrLit("9ACD32"));
var state_280005 = [{a0: 1773455756, a1: 4275166512}];
var utc_instance_289031 = [null];
var local_instance_289032 = [null];
var window_304379 = [{innerTitle: null, innerUrl: null}];
var parent_304380 = [null];
var root_304381 = [null];
var prev_root_304382 = [null];
var group_stack_304384 = [null];
var current_304385 = [null];
var scroll_box_304386 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mega_304387 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var scroll_box_mini_304388 = [{x: 0.0, y: 0.0, w: 0.0, h: 0.0}];
var mouse_304389 = [{state: 0, pos: {x: 0.0, y: 0.0}, click: false, rightClick: false, down: false, cursorStyle: 0}];
var keyboard_304390 = [{state: 0, keyCode: 0, scanCode: 0, keyString: null, altKey: false, ctrlKey: false, shiftKey: false, superKey: false, inputFocusIdPath: null, prevInputFocusIdPath: null, input: null, textCursor: 0, selectionCursor: 0}];
var draw_main_304393 = [null];
var perf_304394 = [{drawMain: 0.0, numLowLevelCalls: 0}];
var requested_frame_304395 = [false];
var num_groups_304396 = [0];
var root_url_304397 = [null];
var popup_active_304398 = [false];
var in_popup_304399 = [false];
mouse_304389[0] = {state: 0, pos: {x: 0.0, y: 0.0}, click: false, rightClick: false, down: false, cursorStyle: 0};
nimCopy(mouse_304389[0].pos, {x: 0.0, y: 0.0}, NTI297102);
var group_cache_316028 = [null];
var dom_cache_316030 = [null];
var root_dom_node_316031 = [null];
var canvas_node_316032 = [null];
var ctx_316033 = [null];
var window_frame_316034 = [{x: 0.0, y: 0.0}];

function init_table_316306(initial_size_316310) {
	var result_316312 = {data: null, counter: 0};

	var F={procname:"initTable.initTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_103062(initial_size_316310))) {
		F.line = 118;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_316312.counter = 0;
		F.line = 120;
		result_316312.data = new Array(chckRange(initial_size_316310, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_316310, 0, 2147483647);++i) {result_316312.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}	framePtr = F.prev;

	return result_316312;

}

function new_table_320761(initial_size_320765) {
	var result_320767 = null;

	var F={procname:"newTable.newTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 810;
		result_320767 = {data: null, counter: 0};
		F.line = 811;
		nimCopy(result_320767, init_table_316306(initial_size_320765), NTI316186);
	framePtr = F.prev;

	return result_320767;

}
var compute_text_box_cache_320905 = [new_table_320761(64)];
var start_time_324737 = [0.0];
var prev_mouse_cursor_style_324738 = [0];
var env_computed_337610 = [false];
var environment_337612 = [null];

function substr_74422(s_74424, first_74425, last_74426) {
	var result_74427 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4529;
		var first_74428 = nimMax(first_74425, 0);
		F.line = 4530;
		var l_74430 = nimMax(addInt(subInt(nimMin(last_74426, (s_74424 != null ? (s_74424.length-1) : -1)), first_74428), 1), 0);
		F.line = 4531;
		result_74427 = nimCopy(null, mnewString(chckRange(l_74430, 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 4532;
			var i_74439 = 0;
			F.line = 2699;
			var colontmp__357068 = 0;
			F.line = 4532;
			colontmp__357068 = subInt(l_74430, 1);
			F.line = 2710;
			var res_357069 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_357069 <= colontmp__357068)) break L3;
						F.line = 4532;
						i_74439 = res_357069;
						F.line = 4533;
						result_74427[chckIndx(i_74439, 0, (result_74427 != null ? result_74427.length : 0)+0-1)-0] = s_74424[chckIndx(addInt(i_74439, first_74428), 0, (s_74424 != null ? s_74424.length : 0)+0-1)-0];
						F.line = 2713;
						res_357069 = addInt(res_357069, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_74427;

}

function nsuStrip(s_210278, leading_210279, trailing_210280, chars_210282) {
					var Tmp5;

	var result_210283 = null;

	var F={procname:"strutils.strip",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2794;
		var first_210285 = 0;
		F.line = 2795;
		var last_210286 = subInt((s_210278 != null ? s_210278.length : 0), 1);
		if (leading_210279) {
		L1: do {
			F.line = 2797;
				L2: while (true) {
				if (!((first_210285 <= last_210286) && (chars_210282[s_210278[chckIndx(first_210285, 0, (s_210278 != null ? s_210278.length : 0)+0-1)-0]] != undefined))) break L2;
					F.line = 2797;
					first_210285 = addInt(first_210285, 1);
				}
		} while(false);
		}
		
		if (trailing_210280) {
		L3: do {
			F.line = 2799;
				L4: while (true) {
					if (!(0 <= last_210286)) Tmp5 = false; else {						Tmp5 = (chars_210282[s_210278[chckIndx(last_210286, 0, (s_210278 != null ? s_210278.length : 0)+0-1)-0]] != undefined);					}				if (!Tmp5) break L4;
					F.line = 2799;
					last_210286 = subInt(last_210286, 1);
				}
		} while(false);
		}
		
		F.line = 2800;
		result_210283 = nimCopy(null, substr_74422(s_210278, first_210285, last_210286), NTI44040);
	framePtr = F.prev;

	return result_210283;

}

function c2n_272175(hex_272177, i_272178) {
	var result_272179 = 0;

	var F={procname:"chroma.c2n",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 52;
		var c_272184 = hex_272177[chckIndx(i_272178, 0, (hex_272177 != null ? hex_272177.length : 0)+0-1)-0];
		F.line = 53;
		switch (c_272184) {
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
			F.line = 54;
			result_272179 = subInt(c_272184, 48);
			break BeforeRet;
			break;
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
			F.line = 55;
			result_272179 = subInt(addInt(10, c_272184), 97);
			break BeforeRet;
			break;
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
			F.line = 56;
			result_272179 = subInt(addInt(10, c_272184), 65);
			break BeforeRet;
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym272231_272403 = null;
			F.line = 3481;
			eHEX60gensym272231_272403 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 58;
			eHEX60gensym272231_272403.message = nimCopy(null, makeNimstrLit("format is not hex"), NTI44040);
			F.line = 3474;
			eHEX60gensym272231_272403.parent = null;
			F.line = 58;
			raiseException(eHEX60gensym272231_272403, "InvalidColor");
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_272179;

}

function parse_html_hex_tiny_273489(hex_273491) {
	var result_273492 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHexTiny",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!((hex_273491[chckIndx(0, 0, (hex_273491 != null ? hex_273491.length : 0)+0-1)-0] == 35))) {
		F.line = 3478;
		var eHEX60gensym273495_273603 = null;
		F.line = 3481;
		eHEX60gensym273495_273603 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 133;
		eHEX60gensym273495_273603.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym273495_273603.parent = null;
		F.line = 133;
		raiseException(eHEX60gensym273495_273603, "InvalidColor");
		}
		
		if (!(((hex_273491 != null ? hex_273491.length : 0) == 4))) {
		F.line = 134;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.nimble/pkgs/chroma-0.0.1/chroma.nim(134, 10) `hex.len == 4` "));
		}
		
		F.line = 135;
		result_273492.r = (c2n_272175(hex_273491, 1) / 1.5000000000000000e+01);
		F.line = 136;
		result_273492.g = (c2n_272175(hex_273491, 2) / 1.5000000000000000e+01);
		F.line = 137;
		result_273492.b = (c2n_272175(hex_273491, 3) / 1.5000000000000000e+01);
		F.line = 138;
		result_273492.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_273492;

}

function parse_hex_272453(hex_272455) {
	var result_272456 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHex",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(((hex_272455 != null ? hex_272455.length : 0) == 6))) {
		F.line = 66;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.nimble/pkgs/chroma-0.0.1/chroma.nim(66, 10) `hex.len == 6` "));
		}
		
		F.line = 67;
		result_272456.r = (addInt(mulInt(c2n_272175(hex_272455, 0), 16), c2n_272175(hex_272455, 1)) / 2.5500000000000000e+02);
		F.line = 68;
		result_272456.g = (addInt(mulInt(c2n_272175(hex_272455, 2), 16), c2n_272175(hex_272455, 3)) / 2.5500000000000000e+02);
		F.line = 69;
		result_272456.b = (addInt(mulInt(c2n_272175(hex_272455, 4), 16), c2n_272175(hex_272455, 5)) / 2.5500000000000000e+02);
		F.line = 70;
		result_272456.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_272456;

}

function HEX5BHEX5D_154304(s_154308, x_154310) {
	var result_154311 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3977;
		var a_154401 = x_154310.a;
		F.line = 3978;
		var l_154601 = addInt(subInt(subInt((s_154308 != null ? s_154308.length : 0), x_154310.b), a_154401), 1);
		F.line = 3979;
		result_154311 = nimCopy(null, mnewString(chckRange(l_154601, 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 3980;
			var i_154609 = 0;
			F.line = 2739;
			var i_357084 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_357084 < l_154601)) break L3;
						F.line = 3980;
						i_154609 = i_357084;
						F.line = 3980;
						result_154311[chckIndx(i_154609, 0, (result_154311 != null ? result_154311.length : 0)+0-1)-0] = s_154308[chckIndx(addInt(i_154609, a_154401), 0, (s_154308 != null ? s_154308.length : 0)+0-1)-0];
						F.line = 2742;
						i_357084 = addInt(i_357084, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_154311;

}

function HEX2EHEX2E_154239(a_154243, b_154244) {
	var result_154250 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_154250, {a: a_154243, b: b_154244}, NTI154247);
	framePtr = F.prev;

	return result_154250;

}

function parse_html_hex_273286(hex_273288) {
	var result_273289 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlHex",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		F.line = 110;
		if (!((hex_273288[chckIndx(0, 0, (hex_273288 != null ? hex_273288.length : 0)+0-1)-0] == 35))) {
		F.line = 3478;
		var eHEX60gensym273292_273403 = null;
		F.line = 3481;
		eHEX60gensym273292_273403 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 115;
		eHEX60gensym273292_273403.message = nimCopy(null, makeNimstrLit("Expected \'#\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym273292_273403.parent = null;
		F.line = 115;
		raiseException(eHEX60gensym273292_273403, "InvalidColor");
		}
		
		nimCopy(result_273289, parse_hex_272453(HEX5BHEX5D_154304(hex_273288, HEX2EHEX2E_154239(1, 1))), NTI272112);
	framePtr = F.prev;

	return result_273289;

}

function HEX5BHEX5D_127281(s_127285, x_127287) {
	var result_127288 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3977;
		var a_127401 = x_127287.a;
		F.line = 3978;
		var l_127601 = addInt(subInt(x_127287.b, a_127401), 1);
		F.line = 3979;
		result_127288 = nimCopy(null, mnewString(chckRange(l_127601, 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 3980;
			var i_127609 = 0;
			F.line = 2739;
			var i_357092 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_357092 < l_127601)) break L3;
						F.line = 3980;
						i_127609 = i_357092;
						F.line = 3980;
						result_127288[chckIndx(i_127609, 0, (result_127288 != null ? result_127288.length : 0)+0-1)-0] = s_127285[chckIndx(addInt(i_127609, a_127401), 0, (s_127285 != null ? s_127285.length : 0)+0-1)-0];
						F.line = 2742;
						i_357092 = addInt(i_357092, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_127288;

}

function HEX2EHEX2E_127220(a_127224, b_127225) {
	var result_127227 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 502;
		nimCopy(result_127227, {a: a_127224, b: b_127225}, NTI107907);
	framePtr = F.prev;

	return result_127227;

}

function HEX5BHEX5D_71398(s_71400, i_71401) {
	var result_71402 = 0;

	var F={procname:"system.[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4060;
		result_71402 = s_71400[chckIndx(subInt((s_71400 != null ? s_71400.length : 0), i_71401), 0, (s_71400 != null ? s_71400.length : 0)+0-1)-0];
	framePtr = F.prev;

	return result_71402;

}

function nsuFindChar(s_207016, sub_207017, start_207018, last_207019) {
		var Tmp1;

	var result_207021 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1867;
		if ((last_207019 == 0)) {
		Tmp1 = (s_207016 != null ? (s_207016.length-1) : -1);
		}
		else {
		Tmp1 = last_207019;
		}
		
		var last_207023 = Tmp1;
		L2: do {
			F.line = 1879;
			var i_207406 = 0;
			F.line = 2699;
			var colontmp__357112 = 0;
			F.line = 1879;
			colontmp__357112 = start_207018;
			F.line = 2710;
			var res_357113 = colontmp__357112;
			L3: do {
				F.line = 2711;
					L4: while (true) {
					if (!(res_357113 <= last_207023)) break L4;
						F.line = 1879;
						i_207406 = res_357113;
						if ((sub_207017 == s_207016[chckIndx(i_207406, 0, (s_207016 != null ? s_207016.length : 0)+0-1)-0])) {
						F.line = 1880;
						result_207021 = i_207406;
						break BeforeRet;
						}
						
						F.line = 2713;
						res_357113 = addInt(res_357113, 1);
					}
			} while(false);
		} while(false);
		F.line = 1881;
		result_207021 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_207021;

}

function substr_74453(s_74455, first_74456) {
	var result_74458 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4536;
		result_74458 = nimCopy(null, substr_74422(s_74455, first_74456, (s_74455 != null ? (s_74455.length-1) : -1)), NTI44040);
	framePtr = F.prev;

	return result_74458;

}

function nsuInitSkipTable(a_206749, sub_206750) {
	var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1803;
		var m_206751 = (sub_206750 != null ? sub_206750.length : 0);
		F.line = 1804;
		var i_206753 = 0;
		L1: do {
			F.line = 1805;
				L2: while (true) {
				if (!(i_206753 <= 248)) break L2;
					F.line = 1806;
					a_206749[chckIndx(chckRange(addInt(i_206753, 0), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1807;
					a_206749[chckIndx(chckRange(addInt(i_206753, 1), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1808;
					a_206749[chckIndx(chckRange(addInt(i_206753, 2), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1809;
					a_206749[chckIndx(chckRange(addInt(i_206753, 3), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1810;
					a_206749[chckIndx(chckRange(addInt(i_206753, 4), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1811;
					a_206749[chckIndx(chckRange(addInt(i_206753, 5), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1812;
					a_206749[chckIndx(chckRange(addInt(i_206753, 6), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1813;
					a_206749[chckIndx(chckRange(addInt(i_206753, 7), 0, 255), 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = m_206751;
					F.line = 1814;
					i_206753 = addInt(i_206753, 8);
				}
		} while(false);
		L3: do {
			F.line = 1816;
			var i_206770 = 0;
			F.line = 2737;
			var colontmp__357120 = 0;
			F.line = 1816;
			colontmp__357120 = subInt(m_206751, 1);
			F.line = 2739;
			var i_357121 = 0;
			L4: do {
				F.line = 2740;
					L5: while (true) {
					if (!(i_357121 < colontmp__357120)) break L5;
						F.line = 1816;
						i_206770 = i_357121;
						F.line = 1817;
						a_206749[chckIndx(sub_206750[chckIndx(i_206770, 0, (sub_206750 != null ? sub_206750.length : 0)+0-1)-0], 0, (a_206749 != null ? a_206749.length : 0)+0-1)-0] = subInt(subInt(m_206751, 1), i_206770);
						F.line = 2742;
						i_357121 = addInt(i_357121, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function nsuFindStrA(a_206786, s_206787, sub_206788, start_206789, last_206790) {
		var Tmp1;

	var result_206792 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1827;
		if ((last_206790 == 0)) {
		Tmp1 = (s_206787 != null ? (s_206787.length-1) : -1);
		}
		else {
		Tmp1 = last_206790;
		}
		
		var last_206794 = Tmp1;
		F.line = 1828;
		var sub_last_206795 = subInt((sub_206788 != null ? sub_206788.length : 0), 1);
		if ((sub_last_206795 == -1)) {
		F.line = 1833;
		result_206792 = start_206789;
		break BeforeRet;
		}
		
		F.line = 1837;
		var skip_206797 = start_206789;
		L2: do {
			F.line = 1839;
				L3: while (true) {
				if (!(sub_last_206795 <= subInt(last_206794, skip_206797))) break L3;
					F.line = 1840;
					var i_206798 = sub_last_206795;
					L4: do {
						F.line = 1841;
							L5: while (true) {
							if (!(s_206787[chckIndx(addInt(skip_206797, i_206798), 0, (s_206787 != null ? s_206787.length : 0)+0-1)-0] == sub_206788[chckIndx(i_206798, 0, (sub_206788 != null ? sub_206788.length : 0)+0-1)-0])) break L5;
								if ((i_206798 == 0)) {
								F.line = 1843;
								result_206792 = skip_206797;
								break BeforeRet;
								}
								
								F.line = 1844;
								i_206798 = subInt(i_206798, 1);
							}
					} while(false);
					F.line = 1845;
					skip_206797 = addInt(skip_206797, a_206786[chckIndx(s_206787[chckIndx(addInt(skip_206797, sub_last_206795), 0, (s_206787 != null ? s_206787.length : 0)+0-1)-0], 0, (a_206786 != null ? a_206786.length : 0)+0-1)-0]);
				}
		} while(false);
		F.line = 1846;
		result_206792 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_206792;

}

function nsuReplaceStr(s_208318, sub_208319, by_208320) {
	var result_208321 = null;

	var F={procname:"strutils.replace",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2068;
		result_208321 = nimCopy(null, [], NTI44040);
		F.line = 2069;
		var sub_len_208322 = (sub_208319 != null ? sub_208319.length : 0);
		if ((sub_len_208322 == 0)) {
		F.line = 2071;
		result_208321 = nimCopy(null, s_208318, NTI44040);
		}
		else {
		if ((sub_len_208322 == 1)) {
		F.line = 2075;
		var c_208323 = sub_208319[chckIndx(0, 0, (sub_208319 != null ? sub_208319.length : 0)+0-1)-0];
		F.line = 2076;
		var last_208325 = (s_208318 != null ? (s_208318.length-1) : -1);
		F.line = 2077;
		var i_208327 = 0;
		L1: do {
			F.line = 2078;
				L2: while (true) {
				if (!true) break L2;
					F.line = 2079;
					var j_208328 = nsuFindChar(s_208318, c_208323, chckRange(i_208327, 0, 2147483647), last_208325);
					if ((j_208328 < 0)) {
					F.line = 2080;
					break L1;
					}
					
					F.line = 2081;
					if (result_208321 != null) { result_208321 = (result_208321).concat(substr_74422(s_208318, i_208327, subInt(j_208328, 1))); } else { result_208321 = substr_74422(s_208318, i_208327, subInt(j_208328, 1)).slice(); };
					F.line = 2082;
					if (result_208321 != null) { result_208321 = (result_208321).concat(by_208320); } else { result_208321 = by_208320.slice(); };
					F.line = 2083;
					i_208327 = addInt(j_208328, sub_len_208322);
				}
		} while(false);
		F.line = 2085;
		if (result_208321 != null) { result_208321 = (result_208321).concat(substr_74453(s_208318, i_208327)); } else { result_208321 = substr_74453(s_208318, i_208327).slice(); };
		}
		else {
			F.line = 2087;
			var a_208329 = [new Int32Array(256)];
			F.line = 2088;
			nsuInitSkipTable(a_208329[0], sub_208319);
			F.line = 2089;
			var last_208332 = (s_208318 != null ? (s_208318.length-1) : -1);
			F.line = 2090;
			var i_208334 = 0;
			L3: do {
				F.line = 2091;
					L4: while (true) {
					if (!true) break L4;
						F.line = 2092;
						var j_208335 = nsuFindStrA(a_208329[0], s_208318, sub_208319, chckRange(i_208334, 0, 2147483647), last_208332);
						if ((j_208335 < 0)) {
						F.line = 2093;
						break L3;
						}
						
						F.line = 2094;
						if (result_208321 != null) { result_208321 = (result_208321).concat(substr_74422(s_208318, i_208334, subInt(j_208335, 1))); } else { result_208321 = substr_74422(s_208318, i_208334, subInt(j_208335, 1)).slice(); };
						F.line = 2095;
						if (result_208321 != null) { result_208321 = (result_208321).concat(by_208320); } else { result_208321 = by_208320.slice(); };
						F.line = 2096;
						i_208334 = addInt(j_208335, sub_len_208322);
					}
			} while(false);
			F.line = 2098;
			if (result_208321 != null) { result_208321 = (result_208321).concat(substr_74453(s_208318, i_208334)); } else { result_208321 = substr_74453(s_208318, i_208334).slice(); };
		}
		}
	framePtr = F.prev;

	return result_208321;

}

function nsuSplitChar(s_202455, sep_202456, maxsplit_202458) {
	var result_202460 = null;

	var F={procname:"strutils.split",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 423;
		result_202460 = nimCopy(null, [], NTI202476);
		L1: do {
			F.line = 424;
			var xHEX60gensym202461_202477 = null;
			F.line = 395;
			var lastHEX60gensym201812_357129 = 0;
			F.line = 396;
			var splitsHEX60gensym201813_357130 = maxsplit_202458;
			L2: do {
				F.line = 456;
					L3: while (true) {
					if (!(lastHEX60gensym201812_357129 <= (s_202455 != null ? s_202455.length : 0))) break L3;
						F.line = 399;
						var firstHEX60gensym201814_357132 = lastHEX60gensym201812_357129;
						L4: do {
							F.line = 400;
								L5: while (true) {
								if (!((lastHEX60gensym201812_357129 < (s_202455 != null ? s_202455.length : 0)) && !((s_202455[chckIndx(lastHEX60gensym201812_357129, 0, (s_202455 != null ? s_202455.length : 0)+0-1)-0] == sep_202456)))) break L5;
									F.line = 401;
									lastHEX60gensym201812_357129 = addInt(lastHEX60gensym201812_357129, 1);
								}
						} while(false);
						if ((splitsHEX60gensym201813_357130 == 0)) {
						F.line = 402;
						lastHEX60gensym201812_357129 = (s_202455 != null ? s_202455.length : 0);
						}
						
						F.line = 733;
						xHEX60gensym202461_202477 = substr_74422(s_202455, firstHEX60gensym201814_357132, subInt(lastHEX60gensym201812_357129, 1));
						F.line = 424;
						var Tmp6 = nimCopy(null, xHEX60gensym202461_202477, NTI44040);
						if (result_202460 != null) { result_202460.push(Tmp6); } else { result_202460 = [Tmp6]; };
						if ((splitsHEX60gensym201813_357130 == 0)) {
						F.line = 404;
						break L2;
						}
						
						F.line = 405;
						splitsHEX60gensym201813_357130 = subInt(splitsHEX60gensym201813_357130, 1);
						F.line = 406;
						lastHEX60gensym201812_357129 = addInt(lastHEX60gensym201812_357129, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_202460;

}

function min_56501(x_56503, y_56504) {
		var Tmp1;
			var Tmp2;

	var result_56505 = 0.0;

			if ((x_56503 <= y_56504)) Tmp2 = true; else {				Tmp2 = !((y_56504 == y_56504));			}		if (Tmp2) {
		Tmp1 = x_56503;
		}
		else {
		Tmp1 = y_56504;
		}
		
		result_56505 = Tmp1;

	return result_56505;

}

function to_float_54457(i_54459) {
	var result_54460 = 0.0;

	var F={procname:"system.toFloat",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 2288;
		result_54460 = i_54459;
	framePtr = F.prev;

	return result_54460;

}

function ten_to_the_power_of_69326(b_69328) {
	var result_69329 = 0.0;

	var F={procname:"system.tenToThePowerOf",prev:framePtr,filename:"jssys.nim",line:0};
	framePtr = F;
		F.line = 669;
		var b_69330 = b_69328;
		F.line = 670;
		var a_69331 = 1.0000000000000000e+01;
		F.line = 671;
		result_69329 = 1.0000000000000000e+00;
		L1: do {
			F.line = 672;
				L2: while (true) {
				if (!true) break L2;
					if (((b_69330 & 1) == 1)) {
					F.line = 674;
					result_69329 = (result_69329 * a_69331);
					}
					
					F.line = 675;
					b_69330 = (b_69330 >> 1);
					if ((b_69330 == 0)) {
					F.line = 676;
					break L1;
					}
					
					F.line = 677;
					a_69331 = (a_69331 * a_69331);
				}
		} while(false);
	framePtr = F.prev;

	return result_69329;

}

function npuParseFloat(s_116623, number_116625, number_116625_Idx, start_116626) {
	var result_116628 = 0;

	var F={procname:"parseutils.parseFloat",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 571;
		var bf_116629 = [0.0];
		F.line = 572;
		result_116628 = nimParseBiggestFloat(s_116623, bf_116629, 0, start_116626);
		if (!((result_116628 == 0))) {
		F.line = 574;
		number_116625[number_116625_Idx] = bf_116629[0];
		}
		
	framePtr = F.prev;

	return result_116628;

}

function nsuParseFloat(s_204225) {
			var Tmp1;

	var result_204226 = [0.0];

	var F={procname:"strutils.parseFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1138;
		var l_204228 = npuParseFloat(s_204225, result_204226, 0, 0);
			if (!((l_204228 == (s_204225 != null ? s_204225.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_204228 == 0);			}		if (Tmp1) {
		F.line = 3478;
		var eHEX60gensym204231_204403 = null;
		F.line = 3481;
		eHEX60gensym204231_204403 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1140;
		eHEX60gensym204231_204403.message = nimCopy(null, (makeNimstrLit("invalid float: ") || []).concat(s_204225 || []), NTI44040);
		F.line = 3474;
		eHEX60gensym204231_204403.parent = null;
		F.line = 1140;
		raiseException(eHEX60gensym204231_204403, "ValueError");
		}
		
	framePtr = F.prev;

	return result_204226[0];

}

function parse_html_rgba_274446(text_274448) {
	var result_274449 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_127281(text_274448, HEX2EHEX2E_127220(0, 4)), makeNimstrLit("rgba(")))) {
		F.line = 3478;
		var eHEX60gensym274489_274603 = null;
		F.line = 3481;
		eHEX60gensym274489_274603 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 193;
		eHEX60gensym274489_274603.message = nimCopy(null, makeNimstrLit("Expected \'rgba(\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym274489_274603.parent = null;
		F.line = 193;
		raiseException(eHEX60gensym274489_274603, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_71398(text_274448, 1) == 41))) {
		F.line = 3478;
		var eHEX60gensym274617_274803 = null;
		F.line = 3481;
		eHEX60gensym274617_274803 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 195;
		eHEX60gensym274617_274803.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym274617_274803.parent = null;
		F.line = 195;
		raiseException(eHEX60gensym274617_274803, "InvalidColor");
		}
		
		F.line = 196;
		var inner_274844 = nsuReplaceStr(HEX5BHEX5D_154304(text_274448, HEX2EHEX2E_154239(5, 2)), makeNimstrLit(" "), []);
		F.line = 197;
		var arr_274845 = nsuSplitChar(inner_274844, 44, -1);
		if (!(((arr_274845 != null ? arr_274845.length : 0) == 4))) {
		F.line = 3478;
		var eHEX60gensym274853_275003 = null;
		F.line = 3481;
		eHEX60gensym274853_275003 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 199;
		eHEX60gensym274853_275003.message = nimCopy(null, makeNimstrLit("Expected 4 numbers in rgba()"), NTI44040);
		F.line = 3474;
		eHEX60gensym274853_275003.parent = null;
		F.line = 199;
		raiseException(eHEX60gensym274853_275003, "InvalidColor");
		}
		
		F.line = 200;
		result_274449.r = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274845[chckIndx(0, 0, (arr_274845 != null ? arr_274845.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 201;
		result_274449.g = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274845[chckIndx(1, 0, (arr_274845 != null ? arr_274845.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 202;
		result_274449.b = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274845[chckIndx(2, 0, (arr_274845 != null ? arr_274845.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 203;
		result_274449.a = min_56501(1.0000000000000000e+00, nsuParseFloat(arr_274845[chckIndx(3, 0, (arr_274845 != null ? arr_274845.length : 0)+0-1)-0]));
	framePtr = F.prev;

	return result_274449;

}

function parse_html_rgb_273881(text_273883) {
	var result_273884 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlRgb",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		if (!(eqStrings(HEX5BHEX5D_127281(text_273883, HEX2EHEX2E_127220(0, 3)), makeNimstrLit("rgb(")))) {
		F.line = 3478;
		var eHEX60gensym273924_274003 = null;
		F.line = 3481;
		eHEX60gensym273924_274003 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 158;
		eHEX60gensym273924_274003.message = nimCopy(null, makeNimstrLit("Expected \'rgb(\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym273924_274003.parent = null;
		F.line = 158;
		raiseException(eHEX60gensym273924_274003, "InvalidColor");
		}
		
		if (!((HEX5BHEX5D_71398(text_273883, 1) == 41))) {
		F.line = 3478;
		var eHEX60gensym274017_274203 = null;
		F.line = 3481;
		eHEX60gensym274017_274203 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 160;
		eHEX60gensym274017_274203.message = nimCopy(null, makeNimstrLit("Expected \')\'"), NTI44040);
		F.line = 3474;
		eHEX60gensym274017_274203.parent = null;
		F.line = 160;
		raiseException(eHEX60gensym274017_274203, "InvalidColor");
		}
		
		F.line = 161;
		var inner_274244 = nsuReplaceStr(HEX5BHEX5D_154304(text_273883, HEX2EHEX2E_154239(4, 2)), makeNimstrLit(" "), []);
		F.line = 162;
		var arr_274245 = nsuSplitChar(inner_274244, 44, -1);
		if (!(((arr_274245 != null ? arr_274245.length : 0) == 3))) {
		F.line = 3478;
		var eHEX60gensym274253_274403 = null;
		F.line = 3481;
		eHEX60gensym274253_274403 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 164;
		eHEX60gensym274253_274403.message = nimCopy(null, makeNimstrLit("Expected 3 numbers in rgb()"), NTI44040);
		F.line = 3474;
		eHEX60gensym274253_274403.parent = null;
		F.line = 164;
		raiseException(eHEX60gensym274253_274403, "InvalidColor");
		}
		
		F.line = 165;
		result_273884.r = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274245[chckIndx(0, 0, (arr_274245 != null ? arr_274245.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 166;
		result_273884.g = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274245[chckIndx(1, 0, (arr_274245 != null ? arr_274245.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 167;
		result_273884.b = min_56501(1.0000000000000000e+00, (nsuParseFloat(arr_274245[chckIndx(2, 0, (arr_274245 != null ? arr_274245.length : 0)+0-1)-0]) / 2.5500000000000000e+02));
		F.line = 168;
		result_273884.a = 1.0000000000000000e+00;
	framePtr = F.prev;

	return result_273884;

}

function nsuToLowerAsciiChar(c_201380) {
	var result_201381 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet10[c_201380] != undefined)) {
		F.line = 222;
		result_201381 = chckRange(addInt(c_201380, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_201381 = c_201380;
		}
		
	framePtr = F.prev;

	return result_201381;

}

function nsuToLowerAsciiStr(s_201430) {
	var result_201431 = null;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_201431 = nimCopy(null, mnewString(chckRange((s_201430 != null ? s_201430.length : 0), 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 228;
			var iHEX60gensym201432_201441 = 0;
			F.line = 2699;
			var colontmp__357145 = 0;
			F.line = 228;
			colontmp__357145 = subInt((s_201430 != null ? s_201430.length : 0), 1);
			F.line = 2710;
			var res_357146 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_357146 <= colontmp__357145)) break L3;
						F.line = 243;
						iHEX60gensym201432_201441 = res_357146;
						F.line = 229;
						result_201431[chckIndx(iHEX60gensym201432_201441, 0, (result_201431 != null ? result_201431.length : 0)+0-1)-0] = nsuToLowerAsciiChar(s_201430[chckIndx(iHEX60gensym201432_201441, 0, (s_201430 != null ? s_201430.length : 0)+0-1)-0]);
						F.line = 2713;
						res_357146 = addInt(res_357146, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_201431;

}

function has_key_275572(t_275577, key_275578) {
	var result_275579 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 397;
		var hc_275580 = [0];
		F.line = 398;
		result_275579 = (0 <= raw_get_250002(t_275577, key_275578, hc_275580, 0));
	framePtr = F.prev;

	return result_275579;

}

function has_key_275311(t_275316, key_275317) {
	var result_275318 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 892;
		result_275318 = has_key_275572(t_275316, key_275317);
	framePtr = F.prev;

	return result_275318;

}

function contains_275231(t_275236, key_275237) {
	var result_275238 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 902;
		result_275238 = has_key_275311(t_275236, key_275237);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_275238;

}

function HEX5BHEX5D_276070(t_276076, key_276077) {
	var result_276079 = null;
	var result_276079_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 259;
		var hcHEX60gensym110565_276080 = [0];
		F.line = 260;
		var indexHEX60gensym110566_276089 = raw_get_250002(t_276076, key_276077, hcHEX60gensym110565_276080, 0);
		if ((0 <= indexHEX60gensym110566_276089)) {
		F.line = 261;
		result_276079 = t_276076.data[chckIndx(indexHEX60gensym110566_276089, 0, (t_276076.data != null ? t_276076.data.length : 0)+0-1)-0]; result_276079_Idx = "Field2";
		}
		else {
			F.line = 3478;
			var eHEX60gensym276403_276603 = null;
			F.line = 3481;
			eHEX60gensym276403_276603 = {m_type: NTI47454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 264;
			eHEX60gensym276403_276603.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_276077 || []), NTI44040);
			F.line = 3474;
			eHEX60gensym276403_276603.parent = null;
			F.line = 264;
			raiseException(eHEX60gensym276403_276603, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_276079, result_276079_Idx];

}

function HEX5BHEX5D_275773(t_275778, key_275779) {
		var Tmp1;

	var result_275781 = null;
	var result_275781_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 858;
		result_275781 = (Tmp1 = HEX5BHEX5D_276070(t_275778, key_275779), Tmp1)[0]; result_275781_Idx = Tmp1[1];
	framePtr = F.prev;

	return [result_275781, result_275781_Idx];

}

function parse_html_name_275110(text_275112) {
		var Tmp1;

	var result_275113 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlName",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 259;
		var lower_name_275114 = nsuToLowerAsciiStr(text_275112);
		if (contains_275231(color_names_253676[0], lower_name_275114)) {
		F.line = 261;
		nimCopy(result_275113, parse_hex_272453((Tmp1 = HEX5BHEX5D_275773(color_names_253676[0], lower_name_275114), Tmp1)[0][Tmp1[1]]), NTI272112);
		break BeforeRet;
		}
		else {
			F.line = 3478;
			var eHEX60gensym276651_276803 = null;
			F.line = 3481;
			eHEX60gensym276651_276803 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			eHEX60gensym276651_276803.message = nimCopy(null, makeNimstrLit("Not a valid color name."), NTI44040);
			F.line = 3474;
			eHEX60gensym276651_276803.parent = null;
			F.line = 263;
			raiseException(eHEX60gensym276651_276803, "InvalidColor");
		}
		
	} while (false);
	framePtr = F.prev;

	return result_275113;

}

function parse_html_color_276823(color_text_276825) {
	var result_276826 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.parseHtmlColor",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 273;
		var text_276827 = nsuStrip(color_text_276825, true, true, ConstSet2);
		if ((text_276827[chckIndx(0, 0, (text_276827 != null ? text_276827.length : 0)+0-1)-0] == 35)) {
		if (((text_276827 != null ? text_276827.length : 0) == 4)) {
		F.line = 276;
		nimCopy(result_276826, parse_html_hex_tiny_273489(text_276827), NTI272112);
		break BeforeRet;
		}
		else {
		if (((text_276827 != null ? text_276827.length : 0) == 7)) {
		F.line = 278;
		nimCopy(result_276826, parse_html_hex_273286(text_276827), NTI272112);
		break BeforeRet;
		}
		else {
			F.line = 3478;
			var eHEX60gensym276830_277003 = null;
			F.line = 3481;
			eHEX60gensym276830_277003 = {m_type: NTI272114, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 280;
			eHEX60gensym276830_277003.message = nimCopy(null, makeNimstrLit("HTML color invalid."), NTI44040);
			F.line = 3474;
			eHEX60gensym276830_277003.parent = null;
			F.line = 280;
			raiseException(eHEX60gensym276830_277003, "InvalidColor");
		}
		}
		}
		else {
		if (eqStrings(HEX5BHEX5D_127281(text_276827, HEX2EHEX2E_127220(0, 3)), makeNimstrLit("rgba"))) {
		F.line = 282;
		nimCopy(result_276826, parse_html_rgba_274446(text_276827), NTI272112);
		break BeforeRet;
		}
		else {
		if (eqStrings(HEX5BHEX5D_127281(text_276827, HEX2EHEX2E_127220(0, 2)), makeNimstrLit("rgb"))) {
		F.line = 284;
		nimCopy(result_276826, parse_html_rgb_273881(text_276827), NTI272112);
		break BeforeRet;
		}
		else {
			F.line = 286;
			nimCopy(result_276826, parse_html_name_275110(text_276827), NTI272112);
			break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_276826;

}

function color_272119(r_272121, g_272122, b_272123, a_272124) {
	var result_272125 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.color",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		F.line = 32;
		result_272125.r = r_272121;
		F.line = 33;
		result_272125.g = g_272122;
		F.line = 34;
		result_272125.b = b_272123;
		F.line = 35;
		result_272125.a = a_272124;
	framePtr = F.prev;

	return result_272125;

}
var colors_357035 = {fieldLight: parse_html_color_276823(makeNimstrLit("#AAAAAA")), fieldDark: parse_html_color_276823(makeNimstrLit("#999999")), warn: color_272119(1.0000000000000000e+00, 0.0, 0.0, 1.0000000000000000e+00), buttonColor: parse_html_color_276823(makeNimstrLit("#c4c4c4")), buttonHover: parse_html_color_276823(makeNimstrLit("#DDDDDD")), buttonPressed: parse_html_color_276823(makeNimstrLit("#BBBBBB")), lbText: color_272119(0.0, 0.0, 0.0, 1.0000000000000000e+00)};

function new_358015() {
	var result_358019 = null;

	var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1749;
		var r_358201 = null;
		F.line = 1752;
		r_358201 = {m_type: NTI354020, field: null, size: 0, winCount: 0, leaderboard: null, player_count: 0, players: null, current_player_number: 0, winner_player_number: 0};
		F.line = 1753;
		result_358019 = r_358201;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_358019;

}

function new_358253() {
	var result_358257 = null;

	var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1749;
		var r_358401 = null;
		F.line = 1752;
		r_358401 = {name1: null, name2: null, ai: false, size: 0, winCount: 0};
		F.line = 1753;
		result_358257 = r_358401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_358257;

}
var game_358251 = new_358015();
var settings_358451 = new_358253();
var winner_announced_358452 = [false];
var starting_player_358454 = [1];
set_default_354154(settings_358451);
setup_355942(game_358251, settings_358451);

function HEX5BHEX5D_359022(s_359027, i_359028) {
	var result_359030 = null;
	var result_359030_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4063;
		result_359030 = s_359027; result_359030_Idx = chckIndx(subInt((s_359027 != null ? s_359027.length : 0), i_359028), 0, (s_359027 != null ? s_359027.length : 0)+0-1)-0;
	framePtr = F.prev;

	return [result_359030, result_359030_Idx];

}

function create_default_element_322899(tag_322901) {
	var result_322902 = null;

	var F={procname:"backendhtml.createDefaultElement",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 72;
		result_322902 = document.createElement(toJSStr(tag_322901));
		if ((eqStrings(tag_322901, makeNimstrLit("textarea")) || eqStrings(tag_322901, makeNimstrLit("input")))) {
		F.line = 74;
		result_322902.setAttribute("type", "text");
		F.line = 75;
		result_322902.style.border = "none";
		F.line = 76;
		result_322902.style.outline = "none";
		F.line = 77;
		result_322902.style.backgroundColor = "transparent";
		F.line = 78;
		result_322902.style.fontFamily = "inherit";
		F.line = 79;
		result_322902.style.fontSize = "inherit";
		F.line = 80;
		result_322902.style.fontWeight = "inherit";
		F.line = 81;
		result_322902.style.padding = "0px";
		F.line = 82;
		result_322902.style.resize = "none";
		}
		
	framePtr = F.prev;

	return result_322902;

}

function tag_322878(group_322880) {
	var result_322881 = null;

	var F={procname:"backendhtml.tag",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (eqStrings(group_322880.kind, [])) {
		F.line = 58;
		result_322881 = nimCopy(null, [], NTI44040);
		break BeforeRet;
		}
		else {
		if (eqStrings(group_322880.kind, makeNimstrLit("text"))) {
		if (group_322880.editableText) {
		if (group_322880.multiline) {
		F.line = 62;
		result_322881 = nimCopy(null, makeNimstrLit("textarea"), NTI44040);
		break BeforeRet;
		}
		else {
			F.line = 64;
			result_322881 = nimCopy(null, makeNimstrLit("input"), NTI44040);
			break BeforeRet;
		}
		
		}
		else {
			F.line = 66;
			result_322881 = nimCopy(null, makeNimstrLit("span"), NTI44040);
			break BeforeRet;
		}
		
		}
		else {
			F.line = 68;
			result_322881 = nimCopy(null, makeNimstrLit("div"), NTI44040);
			break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_322881;

}

function HEX3DHEX3D_322988(x_322991, y_322992) {
	var result_322993 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_322991.x == y_322992.x))) {
		F.line = 3209;
		result_322993 = false;
		break BeforeRet;
		}
		
		if (!((x_322991.y == y_322992.y))) {
		F.line = 3209;
		result_322993 = false;
		break BeforeRet;
		}
		
		if (!((x_322991.w == y_322992.w))) {
		F.line = 3209;
		result_322993 = false;
		break BeforeRet;
		}
		
		if (!((x_322991.h == y_322992.h))) {
		F.line = 3209;
		result_322993 = false;
		break BeforeRet;
		}
		
		F.line = 3210;
		result_322993 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_322993;

}

function HEX3DHEX3D_323019(x_323022, y_323023) {
	var result_323024 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_323022.r == y_323023.r))) {
		F.line = 3209;
		result_323024 = false;
		break BeforeRet;
		}
		
		if (!((x_323022.g == y_323023.g))) {
		F.line = 3209;
		result_323024 = false;
		break BeforeRet;
		}
		
		if (!((x_323022.b == y_323023.b))) {
		F.line = 3209;
		result_323024 = false;
		break BeforeRet;
		}
		
		if (!((x_323022.a == y_323023.a))) {
		F.line = 3209;
		result_323024 = false;
		break BeforeRet;
		}
		
		F.line = 3210;
		result_323024 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323024;

}

function to_html_rgba_275026(c_275028) {
	var result_275029 = null;

	var F={procname:"chroma.toHtmlRgba",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 215;
		result_275029 = nimCopy(null, (makeNimstrLit("rgba(") || []).concat(cstrToNimstr(((((c_275028.r * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_275028.g * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr(((((c_275028.b * 2.5500000000000000e+02))|0))+"") || [],makeNimstrLit(", ") || [],cstrToNimstr((c_275028.a)+"") || [],makeNimstrLit(")") || []), NTI44040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_275029;

}

function HEX3DHEX3D_323068(x_323071, y_323072) {
	var result_323073 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_323071["Field0"] == y_323072["Field0"]))) {
		F.line = 3209;
		result_323073 = false;
		break BeforeRet;
		}
		
		if (!((x_323071["Field1"] == y_323072["Field1"]))) {
		F.line = 3209;
		result_323073 = false;
		break BeforeRet;
		}
		
		if (!((x_323071["Field2"] == y_323072["Field2"]))) {
		F.line = 3209;
		result_323073 = false;
		break BeforeRet;
		}
		
		if (!((x_323071["Field3"] == y_323072["Field3"]))) {
		F.line = 3209;
		result_323073 = false;
		break BeforeRet;
		}
		
		F.line = 3210;
		result_323073 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323073;

}

function HEX3DHEX3D_324025(x_324028, y_324029) {
	var result_324030 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((x_324028.kind == y_324029.kind))) {
		F.line = 3209;
		result_324030 = false;
		break BeforeRet;
		}
		
		if (!((x_324028.blur == y_324029.blur))) {
		F.line = 3209;
		result_324030 = false;
		break BeforeRet;
		}
		
		if (!((x_324028.x == y_324029.x))) {
		F.line = 3209;
		result_324030 = false;
		break BeforeRet;
		}
		
		if (!((x_324028.y == y_324029.y))) {
		F.line = 3209;
		result_324030 = false;
		break BeforeRet;
		}
		
		if (!(HEX3DHEX3D_323019(x_324028.color, y_324029.color))) {
		F.line = 3209;
		result_324030 = false;
		break BeforeRet;
		}
		
		F.line = 3210;
		result_324030 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_324030;

}

function HEX3DHEX3D_323101(x_323105, y_323107) {
	var result_323108 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 3044;
		var same_object_323601 = false;
		F.line = 3045;
		same_object_323601 = x_323105 === y_323107
		if (same_object_323601) {
		F.line = 3046;
		result_323108 = true;
		break BeforeRet;
		}
		
		if (!(((x_323105 != null ? x_323105.length : 0) == (y_323107 != null ? y_323107.length : 0)))) {
		F.line = 3053;
		result_323108 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 3055;
			var i_324024 = 0;
			F.line = 2699;
			var colontmp__366148 = 0;
			F.line = 3055;
			colontmp__366148 = subInt((x_323105 != null ? x_323105.length : 0), 1);
			F.line = 2710;
			var res_366149 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366149 <= colontmp__366148)) break L3;
						F.line = 3055;
						i_324024 = res_366149;
						if (!(HEX3DHEX3D_324025(x_323105[chckIndx(i_324024, 0, (x_323105 != null ? x_323105.length : 0)+0-1)-0], y_323107[chckIndx(i_324024, 0, (y_323107 != null ? y_323107.length : 0)+0-1)-0]))) {
						F.line = 3057;
						result_323108 = false;
						break BeforeRet;
						}
						
						F.line = 2713;
						res_366149 = addInt(res_366149, 1);
					}
			} while(false);
		} while(false);
		F.line = 3059;
		result_323108 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_323108;

}

function parse_saturated_natural_116231(s_116233, b_116235, b_116235_Idx, start_116236) {
			var Tmp1;
					var Tmp4;

	var result_116238 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 481;
		var i_116239 = start_116236;
		if (((i_116239 < (s_116233 != null ? s_116233.length : 0)) && (s_116233[chckIndx(i_116239, 0, (s_116233 != null ? s_116233.length : 0)+0-1)-0] == 43))) {
		F.line = 482;
		i_116239 = addInt(i_116239, 1);
		}
		
			if (!(i_116239 < (s_116233 != null ? s_116233.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet15[s_116233[chckIndx(i_116239, 0, (s_116233 != null ? s_116233.length : 0)+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 484;
		b_116235[b_116235_Idx] = 0;
		L2: do {
			F.line = 485;
				L3: while (true) {
					if (!(i_116239 < (s_116233 != null ? s_116233.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet16[s_116233[chckIndx(i_116239, 0, (s_116233 != null ? s_116233.length : 0)+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 486;
					var c_116268 = subInt(s_116233[chckIndx(i_116239, 0, (s_116233 != null ? s_116233.length : 0)+0-1)-0], 48);
					if ((b_116235[b_116235_Idx] <= divInt(subInt(2147483647, c_116268), 10))) {
					F.line = 488;
					b_116235[b_116235_Idx] = addInt(mulInt(b_116235[b_116235_Idx], 10), c_116268);
					}
					else {
						F.line = 490;
						b_116235[b_116235_Idx] = 2147483647;
					}
					
					F.line = 491;
					i_116239 = addInt(i_116239, 1);
					L5: do {
						F.line = 492;
							L6: while (true) {
							if (!((i_116239 < (s_116233 != null ? s_116233.length : 0)) && (s_116233[chckIndx(i_116239, 0, (s_116233 != null ? s_116233.length : 0)+0-1)-0] == 95))) break L6;
								F.line = 492;
								i_116239 = addInt(i_116239, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 493;
		result_116238 = subInt(i_116239, start_116236);
		}
		
	framePtr = F.prev;

	return result_116238;

}

function parse_standard_format_specifier_307324(s_307326, start_307327, ignore_unknown_suffix_307329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_307330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 379;
		result_307330.fill = 32;
		F.line = 380;
		result_307330.align = 0;
		F.line = 381;
		result_307330.sign = 45;
		F.line = 382;
		var i_307333 = start_307327;
		if (((addInt(i_307333, 1) < (s_307326 != null ? s_307326.length : 0)) && (ConstSet11[s_307326[chckIndx(addInt(i_307333, 1), 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 384;
		result_307330.fill = s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0];
		F.line = 385;
		result_307330.align = s_307326[chckIndx(addInt(i_307333, 1), 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0];
		F.line = 386;
		i_307333 = addInt(i_307333, 2);
		}
		else {
		if (((i_307333 < (s_307326 != null ? s_307326.length : 0)) && (ConstSet12[s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 388;
		result_307330.align = s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0];
		F.line = 389;
		i_307333 = addInt(i_307333, 1);
		}
		}
		if (((i_307333 < (s_307326 != null ? s_307326.length : 0)) && (ConstSet13[s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0]] != undefined))) {
		F.line = 392;
		result_307330.sign = s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0];
		F.line = 393;
		i_307333 = addInt(i_307333, 1);
		}
		
		if (((i_307333 < (s_307326 != null ? s_307326.length : 0)) && (s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0] == 35))) {
		F.line = 396;
		result_307330.alternateForm = true;
		F.line = 397;
		i_307333 = addInt(i_307333, 1);
		}
		
			if (!((addInt(i_307333, 1) < (s_307326 != null ? s_307326.length : 0)) && (s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet14[s_307326[chckIndx(addInt(i_307333, 1), 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 400;
		result_307330.padWithZero = true;
		F.line = 401;
		i_307333 = addInt(i_307333, 1);
		}
		
		F.line = 403;
		var parsed_length_307391 = parse_saturated_natural_116231(s_307326, result_307330, "minimumWidth", i_307333);
		F.line = 404;
		i_307333 = addInt(i_307333, parsed_length_307391);
		if (((i_307333 < (s_307326 != null ? s_307326.length : 0)) && (s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0] == 46))) {
		F.line = 406;
		i_307333 = addInt(i_307333, 1);
		F.line = 407;
		var parsed_length_b_307405 = parse_saturated_natural_116231(s_307326, result_307330, "precision", i_307333);
		F.line = 408;
		i_307333 = addInt(i_307333, parsed_length_b_307405);
		}
		else {
			F.line = 410;
			result_307330.precision = -1;
		}
		
			if (!(i_307333 < (s_307326 != null ? s_307326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet17[s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 413;
		result_307330.typ = s_307326[chckIndx(i_307333, 0, (s_307326 != null ? s_307326.length : 0)+0-1)-0];
		F.line = 414;
		i_307333 = addInt(i_307333, 1);
		}
		
		F.line = 415;
		result_307330.endPosition = i_307333;
			if (!!((i_307333 == (s_307326 != null ? s_307326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_307329);			}		if (Tmp3) {
		F.line = 3478;
		var eHEX60gensym307460_307603 = null;
		F.line = 3481;
		eHEX60gensym307460_307603 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 418;
		eHEX60gensym307460_307603.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_154304(s_307326, HEX2EHEX2E_154239(i_307333, 1)) || []), NTI44040);
		F.line = 3474;
		eHEX60gensym307460_307603.parent = null;
		F.line = 417;
		raiseException(eHEX60gensym307460_307603, "ValueError");
		}
		
	framePtr = F.prev;

	return result_307330;

}

function nsuformatBiggestFloat(f_209221, format_209222, precision_209228, decimal_sep_209229) {
	var result_209230 = null;

	var F={procname:"strutils.formatBiggestFloat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2322;
		var precision_209401 = precision_209228;
		if ((precision_209401 == -1)) {
		F.line = 2325;
		precision_209401 = 6;
		}
		
		F.line = 2326;
		var res_209403 = null;
		F.line = 2327;
		switch (format_209222) {
		case 0:
			F.line = 2329;
			res_209403 = f_209221.toString();
			break;
		case 1:
			F.line = 2331;
			res_209403 = f_209221.toFixed(precision_209401);
			break;
		case 2:
			F.line = 2333;
			res_209403 = f_209221.toExponential(precision_209401);
			break;
		}
		F.line = 2334;
		result_209230 = nimCopy(null, cstrToNimstr(res_209403), NTI44040);
		if (((1.0000000000000000e+00 / f_209221) == -Infinity)) {
		F.line = 2337;
		result_209230 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_209403) || []), NTI44040);
		}
		
		L1: do {
			F.line = 2338;
			var i_209411 = 0;
			F.line = 2737;
			var colontmp__366164 = 0;
			F.line = 2338;
			colontmp__366164 = (result_209230 != null ? result_209230.length : 0);
			F.line = 2739;
			var i_366165 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_366165 < colontmp__366164)) break L3;
						F.line = 2338;
						i_209411 = i_366165;
						if ((ConstSet18[result_209230[chckIndx(i_209411, 0, (result_209230 != null ? result_209230.length : 0)+0-1)-0]] != undefined)) {
						F.line = 2341;
						result_209230[chckIndx(i_209411, 0, (result_209230 != null ? result_209230.length : 0)+0-1)-0] = decimal_sep_209229;
						}
						
						F.line = 2742;
						i_366165 = addInt(i_366165, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_209230;

}

function insert_72601(x_72604, x_72604_Idx, item_72605, i_72606) {
	var F={procname:"system.insert",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4255;
		var xl_72607 = (x_72604[x_72604_Idx] != null ? x_72604[x_72604_Idx].length : 0);
		F.line = 4256;
		(x_72604[x_72604_Idx] == null ? x_72604[x_72604_Idx] = mnewString(chckRange(addInt(xl_72607, (item_72605 != null ? item_72605.length : 0)), 0, 2147483647)) : x_72604[x_72604_Idx].length = chckRange(addInt(xl_72607, (item_72605 != null ? item_72605.length : 0)), 0, 2147483647));
		F.line = 4257;
		var j_72608 = subInt(xl_72607, 1);
		L1: do {
			F.line = 4258;
				L2: while (true) {
				if (!(i_72606 <= j_72608)) break L2;
					F.line = 4259;
					x_72604[x_72604_Idx][chckIndx(addInt(j_72608, (item_72605 != null ? item_72605.length : 0)), 0, (x_72604[x_72604_Idx] != null ? x_72604[x_72604_Idx].length : 0)+0-1)-0] = x_72604[x_72604_Idx][chckIndx(j_72608, 0, (x_72604[x_72604_Idx] != null ? x_72604[x_72604_Idx].length : 0)+0-1)-0];
					F.line = 4260;
					j_72608 = subInt(j_72608, 1);
				}
		} while(false);
		F.line = 4261;
		j_72608 = 0;
		L3: do {
			F.line = 4262;
				L4: while (true) {
				if (!(j_72608 < (item_72605 != null ? item_72605.length : 0))) break L4;
					F.line = 4263;
					x_72604[x_72604_Idx][chckIndx(addInt(j_72608, i_72606), 0, (x_72604[x_72604_Idx] != null ? x_72604[x_72604_Idx].length : 0)+0-1)-0] = item_72605[chckIndx(j_72608, 0, (item_72605 != null ? item_72605.length : 0)+0-1)-0];
					F.line = 4264;
					j_72608 = addInt(j_72608, 1);
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuRepeatChar(c_205656, count_205657) {
	var result_205658 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1294;
		result_205658 = nimCopy(null, mnewString(count_205657), NTI44040);
		L1: do {
			F.line = 1295;
			var i_205667 = 0;
			F.line = 2699;
			var colontmp__366171 = 0;
			F.line = 1295;
			colontmp__366171 = subInt(count_205657, 1);
			F.line = 2710;
			var res_366172 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366172 <= colontmp__366171)) break L3;
						F.line = 1295;
						i_205667 = res_366172;
						F.line = 1295;
						result_205658[chckIndx(i_205667, 0, (result_205658 != null ? result_205658.length : 0)+0-1)-0] = c_205656;
						F.line = 2713;
						res_366172 = addInt(res_366172, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_205658;

}

function validate_utf8_121829(s_121831) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_121832 = 0;

	var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 175;
		var i_121834 = 0;
		F.line = 176;
		var l_121835 = (s_121831 != null ? s_121831.length : 0);
		L1: do {
			F.line = 177;
				L2: while (true) {
				if (!(i_121834 < l_121835)) break L2;
					if ((s_121831[chckIndx(i_121834, 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] <= 127)) {
					F.line = 179;
					i_121834 = addInt(i_121834, 1);
					}
					else {
					if ((((s_121831[chckIndx(i_121834, 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_121831[chckIndx(i_121834, 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] < 194)) {
					F.line = 181;
					result_121832 = i_121834;
					break BeforeRet;
					}
					
						if (!(addInt(i_121834, 1) < l_121835)) Tmp3 = false; else {							Tmp3 = (((s_121831[chckIndx(addInt(i_121834, 1), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 182;
					i_121834 = addInt(i_121834, 2);
					}
					else {
						F.line = 183;
						result_121832 = i_121834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_121831[chckIndx(i_121834, 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_121834, 2) < l_121835)) Tmp5 = false; else {							Tmp5 = (((s_121831[chckIndx(addInt(i_121834, 1), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_121831[chckIndx(addInt(i_121834, 2), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 186;
					i_121834 = addInt(i_121834, 3);
					}
					else {
						F.line = 187;
						result_121832 = i_121834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_121831[chckIndx(i_121834, 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_121834, 3) < l_121835)) Tmp8 = false; else {							Tmp8 = (((s_121831[chckIndx(addInt(i_121834, 1), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_121831[chckIndx(addInt(i_121834, 2), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_121831[chckIndx(addInt(i_121834, 3), 0, (s_121831 != null ? s_121831.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 192;
					i_121834 = addInt(i_121834, 4);
					}
					else {
						F.line = 193;
						result_121832 = i_121834;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 195;
						result_121832 = i_121834;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 196;
		result_121832 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_121832;

}

function nucruneLen(s_118829) {
	var result_118830 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		F.line = 44;
		var i_118832 = 0;
		L1: do {
			F.line = 45;
				L2: while (true) {
				if (!(i_118832 < (s_118829 != null ? s_118829.length : 0))) break L2;
					if ((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] <= 127)) {
					F.line = 46;
					i_118832 = addInt(i_118832, 1);
					}
					else {
					if ((((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 47;
					i_118832 = addInt(i_118832, 2);
					}
					else {
					if ((((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 48;
					i_118832 = addInt(i_118832, 3);
					}
					else {
					if ((((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 49;
					i_118832 = addInt(i_118832, 4);
					}
					else {
					if ((((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 50;
					i_118832 = addInt(i_118832, 5);
					}
					else {
					if ((((s_118829[chckIndx(i_118832, 0, (s_118829 != null ? s_118829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 51;
					i_118832 = addInt(i_118832, 6);
					}
					else {
						F.line = 52;
					i_118832 = addInt(i_118832, 1);
					}
					}}}}}
					F.line = 53;
					result_118830 = addInt(result_118830, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_118830;

}

function align_string_307223(s_307225, minimum_width_307226, align_307227, fill_307228) {
			var Tmp1;

	var result_307229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_307226 == 0)) {
		F.line = 282;
		result_307229 = nimCopy(null, s_307225, NTI44040);
		}
		else {
			F.line = 284;
			if ((validate_utf8_121829(s_307225) == -1)) {
			Tmp1 = nucruneLen(s_307225);
			}
			else {
			Tmp1 = (s_307225 != null ? s_307225.length : 0);
			}
			
			var s_rune_len_307231 = Tmp1;
			F.line = 285;
			var to_fill_307232 = subInt(minimum_width_307226, s_rune_len_307231);
			if ((to_fill_307232 <= 0)) {
			F.line = 287;
			result_307229 = nimCopy(null, s_307225, NTI44040);
			}
			else {
			if (((align_307227 == 60) || (align_307227 == 0))) {
			F.line = 289;
			result_307229 = nimCopy(null, (s_307225 || []).concat(nsuRepeatChar(fill_307228, chckRange(to_fill_307232, 0, 2147483647)) || []), NTI44040);
			}
			else {
			if ((align_307227 == 94)) {
			F.line = 291;
			var half_307233 = divInt(to_fill_307232, 2);
			F.line = 292;
			result_307229 = nimCopy(null, (nsuRepeatChar(fill_307228, chckRange(half_307233, 0, 2147483647)) || []).concat(s_307225 || [],nsuRepeatChar(fill_307228, chckRange(subInt(to_fill_307232, half_307233), 0, 2147483647)) || []), NTI44040);
			}
			else {
				F.line = 294;
				result_307229 = nimCopy(null, (nsuRepeatChar(fill_307228, chckRange(to_fill_307232, 0, 2147483647)) || []).concat(s_307225 || []), NTI44040);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_307229;

}

function nsuToUpperAsciiChar(c_201463) {
	var result_201464 = 0;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet20[c_201463] != undefined)) {
		F.line = 261;
		result_201464 = chckRange(subInt(c_201463, 32), 0, 255);
		}
		else {
			F.line = 263;
			result_201464 = c_201463;
		}
		
	framePtr = F.prev;

	return result_201464;

}

function nsuToUpperAsciiStr(s_201502) {
	var result_201503 = null;

	var F={procname:"strutils.toUpperAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_201503 = nimCopy(null, mnewString(chckRange((s_201502 != null ? s_201502.length : 0), 0, 2147483647)), NTI44040);
		L1: do {
			F.line = 228;
			var iHEX60gensym201504_201513 = 0;
			F.line = 2699;
			var colontmp__366197 = 0;
			F.line = 228;
			colontmp__366197 = subInt((s_201502 != null ? s_201502.length : 0), 1);
			F.line = 2710;
			var res_366198 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366198 <= colontmp__366197)) break L3;
						F.line = 277;
						iHEX60gensym201504_201513 = res_366198;
						F.line = 229;
						result_201503[chckIndx(iHEX60gensym201504_201513, 0, (result_201503 != null ? result_201503.length : 0)+0-1)-0] = nsuToUpperAsciiChar(s_201502[chckIndx(iHEX60gensym201504_201513, 0, (s_201502 != null ? s_201502.length : 0)+0-1)-0]);
						F.line = 2713;
						res_366198 = addInt(res_366198, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_201503;

}

function format_value_324229(result_324232, result_324232_Idx, value_324233, specifier_324234) {
		var Tmp1;

	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_324234 != null ? specifier_324234.length : 0) == 0)) {
		F.line = 446;
		if (result_324232[result_324232_Idx] != null) { result_324232[result_324232_Idx] = (result_324232[result_324232_Idx]).concat(cstrToNimstr((value_324233)+"")); } else { result_324232[result_324232_Idx] = cstrToNimstr((value_324233)+"").slice(); };
		F.line = 447;
		break BeforeRet;
		}
		
		F.line = 448;
		var spec_324235 = parse_standard_format_specifier_307324(specifier_324234, 0, false);
		F.line = 450;
		var fmode_324236 = 0;
		F.line = 451;
		switch (spec_324235.typ) {
		case 101:
		case 69:
			F.line = 453;
			fmode_324236 = 2;
			break;
		case 102:
		case 70:
			F.line = 455;
			fmode_324236 = 1;
			break;
		case 103:
		case 71:
			F.line = 457;
			fmode_324236 = 0;
			break;
		case 0:
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym324238_324403 = null;
			F.line = 3481;
			eHEX60gensym324238_324403 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 462;
			eHEX60gensym324238_324403.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_324235.typ]), NTI44040);
			F.line = 3474;
			eHEX60gensym324238_324403.parent = null;
			F.line = 460;
			raiseException(eHEX60gensym324238_324403, "ValueError");
			break;
		}
		F.line = 464;
		var f_324410 = [nsuformatBiggestFloat(value_324233, fmode_324236, chckRange(spec_324235.precision, -1, 32), 46)];
		F.line = 465;
		var sign_324411 = false;
		if ((0.0 <= value_324233)) {
		if (!((spec_324235.sign == 45))) {
		F.line = 468;
		sign_324411 = true;
		if ((value_324233 == 0.0)) {
		if (((1.0000000000000000e+00 / value_324233) == Infinity)) {
		F.line = 472;
		insert_72601(f_324410, 0, nimCharToStr(spec_324235.sign), 0);
		}
		
		}
		else {
			F.line = 474;
		insert_72601(f_324410, 0, nimCharToStr(spec_324235.sign), 0);
		}
		
		}
		
		}
		else {
			F.line = 476;
			sign_324411 = true;
		}
		
		if (spec_324235.padWithZero) {
		F.line = 479;
		var sign_str_324414 = [];
		if (sign_324411) {
		F.line = 481;
		sign_str_324414 = nimCopy(null, nimCharToStr(f_324410[0][chckIndx(0, 0, (f_324410[0] != null ? f_324410[0].length : 0)+0-1)-0]), NTI44040);
		F.line = 482;
		f_324410[0] = nimCopy(null, HEX5BHEX5D_154304(f_324410[0], HEX2EHEX2E_154239(1, 1)), NTI44040);
		}
		
		F.line = 484;
		var to_fill_324457 = subInt(subInt(spec_324235.minimumWidth, (f_324410[0] != null ? f_324410[0].length : 0)), (sign_324411 ? 1:0));
		if ((0 < to_fill_324457)) {
		F.line = 486;
		f_324410[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_324457, 0, 2147483647)) || []).concat(f_324410[0] || []), NTI44040);
		}
		
		if (sign_324411) {
		F.line = 488;
		f_324410[0] = nimCopy(null, (sign_str_324414 || []).concat(f_324410[0] || []), NTI44040);
		}
		
		}
		
		F.line = 491;
		if ((spec_324235.align == 0)) {
		Tmp1 = 62;
		}
		else {
		Tmp1 = spec_324235.align;
		}
		
		var align_324460 = Tmp1;
		F.line = 492;
		var res_324461 = align_string_307223(f_324410[0], spec_324235.minimumWidth, align_324460, spec_324235.fill);
		if ((ConstSet19[spec_324235.typ] != undefined)) {
		F.line = 494;
		if (result_324232[result_324232_Idx] != null) { result_324232[result_324232_Idx] = (result_324232[result_324232_Idx]).concat(nsuToUpperAsciiStr(res_324461)); } else { result_324232[result_324232_Idx] = nsuToUpperAsciiStr(res_324461).slice(); };
		}
		else {
			F.line = 496;
		if (result_324232[result_324232_Idx] != null) { result_324232[result_324232_Idx] = (result_324232[result_324232_Idx]).concat(res_324461); } else { result_324232[result_324232_Idx] = res_324461.slice(); };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function rune_len_at_118961(s_118963, i_118964) {
	var result_118965 = 0;

	var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		if ((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] <= 127)) {
		F.line = 65;
		result_118965 = 1;
		}
		else {
		if ((((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
		F.line = 66;
		result_118965 = 2;
		}
		else {
		if ((((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
		F.line = 67;
		result_118965 = 3;
		}
		else {
		if ((((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
		F.line = 68;
		result_118965 = 4;
		}
		else {
		if ((((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
		F.line = 69;
		result_118965 = 5;
		}
		else {
		if ((((s_118963[chckIndx(i_118964, 0, (s_118963 != null ? s_118963.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
		F.line = 70;
		result_118965 = 6;
		}
		else {
			F.line = 71;
			result_118965 = 1;
		}
		}}}}}
	framePtr = F.prev;

	return result_118965;

}

function rune_offset_124644(s_124646, pos_124647, start_124648) {
	var result_124649 = 0;

	var F={procname:"unicode.runeOffset",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 322;
		var i_124651 = 0;
		F.line = 323;
		var o_124652 = start_124648;
		L1: do {
			F.line = 324;
				L2: while (true) {
				if (!(i_124651 < pos_124647)) break L2;
					F.line = 325;
					o_124652 = addInt(o_124652, chckRange(rune_len_at_118961(s_124646, o_124652), 0, 2147483647));
					if (((s_124646 != null ? s_124646.length : 0) <= o_124652)) {
					F.line = 327;
					result_124649 = -1;
					break BeforeRet;
					}
					
					F.line = 328;
					i_124651 = addInt(i_124651, 1);
				}
		} while(false);
		F.line = 329;
		result_124649 = o_124652;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_124649;

}

function format_value_307688(result_307691, result_307691_Idx, value_307692, specifier_307693) {
	var F={procname:"strformat.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 502;
		var spec_307694 = parse_standard_format_specifier_307324(specifier_307693, 0, false);
		F.line = 503;
		var value_307695 = nimCopy(null, value_307692, NTI44040);
		F.line = 504;
		switch (spec_307694.typ) {
		case 115:
		case 0:
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym307698_307803 = null;
			F.line = 3481;
			eHEX60gensym307698_307803 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 508;
			eHEX60gensym307698_307803.message = nimCopy(null, (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_307694.typ]), NTI44040);
			F.line = 3474;
			eHEX60gensym307698_307803.parent = null;
			F.line = 507;
			raiseException(eHEX60gensym307698_307803, "ValueError");
			break;
		}
		if (!((spec_307694.precision == -1))) {
		if ((spec_307694.precision < nucruneLen(value_307695))) {
		F.line = 512;
		(value_307695 == null ? value_307695 = mnewString(chckRange(rune_offset_124644(value_307695, chckRange(spec_307694.precision, 0, 2147483647), 0), 0, 2147483647)) : value_307695.length = chckRange(rune_offset_124644(value_307695, chckRange(spec_307694.precision, 0, 2147483647), 0), 0, 2147483647));
		}
		
		}
		
		F.line = 513;
		if (result_307691[result_307691_Idx] != null) { result_307691[result_307691_Idx] = (result_307691[result_307691_Idx]).concat(align_string_307223(value_307695, spec_307694.minimumWidth, spec_307694.align, spec_307694.fill)); } else { result_307691[result_307691_Idx] = align_string_307223(value_307695, spec_307694.minimumWidth, spec_307694.align, spec_307694.fill).slice(); };
	framePtr = F.prev;

	
}

function HEX3DHEX3D_324544(x_324547, y_324548) {
	var result_324549 = false;

	var F={procname:"==.==",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(eqStrings(x_324547.fontFamily, y_324548.fontFamily))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		if (!((x_324547.fontSize == y_324548.fontSize))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		if (!((x_324547.fontWeight == y_324548.fontWeight))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		if (!((x_324547.lineHeight == y_324548.lineHeight))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		if (!((x_324547.textAlignHorizontal == y_324548.textAlignHorizontal))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		if (!((x_324547.textAlignVertical == y_324548.textAlignVertical))) {
		F.line = 3209;
		result_324549 = false;
		break BeforeRet;
		}
		
		F.line = 3210;
		result_324549 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_324549;

}

function raw_get_317202(t_317206, key_317207, hc_317208, hc_317208_Idx) {
						var Tmp3;

	var result_317209 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_317208[hc_317208_Idx] = hash_96814(key_317207);
		if ((hc_317208[hc_317208_Idx] == 0)) {
		F.line = 56;
		hc_317208[hc_317208_Idx] = 314159265;
		}
		
		if (((t_317206.data != null ? t_317206.data.length : 0) == 0)) {
		F.line = 38;
		result_317209 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_317351 = (hc_317208[hc_317208_Idx] & (t_317206.data != null ? (t_317206.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_110018(t_317206.data[chckIndx(h_317351, 0, (t_317206.data != null ? t_317206.data.length : 0)+0-1)-0].Field0)) break L2;
						if (!(t_317206.data[chckIndx(h_317351, 0, (t_317206.data != null ? t_317206.data.length : 0)+0-1)-0].Field0 == hc_317208[hc_317208_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_317206.data[chckIndx(h_317351, 0, (t_317206.data != null ? t_317206.data.length : 0)+0-1)-0].Field1, key_317207);						}					if (Tmp3) {
					F.line = 46;
					result_317209 = h_317351;
					break BeforeRet;
					}
					
					F.line = 47;
					h_317351 = next_try_110035(h_317351, (t_317206.data != null ? (t_317206.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_317209 = subInt(-1, h_317351);
	} while (false);
	framePtr = F.prev;

	return result_317209;

}

function has_key_321385(t_321390, key_321391) {
	var result_321392 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 397;
		var hc_321393 = [0];
		F.line = 398;
		result_321392 = (0 <= raw_get_317202(t_321390, key_321391, hc_321393, 0));
	framePtr = F.prev;

	return result_321392;

}

function has_key_321124(t_321129, key_321130) {
	var result_321131 = false;

	var F={procname:"hasKey.hasKey",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 892;
		result_321131 = has_key_321385(t_321129, key_321130);
	framePtr = F.prev;

	return result_321131;

}

function contains_321044(t_321049, key_321050) {
	var result_321051 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 902;
		result_321051 = has_key_321124(t_321049, key_321050);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_321051;

}

function HEX5BHEX5D_321883(t_321889, key_321890) {
	var result_321892 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 259;
		var hcHEX60gensym110565_321893 = [0];
		F.line = 260;
		var indexHEX60gensym110566_321902 = raw_get_317202(t_321889, key_321890, hcHEX60gensym110565_321893, 0);
		if ((0 <= indexHEX60gensym110566_321902)) {
		F.line = 261;
		result_321892 = t_321889.data[chckIndx(indexHEX60gensym110566_321902, 0, (t_321889.data != null ? t_321889.data.length : 0)+0-1)-0].Field2;
		}
		else {
			F.line = 3478;
			var eHEX60gensym322203_322403 = null;
			F.line = 3481;
			eHEX60gensym322203_322403 = {m_type: NTI47454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 264;
			eHEX60gensym322203_322403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_321890 || []), NTI44040);
			F.line = 3474;
			eHEX60gensym322203_322403.parent = null;
			F.line = 264;
			raiseException(eHEX60gensym322203_322403, "KeyError");
		}
		
	framePtr = F.prev;

	return result_321892;

}

function HEX5BHEX5D_321586(t_321591, key_321592) {
	var result_321594 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 858;
		result_321594 = HEX5BHEX5D_321883(t_321591, key_321592);
	framePtr = F.prev;

	return result_321594;

}

function raw_insert_319508(t_319514, data_319517, data_319517_Idx, key_319518, val_319519, hc_319520, h_319521) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tableimpl.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_319517[data_319517_Idx][chckIndx(h_319521, 0, (data_319517[data_319517_Idx] != null ? data_319517[data_319517_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_319518, NTI44040);
		F.line = 23;
		nimCopy(data_319517[data_319517_Idx][chckIndx(h_319521, 0, (data_319517[data_319517_Idx] != null ? data_319517[data_319517_Idx].length : 0)+0-1)-0].Field2, val_319519, NTI316172);
		F.line = 24;
		data_319517[data_319517_Idx][chckIndx(h_319521, 0, (data_319517[data_319517_Idx] != null ? data_319517[data_319517_Idx].length : 0)+0-1)-0].Field0 = hc_319520;
	framePtr = F.prev;

	
}

function enlarge_318548(t_318554) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 269;
		var n_318562 = null;
		F.line = 270;
		n_318562 = new Array(chckRange(mulInt((t_318554.data != null ? t_318554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_318554.data != null ? t_318554.data.length : 0), 2), 0, 2147483647);++i) {n_318562[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}		F.line = 271;
		var Tmp1 = t_318554.data; t_318554.data = n_318562; n_318562 = Tmp1;		L2: do {
			F.line = 272;
			var i_318721 = 0;
			F.line = 2672;
			var colontmp__366215 = 0;
			F.line = 272;
			colontmp__366215 = (n_318562 != null ? (n_318562.length-1) : -1);
			F.line = 2689;
			var res_366216 = 0;
			L3: do {
				F.line = 2690;
					L4: while (true) {
					if (!(res_366216 <= colontmp__366215)) break L4;
						F.line = 272;
						i_318721 = res_366216;
						F.line = 273;
						var eh_318870 = n_318562[chckIndx(i_318721, 0, (n_318562 != null ? n_318562.length : 0)+0-1)-0].Field0;
						if (is_filled_110018(eh_318870)) {
						F.line = 275;
						var j_318877 = (eh_318870 & (t_318554.data != null ? (t_318554.data.length-1) : -1));
						L5: do {
							F.line = 276;
								L6: while (true) {
								if (!is_filled_110018(t_318554.data[chckIndx(j_318877, 0, (t_318554.data != null ? t_318554.data.length : 0)+0-1)-0].Field0)) break L6;
									F.line = 277;
									j_318877 = next_try_110035(j_318877, (t_318554.data != null ? (t_318554.data.length-1) : -1));
								}
						} while(false);
						F.line = 279;
						raw_insert_319508(t_318554, t_318554, "data", n_318562[chckIndx(i_318721, 0, (n_318562 != null ? n_318562.length : 0)+0-1)-0].Field1, n_318562[chckIndx(i_318721, 0, (n_318562 != null ? n_318562.length : 0)+0-1)-0].Field2, eh_318870, j_318877);
						}
						
						F.line = 2692;
						res_366216 = addInt(res_366216, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_320008(t_320012, key_320013, hc_320014) {
	var result_320015 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_320012.data != null ? t_320012.data.length : 0) == 0)) {
		F.line = 38;
		result_320015 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_320154 = (hc_320014 & (t_320012.data != null ? (t_320012.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_110018(t_320012.data[chckIndx(h_320154, 0, (t_320012.data != null ? t_320012.data.length : 0)+0-1)-0].Field0)) break L2;
					if (((t_320012.data[chckIndx(h_320154, 0, (t_320012.data != null ? t_320012.data.length : 0)+0-1)-0].Field0 == hc_320014) && eqStrings(t_320012.data[chckIndx(h_320154, 0, (t_320012.data != null ? t_320012.data.length : 0)+0-1)-0].Field1, key_320013))) {
					F.line = 46;
					result_320015 = h_320154;
					break BeforeRet;
					}
					
					F.line = 47;
					h_320154 = next_try_110035(h_320154, (t_320012.data != null ? (t_320012.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_320015 = subInt(-1, h_320154);
	} while (false);
	framePtr = F.prev;

	return result_320015;

}

function HEX5BHEX5DHEX3D_316774(t_316780, key_316781, val_316782) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_316780.data != null ? t_316780.data.length : 0) == 0)) {
		if (!(is_power_of_two_103062(64))) {
		F.line = 118;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_316780.counter = 0;
		F.line = 120;
		t_316780.data = new Array(64); for (var i=0;i<64;++i) {t_316780.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}		}
		
		F.line = 57;
		var hc_317201 = [0];
		F.line = 58;
		var index_317819 = raw_get_317202(t_316780, key_316781, hc_317201, 0);
		if ((0 <= index_317819)) {
		F.line = 59;
		nimCopy(t_316780.data[chckIndx(index_317819, 0, (t_316780.data != null ? t_316780.data.length : 0)+0-1)-0].Field2, val_316782, NTI316172);
		}
		else {
			if (((t_316780.data != null ? t_316780.data.length : 0) == 0)) {
			if (!(is_power_of_two_103062(64))) {
			F.line = 118;
			failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_316780.counter = 0;
			F.line = 120;
			t_316780.data = new Array(64); for (var i=0;i<64;++i) {t_316780.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0.0, Field1: 0.0}};}			}
			
			if (must_rehash_110053((t_316780.data != null ? t_316780.data.length : 0), t_316780.counter)) {
			F.line = 49;
			enlarge_318548(t_316780);
			F.line = 50;
			index_317819 = raw_get_known_hc_320008(t_316780, key_316781, hc_317201[0]);
			}
			
			F.line = 51;
			index_317819 = subInt(-1, index_317819);
			F.line = 52;
			raw_insert_319508(t_316780, t_316780, "data", key_316781, val_316782, hc_317201[0], index_317819);
			F.line = 60;
			t_316780.counter = addInt(t_316780.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_322559(t_322564, key_322565, val_322566) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 874;
		HEX5BHEX5DHEX3D_316774(t_322564, key_322565, val_322566);
	framePtr = F.prev;

	
}

function compute_text_box_320919(text_320921, width_320922, font_name_320923, font_size_320924) {
	var result_320926 = {Field0: 0.0, Field1: 0.0};

	var F={procname:"backendhtml.computeTextBox",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 32;
		var key_320927 = (text_320921 || []).concat(cstrToNimstr((width_320922)+"") || [],font_name_320923 || [],cstrToNimstr((font_size_320924)+"") || []);
		if (contains_321044(compute_text_box_cache_320905[0], key_320927)) {
		F.line = 34;
		nimCopy(result_320926, HEX5BHEX5D_321586(compute_text_box_cache_320905[0], key_320927), NTI320925);
		break BeforeRet;
		}
		
		F.line = 35;
		var temp_div_322449 = document.createElement("div");
		F.line = 36;
		document.body.appendChild(temp_div_322449);
		F.line = 37;
		temp_div_322449.style.fontSize = toJSStr((cstrToNimstr((font_size_320924)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 38;
		temp_div_322449.style.fontFamily = toJSStr(font_name_320923);
		F.line = 39;
		temp_div_322449.style.position = "absolute";
		F.line = 40;
		temp_div_322449.style.left = "-1000";
		F.line = 41;
		temp_div_322449.style.top = "-1000";
		F.line = 42;
		temp_div_322449.style.maxWidth = toJSStr((cstrToNimstr((width_320922)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 43;
		temp_div_322449.innerHTML = toJSStr(text_320921);
		F.line = 44;
		result_320926["Field0"] = temp_div_322449.clientWidth;
		F.line = 45;
		result_320926["Field1"] = temp_div_322449.clientHeight;
		F.line = 46;
		document.body.removeChild(temp_div_322449);
		F.line = 47;
		HEX5BHEX5DHEX3D_322559(compute_text_box_cache_320905[0], key_320927, result_320926);
	} while (false);
	framePtr = F.prev;

	return result_320926;

}

function HEX2DHEX3D_324615(x_324619, x_324619_Idx, y_324620) {
	var F={procname:"-=.-=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4152;
		x_324619[x_324619_Idx] = (x_324619[x_324619_Idx] - y_324620);
	framePtr = F.prev;

	
}

function draw_diff_322938(current_322940) {
			var Tmp1;
				var Tmp5;

	var F={procname:"backendhtml.drawDiff",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		if (((group_cache_316028[0] != null ? group_cache_316028[0].length : 0) == num_groups_304396[0])) {
		F.line = 92;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 94;
		var old_322952 = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
		F.line = 95;
		old_322952.kind = nimCopy(null, current_322940.kind, NTI44040);
		F.line = 96;
		old_322952.editableText = current_322940.editableText;
		F.line = 97;
		old_322952.multiline = current_322940.multiline;
		F.line = 98;
		var dom_322953 = create_default_element_322899(tag_322878(current_322940));
		F.line = 99;
		root_dom_node_316031[0].appendChild(dom_322953);
		F.line = 101;
		if (group_cache_316028[0] != null) { group_cache_316028[0].push(old_322952); } else { group_cache_316028[0] = [old_322952]; };
		F.line = 102;
		if (dom_cache_316030[0] != null) { dom_cache_316030[0].push(dom_322953); } else { dom_cache_316030[0] = [dom_322953]; };
		}
		
		F.line = 105;
		var dom_322968 = dom_cache_316030[0][chckIndx(num_groups_304396[0], 0, (dom_cache_316030[0] != null ? dom_cache_316030[0].length : 0)+0-1)-0];
		F.line = 106;
		var old_322969 = group_cache_316028[0][chckIndx(num_groups_304396[0], 0, (group_cache_316028[0] != null ? group_cache_316028[0].length : 0)+0-1)-0];
		if (!(eqStrings(tag_322878(old_322969), tag_322878(current_322940)))) {
		F.line = 111;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 113;
		old_322969 = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
		F.line = 114;
		old_322969.kind = nimCopy(null, current_322940.kind, NTI44040);
		F.line = 115;
		old_322969.editableText = current_322940.editableText;
		F.line = 116;
		old_322969.multiline = current_322940.multiline;
		F.line = 117;
		dom_322968 = create_default_element_322899(tag_322878(current_322940));
		F.line = 118;
		root_dom_node_316031[0].replaceChild(dom_322968, root_dom_node_316031[0].children[chckIndx(num_groups_304396[0], 0, (root_dom_node_316031[0].children != null ? root_dom_node_316031[0].children.length : 0)+0-1)-0]);
		F.line = 119;
		dom_cache_316030[0][chckIndx(num_groups_304396[0], 0, (dom_cache_316030[0] != null ? dom_cache_316030[0].length : 0)+0-1)-0] = dom_322968;
		F.line = 120;
		group_cache_316028[0][chckIndx(num_groups_304396[0], 0, (group_cache_316028[0] != null ? group_cache_316028[0].length : 0)+0-1)-0] = old_322969;
		}
		
		if (!(eqStrings(old_322969.kind, current_322940.kind))) {
		F.line = 124;
		old_322969.kind = nimCopy(null, current_322940.kind, NTI44040);
		}
		
		if (!(eqStrings(old_322969.idPath, current_322940.idPath))) {
		F.line = 128;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 129;
		old_322969.id = nimCopy(null, current_322940.id, NTI44040);
		F.line = 130;
		old_322969.idPath = nimCopy(null, current_322940.idPath, NTI44040);
		F.line = 131;
		dom_322968.id = toJSStr(current_322940.idPath);
		}
		
		if (!(HEX3DHEX3D_322988(old_322969.screenBox, current_322940.screenBox))) {
		F.line = 135;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 136;
		nimCopy(old_322969.screenBox, current_322940.screenBox, NTI301690);
		F.line = 137;
		dom_322968.style.position = "absolute";
		F.line = 138;
		dom_322968.style.left = toJSStr((cstrToNimstr((current_322940.screenBox.x)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 139;
		dom_322968.style.top = toJSStr((cstrToNimstr((current_322940.screenBox.y)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 140;
		dom_322968.style.width = toJSStr((cstrToNimstr((current_322940.screenBox.w)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 141;
		dom_322968.style.height = toJSStr((cstrToNimstr((current_322940.screenBox.h)+"") || []).concat(makeNimstrLit("px") || []));
		}
		
		if (!(HEX3DHEX3D_323019(old_322969.fill, current_322940.fill))) {
		F.line = 145;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 146;
		nimCopy(old_322969.fill, current_322940.fill, NTI272112);
		if (eqStrings(current_322940.kind, makeNimstrLit("text"))) {
		F.line = 148;
		dom_322968.style.color = toJSStr(to_html_rgba_275026(current_322940.fill));
		F.line = 149;
		dom_322968.style.backgroundColor = "rgba(0,0,0,0)";
		}
		else {
			F.line = 151;
			dom_322968.style.backgroundColor = toJSStr(to_html_rgba_275026(current_322940.fill));
			F.line = 152;
			dom_322968.style.color = "rgba(0,0,0,0)";
		}
		
		}
		
			if (!(HEX3DHEX3D_323019(old_322969.stroke, current_322940.stroke))) Tmp1 = true; else {				Tmp1 = !((old_322969.strokeWeight == current_322940.strokeWeight));			}		if (Tmp1) {
		F.line = 157;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 158;
		nimCopy(old_322969.stroke, current_322940.stroke, NTI272112);
		F.line = 159;
		old_322969.strokeWeight = current_322940.strokeWeight;
		if ((0.0 < current_322940.strokeWeight)) {
		F.line = 161;
		dom_322968.style.borderStyle = "solid";
		F.line = 162;
		dom_322968.style.boxSizing = "border-box";
		F.line = 163;
		dom_322968.style.borderColor = toJSStr(to_html_rgba_275026(current_322940.stroke));
		F.line = 164;
		dom_322968.style.borderWidth = toJSStr((cstrToNimstr((current_322940.strokeWeight)+"") || []).concat(makeNimstrLit("px") || []));
		}
		else {
			F.line = 166;
			dom_322968.style.borderStyle = "none";
		}
		
		}
		
		if (!(HEX3DHEX3D_323068(old_322969.cornerRadius, current_322940.cornerRadius))) {
		F.line = 170;
		nimCopy(old_322969.cornerRadius, current_322940.cornerRadius, NTI304270);
		F.line = 175;
		dom_322968.style.borderRadius = toJSStr((cstrToNimstr((current_322940.cornerRadius["Field0"])+"") || []).concat(makeNimstrLit("px ") || [],cstrToNimstr((current_322940.cornerRadius["Field1"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_322940.cornerRadius["Field2"])+"") || [],makeNimstrLit("px ") || [],cstrToNimstr((current_322940.cornerRadius["Field3"])+"") || [],makeNimstrLit("px") || []));
		}
		
		if (!((old_322969.transparency == current_322940.transparency))) {
		F.line = 180;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 181;
		old_322969.transparency = current_322940.transparency;
		F.line = 182;
		dom_322968.style.opacity = toJSStr(cstrToNimstr((current_322940.transparency)+""));
		}
		
		if (!(HEX3DHEX3D_323101(old_322969.shadows, current_322940.shadows))) {
		F.line = 186;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 187;
		old_322969.shadows = nimCopy(null, current_322940.shadows, NTI304278);
		F.line = 188;
		var box_shadow_string_324079 = [];
		L2: do {
			F.line = 189;
			var s_324214 = {kind: 0, blur: 0.0, x: 0.0, y: 0.0, color: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}};
			F.line = 182;
			var colontmp__366135 = null;
			F.line = 189;
			colontmp__366135 = current_322940.shadows;
			F.line = 184;
			var i_366137 = 0;
			F.line = 185;
			var l_366138 = (colontmp__366135 != null ? colontmp__366135.length : 0);
			L3: do {
				F.line = 186;
					L4: while (true) {
					if (!(i_366137 < l_366138)) break L4;
						F.line = 189;
						nimCopy(s_324214, colontmp__366135[chckIndx(i_366137, 0, (colontmp__366135 != null ? colontmp__366135.length : 0)+0-1)-0], NTI304213);
						if ((s_324214.kind == 0)) {
						F.line = 191;
						F.line = 191;
						var fmt_res_324223 = [mnewString(0)];
						F.line = 191;
						format_value_324229(fmt_res_324223, 0, s_324214.x, []);
						F.line = 191;
						if (fmt_res_324223[0] != null) { fmt_res_324223[0] = (fmt_res_324223[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324223[0] = makeNimstrLit("px "); };
						F.line = 191;
						format_value_324229(fmt_res_324223, 0, s_324214.y, []);
						F.line = 191;
						if (fmt_res_324223[0] != null) { fmt_res_324223[0] = (fmt_res_324223[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324223[0] = makeNimstrLit("px "); };
						F.line = 191;
						format_value_324229(fmt_res_324223, 0, s_324214.blur, []);
						F.line = 191;
						if (fmt_res_324223[0] != null) { fmt_res_324223[0] = (fmt_res_324223[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324223[0] = makeNimstrLit("px "); };
						F.line = 191;
						format_value_307688(fmt_res_324223, 0, to_html_rgba_275026(s_324214.color), []);
						F.line = 191;
						if (fmt_res_324223[0] != null) { fmt_res_324223[0] = (fmt_res_324223[0]).concat(makeNimstrLit(",")); } else { fmt_res_324223[0] = makeNimstrLit(","); };
						if (box_shadow_string_324079 != null) { box_shadow_string_324079 = (box_shadow_string_324079).concat(fmt_res_324223[0]); } else { box_shadow_string_324079 = fmt_res_324223[0].slice(); };
						}
						
						if ((s_324214.kind == 1)) {
						F.line = 193;
						F.line = 193;
						var fmt_res_324518 = [mnewString(0)];
						F.line = 193;
						if (fmt_res_324518[0] != null) { fmt_res_324518[0] = (fmt_res_324518[0]).concat(makeNimstrLit("inset ")); } else { fmt_res_324518[0] = makeNimstrLit("inset "); };
						F.line = 193;
						format_value_324229(fmt_res_324518, 0, s_324214.x, []);
						F.line = 193;
						if (fmt_res_324518[0] != null) { fmt_res_324518[0] = (fmt_res_324518[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324518[0] = makeNimstrLit("px "); };
						F.line = 193;
						format_value_324229(fmt_res_324518, 0, s_324214.y, []);
						F.line = 193;
						if (fmt_res_324518[0] != null) { fmt_res_324518[0] = (fmt_res_324518[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324518[0] = makeNimstrLit("px "); };
						F.line = 193;
						format_value_324229(fmt_res_324518, 0, s_324214.blur, []);
						F.line = 193;
						if (fmt_res_324518[0] != null) { fmt_res_324518[0] = (fmt_res_324518[0]).concat(makeNimstrLit("px ")); } else { fmt_res_324518[0] = makeNimstrLit("px "); };
						F.line = 193;
						format_value_307688(fmt_res_324518, 0, to_html_rgba_275026(s_324214.color), []);
						F.line = 193;
						if (fmt_res_324518[0] != null) { fmt_res_324518[0] = (fmt_res_324518[0]).concat(makeNimstrLit(",")); } else { fmt_res_324518[0] = makeNimstrLit(","); };
						if (box_shadow_string_324079 != null) { box_shadow_string_324079 = (box_shadow_string_324079).concat(fmt_res_324518[0]); } else { box_shadow_string_324079 = fmt_res_324518[0].slice(); };
						}
						
						F.line = 188;
						i_366137 = addInt(i_366137, 1);
						if (!(((colontmp__366135 != null ? colontmp__366135.length : 0) == l_366138))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if ((0 < (box_shadow_string_324079 != null ? box_shadow_string_324079.length : 0))) {
		F.line = 195;
		(box_shadow_string_324079 == null ? box_shadow_string_324079 = mnewString(chckRange(subInt((box_shadow_string_324079 != null ? box_shadow_string_324079.length : 0), 1), 0, 2147483647)) : box_shadow_string_324079.length = chckRange(subInt((box_shadow_string_324079 != null ? box_shadow_string_324079.length : 0), 1), 0, 2147483647));
		}
		
		F.line = 196;
		dom_322968.style.boxShadow = toJSStr(box_shadow_string_324079);
		}
		
		if (!(HEX3DHEX3D_324544(old_322969.textStyle, current_322940.textStyle))) {
		F.line = 200;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 201;
		nimCopy(old_322969.textStyle, current_322940.textStyle, NTI304207);
		F.line = 202;
		dom_322968.style.fontFamily = toJSStr(current_322940.textStyle.fontFamily);
		F.line = 203;
		dom_322968.style.fontSize = toJSStr((cstrToNimstr((current_322940.textStyle.fontSize)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 204;
		dom_322968.style.fontWeight = toJSStr(cstrToNimstr((current_322940.textStyle.fontWeight)+""));
		F.line = 206;
		dom_322968.style.lineHeight = toJSStr((cstrToNimstr((current_322940.textStyle.lineHeight)+"") || []).concat(makeNimstrLit("px") || []));
		}
		
		if (!(eqStrings(old_322969.imageName, current_322940.imageName))) {
		F.line = 210;
		perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
		F.line = 211;
		old_322969.imageName = nimCopy(null, current_322940.imageName, NTI44040);
		if (!(eqStrings(current_322940.imageName, []))) {
		F.line = 213;
		dom_322968.style.backgroundImage = toJSStr((makeNimstrLit("url(") || []).concat(current_322940.imageName || [],makeNimstrLit(".png)") || []));
		F.line = 214;
		dom_322968.style.backgroundSize = "100% 100%";
		}
		else {
			F.line = 216;
			dom_322968.style.backgroundImage = "";
		}
		
		}
		
		if (eqStrings(current_322940.kind, makeNimstrLit("text"))) {
		if (current_322940.editableText) {
		if (!(eqStrings(old_322969.text, current_322940.text))) {
		if (!((document.activeElement == dom_322968))) {
		F.line = 222;
		dom_322968.value = toJSStr(current_322940.text);
		}
		
		if (eqStrings(tag_322878(current_322940), makeNimstrLit("input"))) {
		F.line = 225;
		dom_322968.style.paddingBottom = toJSStr((cstrToNimstr(((current_322940.box.h - current_322940.textStyle.lineHeight))+"") || []).concat(makeNimstrLit("px") || []));
		}
		
		}
		
		}
		else {
			if (!(eqStrings(old_322969.text, current_322940.text))) {
			F.line = 229;
			perf_304394[0].numLowLevelCalls = addInt(perf_304394[0].numLowLevelCalls, 1);
			F.line = 230;
			old_322969.text = nimCopy(null, current_322940.text, NTI44040);
			F.line = 232;
			dom_322968.innerText = toJSStr(current_322940.text);
				if (!((current_322940.textStyle.textAlignHorizontal == -1))) Tmp5 = true; else {					Tmp5 = !((current_322940.textStyle.textAlignVertical == -1));				}			if (Tmp5) {
			F.line = 235;
			var box_324610 = compute_text_box_320919(current_322940.text, current_322940.screenBox.w, current_322940.textStyle.fontFamily, current_322940.textStyle.fontSize);
			F.line = 242;
			var left_324611 = [0.0];
			F.line = 243;
			switch (current_322940.textStyle.textAlignHorizontal) {
			case -1:
				F.line = 245;
				left_324611[0] = 0.0;
				break;
			case 1:
				F.line = 247;
				left_324611[0] = (current_322940.screenBox.w - box_324610["Field0"]);
				break;
			default: 
				F.line = 249;
				left_324611[0] = ((current_322940.screenBox.w / 2.0000000000000000e+00) - (box_324610["Field0"] / 2.0000000000000000e+00));
				break;
			}
			F.line = 251;
			var top_324613 = [0.0];
			F.line = 252;
			switch (current_322940.textStyle.textAlignVertical) {
			case -1:
				F.line = 254;
				top_324613[0] = 0.0;
				break;
			case 1:
				F.line = 256;
				top_324613[0] = (current_322940.screenBox.h - box_324610["Field1"]);
				break;
			default: 
				F.line = 258;
				top_324613[0] = ((current_322940.screenBox.h / 2.0000000000000000e+00) - (box_324610["Field1"] / 2.0000000000000000e+00));
				break;
			}
			F.line = 261;
			HEX2DHEX3D_324615(left_324611, 0, 2.0000000000000000e+00);
			F.line = 262;
			HEX2DHEX3D_324615(top_324613, 0, 1.0000000000000000e+00);
			F.line = 264;
			dom_322968.style.left = toJSStr((cstrToNimstr(((current_322940.screenBox.x + left_324611[0]))+"") || []).concat(makeNimstrLit("px") || []));
			F.line = 265;
			dom_322968.style.top = toJSStr((cstrToNimstr(((current_322940.screenBox.y + top_324613[0]))+"") || []).concat(makeNimstrLit("px") || []));
			}
			
			}
			
		}
		
		}
		
		F.line = 267;
		num_groups_304396[0] = addInt(num_groups_304396[0], 1);
	framePtr = F.prev;

	
}

function draw_324721(group_324723) {
	var F={procname:"backendhtml.draw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 271;
		draw_diff_322938(group_324723);
	framePtr = F.prev;

	
}

function org_box_359891(x_359897, y_359898, w_359899, h_359900) {
	var F={procname:"orgBox.orgBox",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 250;
		current_304385[0].orgBox.x = x_359897;
		F.line = 251;
		current_304385[0].orgBox.y = y_359898;
		F.line = 252;
		current_304385[0].orgBox.w = w_359899;
		F.line = 253;
		current_304385[0].orgBox.h = h_359900;
	framePtr = F.prev;

	
}

function HEX2B_304932(a_304934, b_304935) {
	var result_304936 = {x: 0.0, y: 0.0, w: 0.0, h: 0.0};

	var F={procname:"uibase.+",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 198;
		result_304936.x = (a_304934.x + b_304935.x);
		F.line = 199;
		result_304936.y = (a_304934.y + b_304935.y);
		F.line = 200;
		result_304936.w = a_304934.w;
		F.line = 201;
		result_304936.h = a_304934.h;
	framePtr = F.prev;

	return result_304936;

}

function box_326526(x_326528, y_326529, w_326530, h_326531) {
	var F={procname:"fidget.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 229;
		current_304385[0].box.x = x_326528;
		F.line = 230;
		current_304385[0].box.y = y_326529;
		F.line = 231;
		current_304385[0].box.w = w_326530;
		F.line = 232;
		current_304385[0].box.h = h_326531;
		F.line = 233;
		nimCopy(current_304385[0].screenBox, current_304385[0].box, NTI301690);
		if (!((parent_304380[0] == null))) {
		F.line = 235;
		nimCopy(current_304385[0].screenBox, HEX2B_304932(current_304385[0].box, parent_304380[0].screenBox), NTI301690);
		}
		
	framePtr = F.prev;

	
}

function box_326577(x_326583, y_326584, w_326585, h_326586) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 240;
		box_326526(x_326583, y_326584, w_326585, h_326586);
	framePtr = F.prev;

	
}

function box_326574(rect_326576) {
	var F={procname:"fidget.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 245;
		box_326577(rect_326576.x, rect_326576.y, rect_326576.w, rect_326576.h);
	framePtr = F.prev;

	
}

function HEX2AHEX3D_277325(x_277329, x_277329_Idx, y_277330) {
	var F={procname:"*=.*=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4157;
		x_277329[x_277329_Idx] = (x_277329[x_277329_Idx] * y_277330);
	framePtr = F.prev;

	
}

function HEX2BHEX3D_277303(x_277307, x_277307_Idx, y_277308) {
	var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4147;
		x_277307[x_277307_Idx] = (x_277307[x_277307_Idx] + y_277308);
	framePtr = F.prev;

	
}

function constraints_326990(v_con_326992, h_con_326993) {
	var F={procname:"fidget.constraints",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 363;
		switch (v_con_326992) {
		case 0:
			break;
		case 1:
			F.line = 366;
			var righ_space_326994 = (parent_304380[0].orgBox.w - current_304385[0].box.x);
			F.line = 367;
			current_304385[0].box.x = (parent_304380[0].box.w - righ_space_326994);
			break;
		case 2:
			F.line = 369;
			var x_scale_326995 = (parent_304380[0].box.w / parent_304380[0].orgBox.w);
			F.line = 370;
			HEX2AHEX3D_277325(current_304385[0].box, "x", x_scale_326995);
			F.line = 371;
			HEX2AHEX3D_277325(current_304385[0].box, "w", x_scale_326995);
			break;
		case 3:
			F.line = 373;
			var x_diff_327010 = (parent_304380[0].box.w - parent_304380[0].orgBox.w);
			F.line = 374;
			HEX2BHEX3D_277303(current_304385[0].box, "w", x_diff_327010);
			break;
		case 4:
			F.line = 376;
			current_304385[0].box.x = Math.floor(((parent_304380[0].box.w - current_304385[0].box.w) / 2.0000000000000000e+00));
			break;
		}
		F.line = 378;
		switch (h_con_326993) {
		case 0:
			break;
		case 1:
			F.line = 381;
			var bottom_space_327018 = (parent_304380[0].orgBox.h - current_304385[0].box.y);
			F.line = 382;
			current_304385[0].box.y = (parent_304380[0].box.h - bottom_space_327018);
			break;
		case 2:
			F.line = 384;
			var y_scale_327019 = (parent_304380[0].box.h / parent_304380[0].orgBox.h);
			F.line = 385;
			HEX2AHEX3D_277325(current_304385[0].box, "y", y_scale_327019);
			F.line = 386;
			HEX2AHEX3D_277325(current_304385[0].box, "h", y_scale_327019);
			break;
		case 3:
			F.line = 388;
			var y_diff_327034 = (parent_304380[0].box.h - parent_304380[0].orgBox.h);
			F.line = 389;
			HEX2BHEX3D_277303(current_304385[0].box, "h", y_diff_327034);
			break;
		case 4:
			F.line = 391;
			current_304385[0].box.y = Math.floor(((parent_304380[0].box.h - current_304385[0].box.h) / 2.0000000000000000e+00));
			break;
		}
		F.line = 393;
		nimCopy(current_304385[0].screenBox, HEX2B_304932(current_304385[0].box, parent_304380[0].screenBox), NTI301690);
	framePtr = F.prev;

	
}

function fill_326686(color_326688, alpha_326689) {
	var F={procname:"fidget.fill",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 273;
		nimCopy(current_304385[0].fill, parse_html_color_276823(color_326688), NTI272112);
		F.line = 274;
		current_304385[0].fill.a = alpha_326689;
	framePtr = F.prev;

	
}

function box_359470(x_359476, y_359477, w_359478, h_359479) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 240;
		box_326526(x_359476, y_359477, w_359478, h_359479);
	framePtr = F.prev;

	
}

function corner_radius_326784(a_326786, b_326787, c_326788, d_326789) {
	var F={procname:"fidget.cornerRadius",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 305;
		var colontmp__366234 = a_326786;
		F.line = 305;
		var colontmp__366235 = b_326787;
		F.line = 305;
		var colontmp__366236 = c_326788;
		F.line = 305;
		var colontmp__366237 = d_326789;
		F.line = 305;
		nimCopy(current_304385[0].cornerRadius, {Field0: colontmp__366234, Field1: colontmp__366235, Field2: colontmp__366236, Field3: colontmp__366237}, NTI304270);
	framePtr = F.prev;

	
}

function corner_radius_326804(radius_326806) {
	var F={procname:"fidget.cornerRadius",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 310;
		corner_radius_326784(radius_326806, radius_326806, radius_326806, radius_326806);
	framePtr = F.prev;

	
}

function stroke_weight_326752(weight_326754) {
	var F={procname:"fidget.strokeWeight",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 295;
		current_304385[0].strokeWeight = weight_326754;
	framePtr = F.prev;

	
}

function font_326374(font_family_326376, font_size_326377, font_weight_326378, line_height_326379, text_align_horizontal_326380, text_align_vertical_326381) {
	var F={procname:"fidget.font",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 181;
		current_304385[0].textStyle.fontFamily = nimCopy(null, font_family_326376, NTI44040);
		F.line = 182;
		current_304385[0].textStyle.fontSize = font_size_326377;
		F.line = 183;
		current_304385[0].textStyle.fontWeight = font_weight_326378;
		F.line = 184;
		current_304385[0].textStyle.lineHeight = line_height_326379;
		F.line = 185;
		current_304385[0].textStyle.textAlignHorizontal = text_align_horizontal_326380;
		F.line = 186;
		current_304385[0].textStyle.textAlignVertical = text_align_vertical_326381;
	framePtr = F.prev;

	
}

function characters_326476(text_326478) {
	var F={procname:"fidget.characters",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		if (eqStrings(current_304385[0].text, [])) {
		F.line = 212;
		current_304385[0].text = nimCopy(null, text_326478, NTI44040);
		}
		else {
			F.line = 214;
		if (current_304385[0].text != null) { current_304385[0].text = (current_304385[0].text).concat(text_326478); } else { current_304385[0].text = text_326478.slice(); };
		}
		
	framePtr = F.prev;

	
}

function pop_324857(s_324862, s_324862_Idx) {
	var result_324863 = null;

	var F={procname:"pop.pop",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3197;
		var l_324869 = subInt((s_324862[s_324862_Idx] != null ? s_324862[s_324862_Idx].length : 0), 1);
		F.line = 3202;
		result_324863 = s_324862[s_324862_Idx][chckIndx(l_324869, 0, (s_324862[s_324862_Idx] != null ? s_324862[s_324862_Idx].length : 0)+0-1)-0];
		F.line = 3203;
		if (s_324862[s_324862_Idx] === null) s_324862[s_324862_Idx] = [];
               if (s_324862[s_324862_Idx].length < chckRange(l_324869, 0, 2147483647)) { for (var i=s_324862[s_324862_Idx].length;i<chckRange(l_324869, 0, 2147483647);++i) s_324862[s_324862_Idx].push(null); }
               else { s_324862[s_324862_Idx].length = chckRange(l_324869, 0, 2147483647); };
	framePtr = F.prev;

	return result_324863;

}

function make_square_358631() {
	var F={procname:"fidgetClient.makeSquare",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		if ((current_304385[0].box.h < current_304385[0].box.w)) {
		F.line = 23;
		HEX2BHEX3D_277303(current_304385[0].box, "x", ((current_304385[0].box.w - current_304385[0].box.h) / 2.0000000000000000e+00));
		F.line = 24;
		current_304385[0].box.w = current_304385[0].box.h;
		}
		
		if ((current_304385[0].box.w < current_304385[0].box.h)) {
		F.line = 26;
		current_304385[0].box.h = current_304385[0].box.w;
		}
		
		F.line = 27;
		nimCopy(current_304385[0].screenBox, HEX2B_304932(current_304385[0].box, parent_304380[0].screenBox), NTI301690);
	framePtr = F.prev;

	
}

function box_359253(x_359259, y_359260, w_359261, h_359262) {
	var F={procname:"box.box",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 240;
		box_326526(x_359259, y_359260, w_359261, h_359262);
	framePtr = F.prev;

	
}

function min_56483(x_56485, y_56486) {
		var Tmp1;
			var Tmp2;

	var result_56487 = 0.0;

			if ((x_56485 <= y_56486)) Tmp2 = true; else {				Tmp2 = !((y_56486 == y_56486));			}		if (Tmp2) {
		Tmp1 = x_56485;
		}
		else {
		Tmp1 = y_56486;
		}
		
		result_56487 = Tmp1;

	return result_56487;

}

function HEX2F_71017(x_71019, y_71020) {
	var result_71021 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3917;
		result_71021 = (to_float_54457(x_71019) / to_float_54457(y_71020));
	framePtr = F.prev;

	return result_71021;

}

function fill_326653(color_326655) {
	var F={procname:"fidget.fill",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 262;
		nimCopy(current_304385[0].fill, color_326655, NTI272112);
	framePtr = F.prev;

	
}

function inside_304848(p_304850, b_304851) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_304852 = false;

	var F={procname:"uibase.inside",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 185;
		if (!(b_304851.x < p_304850.x)) Tmp3 = false; else {			Tmp3 = (p_304850.x < (b_304851.x + b_304851.w));		}		if (!Tmp3) Tmp2 = false; else {			Tmp2 = (b_304851.y < p_304850.y);		}		if (!Tmp2) Tmp1 = false; else {			Tmp1 = (p_304850.y < (b_304851.y + b_304851.h));		}		result_304852 = Tmp1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_304852;

}

function mouse_overlap_logic_326276() {
		var Tmp1;

	var result_326278 = false;

	var F={procname:"fidget.mouseOverlapLogic",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 101;
		if (!(!(popup_active_304398[0]) || in_popup_304399[0])) Tmp1 = false; else {			Tmp1 = inside_304848(mouse_304389[0].pos, current_304385[0].screenBox);		}		result_326278 = Tmp1;
	framePtr = F.prev;

	return result_326278;

}

function check_winner_358653() {
	var F={procname:"fidgetClient.checkWinner",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		if (!(winner_announced_358452[0])) {
		if (!((game_358251.winner_player_number == 0))) {
		if ((game_358251.winner_player_number == -1)) {
		F.line = 33;
		rawEcho(makeNimstrLit("Draw"));
		}
		else {
			F.line = 35;
		rawEcho((get_player_name_356049(game_358251) || []).concat(makeNimstrLit(" won the game!") || []));
		}
		
		}
		
		}
		
	framePtr = F.prev;

	
}

function image_326510(image_name_326512) {
	var F={procname:"fidget.image",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 224;
		current_304385[0].imageName = nimCopy(null, image_name_326512, NTI44040);
	framePtr = F.prev;

	
}

function HEX2BHEX3D_209861(x_209865, x_209865_Idx, y_209866) {
	var F={procname:"+=.+=",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4147;
		x_209865[x_209865_Idx] = (x_209865[x_209865_Idx] + y_209866);
	framePtr = F.prev;

	
}

function draw_game_field_358675() {
		var Tmp1;
										var Tmp8;
												var Tmp13;
											var Tmp14;
											var Tmp19;
											var Tmp20;
										var Tmp21;
										var Tmp22;

	var F={procname:"fidgetClient.drawGameField",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		F.line = 39;
		var field_width_358677 = min_56483(current_304385[0].box.w, current_304385[0].box.h);
		F.line = 40;
		var box_width_358684 = (HEX2F_71017((((field_width_358677 - 2.0000000000000000e+00))|0), ((Tmp1 = field_355981(game_358251), Tmp1) != null ? Tmp1.length : 0)) - 2.0000000000000000e+00);
		F.line = 41;
		var x_358685 = [2.0000000000000000e+00];
		F.line = 41;
		var y_358686 = [2.0000000000000000e+00];
		F.line = 42;
		var dark_358687 = false;
		L2: do {
			F.line = 43;
			var i_358814 = 0;
			F.line = 43;
			var row_358815 = null;
			F.line = 115;
			var colontmp__366267 = null;
			F.line = 43;
			colontmp__366267 = field_355981(game_358251);
			F.line = 117;
			var i_366269 = 0;
			F.line = 118;
			var l_366270 = (colontmp__366267 != null ? colontmp__366267.length : 0);
			L3: do {
				F.line = 119;
					L4: while (true) {
					if (!(i_366269 < l_366270)) break L4;
						F.line = 43;
						i_358814 = i_366269;
						F.line = 120;
						row_358815 = colontmp__366267[chckIndx(i_366269, 0, (colontmp__366267 != null ? colontmp__366267.length : 0)+0-1)-0];
						F.line = 44;
						x_358685[0] = 2.0000000000000000e+00;
						L5: do {
							F.line = 45;
							var j_359014 = 0;
							F.line = 45;
							var field_359015 = 0;
							F.line = 117;
							var i_366264 = 0;
							F.line = 118;
							var l_366265 = (row_358815 != null ? row_358815.length : 0);
							L6: do {
								F.line = 119;
									L7: while (true) {
									if (!(i_366264 < l_366265)) break L7;
										F.line = 45;
										j_359014 = i_366264;
										F.line = 120;
										field_359015 = row_358815[chckIndx(i_366264, 0, (row_358815 != null ? row_358815.length : 0)+0-1)-0];
										F.line = 19;
										parent_304380[0] = (Tmp8 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp8)[0][Tmp8[1]];
										if (!(parent_304380[0].wasDrawn)) {
										F.line = 21;
										draw_324721(parent_304380[0]);
										F.line = 22;
										parent_304380[0].wasDrawn = true;
										}
										
										F.line = 24;
										current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
										F.line = 46;
										current_304385[0].id = nimCopy(null, makeNimstrLit("field"), NTI44040);
										F.line = 75;
										current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
										F.line = 27;
										current_304385[0].wasDrawn = false;
										F.line = 28;
										current_304385[0].transparency = 1.0000000000000000e+00;
										F.line = 29;
										nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
										F.line = 30;
										nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
										F.line = 31;
										nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
										F.line = 32;
										if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
										L9: do {
											F.line = 34;
											var gHEX60gensym359016_359214 = null;
											F.line = 184;
											var i_366248 = 0;
											F.line = 185;
											var l_366249 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
											L10: do {
												F.line = 186;
													L11: while (true) {
													if (!(i_366248 < l_366249)) break L11;
														F.line = 34;
														gHEX60gensym359016_359214 = group_stack_304384[0][chckIndx(i_366248, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
														if (!(eqStrings(gHEX60gensym359016_359214.id, []))) {
														if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
														F.line = 37;
														if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
														}
														
														F.line = 38;
														if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359016_359214.id); } else { current_304385[0].idPath = gHEX60gensym359016_359214.id.slice(); };
														}
														
														F.line = 188;
														i_366248 = addInt(i_366248, 1);
														if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366249))) {
														F.line = 189;
														failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										L12: do {
											F.line = 47;
											box_326526(x_358685[0], y_358686[0], box_width_358684, box_width_358684);
											if (dark_358687) {
											F.line = 49;
											fill_326653(colors_357035.fieldDark);
											}
											else {
												F.line = 51;
											fill_326653(colors_357035.fieldLight);
											}
											
											F.line = 52;
											dark_358687 = !(dark_358687);
											if ((field_359015 == 0)) {
												if (!mouse_304389[0].click) Tmp13 = false; else {													Tmp13 = mouse_overlap_logic_326276();												}											if (Tmp13) {
											F.line = 56;
											make_turn_356077(game_358251, (cstrToNimstr((addInt(i_358814, 1))+"") || []).concat(makeNimstrLit(".") || [],cstrToNimstr((addInt(j_359014, 1))+"") || []));
											F.line = 57;
											check_winner_358653();
											}
											
											}
											
											F.line = 19;
											parent_304380[0] = (Tmp14 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp14)[0][Tmp14[1]];
											if (!(parent_304380[0].wasDrawn)) {
											F.line = 21;
											draw_324721(parent_304380[0]);
											F.line = 22;
											parent_304380[0].wasDrawn = true;
											}
											
											F.line = 24;
											current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
											F.line = 58;
											current_304385[0].id = nimCopy(null, makeNimstrLit("symbol"), NTI44040);
											F.line = 75;
											current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
											F.line = 27;
											current_304385[0].wasDrawn = false;
											F.line = 28;
											current_304385[0].transparency = 1.0000000000000000e+00;
											F.line = 29;
											nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
											F.line = 30;
											nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
											F.line = 31;
											nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
											F.line = 32;
											if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
											L15: do {
												F.line = 34;
												var gHEX60gensym359219_359246 = null;
												F.line = 184;
												var i_366255 = 0;
												F.line = 185;
												var l_366256 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
												L16: do {
													F.line = 186;
														L17: while (true) {
														if (!(i_366255 < l_366256)) break L17;
															F.line = 34;
															gHEX60gensym359219_359246 = group_stack_304384[0][chckIndx(i_366255, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
															if (!(eqStrings(gHEX60gensym359219_359246.id, []))) {
															if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
															F.line = 37;
															if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
															}
															
															F.line = 38;
															if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359219_359246.id); } else { current_304385[0].idPath = gHEX60gensym359219_359246.id.slice(); };
															}
															
															F.line = 188;
															i_366255 = addInt(i_366255, 1);
															if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366256))) {
															F.line = 189;
															failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
															}
															
														}
												} while(false);
											} while(false);
											L18: do {
												F.line = 59;
												box_359253(5, 5, (parent_304380[0].box.w - 1.0000000000000000e+01), (parent_304380[0].box.h - 1.0000000000000000e+01));
												if ((field_359015 == 1)) {
												F.line = 61;
												image_326510(makeNimstrLit("x"));
												}
												
												if ((field_359015 == 2)) {
												F.line = 63;
												image_326510(makeNimstrLit("0"));
												}
												
											} while(false);
											if (!(current_304385[0].wasDrawn)) {
											F.line = 49;
											draw_324721(current_304385[0]);
											F.line = 50;
											current_304385[0].wasDrawn = true;
											}
											
											F.line = 52;
											pop_324857(group_stack_304384, 0);
											if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
											F.line = 54;
											current_304385[0] = (Tmp19 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp19)[0][Tmp19[1]];
											}
											else {
												F.line = 56;
												current_304385[0] = null;
											}
											
											if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
											F.line = 58;
											parent_304380[0] = (Tmp20 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp20)[0][Tmp20[1]];
											}
											else {
												F.line = 60;
												parent_304380[0] = null;
											}
											
										} while(false);
										if (!(current_304385[0].wasDrawn)) {
										F.line = 49;
										draw_324721(current_304385[0]);
										F.line = 50;
										current_304385[0].wasDrawn = true;
										}
										
										F.line = 52;
										pop_324857(group_stack_304384, 0);
										if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
										F.line = 54;
										current_304385[0] = (Tmp21 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp21)[0][Tmp21[1]];
										}
										else {
											F.line = 56;
											current_304385[0] = null;
										}
										
										if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
										F.line = 58;
										parent_304380[0] = (Tmp22 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp22)[0][Tmp22[1]];
										}
										else {
											F.line = 60;
											parent_304380[0] = null;
										}
										
										F.line = 64;
										HEX2BHEX3D_209861(x_358685, 0, (box_width_358684 + 2.0000000000000000e+00));
										F.line = 121;
										i_366264 = addInt(i_366264, 1);
										if (!(((row_358815 != null ? row_358815.length : 0) == l_366265))) {
										F.line = 122;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 65;
						HEX2BHEX3D_209861(y_358686, 0, (box_width_358684 + 2.0000000000000000e+00));
						F.line = 121;
						i_366269 = addInt(i_366269, 1);
						if (!(((colontmp__366267 != null ? colontmp__366267.length : 0) == l_366270))) {
						F.line = 122;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function draw_leaderboard_359412() {
		var Tmp1;
						var Tmp5;
							var Tmp10;
								var Tmp15;
								var Tmp20;
								var Tmp21;
								var Tmp22;
								var Tmp27;
								var Tmp28;
							var Tmp29;
							var Tmp30;
						var Tmp31;
						var Tmp32;

	var F={procname:"fidgetClient.drawLeaderboard",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		F.line = 69;
		var history_359414 = nimCopy(null, get_leaderboard_354135(game_358251).history, NTI354040);
		F.line = 70;
		var hist_len_359420 = (history_359414 != null ? history_359414.length : 0);
		if ((0 < hist_len_359420)) {
		F.line = 72;
		var max_entries_359424 = ((Math.floor((current_304385[0].box.h / 4.0000000000000000e+01)))|0);
		F.line = 73;
		var entries_359425 = nimMin(max_entries_359424, hist_len_359420);
		F.line = 74;
		if ((entries_359425 == hist_len_359420)) {
		Tmp1 = 0;
		}
		else {
		Tmp1 = subInt(hist_len_359420, entries_359425);
		}
		
		var start_entry_359427 = Tmp1;
		L2: do {
			F.line = 75;
			var i_359433 = 0;
			F.line = 2699;
			var colontmp__366310 = 0;
			F.line = 75;
			colontmp__366310 = subInt(addInt(start_entry_359427, entries_359425), 1);
			F.line = 2710;
			var res_366311 = start_entry_359427;
			L3: do {
				F.line = 2711;
					L4: while (true) {
					if (!(res_366311 <= colontmp__366310)) break L4;
						F.line = 75;
						i_359433 = res_366311;
						F.line = 19;
						parent_304380[0] = (Tmp5 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp5)[0][Tmp5[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 76;
						current_304385[0].id = nimCopy(null, makeNimstrLit("entry"), NTI44040);
						F.line = 65;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L6: do {
							F.line = 34;
							var gHEX60gensym359434_359461 = null;
							F.line = 184;
							var i_366277 = 0;
							F.line = 185;
							var l_366278 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L7: do {
								F.line = 186;
									L8: while (true) {
									if (!(i_366277 < l_366278)) break L8;
										F.line = 34;
										gHEX60gensym359434_359461 = group_stack_304384[0][chckIndx(i_366277, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym359434_359461.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359434_359461.id); } else { current_304385[0].idPath = gHEX60gensym359434_359461.id.slice(); };
										}
										
										F.line = 188;
										i_366277 = addInt(i_366277, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366278))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L9: do {
							F.line = 77;
							box_359470(0, mulInt(subInt(i_359433, start_entry_359427), 40), 40, 300);
							F.line = 19;
							parent_304380[0] = (Tmp10 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp10)[0][Tmp10[1]];
							if (!(parent_304380[0].wasDrawn)) {
							F.line = 21;
							draw_324721(parent_304380[0]);
							F.line = 22;
							parent_304380[0].wasDrawn = true;
							}
							
							F.line = 24;
							current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
							F.line = 78;
							current_304385[0].id = nimCopy(null, makeNimstrLit("round"), NTI44040);
							F.line = 80;
							current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
							F.line = 27;
							current_304385[0].wasDrawn = false;
							F.line = 28;
							current_304385[0].transparency = 1.0000000000000000e+00;
							F.line = 29;
							nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
							F.line = 30;
							nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
							F.line = 31;
							nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
							F.line = 32;
							if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
							L11: do {
								F.line = 34;
								var gHEX60gensym359493_359520 = null;
								F.line = 184;
								var i_366284 = 0;
								F.line = 185;
								var l_366285 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
								L12: do {
									F.line = 186;
										L13: while (true) {
										if (!(i_366284 < l_366285)) break L13;
											F.line = 34;
											gHEX60gensym359493_359520 = group_stack_304384[0][chckIndx(i_366284, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
											if (!(eqStrings(gHEX60gensym359493_359520.id, []))) {
											if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
											F.line = 37;
											if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
											}
											
											F.line = 38;
											if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359493_359520.id); } else { current_304385[0].idPath = gHEX60gensym359493_359520.id.slice(); };
											}
											
											F.line = 188;
											i_366284 = addInt(i_366284, 1);
											if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366285))) {
											F.line = 189;
											failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
											}
											
										}
								} while(false);
							} while(false);
							L14: do {
								F.line = 79;
								box_359470(0, 0, 99, 40);
								F.line = 80;
								font_326374(makeNimstrLit("IBM Plex Sans Regular"), 3.2000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
								F.line = 81;
								fill_326653(colors_357035.lbText);
								F.line = 82;
								characters_326476(cstrToNimstr((addInt(i_359433, 1))+""));
								if ((history_359414[chckIndx(i_359433, 0, (history_359414 != null ? history_359414.length : 0)+0-1)-0] == 1)) {
								F.line = 19;
								parent_304380[0] = (Tmp15 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp15)[0][Tmp15[1]];
								if (!(parent_304380[0].wasDrawn)) {
								F.line = 21;
								draw_324721(parent_304380[0]);
								F.line = 22;
								parent_304380[0].wasDrawn = true;
								}
								
								F.line = 24;
								current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
								F.line = 84;
								current_304385[0].id = nimCopy(null, makeNimstrLit("x"), NTI44040);
								F.line = 75;
								current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
								F.line = 27;
								current_304385[0].wasDrawn = false;
								F.line = 28;
								current_304385[0].transparency = 1.0000000000000000e+00;
								F.line = 29;
								nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
								F.line = 30;
								nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
								F.line = 31;
								nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
								F.line = 32;
								if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
								L16: do {
									F.line = 34;
									var gHEX60gensym359541_359568 = null;
									F.line = 184;
									var i_366291 = 0;
									F.line = 185;
									var l_366292 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
									L17: do {
										F.line = 186;
											L18: while (true) {
											if (!(i_366291 < l_366292)) break L18;
												F.line = 34;
												gHEX60gensym359541_359568 = group_stack_304384[0][chckIndx(i_366291, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
												if (!(eqStrings(gHEX60gensym359541_359568.id, []))) {
												if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
												F.line = 37;
												if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
												}
												
												F.line = 38;
												if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359541_359568.id); } else { current_304385[0].idPath = gHEX60gensym359541_359568.id.slice(); };
												}
												
												F.line = 188;
												i_366291 = addInt(i_366291, 1);
												if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366292))) {
												F.line = 189;
												failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								L19: do {
									F.line = 85;
									box_359470(134, 4, 32, 32);
									F.line = 86;
									image_326510(makeNimstrLit("x"));
								} while(false);
								if (!(current_304385[0].wasDrawn)) {
								F.line = 49;
								draw_324721(current_304385[0]);
								F.line = 50;
								current_304385[0].wasDrawn = true;
								}
								
								F.line = 52;
								pop_324857(group_stack_304384, 0);
								if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
								F.line = 54;
								current_304385[0] = (Tmp20 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp20)[0][Tmp20[1]];
								}
								else {
									F.line = 56;
									current_304385[0] = null;
								}
								
								if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
								F.line = 58;
								parent_304380[0] = (Tmp21 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp21)[0][Tmp21[1]];
								}
								else {
									F.line = 60;
									parent_304380[0] = null;
								}
								
								}
								
								if ((history_359414[chckIndx(i_359433, 0, (history_359414 != null ? history_359414.length : 0)+0-1)-0] == 2)) {
								F.line = 19;
								parent_304380[0] = (Tmp22 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp22)[0][Tmp22[1]];
								if (!(parent_304380[0].wasDrawn)) {
								F.line = 21;
								draw_324721(parent_304380[0]);
								F.line = 22;
								parent_304380[0].wasDrawn = true;
								}
								
								F.line = 24;
								current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
								F.line = 88;
								current_304385[0].id = nimCopy(null, makeNimstrLit("0"), NTI44040);
								F.line = 75;
								current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
								F.line = 27;
								current_304385[0].wasDrawn = false;
								F.line = 28;
								current_304385[0].transparency = 1.0000000000000000e+00;
								F.line = 29;
								nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
								F.line = 30;
								nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
								F.line = 31;
								nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
								F.line = 32;
								if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
								L23: do {
									F.line = 34;
									var gHEX60gensym359635_359662 = null;
									F.line = 184;
									var i_366300 = 0;
									F.line = 185;
									var l_366301 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
									L24: do {
										F.line = 186;
											L25: while (true) {
											if (!(i_366300 < l_366301)) break L25;
												F.line = 34;
												gHEX60gensym359635_359662 = group_stack_304384[0][chckIndx(i_366300, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
												if (!(eqStrings(gHEX60gensym359635_359662.id, []))) {
												if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
												F.line = 37;
												if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
												}
												
												F.line = 38;
												if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359635_359662.id); } else { current_304385[0].idPath = gHEX60gensym359635_359662.id.slice(); };
												}
												
												F.line = 188;
												i_366300 = addInt(i_366300, 1);
												if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366301))) {
												F.line = 189;
												failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								L26: do {
									F.line = 89;
									box_359470(234, 4, 32, 32);
									F.line = 90;
									image_326510(makeNimstrLit("0"));
								} while(false);
								if (!(current_304385[0].wasDrawn)) {
								F.line = 49;
								draw_324721(current_304385[0]);
								F.line = 50;
								current_304385[0].wasDrawn = true;
								}
								
								F.line = 52;
								pop_324857(group_stack_304384, 0);
								if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
								F.line = 54;
								current_304385[0] = (Tmp27 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp27)[0][Tmp27[1]];
								}
								else {
									F.line = 56;
									current_304385[0] = null;
								}
								
								if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
								F.line = 58;
								parent_304380[0] = (Tmp28 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp28)[0][Tmp28[1]];
								}
								else {
									F.line = 60;
									parent_304380[0] = null;
								}
								
								}
								
							} while(false);
							if (!(current_304385[0].wasDrawn)) {
							F.line = 49;
							draw_324721(current_304385[0]);
							F.line = 50;
							current_304385[0].wasDrawn = true;
							}
							
							F.line = 52;
							pop_324857(group_stack_304384, 0);
							if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
							F.line = 54;
							current_304385[0] = (Tmp29 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp29)[0][Tmp29[1]];
							}
							else {
								F.line = 56;
								current_304385[0] = null;
							}
							
							if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
							F.line = 58;
							parent_304380[0] = (Tmp30 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp30)[0][Tmp30[1]];
							}
							else {
								F.line = 60;
								parent_304380[0] = null;
							}
							
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp31 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp31)[0][Tmp31[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp32 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp32)[0][Tmp32[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
						F.line = 2713;
						res_366311 = addInt(res_366311, 1);
					}
			} while(false);
		} while(false);
		}
		
	framePtr = F.prev;

	
}

function start_game_358616() {
	var F={procname:"fidgetClient.startGame",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		F.line = 18;
		setup_355942(game_358251, settings_358451);
		F.line = 19;
		reset_leaderboard_354449(game_358251);
	framePtr = F.prev;

	
}

function editable_text_326820(editable_text_326822) {
	var F={procname:"fidget.editableText",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
		F.line = 315;
		current_304385[0].editableText = editable_text_326822;
	framePtr = F.prev;

	
}

function has_keyboard_focus_326317(group_326319) {
	var result_326320 = false;

	var F={procname:"fidget.hasKeyboardFocus",prev:framePtr,filename:"fidget.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 140;
		result_326320 = eqStrings(keyboard_304390[0].inputFocusIdPath, group_326319.idPath);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_326320;

}

function color_277144(c_277146) {
	var result_277147 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};

	var F={procname:"chroma.color",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		F.line = 324;
		result_277147.r = (c_277146.r / 2.5500000000000000e+02);
		F.line = 325;
		result_277147.g = (c_277146.g / 2.5500000000000000e+02);
		F.line = 326;
		result_277147.b = (c_277146.b / 2.5500000000000000e+02);
		F.line = 327;
		result_277147.a = (c_277146.a / 2.5500000000000000e+02);
	framePtr = F.prev;

	return result_277147;

}

function rgba_277124(r_277126, g_277127, b_277128, a_277129) {
	var result_277130 = {r: 0, g: 0, b: 0, a: 0};

	var F={procname:"chroma.rgba",prev:framePtr,filename:"chroma.nim",line:0};
	framePtr = F;
		F.line = 316;
		result_277130.r = r_277126;
		F.line = 317;
		result_277130.g = g_277127;
		F.line = 318;
		result_277130.b = b_277128;
		F.line = 319;
		result_277130.a = a_277129;
	framePtr = F.prev;

	return result_277130;

}

function setup_root_304724() {
	var F={procname:"uibase.setupRoot",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 149;
		prev_root_304382[0] = root_304381[0];
		F.line = 150;
		root_304381[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
		F.line = 151;
		group_stack_304384[0] = nimCopy(null, [root_304381[0]], NTI304736);
		F.line = 152;
		current_304385[0] = root_304381[0];
		F.line = 153;
		root_304381[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
		F.line = 154;
		root_304381[0].id = nimCopy(null, makeNimstrLit("root"), NTI44040);
		F.line = 155;
		nimCopy(root_304381[0].highlightColor, color_277144(rgba_277124(0, 0, 0, 20)), NTI272112);
		F.line = 156;
		nimCopy(root_304381[0].cursorColor, color_277144(rgba_277124(0, 0, 0, 255)), NTI272112);
	framePtr = F.prev;

	
}

function get_context2d_315728(c_315730) {
	var result_315731 = null;

	var F={procname:"html5_canvas.getContext2D",prev:framePtr,filename:"html5_canvas.nim",line:0};
	framePtr = F;
		F.line = 24;
		result_315731=c_315730.getContext('2d');
	framePtr = F.prev;

	return result_315731;

}

function draw_start_324767() {
	var F={procname:"backendhtml.drawStart",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 278;
		start_time_324737[0] = window.performance.now();
		F.line = 279;
		num_groups_304396[0] = 0;
		F.line = 280;
		perf_304394[0].numLowLevelCalls = 0;
		F.line = 282;
		window_304379[0].innerUrl = nimCopy(null, cstrToNimstr(window.location.search), NTI44040);
		F.line = 285;
		root_304381[0].box.x = 0.0;
		F.line = 286;
		root_304381[0].box.y = 0.0;
		F.line = 287;
		root_304381[0].box.w = window.innerWidth;
		F.line = 288;
		root_304381[0].box.h = document.body.clientHeight;
		F.line = 290;
		scroll_box_304386[0].x = window.scrollX;
		F.line = 291;
		scroll_box_304386[0].y = window.scrollY;
		F.line = 292;
		scroll_box_304386[0].w = document.body.clientWidth;
		F.line = 293;
		scroll_box_304386[0].h = window.innerHeight;
		F.line = 295;
		scroll_box_mega_304387[0].x = window.scrollX;
		F.line = 296;
		scroll_box_mega_304387[0].y = (window.scrollY - 5.0000000000000000e+02);
		F.line = 297;
		scroll_box_mega_304387[0].w = document.body.clientWidth;
		F.line = 298;
		scroll_box_mega_304387[0].h = addInt(window.innerHeight, 1000);
		F.line = 300;
		scroll_box_mini_304388[0].x = window.scrollX;
		F.line = 301;
		scroll_box_mini_304388[0].y = (window.scrollY + 1.0000000000000000e+02);
		F.line = 302;
		scroll_box_mini_304388[0].w = document.body.clientWidth;
		F.line = 303;
		scroll_box_mini_304388[0].h = subInt(window.innerHeight, 200);
		F.line = 305;
		document.body.style.overflowX = "hidden";
		F.line = 306;
		document.body.style.overflowY = "scroll";
		F.line = 309;
		var canvas_324773 = canvas_node_316032[0];
		F.line = 310;
		ctx_316033[0] = get_context2d_315728(canvas_324773);
		F.line = 311;
		var device_pixel_ratio_324774 = 2.0000000000000000e+00;
		F.line = 313;
		var width_324775 = window.innerWidth;
		F.line = 314;
		var height_324776 = window.innerHeight;
		F.line = 315;
		canvas_324773.clientWidth = ((width_324775)|0);
		F.line = 316;
		canvas_324773.clientHeight = ((height_324776)|0);
		F.line = 317;
		canvas_324773.width = (((width_324775 * device_pixel_ratio_324774))|0);
		F.line = 318;
		canvas_324773.height = (((height_324776 * device_pixel_ratio_324774))|0);
		F.line = 320;
		canvas_324773.style.display = "block";
		F.line = 321;
		canvas_324773.style.position = "absolute";
		F.line = 322;
		canvas_324773.style.zIndex = -1;
		F.line = 323;
		canvas_324773.style.left = toJSStr((cstrToNimstr((scroll_box_304386[0].x)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 324;
		canvas_324773.style.top = toJSStr((cstrToNimstr((scroll_box_304386[0].y)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 325;
		canvas_324773.style.width = toJSStr((cstrToNimstr((width_324775)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 326;
		canvas_324773.style.height = toJSStr((cstrToNimstr((height_324776)+"") || []).concat(makeNimstrLit("px") || []));
		F.line = 328;
		ctx_316033[0].scale(device_pixel_ratio_324774, device_pixel_ratio_324774);
		F.line = 330;
		mouse_304389[0].cursorStyle = 0;
	framePtr = F.prev;

	
}

function HEX5BHEX5D_324818(s_324823, i_324824) {
	var result_324826 = null;
	var result_324826_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4063;
		result_324826 = s_324823; result_324826_Idx = chckIndx(subInt((s_324823 != null ? s_324823.length : 0), i_324824), 0, (s_324823 != null ? s_324823.length : 0)+0-1)-0;
	framePtr = F.prev;

	return [result_324826, result_324826_Idx];

}

function pop_325022(s_325027, s_325027_Idx) {
	var result_325028 = null;

	var F={procname:"pop.pop",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3197;
		var l_325034 = subInt((s_325027[s_325027_Idx] != null ? s_325027[s_325027_Idx].length : 0), 1);
		F.line = 3202;
		result_325028 = s_325027[s_325027_Idx][chckIndx(l_325034, 0, (s_325027[s_325027_Idx] != null ? s_325027[s_325027_Idx].length : 0)+0-1)-0];
		F.line = 3203;
		if (s_325027[s_325027_Idx] === null) s_325027[s_325027_Idx] = [];
               if (s_325027[s_325027_Idx].length < chckRange(l_325034, 0, 2147483647)) { for (var i=s_325027[s_325027_Idx].length;i<chckRange(l_325034, 0, 2147483647);++i) s_325027[s_325027_Idx].push(null); }
               else { s_325027[s_325027_Idx].length = chckRange(l_325034, 0, 2147483647); };
	framePtr = F.prev;

	return result_325028;

}

function draw_finish_324806() {
					var Tmp3;

	var F={procname:"backendhtml.drawFinish",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 335;
		perf_304394[0].drawMain = (window.performance.now() - start_time_324737[0]);
		L1: do {
			F.line = 342;
				L2: while (true) {
				if (!(num_groups_304396[0] < (root_dom_node_316031[0].childNodes != null ? root_dom_node_316031[0].childNodes.length : 0))) break L2;
					F.line = 343;
					root_dom_node_316031[0].removeChild((Tmp3 = HEX5BHEX5D_324818(dom_cache_316030[0], 1), Tmp3)[0][Tmp3[1]]);
					F.line = 344;
					pop_324857(group_cache_316028, 0);
					F.line = 345;
					pop_325022(dom_cache_316030, 0);
				}
		} while(false);
		if (!((prev_mouse_cursor_style_324738[0] == mouse_304389[0].cursorStyle))) {
		F.line = 349;
		prev_mouse_cursor_style_324738[0] = mouse_304389[0].cursorStyle;
		F.line = 350;
		switch (mouse_304389[0].cursorStyle) {
		case 0:
			F.line = 352;
			root_dom_node_316031[0].style.cursor = "default";
			break;
		case 1:
			F.line = 354;
			root_dom_node_316031[0].style.cursor = "pointer";
			break;
		case 2:
			F.line = 356;
			root_dom_node_316031[0].style.cursor = "grab";
			break;
		case 3:
			F.line = 358;
			root_dom_node_316031[0].style.cursor = "ns-resize";
			break;
		}
		}
		
		F.line = 363;
		keyboard_304390[0].prevInputFocusIdPath = nimCopy(null, keyboard_304390[0].inputFocusIdPath, NTI44040);
	framePtr = F.prev;

	
}

function hard_redraw_325240() {
	var F={procname:"backendhtml.hardRedraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((root_dom_node_316031[0] == null)) {
		F.line = 368;
		break BeforeRet;
		}
		
		F.line = 370;
		setup_root_304724();
		F.line = 372;
		draw_start_324767();
		F.line = 373;
		draw_main_304393[0]();
		F.line = 374;
		draw_finish_324806();
	} while (false);
	framePtr = F.prev;

	
}

function request_hard_redraw_325263(time_325265) {
	var F={procname:"backendhtml.requestHardRedraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 378;
		requested_frame_304395[0] = false;
		F.line = 379;
		hard_redraw_325240();
	framePtr = F.prev;

	
}

function redraw_325279() {
	var F={procname:"backendhtml.redraw",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		if (!(requested_frame_304395[0])) {
		F.line = 384;
		requested_frame_304395[0] = true;
		F.line = 385;
		window.requestAnimationFrame(request_hard_redraw_325263);
		}
		
	framePtr = F.prev;

	
}

function draw_main_frame_359851() {
		var Tmp1;
			var Tmp6;
				var Tmp11;
				var Tmp16;
				var Tmp17;
			var Tmp18;
			var Tmp19;
			var Tmp20;
				var Tmp25;
					var Tmp30;
					var Tmp35;
					var Tmp36;
				var Tmp37;
				var Tmp38;
			var Tmp39;
			var Tmp40;
			var Tmp41;
				var Tmp46;
				var Tmp51;
				var Tmp52;
				var Tmp53;
				var Tmp58;
				var Tmp59;
				var Tmp60;
					var Tmp65;
					var Tmp70;
					var Tmp71;
					var Tmp72;
					var Tmp77;
					var Tmp78;
					var Tmp79;
						var Tmp84;
					var Tmp85;
					var Tmp86;
					var Tmp87;
						var Tmp92;
					var Tmp93;
					var Tmp94;
					var Tmp95;
					var Tmp100;
					var Tmp101;
					var Tmp102;
					var Tmp107;
					var Tmp108;
					var Tmp109;
					var Tmp114;
					var Tmp115;
					var Tmp116;
					var Tmp121;
					var Tmp122;
					var Tmp123;
					var Tmp128;
					var Tmp129;
					var Tmp130;
					var Tmp135;
					var Tmp136;
					var Tmp137;
					var Tmp142;
					var Tmp143;
					var Tmp144;
					var Tmp149;
					var Tmp150;
				var Tmp151;
				var Tmp152;
			var Tmp153;
			var Tmp154;
			var Tmp155;
				var Tmp160;
				var Tmp165;
				var Tmp166;
				var Tmp167;
				var Tmp172;
				var Tmp173;
				var Tmp174;
					var Tmp179;
							var Tmp184;
							var Tmp185;
					var Tmp186;
					var Tmp187;
					var Tmp188;
					var Tmp193;
					var Tmp194;
					var Tmp195;
							var Tmp200;
						var Tmp201;
							var Tmp202;
					var Tmp203;
					var Tmp204;
					var Tmp205;
					var Tmp210;
					var Tmp211;
				var Tmp212;
				var Tmp213;
				var Tmp214;
					var Tmp219;
					var Tmp224;
					var Tmp225;
					var Tmp226;
					var Tmp231;
					var Tmp232;
					var Tmp233;
					var Tmp238;
					var Tmp239;
					var Tmp240;
							var Tmp245;
					var Tmp246;
					var Tmp247;
				var Tmp248;
				var Tmp249;
				var Tmp250;
					var Tmp255;
					var Tmp260;
					var Tmp261;
					var Tmp262;
					var Tmp267;
					var Tmp268;
					var Tmp269;
					var Tmp274;
					var Tmp275;
					var Tmp276;
							var Tmp281;
					var Tmp282;
					var Tmp283;
				var Tmp284;
				var Tmp285;
				var Tmp286;
					var Tmp291;
					var Tmp296;
					var Tmp297;
					var Tmp298;
					var Tmp303;
					var Tmp304;
					var Tmp305;
					var Tmp310;
					var Tmp311;
					var Tmp312;
					var Tmp317;
					var Tmp318;
					var Tmp319;
							var Tmp324;
							var Tmp325;
						var Tmp326;
						var Tmp331;
						var Tmp332;
					var Tmp333;
					var Tmp334;
					var Tmp335;
							var Tmp340;
							var Tmp341;
						var Tmp342;
						var Tmp347;
						var Tmp348;
						var Tmp349;
						var Tmp354;
						var Tmp355;
					var Tmp356;
					var Tmp357;
				var Tmp358;
				var Tmp359;
				var Tmp360;
					var Tmp365;
					var Tmp370;
					var Tmp371;
					var Tmp372;
					var Tmp377;
					var Tmp378;
					var Tmp379;
					var Tmp384;
					var Tmp385;
					var Tmp386;
					var Tmp391;
					var Tmp392;
					var Tmp393;
							var Tmp398;
							var Tmp399;
						var Tmp400;
						var Tmp405;
						var Tmp406;
					var Tmp407;
					var Tmp408;
					var Tmp409;
							var Tmp414;
							var Tmp415;
						var Tmp416;
						var Tmp421;
						var Tmp422;
						var Tmp423;
						var Tmp428;
						var Tmp429;
					var Tmp430;
					var Tmp431;
				var Tmp432;
				var Tmp433;
			var Tmp434;
			var Tmp435;
		var Tmp436;
		var Tmp437;

	var F={procname:"fidgetClient.drawMainFrame",prev:framePtr,filename:"fidgetClient.nim",line:0};
	framePtr = F;
		F.line = 19;
		parent_304380[0] = (Tmp1 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp1)[0][Tmp1[1]];
		if (!(parent_304380[0].wasDrawn)) {
		F.line = 21;
		draw_324721(parent_304380[0]);
		F.line = 22;
		parent_304380[0].wasDrawn = true;
		}
		
		F.line = 24;
		current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
		F.line = 94;
		current_304385[0].id = nimCopy(null, makeNimstrLit("Frame 1"), NTI44040);
		F.line = 70;
		current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
		F.line = 27;
		current_304385[0].wasDrawn = false;
		F.line = 28;
		current_304385[0].transparency = 1.0000000000000000e+00;
		F.line = 29;
		nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
		F.line = 30;
		nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
		F.line = 31;
		nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
		F.line = 32;
		if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
		L2: do {
			F.line = 34;
			var gHEX60gensym359853_359880 = null;
			F.line = 184;
			var i_365594 = 0;
			F.line = 185;
			var l_365595 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
			L3: do {
				F.line = 186;
					L4: while (true) {
					if (!(i_365594 < l_365595)) break L4;
						F.line = 34;
						gHEX60gensym359853_359880 = group_stack_304384[0][chckIndx(i_365594, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
						if (!(eqStrings(gHEX60gensym359853_359880.id, []))) {
						if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
						F.line = 37;
						if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
						}
						
						F.line = 38;
						if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359853_359880.id); } else { current_304385[0].idPath = gHEX60gensym359853_359880.id.slice(); };
						}
						
						F.line = 188;
						i_365594 = addInt(i_365594, 1);
						if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365595))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L5: do {
			F.line = 95;
			org_box_359891(0, 0, 1280, 720);
			F.line = 96;
			box_326574(root_304381[0].box);
			F.line = 97;
			constraints_326990(0, 0);
			F.line = 98;
			fill_326686(makeNimstrLit("#ffffff"), 1.0000000000000000e+00);
			F.line = 19;
			parent_304380[0] = (Tmp6 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp6)[0][Tmp6[1]];
			if (!(parent_304380[0].wasDrawn)) {
			F.line = 21;
			draw_324721(parent_304380[0]);
			F.line = 22;
			parent_304380[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
			F.line = 99;
			current_304385[0].id = nimCopy(null, makeNimstrLit("Heading"), NTI44040);
			F.line = 75;
			current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
			F.line = 27;
			current_304385[0].wasDrawn = false;
			F.line = 28;
			current_304385[0].transparency = 1.0000000000000000e+00;
			F.line = 29;
			nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
			F.line = 30;
			nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
			F.line = 31;
			nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
			F.line = 32;
			if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
			L7: do {
				F.line = 34;
				var gHEX60gensym359914_359941 = null;
				F.line = 184;
				var i_365601 = 0;
				F.line = 185;
				var l_365602 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
				L8: do {
					F.line = 186;
						L9: while (true) {
						if (!(i_365601 < l_365602)) break L9;
							F.line = 34;
							gHEX60gensym359914_359941 = group_stack_304384[0][chckIndx(i_365601, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
							if (!(eqStrings(gHEX60gensym359914_359941.id, []))) {
							if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
							F.line = 37;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 38;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359914_359941.id); } else { current_304385[0].idPath = gHEX60gensym359914_359941.id.slice(); };
							}
							
							F.line = 188;
							i_365601 = addInt(i_365601, 1);
							if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365602))) {
							F.line = 189;
							failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L10: do {
				F.line = 100;
				box_359470(400, 20, 480, 60);
				F.line = 101;
				constraints_326990(4, 0);
				F.line = 102;
				fill_326686(makeNimstrLit("#d7ba56"), 1.0000000000000000e+00);
				F.line = 103;
				corner_radius_326804(3.0000000000000000e+01);
				F.line = 104;
				stroke_weight_326752(1.0000000000000000e+00);
				F.line = 19;
				parent_304380[0] = (Tmp11 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp11)[0][Tmp11[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 105;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Tic-Tac-Toe"), NTI44040);
				F.line = 80;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L12: do {
					F.line = 34;
					var gHEX60gensym359962_359989 = null;
					F.line = 184;
					var i_365608 = 0;
					F.line = 185;
					var l_365609 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L13: do {
						F.line = 186;
							L14: while (true) {
							if (!(i_365608 < l_365609)) break L14;
								F.line = 34;
								gHEX60gensym359962_359989 = group_stack_304384[0][chckIndx(i_365608, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym359962_359989.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym359962_359989.id); } else { current_304385[0].idPath = gHEX60gensym359962_359989.id.slice(); };
								}
								
								F.line = 188;
								i_365608 = addInt(i_365608, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365609))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L15: do {
					F.line = 106;
					box_359470(0, 0, 480, 60);
					F.line = 107;
					constraints_326990(0, 0);
					F.line = 108;
					fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
					F.line = 109;
					stroke_weight_326752(1.0000000000000000e+00);
					F.line = 110;
					font_326374(makeNimstrLit("IBM Plex Sans Bold"), 4.8000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
					F.line = 111;
					characters_326476(makeNimstrLit("Tic-Tac-Toe"));
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp16 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp16)[0][Tmp16[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp17 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp17)[0][Tmp17[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
			} while(false);
			if (!(current_304385[0].wasDrawn)) {
			F.line = 49;
			draw_324721(current_304385[0]);
			F.line = 50;
			current_304385[0].wasDrawn = true;
			}
			
			F.line = 52;
			pop_324857(group_stack_304384, 0);
			if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 54;
			current_304385[0] = (Tmp18 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp18)[0][Tmp18[1]];
			}
			else {
				F.line = 56;
				current_304385[0] = null;
			}
			
			if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 58;
			parent_304380[0] = (Tmp19 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp19)[0][Tmp19[1]];
			}
			else {
				F.line = 60;
				parent_304380[0] = null;
			}
			
			F.line = 19;
			parent_304380[0] = (Tmp20 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp20)[0][Tmp20[1]];
			if (!(parent_304380[0].wasDrawn)) {
			F.line = 21;
			draw_324721(parent_304380[0]);
			F.line = 22;
			parent_304380[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
			F.line = 112;
			current_304385[0].id = nimCopy(null, makeNimstrLit("GameFrame"), NTI44040);
			F.line = 70;
			current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
			F.line = 27;
			current_304385[0].wasDrawn = false;
			F.line = 28;
			current_304385[0].transparency = 1.0000000000000000e+00;
			F.line = 29;
			nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
			F.line = 30;
			nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
			F.line = 31;
			nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
			F.line = 32;
			if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
			L21: do {
				F.line = 34;
				var gHEX60gensym360105_360132 = null;
				F.line = 184;
				var i_365619 = 0;
				F.line = 185;
				var l_365620 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
				L22: do {
					F.line = 186;
						L23: while (true) {
						if (!(i_365619 < l_365620)) break L23;
							F.line = 34;
							gHEX60gensym360105_360132 = group_stack_304384[0][chckIndx(i_365619, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
							if (!(eqStrings(gHEX60gensym360105_360132.id, []))) {
							if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
							F.line = 37;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 38;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360105_360132.id); } else { current_304385[0].idPath = gHEX60gensym360105_360132.id.slice(); };
							}
							
							F.line = 188;
							i_365619 = addInt(i_365619, 1);
							if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365620))) {
							F.line = 189;
							failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L24: do {
				F.line = 113;
				box_359470(335, 90, 610, 610);
				F.line = 114;
				constraints_326990(3, 3);
				F.line = 115;
				make_square_358631();
				F.line = 19;
				parent_304380[0] = (Tmp25 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp25)[0][Tmp25[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 116;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 2"), NTI44040);
				F.line = 75;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L26: do {
					F.line = 34;
					var gHEX60gensym360155_360182 = null;
					F.line = 184;
					var i_365626 = 0;
					F.line = 185;
					var l_365627 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L27: do {
						F.line = 186;
							L28: while (true) {
							if (!(i_365626 < l_365627)) break L28;
								F.line = 34;
								gHEX60gensym360155_360182 = group_stack_304384[0][chckIndx(i_365626, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym360155_360182.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360155_360182.id); } else { current_304385[0].idPath = gHEX60gensym360155_360182.id.slice(); };
								}
								
								F.line = 188;
								i_365626 = addInt(i_365626, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365627))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L29: do {
					F.line = 117;
					box_359253(0, 0, parent_304380[0].box.h, parent_304380[0].box.w);
					F.line = 118;
					fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
					F.line = 19;
					parent_304380[0] = (Tmp30 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp30)[0][Tmp30[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 119;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 3"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L31: do {
						F.line = 34;
						var gHEX60gensym360199_360226 = null;
						F.line = 184;
						var i_365633 = 0;
						F.line = 185;
						var l_365634 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L32: do {
							F.line = 186;
								L33: while (true) {
								if (!(i_365633 < l_365634)) break L33;
									F.line = 34;
									gHEX60gensym360199_360226 = group_stack_304384[0][chckIndx(i_365633, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym360199_360226.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360199_360226.id); } else { current_304385[0].idPath = gHEX60gensym360199_360226.id.slice(); };
									}
									
									F.line = 188;
									i_365633 = addInt(i_365633, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365634))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L34: do {
						F.line = 120;
						box_359253(5, 5, (parent_304380[0].box.w - 1.0000000000000000e+01), (parent_304380[0].box.h - 1.0000000000000000e+01));
						F.line = 121;
						fill_326686(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
						F.line = 122;
						draw_game_field_358675();
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp35 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp35)[0][Tmp35[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp36 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp36)[0][Tmp36[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp37 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp37)[0][Tmp37[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp38 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp38)[0][Tmp38[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
			} while(false);
			if (!(current_304385[0].wasDrawn)) {
			F.line = 49;
			draw_324721(current_304385[0]);
			F.line = 50;
			current_304385[0].wasDrawn = true;
			}
			
			F.line = 52;
			pop_324857(group_stack_304384, 0);
			if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 54;
			current_304385[0] = (Tmp39 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp39)[0][Tmp39[1]];
			}
			else {
				F.line = 56;
				current_304385[0] = null;
			}
			
			if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 58;
			parent_304380[0] = (Tmp40 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp40)[0][Tmp40[1]];
			}
			else {
				F.line = 60;
				parent_304380[0] = null;
			}
			
			F.line = 19;
			parent_304380[0] = (Tmp41 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp41)[0][Tmp41[1]];
			if (!(parent_304380[0].wasDrawn)) {
			F.line = 21;
			draw_324721(parent_304380[0]);
			F.line = 22;
			parent_304380[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
			F.line = 123;
			current_304385[0].id = nimCopy(null, makeNimstrLit("Leaderboard"), NTI44040);
			F.line = 70;
			current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
			F.line = 27;
			current_304385[0].wasDrawn = false;
			F.line = 28;
			current_304385[0].transparency = 1.0000000000000000e+00;
			F.line = 29;
			nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
			F.line = 30;
			nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
			F.line = 31;
			nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
			F.line = 32;
			if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
			L42: do {
				F.line = 34;
				var gHEX60gensym360384_360411 = null;
				F.line = 184;
				var i_365646 = 0;
				F.line = 185;
				var l_365647 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
				L43: do {
					F.line = 186;
						L44: while (true) {
						if (!(i_365646 < l_365647)) break L44;
							F.line = 34;
							gHEX60gensym360384_360411 = group_stack_304384[0][chckIndx(i_365646, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
							if (!(eqStrings(gHEX60gensym360384_360411.id, []))) {
							if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
							F.line = 37;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 38;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360384_360411.id); } else { current_304385[0].idPath = gHEX60gensym360384_360411.id.slice(); };
							}
							
							F.line = 188;
							i_365646 = addInt(i_365646, 1);
							if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365647))) {
							F.line = 189;
							failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L45: do {
				F.line = 124;
				box_359470(960, 40, 300, 655);
				F.line = 125;
				org_box_359891(960, 40, 300, 655);
				F.line = 126;
				constraints_326990(1, 3);
				F.line = 127;
				corner_radius_326804(0.0);
				F.line = 128;
				stroke_weight_326752(1.0000000000000000e+00);
				F.line = 19;
				parent_304380[0] = (Tmp46 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp46)[0][Tmp46[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 129;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 4"), NTI44040);
				F.line = 75;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L47: do {
					F.line = 34;
					var gHEX60gensym360450_360477 = null;
					F.line = 184;
					var i_365653 = 0;
					F.line = 185;
					var l_365654 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L48: do {
						F.line = 186;
							L49: while (true) {
							if (!(i_365653 < l_365654)) break L49;
								F.line = 34;
								gHEX60gensym360450_360477 = group_stack_304384[0][chckIndx(i_365653, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym360450_360477.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360450_360477.id); } else { current_304385[0].idPath = gHEX60gensym360450_360477.id.slice(); };
								}
								
								F.line = 188;
								i_365653 = addInt(i_365653, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365654))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L50: do {
					F.line = 130;
					box_359470(20, 10, 260, 50);
					F.line = 131;
					constraints_326990(0, 0);
					F.line = 132;
					fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
					F.line = 133;
					corner_radius_326804(2.5000000000000000e+01);
					F.line = 134;
					stroke_weight_326752(1.0000000000000000e+00);
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp51 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp51)[0][Tmp51[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp52 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp52)[0][Tmp52[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp53 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp53)[0][Tmp53[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 135;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Leaderboard"), NTI44040);
				F.line = 80;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L54: do {
					F.line = 34;
					var gHEX60gensym360544_360571 = null;
					F.line = 184;
					var i_365662 = 0;
					F.line = 185;
					var l_365663 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L55: do {
						F.line = 186;
							L56: while (true) {
							if (!(i_365662 < l_365663)) break L56;
								F.line = 34;
								gHEX60gensym360544_360571 = group_stack_304384[0][chckIndx(i_365662, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym360544_360571.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360544_360571.id); } else { current_304385[0].idPath = gHEX60gensym360544_360571.id.slice(); };
								}
								
								F.line = 188;
								i_365662 = addInt(i_365662, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365663))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L57: do {
					F.line = 136;
					box_359470(20, 10, 260, 50);
					F.line = 137;
					constraints_326990(0, 0);
					F.line = 138;
					fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
					F.line = 139;
					stroke_weight_326752(1.0000000000000000e+00);
					F.line = 140;
					font_326374(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
					F.line = 141;
					characters_326476(makeNimstrLit("Leaderboard"));
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp58 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp58)[0][Tmp58[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp59 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp59)[0][Tmp59[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp60 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp60)[0][Tmp60[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 142;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Table"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L61: do {
					F.line = 34;
					var gHEX60gensym360639_360666 = null;
					F.line = 184;
					var i_365671 = 0;
					F.line = 185;
					var l_365672 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L62: do {
						F.line = 186;
							L63: while (true) {
							if (!(i_365671 < l_365672)) break L63;
								F.line = 34;
								gHEX60gensym360639_360666 = group_stack_304384[0][chckIndx(i_365671, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym360639_360666.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360639_360666.id); } else { current_304385[0].idPath = gHEX60gensym360639_360666.id.slice(); };
								}
								
								F.line = 188;
								i_365671 = addInt(i_365671, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365672))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L64: do {
					F.line = 143;
					box_359470(0, 70, 300, 585);
					F.line = 144;
					org_box_359891(0, 70, 300, 585);
					F.line = 145;
					constraints_326990(0, 3);
					F.line = 19;
					parent_304380[0] = (Tmp65 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp65)[0][Tmp65[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 146;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 6"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L66: do {
						F.line = 34;
						var gHEX60gensym360705_360732 = null;
						F.line = 184;
						var i_365678 = 0;
						F.line = 185;
						var l_365679 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L67: do {
							F.line = 186;
								L68: while (true) {
								if (!(i_365678 < l_365679)) break L68;
									F.line = 34;
									gHEX60gensym360705_360732 = group_stack_304384[0][chckIndx(i_365678, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym360705_360732.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360705_360732.id); } else { current_304385[0].idPath = gHEX60gensym360705_360732.id.slice(); };
									}
									
									F.line = 188;
									i_365678 = addInt(i_365678, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365679))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L69: do {
						F.line = 147;
						box_359470(0, 41, 300, 40);
						F.line = 148;
						constraints_326990(0, 0);
						F.line = 149;
						fill_326686(makeNimstrLit("#d7ba56"), 1.0000000000000000e+00);
						F.line = 150;
						corner_radius_326804(0.0);
						F.line = 151;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp70 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp70)[0][Tmp70[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp71 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp71)[0][Tmp71[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp72 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp72)[0][Tmp72[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 152;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Sum"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L73: do {
						F.line = 34;
						var gHEX60gensym360799_360826 = null;
						F.line = 184;
						var i_365687 = 0;
						F.line = 185;
						var l_365688 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L74: do {
							F.line = 186;
								L75: while (true) {
								if (!(i_365687 < l_365688)) break L75;
									F.line = 34;
									gHEX60gensym360799_360826 = group_stack_304384[0][chckIndx(i_365687, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym360799_360826.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360799_360826.id); } else { current_304385[0].idPath = gHEX60gensym360799_360826.id.slice(); };
									}
									
									F.line = 188;
									i_365687 = addInt(i_365687, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365688))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L76: do {
						F.line = 153;
						box_359470(0, 41, 100, 40);
						F.line = 154;
						constraints_326990(0, 0);
						F.line = 155;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 156;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 157;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 158;
						characters_326476(makeNimstrLit("Sum"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp77 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp77)[0][Tmp77[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp78 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp78)[0][Tmp78[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp79 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp79)[0][Tmp79[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 159;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Score1"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L80: do {
						F.line = 34;
						var gHEX60gensym360894_360921 = null;
						F.line = 184;
						var i_365696 = 0;
						F.line = 185;
						var l_365697 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L81: do {
							F.line = 186;
								L82: while (true) {
								if (!(i_365696 < l_365697)) break L82;
									F.line = 34;
									gHEX60gensym360894_360921 = group_stack_304384[0][chckIndx(i_365696, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym360894_360921.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360894_360921.id); } else { current_304385[0].idPath = gHEX60gensym360894_360921.id.slice(); };
									}
									
									F.line = 188;
									i_365696 = addInt(i_365696, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365697))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L83: do {
						F.line = 160;
						box_359470(100, 41, 100, 40);
						F.line = 161;
						constraints_326990(0, 0);
						F.line = 162;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 163;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 164;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 165;
						characters_326476(cstrToNimstr(((Tmp84 = get_leaderboard_354135(game_358251).sum, Tmp84)[chckIndx(1, 0, (Tmp84 != null ? Tmp84.length : 0)+0-1)-0])+""));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp85 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp85)[0][Tmp85[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp86 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp86)[0][Tmp86[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp87 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp87)[0][Tmp87[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 166;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Score2"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L88: do {
						F.line = 34;
						var gHEX60gensym360990_361017 = null;
						F.line = 184;
						var i_365705 = 0;
						F.line = 185;
						var l_365706 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L89: do {
							F.line = 186;
								L90: while (true) {
								if (!(i_365705 < l_365706)) break L90;
									F.line = 34;
									gHEX60gensym360990_361017 = group_stack_304384[0][chckIndx(i_365705, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym360990_361017.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym360990_361017.id); } else { current_304385[0].idPath = gHEX60gensym360990_361017.id.slice(); };
									}
									
									F.line = 188;
									i_365705 = addInt(i_365705, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365706))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L91: do {
						F.line = 167;
						box_359470(200, 41, 100, 40);
						F.line = 168;
						constraints_326990(0, 0);
						F.line = 169;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 170;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 171;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 172;
						characters_326476(cstrToNimstr(((Tmp92 = get_leaderboard_354135(game_358251).sum, Tmp92)[chckIndx(2, 0, (Tmp92 != null ? Tmp92.length : 0)+0-1)-0])+""));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp93 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp93)[0][Tmp93[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp94 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp94)[0][Tmp94[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp95 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp95)[0][Tmp95[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 173;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Player1"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L96: do {
						F.line = 34;
						var gHEX60gensym361086_361113 = null;
						F.line = 184;
						var i_365714 = 0;
						F.line = 185;
						var l_365715 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L97: do {
							F.line = 186;
								L98: while (true) {
								if (!(i_365714 < l_365715)) break L98;
									F.line = 34;
									gHEX60gensym361086_361113 = group_stack_304384[0][chckIndx(i_365714, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361086_361113.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361086_361113.id); } else { current_304385[0].idPath = gHEX60gensym361086_361113.id.slice(); };
									}
									
									F.line = 188;
									i_365714 = addInt(i_365714, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365715))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L99: do {
						F.line = 174;
						box_359470(100, 1, 100, 40);
						F.line = 175;
						constraints_326990(0, 0);
						F.line = 176;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 177;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 178;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 179;
						characters_326476(makeNimstrLit("Player 1"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp100 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp100)[0][Tmp100[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp101 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp101)[0][Tmp101[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp102 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp102)[0][Tmp102[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 180;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Player2"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L103: do {
						F.line = 34;
						var gHEX60gensym361182_361209 = null;
						F.line = 184;
						var i_365723 = 0;
						F.line = 185;
						var l_365724 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L104: do {
							F.line = 186;
								L105: while (true) {
								if (!(i_365723 < l_365724)) break L105;
									F.line = 34;
									gHEX60gensym361182_361209 = group_stack_304384[0][chckIndx(i_365723, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361182_361209.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361182_361209.id); } else { current_304385[0].idPath = gHEX60gensym361182_361209.id.slice(); };
									}
									
									F.line = 188;
									i_365723 = addInt(i_365723, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365724))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L106: do {
						F.line = 181;
						box_359470(200, 1, 100, 40);
						F.line = 182;
						constraints_326990(0, 0);
						F.line = 183;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 184;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 185;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 186;
						characters_326476(makeNimstrLit("Player 2"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp107 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp107)[0][Tmp107[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp108 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp108)[0][Tmp108[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp109 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp109)[0][Tmp109[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 187;
					current_304385[0].id = nimCopy(null, makeNimstrLit("hline"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L110: do {
						F.line = 34;
						var gHEX60gensym361278_361305 = null;
						F.line = 184;
						var i_365732 = 0;
						F.line = 185;
						var l_365733 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L111: do {
							F.line = 186;
								L112: while (true) {
								if (!(i_365732 < l_365733)) break L112;
									F.line = 34;
									gHEX60gensym361278_361305 = group_stack_304384[0][chckIndx(i_365732, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361278_361305.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361278_361305.id); } else { current_304385[0].idPath = gHEX60gensym361278_361305.id.slice(); };
									}
									
									F.line = 188;
									i_365732 = addInt(i_365732, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365733))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L113: do {
						F.line = 188;
						box_359470(0, 40, 300, 2);
						F.line = 189;
						constraints_326990(0, 0);
						F.line = 190;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 191;
						corner_radius_326804(0.0);
						F.line = 192;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp114 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp114)[0][Tmp114[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp115 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp115)[0][Tmp115[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp116 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp116)[0][Tmp116[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 193;
					current_304385[0].id = nimCopy(null, makeNimstrLit("hline"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L117: do {
						F.line = 34;
						var gHEX60gensym361372_361399 = null;
						F.line = 184;
						var i_365741 = 0;
						F.line = 185;
						var l_365742 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L118: do {
							F.line = 186;
								L119: while (true) {
								if (!(i_365741 < l_365742)) break L119;
									F.line = 34;
									gHEX60gensym361372_361399 = group_stack_304384[0][chckIndx(i_365741, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361372_361399.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361372_361399.id); } else { current_304385[0].idPath = gHEX60gensym361372_361399.id.slice(); };
									}
									
									F.line = 188;
									i_365741 = addInt(i_365741, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365742))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L120: do {
						F.line = 194;
						box_359470(0, 80, 300, 2);
						F.line = 195;
						constraints_326990(0, 0);
						F.line = 196;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 197;
						corner_radius_326804(0.0);
						F.line = 198;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp121 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp121)[0][Tmp121[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp122 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp122)[0][Tmp122[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp123 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp123)[0][Tmp123[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 199;
					current_304385[0].id = nimCopy(null, makeNimstrLit("vline1"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L124: do {
						F.line = 34;
						var gHEX60gensym361467_361494 = null;
						F.line = 184;
						var i_365750 = 0;
						F.line = 185;
						var l_365751 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L125: do {
							F.line = 186;
								L126: while (true) {
								if (!(i_365750 < l_365751)) break L126;
									F.line = 34;
									gHEX60gensym361467_361494 = group_stack_304384[0][chckIndx(i_365750, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361467_361494.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361467_361494.id); } else { current_304385[0].idPath = gHEX60gensym361467_361494.id.slice(); };
									}
									
									F.line = 188;
									i_365750 = addInt(i_365750, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365751))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L127: do {
						F.line = 200;
						box_359470(99, 0, 2, 585);
						F.line = 201;
						constraints_326990(0, 3);
						F.line = 202;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 203;
						corner_radius_326804(0.0);
						F.line = 204;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp128 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp128)[0][Tmp128[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp129 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp129)[0][Tmp129[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp130 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp130)[0][Tmp130[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 205;
					current_304385[0].id = nimCopy(null, makeNimstrLit("vline2"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L131: do {
						F.line = 34;
						var gHEX60gensym361562_361589 = null;
						F.line = 184;
						var i_365759 = 0;
						F.line = 185;
						var l_365760 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L132: do {
							F.line = 186;
								L133: while (true) {
								if (!(i_365759 < l_365760)) break L133;
									F.line = 34;
									gHEX60gensym361562_361589 = group_stack_304384[0][chckIndx(i_365759, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361562_361589.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361562_361589.id); } else { current_304385[0].idPath = gHEX60gensym361562_361589.id.slice(); };
									}
									
									F.line = 188;
									i_365759 = addInt(i_365759, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365760))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L134: do {
						F.line = 206;
						box_359470(199, 0, 2, 585);
						F.line = 207;
						constraints_326990(0, 3);
						F.line = 208;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 209;
						corner_radius_326804(0.0);
						F.line = 210;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp135 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp135)[0][Tmp135[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp136 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp136)[0][Tmp136[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp137 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp137)[0][Tmp137[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 211;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Match"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L138: do {
						F.line = 34;
						var gHEX60gensym361657_361684 = null;
						F.line = 184;
						var i_365768 = 0;
						F.line = 185;
						var l_365769 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L139: do {
							F.line = 186;
								L140: while (true) {
								if (!(i_365768 < l_365769)) break L140;
									F.line = 34;
									gHEX60gensym361657_361684 = group_stack_304384[0][chckIndx(i_365768, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361657_361684.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361657_361684.id); } else { current_304385[0].idPath = gHEX60gensym361657_361684.id.slice(); };
									}
									
									F.line = 188;
									i_365768 = addInt(i_365768, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365769))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L141: do {
						F.line = 212;
						box_359470(0, 1, 100, 40);
						F.line = 213;
						constraints_326990(0, 0);
						F.line = 214;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 215;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 216;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, 0);
						F.line = 217;
						characters_326476(makeNimstrLit("Match"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp142 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp142)[0][Tmp142[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp143 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp143)[0][Tmp143[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp144 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp144)[0][Tmp144[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 218;
					current_304385[0].id = nimCopy(null, makeNimstrLit("tableContent"), NTI44040);
					F.line = 70;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L145: do {
						F.line = 34;
						var gHEX60gensym361752_361779 = null;
						F.line = 184;
						var i_365777 = 0;
						F.line = 185;
						var l_365778 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L146: do {
							F.line = 186;
								L147: while (true) {
								if (!(i_365777 < l_365778)) break L147;
									F.line = 34;
									gHEX60gensym361752_361779 = group_stack_304384[0][chckIndx(i_365777, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym361752_361779.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361752_361779.id); } else { current_304385[0].idPath = gHEX60gensym361752_361779.id.slice(); };
									}
									
									F.line = 188;
									i_365777 = addInt(i_365777, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365778))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L148: do {
						F.line = 219;
						box_359470(0, 82, 300, 500);
						F.line = 220;
						constraints_326990(0, 3);
						F.line = 221;
						draw_leaderboard_359412();
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp149 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp149)[0][Tmp149[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp150 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp150)[0][Tmp150[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp151 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp151)[0][Tmp151[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp152 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp152)[0][Tmp152[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
			} while(false);
			if (!(current_304385[0].wasDrawn)) {
			F.line = 49;
			draw_324721(current_304385[0]);
			F.line = 50;
			current_304385[0].wasDrawn = true;
			}
			
			F.line = 52;
			pop_324857(group_stack_304384, 0);
			if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 54;
			current_304385[0] = (Tmp153 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp153)[0][Tmp153[1]];
			}
			else {
				F.line = 56;
				current_304385[0] = null;
			}
			
			if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 58;
			parent_304380[0] = (Tmp154 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp154)[0][Tmp154[1]];
			}
			else {
				F.line = 60;
				parent_304380[0] = null;
			}
			
			F.line = 19;
			parent_304380[0] = (Tmp155 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp155)[0][Tmp155[1]];
			if (!(parent_304380[0].wasDrawn)) {
			F.line = 21;
			draw_324721(parent_304380[0]);
			F.line = 22;
			parent_304380[0].wasDrawn = true;
			}
			
			F.line = 24;
			current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
			F.line = 222;
			current_304385[0].id = nimCopy(null, makeNimstrLit("Settings"), NTI44040);
			F.line = 70;
			current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
			F.line = 27;
			current_304385[0].wasDrawn = false;
			F.line = 28;
			current_304385[0].transparency = 1.0000000000000000e+00;
			F.line = 29;
			nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
			F.line = 30;
			nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
			F.line = 31;
			nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
			F.line = 32;
			if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
			L156: do {
				F.line = 34;
				var gHEX60gensym361942_361969 = null;
				F.line = 184;
				var i_365790 = 0;
				F.line = 185;
				var l_365791 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
				L157: do {
					F.line = 186;
						L158: while (true) {
						if (!(i_365790 < l_365791)) break L158;
							F.line = 34;
							gHEX60gensym361942_361969 = group_stack_304384[0][chckIndx(i_365790, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
							if (!(eqStrings(gHEX60gensym361942_361969.id, []))) {
							if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
							F.line = 37;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
							}
							
							F.line = 38;
							if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361942_361969.id); } else { current_304385[0].idPath = gHEX60gensym361942_361969.id.slice(); };
							}
							
							F.line = 188;
							i_365790 = addInt(i_365790, 1);
							if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365791))) {
							F.line = 189;
							failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			L159: do {
				F.line = 223;
				var button_color_361974 = {r: 0.0, g: 0.0, b: 0.0, a: 0.0};
				F.line = 224;
				box_359470(20, 40, 300, 655);
				F.line = 225;
				constraints_326990(0, 3);
				F.line = 226;
				corner_radius_326804(0.0);
				F.line = 227;
				stroke_weight_326752(1.0000000000000000e+00);
				F.line = 19;
				parent_304380[0] = (Tmp160 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp160)[0][Tmp160[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 228;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 4"), NTI44040);
				F.line = 75;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L161: do {
					F.line = 34;
					var gHEX60gensym361991_362018 = null;
					F.line = 184;
					var i_365797 = 0;
					F.line = 185;
					var l_365798 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L162: do {
						F.line = 186;
							L163: while (true) {
							if (!(i_365797 < l_365798)) break L163;
								F.line = 34;
								gHEX60gensym361991_362018 = group_stack_304384[0][chckIndx(i_365797, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym361991_362018.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym361991_362018.id); } else { current_304385[0].idPath = gHEX60gensym361991_362018.id.slice(); };
								}
								
								F.line = 188;
								i_365797 = addInt(i_365797, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365798))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L164: do {
					F.line = 229;
					box_359470(20, 10, 260, 50);
					F.line = 230;
					constraints_326990(0, 0);
					F.line = 231;
					fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
					F.line = 232;
					corner_radius_326804(2.5000000000000000e+01);
					F.line = 233;
					stroke_weight_326752(1.0000000000000000e+00);
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp165 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp165)[0][Tmp165[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp166 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp166)[0][Tmp166[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp167 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp167)[0][Tmp167[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 234;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Settings"), NTI44040);
				F.line = 80;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L168: do {
					F.line = 34;
					var gHEX60gensym362085_362112 = null;
					F.line = 184;
					var i_365806 = 0;
					F.line = 185;
					var l_365807 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L169: do {
						F.line = 186;
							L170: while (true) {
							if (!(i_365806 < l_365807)) break L170;
								F.line = 34;
								gHEX60gensym362085_362112 = group_stack_304384[0][chckIndx(i_365806, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym362085_362112.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362085_362112.id); } else { current_304385[0].idPath = gHEX60gensym362085_362112.id.slice(); };
								}
								
								F.line = 188;
								i_365806 = addInt(i_365806, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365807))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L171: do {
					F.line = 235;
					box_359470(20, 10, 260, 50);
					F.line = 236;
					constraints_326990(0, 0);
					F.line = 237;
					fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
					F.line = 238;
					stroke_weight_326752(1.0000000000000000e+00);
					F.line = 239;
					font_326374(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
					F.line = 240;
					characters_326476(makeNimstrLit("Settings"));
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp172 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp172)[0][Tmp172[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp173 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp173)[0][Tmp173[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp174 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp174)[0][Tmp174[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 241;
				current_304385[0].id = nimCopy(null, makeNimstrLit("SettingButtons"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L175: do {
					F.line = 34;
					var gHEX60gensym362181_362208 = null;
					F.line = 184;
					var i_365815 = 0;
					F.line = 185;
					var l_365816 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L176: do {
						F.line = 186;
							L177: while (true) {
							if (!(i_365815 < l_365816)) break L177;
								F.line = 34;
								gHEX60gensym362181_362208 = group_stack_304384[0][chckIndx(i_365815, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym362181_362208.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362181_362208.id); } else { current_304385[0].idPath = gHEX60gensym362181_362208.id.slice(); };
								}
								
								F.line = 188;
								i_365815 = addInt(i_365815, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365816))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L178: do {
					F.line = 242;
					box_359470(45, 360, 200, 50);
					F.line = 19;
					parent_304380[0] = (Tmp179 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp179)[0][Tmp179[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 243;
					current_304385[0].id = nimCopy(null, makeNimstrLit("startButton"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L180: do {
						F.line = 34;
						var gHEX60gensym362229_362256 = null;
						F.line = 184;
						var i_365822 = 0;
						F.line = 185;
						var l_365823 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L181: do {
							F.line = 186;
								L182: while (true) {
								if (!(i_365822 < l_365823)) break L182;
									F.line = 34;
									gHEX60gensym362229_362256 = group_stack_304384[0][chckIndx(i_365822, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362229_362256.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362229_362256.id); } else { current_304385[0].idPath = gHEX60gensym362229_362256.id.slice(); };
									}
									
									F.line = 188;
									i_365822 = addInt(i_365822, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365823))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L183: do {
						F.line = 244;
						box_359470(0, 0, 200, 50);
						F.line = 245;
						constraints_326990(0, 0);
						F.line = 246;
						fill_326653(colors_357035.buttonColor);
						F.line = 247;
						corner_radius_326804(2.5000000000000000e+01);
						F.line = 248;
						stroke_weight_326752(1.0000000000000000e+00);
							if (!mouse_304389[0].click) Tmp184 = false; else {								Tmp184 = mouse_overlap_logic_326276();							}						if (Tmp184) {
						F.line = 250;
						start_game_358616();
						}
						
						if (mouse_overlap_logic_326276()) {
						F.line = 252;
						fill_326653(colors_357035.buttonHover);
						}
						
							if (!mouse_304389[0].down) Tmp185 = false; else {								Tmp185 = mouse_overlap_logic_326276();							}						if (Tmp185) {
						F.line = 254;
						fill_326653(colors_357035.buttonPressed);
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp186 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp186)[0][Tmp186[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp187 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp187)[0][Tmp187[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp188 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp188)[0][Tmp188[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 255;
					current_304385[0].id = nimCopy(null, makeNimstrLit("start"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L189: do {
						F.line = 34;
						var gHEX60gensym362323_362350 = null;
						F.line = 184;
						var i_365831 = 0;
						F.line = 185;
						var l_365832 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L190: do {
							F.line = 186;
								L191: while (true) {
								if (!(i_365831 < l_365832)) break L191;
									F.line = 34;
									gHEX60gensym362323_362350 = group_stack_304384[0][chckIndx(i_365831, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362323_362350.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362323_362350.id); } else { current_304385[0].idPath = gHEX60gensym362323_362350.id.slice(); };
									}
									
									F.line = 188;
									i_365831 = addInt(i_365831, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365832))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L192: do {
						F.line = 256;
						box_359470(0, 0, 200, 50);
						F.line = 257;
						constraints_326990(0, 0);
						F.line = 258;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 259;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 260;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 261;
						characters_326476(makeNimstrLit("start"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp193 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp193)[0][Tmp193[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp194 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp194)[0][Tmp194[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp195 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp195)[0][Tmp195[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 262;
					current_304385[0].id = nimCopy(null, makeNimstrLit("next"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L196: do {
						F.line = 34;
						var gHEX60gensym362419_362446 = null;
						F.line = 184;
						var i_365840 = 0;
						F.line = 185;
						var l_365841 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L197: do {
							F.line = 186;
								L198: while (true) {
								if (!(i_365840 < l_365841)) break L198;
									F.line = 34;
									gHEX60gensym362419_362446 = group_stack_304384[0][chckIndx(i_365840, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362419_362446.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362419_362446.id); } else { current_304385[0].idPath = gHEX60gensym362419_362446.id.slice(); };
									}
									
									F.line = 188;
									i_365840 = addInt(i_365840, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365841))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L199: do {
						F.line = 263;
						box_359470(0, 60, 200, 50);
						F.line = 264;
						constraints_326990(0, 0);
						F.line = 265;
						fill_326653(colors_357035.buttonColor);
						F.line = 266;
						corner_radius_326804(2.5000000000000000e+01);
						F.line = 267;
						stroke_weight_326752(1.0000000000000000e+00);
							if (!mouse_304389[0].click) Tmp200 = false; else {								Tmp200 = mouse_overlap_logic_326276();							}						if (Tmp200) {
						F.line = 269;
						setup_355942(game_358251, settings_358451);
						F.line = 270;
						if ((starting_player_358454[0] == 1)) {
						Tmp201 = 2;
						}
						else {
						Tmp201 = 1;
						}
						
						starting_player_358454[0] = Tmp201;
						F.line = 271;
						game_358251.current_player_number = starting_player_358454[0];
						}
						
						if (mouse_overlap_logic_326276()) {
						F.line = 273;
						fill_326653(colors_357035.buttonHover);
						}
						
							if (!mouse_304389[0].down) Tmp202 = false; else {								Tmp202 = mouse_overlap_logic_326276();							}						if (Tmp202) {
						F.line = 275;
						fill_326653(colors_357035.buttonPressed);
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp203 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp203)[0][Tmp203[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp204 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp204)[0][Tmp204[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp205 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp205)[0][Tmp205[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 276;
					current_304385[0].id = nimCopy(null, makeNimstrLit("start"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L206: do {
						F.line = 34;
						var gHEX60gensym362513_362540 = null;
						F.line = 184;
						var i_365849 = 0;
						F.line = 185;
						var l_365850 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L207: do {
							F.line = 186;
								L208: while (true) {
								if (!(i_365849 < l_365850)) break L208;
									F.line = 34;
									gHEX60gensym362513_362540 = group_stack_304384[0][chckIndx(i_365849, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362513_362540.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362513_362540.id); } else { current_304385[0].idPath = gHEX60gensym362513_362540.id.slice(); };
									}
									
									F.line = 188;
									i_365849 = addInt(i_365849, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365850))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L209: do {
						F.line = 277;
						box_359470(0, 60, 200, 50);
						F.line = 278;
						constraints_326990(0, 0);
						F.line = 279;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 280;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 281;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 3.6000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 282;
						characters_326476(makeNimstrLit("next"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp210 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp210)[0][Tmp210[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp211 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp211)[0][Tmp211[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp212 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp212)[0][Tmp212[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp213 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp213)[0][Tmp213[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp214 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp214)[0][Tmp214[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 283;
				current_304385[0].id = nimCopy(null, makeNimstrLit("P2Name"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L215: do {
					F.line = 34;
					var gHEX60gensym362656_362683 = null;
					F.line = 184;
					var i_365860 = 0;
					F.line = 185;
					var l_365861 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L216: do {
						F.line = 186;
							L217: while (true) {
							if (!(i_365860 < l_365861)) break L217;
								F.line = 34;
								gHEX60gensym362656_362683 = group_stack_304384[0][chckIndx(i_365860, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym362656_362683.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362656_362683.id); } else { current_304385[0].idPath = gHEX60gensym362656_362683.id.slice(); };
								}
								
								F.line = 188;
								i_365860 = addInt(i_365860, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365861))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L218: do {
					F.line = 284;
					box_359470(0, 155, 276, 40);
					F.line = 19;
					parent_304380[0] = (Tmp219 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp219)[0][Tmp219[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 285;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Player 2:"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L220: do {
						F.line = 34;
						var gHEX60gensym362704_362731 = null;
						F.line = 184;
						var i_365867 = 0;
						F.line = 185;
						var l_365868 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L221: do {
							F.line = 186;
								L222: while (true) {
								if (!(i_365867 < l_365868)) break L222;
									F.line = 34;
									gHEX60gensym362704_362731 = group_stack_304384[0][chckIndx(i_365867, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362704_362731.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362704_362731.id); } else { current_304385[0].idPath = gHEX60gensym362704_362731.id.slice(); };
									}
									
									F.line = 188;
									i_365867 = addInt(i_365867, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365868))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L223: do {
						F.line = 286;
						box_359470(0, 0, 120, 40);
						F.line = 287;
						constraints_326990(0, 0);
						F.line = 288;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 289;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 290;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, -1, -1);
						F.line = 291;
						characters_326476(makeNimstrLit("Player 2: "));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp224 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp224)[0][Tmp224[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp225 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp225)[0][Tmp225[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp226 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp226)[0][Tmp226[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 292;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L227: do {
						F.line = 34;
						var gHEX60gensym362801_362828 = null;
						F.line = 184;
						var i_365876 = 0;
						F.line = 185;
						var l_365877 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L228: do {
							F.line = 186;
								L229: while (true) {
								if (!(i_365876 < l_365877)) break L229;
									F.line = 34;
									gHEX60gensym362801_362828 = group_stack_304384[0][chckIndx(i_365876, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362801_362828.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362801_362828.id); } else { current_304385[0].idPath = gHEX60gensym362801_362828.id.slice(); };
									}
									
									F.line = 188;
									i_365876 = addInt(i_365876, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365877))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L230: do {
						F.line = 293;
						box_359470(120, 0, 156, 40);
						F.line = 294;
						constraints_326990(0, 0);
						F.line = 295;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 296;
						corner_radius_326804(0.0);
						F.line = 297;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp231 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp231)[0][Tmp231[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp232 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp232)[0][Tmp232[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp233 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp233)[0][Tmp233[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 298;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L234: do {
						F.line = 34;
						var gHEX60gensym362896_362923 = null;
						F.line = 184;
						var i_365885 = 0;
						F.line = 185;
						var l_365886 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L235: do {
							F.line = 186;
								L236: while (true) {
								if (!(i_365885 < l_365886)) break L236;
									F.line = 34;
									gHEX60gensym362896_362923 = group_stack_304384[0][chckIndx(i_365885, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362896_362923.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362896_362923.id); } else { current_304385[0].idPath = gHEX60gensym362896_362923.id.slice(); };
									}
									
									F.line = 188;
									i_365885 = addInt(i_365885, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365886))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L237: do {
						F.line = 299;
						box_359470(121, 1, 154, 38);
						F.line = 300;
						constraints_326990(0, 0);
						F.line = 301;
						fill_326686(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
						F.line = 302;
						corner_radius_326804(0.0);
						F.line = 303;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp238 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp238)[0][Tmp238[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp239 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp239)[0][Tmp239[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp240 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp240)[0][Tmp240[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 304;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P2NameInput"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L241: do {
						F.line = 34;
						var gHEX60gensym362991_363018 = null;
						F.line = 184;
						var i_365894 = 0;
						F.line = 185;
						var l_365895 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L242: do {
							F.line = 186;
								L243: while (true) {
								if (!(i_365894 < l_365895)) break L243;
									F.line = 34;
									gHEX60gensym362991_363018 = group_stack_304384[0][chckIndx(i_365894, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym362991_363018.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym362991_363018.id); } else { current_304385[0].idPath = gHEX60gensym362991_363018.id.slice(); };
									}
									
									F.line = 188;
									i_365894 = addInt(i_365894, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365895))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L244: do {
						F.line = 305;
						box_359470(121, 1, 154, 38);
						F.line = 306;
						constraints_326990(0, 0);
						F.line = 307;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 308;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 309;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 398;
						editable_text_326820(true);
							if (!(keyboard_304390[0].state == 4)) Tmp245 = false; else {								Tmp245 = has_keyboard_focus_326317(current_304385[0]);							}						if (Tmp245) {
						F.line = 400;
						settings_358451.name2 = nimCopy(null, keyboard_304390[0].input, NTI44040);
						F.line = 401;
						redraw_325279();
						}
						
						F.line = 310;
						characters_326476(settings_358451.name2);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp246 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp246)[0][Tmp246[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp247 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp247)[0][Tmp247[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp248 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp248)[0][Tmp248[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp249 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp249)[0][Tmp249[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp250 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp250)[0][Tmp250[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 311;
				current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L251: do {
					F.line = 34;
					var gHEX60gensym363140_363167 = null;
					F.line = 184;
					var i_365905 = 0;
					F.line = 185;
					var l_365906 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L252: do {
						F.line = 186;
							L253: while (true) {
							if (!(i_365905 < l_365906)) break L253;
								F.line = 34;
								gHEX60gensym363140_363167 = group_stack_304384[0][chckIndx(i_365905, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym363140_363167.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363140_363167.id); } else { current_304385[0].idPath = gHEX60gensym363140_363167.id.slice(); };
								}
								
								F.line = 188;
								i_365905 = addInt(i_365905, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365906))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L254: do {
					F.line = 312;
					box_359470(0, 110, 276, 40);
					F.line = 19;
					parent_304380[0] = (Tmp255 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp255)[0][Tmp255[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 313;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Player 1:"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L256: do {
						F.line = 34;
						var gHEX60gensym363188_363215 = null;
						F.line = 184;
						var i_365912 = 0;
						F.line = 185;
						var l_365913 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L257: do {
							F.line = 186;
								L258: while (true) {
								if (!(i_365912 < l_365913)) break L258;
									F.line = 34;
									gHEX60gensym363188_363215 = group_stack_304384[0][chckIndx(i_365912, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363188_363215.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363188_363215.id); } else { current_304385[0].idPath = gHEX60gensym363188_363215.id.slice(); };
									}
									
									F.line = 188;
									i_365912 = addInt(i_365912, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365913))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L259: do {
						F.line = 314;
						box_359470(0, 0, 120, 40);
						F.line = 315;
						constraints_326990(0, 0);
						F.line = 316;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 317;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 318;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, -1, -1);
						F.line = 319;
						characters_326476(makeNimstrLit("Player 1: "));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp260 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp260)[0][Tmp260[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp261 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp261)[0][Tmp261[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp262 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp262)[0][Tmp262[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 320;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L263: do {
						F.line = 34;
						var gHEX60gensym363285_363312 = null;
						F.line = 184;
						var i_365921 = 0;
						F.line = 185;
						var l_365922 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L264: do {
							F.line = 186;
								L265: while (true) {
								if (!(i_365921 < l_365922)) break L265;
									F.line = 34;
									gHEX60gensym363285_363312 = group_stack_304384[0][chckIndx(i_365921, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363285_363312.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363285_363312.id); } else { current_304385[0].idPath = gHEX60gensym363285_363312.id.slice(); };
									}
									
									F.line = 188;
									i_365921 = addInt(i_365921, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365922))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L266: do {
						F.line = 321;
						box_359470(120, 0, 156, 40);
						F.line = 322;
						constraints_326990(0, 0);
						F.line = 323;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 324;
						corner_radius_326804(0.0);
						F.line = 325;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp267 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp267)[0][Tmp267[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp268 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp268)[0][Tmp268[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp269 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp269)[0][Tmp269[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 326;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L270: do {
						F.line = 34;
						var gHEX60gensym363380_363407 = null;
						F.line = 184;
						var i_365930 = 0;
						F.line = 185;
						var l_365931 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L271: do {
							F.line = 186;
								L272: while (true) {
								if (!(i_365930 < l_365931)) break L272;
									F.line = 34;
									gHEX60gensym363380_363407 = group_stack_304384[0][chckIndx(i_365930, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363380_363407.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363380_363407.id); } else { current_304385[0].idPath = gHEX60gensym363380_363407.id.slice(); };
									}
									
									F.line = 188;
									i_365930 = addInt(i_365930, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365931))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L273: do {
						F.line = 327;
						box_359470(121, 1, 154, 38);
						F.line = 328;
						constraints_326990(0, 0);
						F.line = 329;
						fill_326686(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
						F.line = 330;
						corner_radius_326804(0.0);
						F.line = 331;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp274 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp274)[0][Tmp274[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp275 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp275)[0][Tmp275[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp276 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp276)[0][Tmp276[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 332;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1NameInput"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L277: do {
						F.line = 34;
						var gHEX60gensym363475_363502 = null;
						F.line = 184;
						var i_365939 = 0;
						F.line = 185;
						var l_365940 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L278: do {
							F.line = 186;
								L279: while (true) {
								if (!(i_365939 < l_365940)) break L279;
									F.line = 34;
									gHEX60gensym363475_363502 = group_stack_304384[0][chckIndx(i_365939, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363475_363502.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363475_363502.id); } else { current_304385[0].idPath = gHEX60gensym363475_363502.id.slice(); };
									}
									
									F.line = 188;
									i_365939 = addInt(i_365939, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365940))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L280: do {
						F.line = 333;
						box_359470(121, 0, 154, 38);
						F.line = 334;
						constraints_326990(0, 0);
						F.line = 335;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 336;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 337;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 398;
						editable_text_326820(true);
							if (!(keyboard_304390[0].state == 4)) Tmp281 = false; else {								Tmp281 = has_keyboard_focus_326317(current_304385[0]);							}						if (Tmp281) {
						F.line = 400;
						settings_358451.name1 = nimCopy(null, keyboard_304390[0].input, NTI44040);
						F.line = 401;
						redraw_325279();
						}
						
						F.line = 338;
						characters_326476(settings_358451.name1);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp282 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp282)[0][Tmp282[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp283 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp283)[0][Tmp283[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp284 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp284)[0][Tmp284[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp285 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp285)[0][Tmp285[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp286 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp286)[0][Tmp286[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 339;
				current_304385[0].id = nimCopy(null, makeNimstrLit("FieldSize"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L287: do {
					F.line = 34;
					var gHEX60gensym363624_363651 = null;
					F.line = 184;
					var i_365950 = 0;
					F.line = 185;
					var l_365951 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L288: do {
						F.line = 186;
							L289: while (true) {
							if (!(i_365950 < l_365951)) break L289;
								F.line = 34;
								gHEX60gensym363624_363651 = group_stack_304384[0][chckIndx(i_365950, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym363624_363651.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363624_363651.id); } else { current_304385[0].idPath = gHEX60gensym363624_363651.id.slice(); };
								}
								
								F.line = 188;
								i_365950 = addInt(i_365950, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365951))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L290: do {
					F.line = 340;
					box_359470(0, 225, 265, 40);
					F.line = 19;
					parent_304380[0] = (Tmp291 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp291)[0][Tmp291[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 341;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Field Size:"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L292: do {
						F.line = 34;
						var gHEX60gensym363672_363699 = null;
						F.line = 184;
						var i_365957 = 0;
						F.line = 185;
						var l_365958 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L293: do {
							F.line = 186;
								L294: while (true) {
								if (!(i_365957 < l_365958)) break L294;
									F.line = 34;
									gHEX60gensym363672_363699 = group_stack_304384[0][chckIndx(i_365957, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363672_363699.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363672_363699.id); } else { current_304385[0].idPath = gHEX60gensym363672_363699.id.slice(); };
									}
									
									F.line = 188;
									i_365957 = addInt(i_365957, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365958))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L295: do {
						F.line = 342;
						box_359470(0, 0, 130, 40);
						F.line = 343;
						constraints_326990(0, 0);
						F.line = 344;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 345;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 346;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, -1, -1);
						F.line = 347;
						characters_326476(makeNimstrLit("Field Size:"));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp296 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp296)[0][Tmp296[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp297 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp297)[0][Tmp297[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp298 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp298)[0][Tmp298[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 348;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L299: do {
						F.line = 34;
						var gHEX60gensym363769_363796 = null;
						F.line = 184;
						var i_365966 = 0;
						F.line = 185;
						var l_365967 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L300: do {
							F.line = 186;
								L301: while (true) {
								if (!(i_365966 < l_365967)) break L301;
									F.line = 34;
									gHEX60gensym363769_363796 = group_stack_304384[0][chckIndx(i_365966, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363769_363796.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363769_363796.id); } else { current_304385[0].idPath = gHEX60gensym363769_363796.id.slice(); };
									}
									
									F.line = 188;
									i_365966 = addInt(i_365966, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365967))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L302: do {
						F.line = 349;
						box_359470(181, 0, 50, 40);
						F.line = 350;
						constraints_326990(0, 0);
						F.line = 351;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 352;
						corner_radius_326804(0.0);
						F.line = 353;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp303 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp303)[0][Tmp303[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp304 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp304)[0][Tmp304[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp305 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp305)[0][Tmp305[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 354;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L306: do {
						F.line = 34;
						var gHEX60gensym363863_363890 = null;
						F.line = 184;
						var i_365975 = 0;
						F.line = 185;
						var l_365976 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L307: do {
							F.line = 186;
								L308: while (true) {
								if (!(i_365975 < l_365976)) break L308;
									F.line = 34;
									gHEX60gensym363863_363890 = group_stack_304384[0][chckIndx(i_365975, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363863_363890.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363863_363890.id); } else { current_304385[0].idPath = gHEX60gensym363863_363890.id.slice(); };
									}
									
									F.line = 188;
									i_365975 = addInt(i_365975, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365976))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L309: do {
						F.line = 355;
						box_359470(182, 1, 48, 38);
						F.line = 356;
						constraints_326990(0, 0);
						F.line = 357;
						fill_326686(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
						F.line = 358;
						corner_radius_326804(0.0);
						F.line = 359;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp310 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp310)[0][Tmp310[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp311 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp311)[0][Tmp311[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp312 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp312)[0][Tmp312[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 360;
					current_304385[0].id = nimCopy(null, makeNimstrLit("FieldSizeInput"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L313: do {
						F.line = 34;
						var gHEX60gensym363957_363984 = null;
						F.line = 184;
						var i_365984 = 0;
						F.line = 185;
						var l_365985 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L314: do {
							F.line = 186;
								L315: while (true) {
								if (!(i_365984 < l_365985)) break L315;
									F.line = 34;
									gHEX60gensym363957_363984 = group_stack_304384[0][chckIndx(i_365984, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym363957_363984.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym363957_363984.id); } else { current_304385[0].idPath = gHEX60gensym363957_363984.id.slice(); };
									}
									
									F.line = 188;
									i_365984 = addInt(i_365984, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365985))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L316: do {
						F.line = 361;
						box_359470(182, 1, 48, 38);
						F.line = 362;
						constraints_326990(0, 0);
						F.line = 363;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 364;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 365;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 366;
						characters_326476(cstrToNimstr((settings_358451.size)+""));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp317 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp317)[0][Tmp317[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp318 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp318)[0][Tmp318[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp319 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp319)[0][Tmp319[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 367;
					current_304385[0].id = nimCopy(null, makeNimstrLit("MinField"), NTI44040);
					F.line = 70;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L320: do {
						F.line = 34;
						var gHEX60gensym364053_364080 = null;
						F.line = 184;
						var i_365993 = 0;
						F.line = 185;
						var l_365994 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L321: do {
							F.line = 186;
								L322: while (true) {
								if (!(i_365993 < l_365994)) break L322;
									F.line = 34;
									gHEX60gensym364053_364080 = group_stack_304384[0][chckIndx(i_365993, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364053_364080.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364053_364080.id); } else { current_304385[0].idPath = gHEX60gensym364053_364080.id.slice(); };
									}
									
									F.line = 188;
									i_365993 = addInt(i_365993, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_365994))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L323: do {
						F.line = 368;
						box_359470(145, 5, 30, 30);
						F.line = 369;
						constraints_326990(0, 0);
						F.line = 370;
						nimCopy(button_color_361974, colors_357035.buttonColor, NTI272112);
							if (!mouse_304389[0].click) Tmp324 = false; else {								Tmp324 = mouse_overlap_logic_326276();							}						if (Tmp324) {
						if ((settings_358451.winCount < settings_358451.size)) {
						F.line = 373;
						settings_358451.size = subInt(settings_358451.size, 1);
						}
						
						}
						
						if (mouse_overlap_logic_326276()) {
						F.line = 375;
						nimCopy(button_color_361974, colors_357035.buttonHover, NTI272112);
						}
						
							if (!mouse_304389[0].down) Tmp325 = false; else {								Tmp325 = mouse_overlap_logic_326276();							}						if (Tmp325) {
						F.line = 377;
						nimCopy(button_color_361974, colors_357035.buttonPressed, NTI272112);
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp326 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp326)[0][Tmp326[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 378;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 8"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L327: do {
							F.line = 34;
							var gHEX60gensym364106_364133 = null;
							F.line = 184;
							var i_366000 = 0;
							F.line = 185;
							var l_366001 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L328: do {
								F.line = 186;
									L329: while (true) {
									if (!(i_366000 < l_366001)) break L329;
										F.line = 34;
										gHEX60gensym364106_364133 = group_stack_304384[0][chckIndx(i_366000, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym364106_364133.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364106_364133.id); } else { current_304385[0].idPath = gHEX60gensym364106_364133.id.slice(); };
										}
										
										F.line = 188;
										i_366000 = addInt(i_366000, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366001))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L330: do {
							F.line = 379;
							box_326526(0.0, 1.2500000000000000e+01, 3.0000000000000000e+01, 5.0000000000000000e+00);
							F.line = 380;
							constraints_326990(0, 0);
							F.line = 381;
							fill_326653(button_color_361974);
							F.line = 382;
							corner_radius_326804(0.0);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp331 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp331)[0][Tmp331[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp332 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp332)[0][Tmp332[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp333 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp333)[0][Tmp333[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp334 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp334)[0][Tmp334[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp335 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp335)[0][Tmp335[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 383;
					current_304385[0].id = nimCopy(null, makeNimstrLit("plusField"), NTI44040);
					F.line = 70;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L336: do {
						F.line = 34;
						var gHEX60gensym364235_364262 = null;
						F.line = 184;
						var i_366011 = 0;
						F.line = 185;
						var l_366012 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L337: do {
							F.line = 186;
								L338: while (true) {
								if (!(i_366011 < l_366012)) break L338;
									F.line = 34;
									gHEX60gensym364235_364262 = group_stack_304384[0][chckIndx(i_366011, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364235_364262.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364235_364262.id); } else { current_304385[0].idPath = gHEX60gensym364235_364262.id.slice(); };
									}
									
									F.line = 188;
									i_366011 = addInt(i_366011, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366012))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L339: do {
						F.line = 384;
						box_359470(235, 5, 30, 30);
						F.line = 385;
						constraints_326990(0, 0);
							if (!mouse_304389[0].click) Tmp340 = false; else {								Tmp340 = mouse_overlap_logic_326276();							}						if (Tmp340) {
						if ((settings_358451.size < 9)) {
						F.line = 388;
						settings_358451.size = addInt(settings_358451.size, 1);
						}
						
						}
						
						F.line = 389;
						nimCopy(button_color_361974, colors_357035.buttonColor, NTI272112);
						if (mouse_overlap_logic_326276()) {
						F.line = 391;
						nimCopy(button_color_361974, colors_357035.buttonHover, NTI272112);
						}
						
							if (!mouse_304389[0].down) Tmp341 = false; else {								Tmp341 = mouse_overlap_logic_326276();							}						if (Tmp341) {
						F.line = 393;
						nimCopy(button_color_361974, colors_357035.buttonPressed, NTI272112);
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp342 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp342)[0][Tmp342[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 394;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 7"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L343: do {
							F.line = 34;
							var gHEX60gensym364288_364315 = null;
							F.line = 184;
							var i_366018 = 0;
							F.line = 185;
							var l_366019 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L344: do {
								F.line = 186;
									L345: while (true) {
									if (!(i_366018 < l_366019)) break L345;
										F.line = 34;
										gHEX60gensym364288_364315 = group_stack_304384[0][chckIndx(i_366018, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym364288_364315.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364288_364315.id); } else { current_304385[0].idPath = gHEX60gensym364288_364315.id.slice(); };
										}
										
										F.line = 188;
										i_366018 = addInt(i_366018, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366019))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L346: do {
							F.line = 395;
							box_326526(1.2500000000000000e+01, 0.0, 5.0000000000000000e+00, 3.0000000000000000e+01);
							F.line = 396;
							constraints_326990(0, 0);
							F.line = 397;
							fill_326653(button_color_361974);
							F.line = 398;
							corner_radius_326804(0.0);
							F.line = 399;
							stroke_weight_326752(1.0000000000000000e+00);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp347 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp347)[0][Tmp347[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp348 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp348)[0][Tmp348[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp349 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp349)[0][Tmp349[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 400;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 8"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L350: do {
							F.line = 34;
							var gHEX60gensym364370_364397 = null;
							F.line = 184;
							var i_366027 = 0;
							F.line = 185;
							var l_366028 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L351: do {
								F.line = 186;
									L352: while (true) {
									if (!(i_366027 < l_366028)) break L352;
										F.line = 34;
										gHEX60gensym364370_364397 = group_stack_304384[0][chckIndx(i_366027, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym364370_364397.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364370_364397.id); } else { current_304385[0].idPath = gHEX60gensym364370_364397.id.slice(); };
										}
										
										F.line = 188;
										i_366027 = addInt(i_366027, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366028))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L353: do {
							F.line = 401;
							box_326526(0.0, 1.2500000000000000e+01, 3.0000000000000000e+01, 5.0000000000000000e+00);
							F.line = 402;
							constraints_326990(0, 0);
							F.line = 403;
							fill_326653(button_color_361974);
							F.line = 404;
							corner_radius_326804(0.0);
							F.line = 405;
							stroke_weight_326752(1.0000000000000000e+00);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp354 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp354)[0][Tmp354[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp355 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp355)[0][Tmp355[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp356 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp356)[0][Tmp356[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp357 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp357)[0][Tmp357[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp358 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp358)[0][Tmp358[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp359 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp359)[0][Tmp359[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
				F.line = 19;
				parent_304380[0] = (Tmp360 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp360)[0][Tmp360[1]];
				if (!(parent_304380[0].wasDrawn)) {
				F.line = 21;
				draw_324721(parent_304380[0]);
				F.line = 22;
				parent_304380[0].wasDrawn = true;
				}
				
				F.line = 24;
				current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
				F.line = 406;
				current_304385[0].id = nimCopy(null, makeNimstrLit("Win Count"), NTI44040);
				F.line = 65;
				current_304385[0].kind = nimCopy(null, makeNimstrLit("group"), NTI44040);
				F.line = 27;
				current_304385[0].wasDrawn = false;
				F.line = 28;
				current_304385[0].transparency = 1.0000000000000000e+00;
				F.line = 29;
				nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
				F.line = 30;
				nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
				F.line = 31;
				nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
				F.line = 32;
				if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
				L361: do {
					F.line = 34;
					var gHEX60gensym364546_364573 = null;
					F.line = 184;
					var i_366040 = 0;
					F.line = 185;
					var l_366041 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
					L362: do {
						F.line = 186;
							L363: while (true) {
							if (!(i_366040 < l_366041)) break L363;
								F.line = 34;
								gHEX60gensym364546_364573 = group_stack_304384[0][chckIndx(i_366040, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
								if (!(eqStrings(gHEX60gensym364546_364573.id, []))) {
								if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
								F.line = 37;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
								}
								
								F.line = 38;
								if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364546_364573.id); } else { current_304385[0].idPath = gHEX60gensym364546_364573.id.slice(); };
								}
								
								F.line = 188;
								i_366040 = addInt(i_366040, 1);
								if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366041))) {
								F.line = 189;
								failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L364: do {
					F.line = 407;
					box_359470(0, 270, 265, 40);
					F.line = 19;
					parent_304380[0] = (Tmp365 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp365)[0][Tmp365[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 408;
					current_304385[0].id = nimCopy(null, makeNimstrLit("Win Count:"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L366: do {
						F.line = 34;
						var gHEX60gensym364594_364621 = null;
						F.line = 184;
						var i_366047 = 0;
						F.line = 185;
						var l_366048 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L367: do {
							F.line = 186;
								L368: while (true) {
								if (!(i_366047 < l_366048)) break L368;
									F.line = 34;
									gHEX60gensym364594_364621 = group_stack_304384[0][chckIndx(i_366047, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364594_364621.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364594_364621.id); } else { current_304385[0].idPath = gHEX60gensym364594_364621.id.slice(); };
									}
									
									F.line = 188;
									i_366047 = addInt(i_366047, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366048))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L369: do {
						F.line = 409;
						box_359470(0, 0, 130, 40);
						F.line = 410;
						constraints_326990(0, 0);
						F.line = 411;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 412;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 413;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, -1, -1);
						F.line = 414;
						characters_326476(makeNimstrLit("Win Count: "));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp370 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp370)[0][Tmp370[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp371 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp371)[0][Tmp371[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp372 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp372)[0][Tmp372[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 415;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L373: do {
						F.line = 34;
						var gHEX60gensym364691_364718 = null;
						F.line = 184;
						var i_366056 = 0;
						F.line = 185;
						var l_366057 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L374: do {
							F.line = 186;
								L375: while (true) {
								if (!(i_366056 < l_366057)) break L375;
									F.line = 34;
									gHEX60gensym364691_364718 = group_stack_304384[0][chckIndx(i_366056, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364691_364718.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364691_364718.id); } else { current_304385[0].idPath = gHEX60gensym364691_364718.id.slice(); };
									}
									
									F.line = 188;
									i_366056 = addInt(i_366056, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366057))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L376: do {
						F.line = 416;
						box_359470(181, 0, 50, 40);
						F.line = 417;
						constraints_326990(0, 0);
						F.line = 418;
						fill_326686(makeNimstrLit("#c4c4c4"), 1.0000000000000000e+00);
						F.line = 419;
						corner_radius_326804(0.0);
						F.line = 420;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp377 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp377)[0][Tmp377[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp378 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp378)[0][Tmp378[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp379 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp379)[0][Tmp379[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 421;
					current_304385[0].id = nimCopy(null, makeNimstrLit("P1Name"), NTI44040);
					F.line = 75;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L380: do {
						F.line = 34;
						var gHEX60gensym364785_364812 = null;
						F.line = 184;
						var i_366065 = 0;
						F.line = 185;
						var l_366066 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L381: do {
							F.line = 186;
								L382: while (true) {
								if (!(i_366065 < l_366066)) break L382;
									F.line = 34;
									gHEX60gensym364785_364812 = group_stack_304384[0][chckIndx(i_366065, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364785_364812.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364785_364812.id); } else { current_304385[0].idPath = gHEX60gensym364785_364812.id.slice(); };
									}
									
									F.line = 188;
									i_366065 = addInt(i_366065, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366066))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L383: do {
						F.line = 422;
						box_359470(182, 1, 48, 38);
						F.line = 423;
						constraints_326990(0, 0);
						F.line = 424;
						fill_326686(makeNimstrLit("#eeeeee"), 1.0000000000000000e+00);
						F.line = 425;
						corner_radius_326804(0.0);
						F.line = 426;
						stroke_weight_326752(1.0000000000000000e+00);
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp384 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp384)[0][Tmp384[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp385 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp385)[0][Tmp385[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp386 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp386)[0][Tmp386[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 427;
					current_304385[0].id = nimCopy(null, makeNimstrLit("WinCountInput"), NTI44040);
					F.line = 80;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("text"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L387: do {
						F.line = 34;
						var gHEX60gensym364879_364906 = null;
						F.line = 184;
						var i_366074 = 0;
						F.line = 185;
						var l_366075 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L388: do {
							F.line = 186;
								L389: while (true) {
								if (!(i_366074 < l_366075)) break L389;
									F.line = 34;
									gHEX60gensym364879_364906 = group_stack_304384[0][chckIndx(i_366074, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364879_364906.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364879_364906.id); } else { current_304385[0].idPath = gHEX60gensym364879_364906.id.slice(); };
									}
									
									F.line = 188;
									i_366074 = addInt(i_366074, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366075))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L390: do {
						F.line = 428;
						box_359470(182, 1, 48, 38);
						F.line = 429;
						constraints_326990(0, 0);
						F.line = 430;
						fill_326686(makeNimstrLit("#000000"), 1.0000000000000000e+00);
						F.line = 431;
						stroke_weight_326752(1.0000000000000000e+00);
						F.line = 432;
						font_326374(makeNimstrLit("IBM Plex Sans Regular"), 2.4000000000000000e+01, 2.0000000000000000e+02, 0.0, 0, -1);
						F.line = 433;
						characters_326476(cstrToNimstr((settings_358451.winCount)+""));
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp391 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp391)[0][Tmp391[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp392 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp392)[0][Tmp392[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp393 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp393)[0][Tmp393[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 434;
					current_304385[0].id = nimCopy(null, makeNimstrLit("MinField"), NTI44040);
					F.line = 70;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L394: do {
						F.line = 34;
						var gHEX60gensym364975_365002 = null;
						F.line = 184;
						var i_366083 = 0;
						F.line = 185;
						var l_366084 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L395: do {
							F.line = 186;
								L396: while (true) {
								if (!(i_366083 < l_366084)) break L396;
									F.line = 34;
									gHEX60gensym364975_365002 = group_stack_304384[0][chckIndx(i_366083, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym364975_365002.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym364975_365002.id); } else { current_304385[0].idPath = gHEX60gensym364975_365002.id.slice(); };
									}
									
									F.line = 188;
									i_366083 = addInt(i_366083, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366084))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L397: do {
						F.line = 435;
						box_359470(145, 5, 30, 30);
						F.line = 436;
						constraints_326990(0, 0);
							if (!mouse_304389[0].click) Tmp398 = false; else {								Tmp398 = mouse_overlap_logic_326276();							}						if (Tmp398) {
						if ((0 < settings_358451.winCount)) {
						F.line = 439;
						settings_358451.winCount = subInt(settings_358451.winCount, 1);
						}
						
						}
						
						F.line = 440;
						nimCopy(button_color_361974, colors_357035.buttonColor, NTI272112);
						if (mouse_overlap_logic_326276()) {
						F.line = 442;
						nimCopy(button_color_361974, colors_357035.buttonHover, NTI272112);
						}
						
							if (!mouse_304389[0].down) Tmp399 = false; else {								Tmp399 = mouse_overlap_logic_326276();							}						if (Tmp399) {
						F.line = 444;
						nimCopy(button_color_361974, colors_357035.buttonPressed, NTI272112);
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp400 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp400)[0][Tmp400[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 445;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 8"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L401: do {
							F.line = 34;
							var gHEX60gensym365030_365057 = null;
							F.line = 184;
							var i_366090 = 0;
							F.line = 185;
							var l_366091 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L402: do {
								F.line = 186;
									L403: while (true) {
									if (!(i_366090 < l_366091)) break L403;
										F.line = 34;
										gHEX60gensym365030_365057 = group_stack_304384[0][chckIndx(i_366090, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym365030_365057.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym365030_365057.id); } else { current_304385[0].idPath = gHEX60gensym365030_365057.id.slice(); };
										}
										
										F.line = 188;
										i_366090 = addInt(i_366090, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366091))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L404: do {
							F.line = 446;
							box_326526(0.0, 1.2500000000000000e+01, 3.0000000000000000e+01, 5.0000000000000000e+00);
							F.line = 447;
							constraints_326990(0, 0);
							F.line = 448;
							fill_326653(button_color_361974);
							F.line = 449;
							corner_radius_326804(0.0);
							F.line = 450;
							stroke_weight_326752(1.0000000000000000e+00);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp405 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp405)[0][Tmp405[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp406 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp406)[0][Tmp406[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp407 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp407)[0][Tmp407[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp408 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp408)[0][Tmp408[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
					F.line = 19;
					parent_304380[0] = (Tmp409 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp409)[0][Tmp409[1]];
					if (!(parent_304380[0].wasDrawn)) {
					F.line = 21;
					draw_324721(parent_304380[0]);
					F.line = 22;
					parent_304380[0].wasDrawn = true;
					}
					
					F.line = 24;
					current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
					F.line = 451;
					current_304385[0].id = nimCopy(null, makeNimstrLit("plusField"), NTI44040);
					F.line = 70;
					current_304385[0].kind = nimCopy(null, makeNimstrLit("frame"), NTI44040);
					F.line = 27;
					current_304385[0].wasDrawn = false;
					F.line = 28;
					current_304385[0].transparency = 1.0000000000000000e+00;
					F.line = 29;
					nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
					F.line = 30;
					nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
					F.line = 31;
					nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
					F.line = 32;
					if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
					L410: do {
						F.line = 34;
						var gHEX60gensym365159_365186 = null;
						F.line = 184;
						var i_366101 = 0;
						F.line = 185;
						var l_366102 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
						L411: do {
							F.line = 186;
								L412: while (true) {
								if (!(i_366101 < l_366102)) break L412;
									F.line = 34;
									gHEX60gensym365159_365186 = group_stack_304384[0][chckIndx(i_366101, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
									if (!(eqStrings(gHEX60gensym365159_365186.id, []))) {
									if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
									F.line = 37;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
									}
									
									F.line = 38;
									if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym365159_365186.id); } else { current_304385[0].idPath = gHEX60gensym365159_365186.id.slice(); };
									}
									
									F.line = 188;
									i_366101 = addInt(i_366101, 1);
									if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366102))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					L413: do {
						F.line = 452;
						box_359470(235, 5, 30, 30);
						F.line = 453;
						constraints_326990(0, 0);
							if (!mouse_304389[0].click) Tmp414 = false; else {								Tmp414 = mouse_overlap_logic_326276();							}						if (Tmp414) {
						if ((settings_358451.winCount < settings_358451.size)) {
						F.line = 456;
						settings_358451.winCount = addInt(settings_358451.winCount, 1);
						}
						
						}
						
						F.line = 457;
						nimCopy(button_color_361974, colors_357035.buttonColor, NTI272112);
						if (mouse_overlap_logic_326276()) {
						F.line = 459;
						nimCopy(button_color_361974, colors_357035.buttonHover, NTI272112);
						}
						
							if (!mouse_304389[0].down) Tmp415 = false; else {								Tmp415 = mouse_overlap_logic_326276();							}						if (Tmp415) {
						F.line = 461;
						nimCopy(button_color_361974, colors_357035.buttonPressed, NTI272112);
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp416 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp416)[0][Tmp416[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 462;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 7"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L417: do {
							F.line = 34;
							var gHEX60gensym365212_365239 = null;
							F.line = 184;
							var i_366108 = 0;
							F.line = 185;
							var l_366109 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L418: do {
								F.line = 186;
									L419: while (true) {
									if (!(i_366108 < l_366109)) break L419;
										F.line = 34;
										gHEX60gensym365212_365239 = group_stack_304384[0][chckIndx(i_366108, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym365212_365239.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym365212_365239.id); } else { current_304385[0].idPath = gHEX60gensym365212_365239.id.slice(); };
										}
										
										F.line = 188;
										i_366108 = addInt(i_366108, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366109))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L420: do {
							F.line = 463;
							box_326526(1.2500000000000000e+01, 0.0, 5.0000000000000000e+00, 3.0000000000000000e+01);
							F.line = 464;
							constraints_326990(0, 0);
							F.line = 465;
							fill_326653(button_color_361974);
							F.line = 466;
							corner_radius_326804(0.0);
							F.line = 467;
							stroke_weight_326752(1.0000000000000000e+00);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp421 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp421)[0][Tmp421[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp422 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp422)[0][Tmp422[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
						F.line = 19;
						parent_304380[0] = (Tmp423 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp423)[0][Tmp423[1]];
						if (!(parent_304380[0].wasDrawn)) {
						F.line = 21;
						draw_324721(parent_304380[0]);
						F.line = 22;
						parent_304380[0].wasDrawn = true;
						}
						
						F.line = 24;
						current_304385[0] = {id: null, idPath: null, kind: null, text: null, placeholder: null, code: null, kids: null, box: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, orgBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, rotation: 0.0, screenBox: {x: 0.0, y: 0.0, w: 0.0, h: 0.0}, fill: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, transparency: 0.0, strokeWeight: 0.0, stroke: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, zLevel: 0, resizeDone: false, htmlDone: false, textStyle: {fontFamily: null, fontSize: 0.0, fontWeight: 0.0, lineHeight: 0.0, textAlignHorizontal: 0, textAlignVertical: 0}, imageName: null, cornerRadius: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, wasDrawn: false, editableText: false, multiline: false, drawable: false, cursorColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, highlightColor: {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, shadows: null};
						F.line = 468;
						current_304385[0].id = nimCopy(null, makeNimstrLit("Rectangle 8"), NTI44040);
						F.line = 75;
						current_304385[0].kind = nimCopy(null, makeNimstrLit("rectangle"), NTI44040);
						F.line = 27;
						current_304385[0].wasDrawn = false;
						F.line = 28;
						current_304385[0].transparency = 1.0000000000000000e+00;
						F.line = 29;
						nimCopy(current_304385[0].textStyle, parent_304380[0].textStyle, NTI304207);
						F.line = 30;
						nimCopy(current_304385[0].cursorColor, parent_304380[0].cursorColor, NTI272112);
						F.line = 31;
						nimCopy(current_304385[0].highlightColor, parent_304380[0].highlightColor, NTI272112);
						F.line = 32;
						if (group_stack_304384[0] != null) { group_stack_304384[0].push(current_304385[0]); } else { group_stack_304384[0] = [current_304385[0]]; };
						L424: do {
							F.line = 34;
							var gHEX60gensym365294_365321 = null;
							F.line = 184;
							var i_366117 = 0;
							F.line = 185;
							var l_366118 = (group_stack_304384[0] != null ? group_stack_304384[0].length : 0);
							L425: do {
								F.line = 186;
									L426: while (true) {
									if (!(i_366117 < l_366118)) break L426;
										F.line = 34;
										gHEX60gensym365294_365321 = group_stack_304384[0][chckIndx(i_366117, 0, (group_stack_304384[0] != null ? group_stack_304384[0].length : 0)+0-1)-0];
										if (!(eqStrings(gHEX60gensym365294_365321.id, []))) {
										if ((0 < (current_304385[0].idPath != null ? current_304385[0].idPath.length : 0))) {
										F.line = 37;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(makeNimstrLit("-")); } else { current_304385[0].idPath = makeNimstrLit("-"); };
										}
										
										F.line = 38;
										if (current_304385[0].idPath != null) { current_304385[0].idPath = (current_304385[0].idPath).concat(gHEX60gensym365294_365321.id); } else { current_304385[0].idPath = gHEX60gensym365294_365321.id.slice(); };
										}
										
										F.line = 188;
										i_366117 = addInt(i_366117, 1);
										if (!(((group_stack_304384[0] != null ? group_stack_304384[0].length : 0) == l_366118))) {
										F.line = 189;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						L427: do {
							F.line = 469;
							box_326526(0.0, 1.2500000000000000e+01, 3.0000000000000000e+01, 5.0000000000000000e+00);
							F.line = 470;
							constraints_326990(0, 0);
							F.line = 471;
							fill_326653(button_color_361974);
							F.line = 472;
							corner_radius_326804(0.0);
							F.line = 473;
							stroke_weight_326752(1.0000000000000000e+00);
						} while(false);
						if (!(current_304385[0].wasDrawn)) {
						F.line = 49;
						draw_324721(current_304385[0]);
						F.line = 50;
						current_304385[0].wasDrawn = true;
						}
						
						F.line = 52;
						pop_324857(group_stack_304384, 0);
						if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 54;
						current_304385[0] = (Tmp428 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp428)[0][Tmp428[1]];
						}
						else {
							F.line = 56;
							current_304385[0] = null;
						}
						
						if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
						F.line = 58;
						parent_304380[0] = (Tmp429 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp429)[0][Tmp429[1]];
						}
						else {
							F.line = 60;
							parent_304380[0] = null;
						}
						
					} while(false);
					if (!(current_304385[0].wasDrawn)) {
					F.line = 49;
					draw_324721(current_304385[0]);
					F.line = 50;
					current_304385[0].wasDrawn = true;
					}
					
					F.line = 52;
					pop_324857(group_stack_304384, 0);
					if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 54;
					current_304385[0] = (Tmp430 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp430)[0][Tmp430[1]];
					}
					else {
						F.line = 56;
						current_304385[0] = null;
					}
					
					if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
					F.line = 58;
					parent_304380[0] = (Tmp431 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp431)[0][Tmp431[1]];
					}
					else {
						F.line = 60;
						parent_304380[0] = null;
					}
					
				} while(false);
				if (!(current_304385[0].wasDrawn)) {
				F.line = 49;
				draw_324721(current_304385[0]);
				F.line = 50;
				current_304385[0].wasDrawn = true;
				}
				
				F.line = 52;
				pop_324857(group_stack_304384, 0);
				if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 54;
				current_304385[0] = (Tmp432 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp432)[0][Tmp432[1]];
				}
				else {
					F.line = 56;
					current_304385[0] = null;
				}
				
				if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
				F.line = 58;
				parent_304380[0] = (Tmp433 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp433)[0][Tmp433[1]];
				}
				else {
					F.line = 60;
					parent_304380[0] = null;
				}
				
			} while(false);
			if (!(current_304385[0].wasDrawn)) {
			F.line = 49;
			draw_324721(current_304385[0]);
			F.line = 50;
			current_304385[0].wasDrawn = true;
			}
			
			F.line = 52;
			pop_324857(group_stack_304384, 0);
			if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 54;
			current_304385[0] = (Tmp434 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp434)[0][Tmp434[1]];
			}
			else {
				F.line = 56;
				current_304385[0] = null;
			}
			
			if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
			F.line = 58;
			parent_304380[0] = (Tmp435 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp435)[0][Tmp435[1]];
			}
			else {
				F.line = 60;
				parent_304380[0] = null;
			}
			
		} while(false);
		if (!(current_304385[0].wasDrawn)) {
		F.line = 49;
		draw_324721(current_304385[0]);
		F.line = 50;
		current_304385[0].wasDrawn = true;
		}
		
		F.line = 52;
		pop_324857(group_stack_304384, 0);
		if ((1 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
		F.line = 54;
		current_304385[0] = (Tmp436 = HEX5BHEX5D_359022(group_stack_304384[0], 1), Tmp436)[0][Tmp436[1]];
		}
		else {
			F.line = 56;
			current_304385[0] = null;
		}
		
		if ((2 < (group_stack_304384[0] != null ? group_stack_304384[0].length : 0))) {
		F.line = 58;
		parent_304380[0] = (Tmp437 = HEX5BHEX5D_359022(group_stack_304384[0], 2), Tmp437)[0][Tmp437[1]];
		}
		else {
			F.line = 60;
			parent_304380[0] = null;
		}
		
	framePtr = F.prev;

	
}

function set_325294(keyboard_325296, state_325297, event_325298) {
	var F={procname:"backendhtml.set",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 389;
		keyboard_325296.state = state_325297;
		F.line = 390;
		keyboard_325296.keyCode = event_325298.keyCode;
		F.line = 391;
		var key_string_325299 = null;
		F.line = 392;
		key_string_325299 = event_325298.key
		F.line = 393;
		keyboard_325296.keyString = nimCopy(null, cstrToNimstr(key_string_325299), NTI44040);
		F.line = 394;
		keyboard_325296.altKey = event_325298.altKey;
		F.line = 395;
		keyboard_325296.ctrlKey = event_325298.ctrlKey;
		F.line = 396;
		keyboard_325296.shiftKey = event_325298.shiftKey;
	framePtr = F.prev;

	
}

function use_304766(keyboard_304768) {
	var F={procname:"uibase.use",prev:framePtr,filename:"uibase.nim",line:0};
	framePtr = F;
		F.line = 159;
		keyboard_304768.state = 0;
		F.line = 160;
		keyboard_304768.keyCode = 0;
		F.line = 161;
		keyboard_304768.scanCode = 0;
		F.line = 162;
		keyboard_304768.keyString = nimCopy(null, [], NTI44040);
		F.line = 163;
		keyboard_304768.altKey = false;
		F.line = 164;
		keyboard_304768.ctrlKey = false;
		F.line = 165;
		keyboard_304768.shiftKey = false;
		F.line = 166;
		keyboard_304768.superKey = false;
	framePtr = F.prev;

	
}

function start_fidget_325313() {

		function HEX3Aanonymous_325315(event_325317) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 406;
				root_dom_node_316031[0] = document.createElement("div");
				F.line = 407;
				document.body.appendChild(root_dom_node_316031[0]);
				F.line = 409;
				canvas_node_316032[0] = document.createElement("canvas");
				F.line = 410;
				document.body.appendChild(canvas_node_316032[0]);
				F.line = 411;
				redraw_325279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325331(event_325333) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 415;
				redraw_325279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325347(event_325349) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 419;
				redraw_325279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325363(event_325365) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 423;
				mouse_304389[0].pos.x = event_325365.pageX;
				F.line = 424;
				mouse_304389[0].pos.y = event_325365.pageY;
				F.line = 425;
				mouse_304389[0].click = true;
				F.line = 426;
				mouse_304389[0].down = true;
				F.line = 427;
				hard_redraw_325240();
				F.line = 428;
				mouse_304389[0].click = false;
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325379(event_325381) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 432;
				redraw_325279();
				F.line = 433;
				mouse_304389[0].down = false;
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325395(event_325397) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 437;
				mouse_304389[0].pos.x = event_325397.pageX;
				F.line = 438;
				mouse_304389[0].pos.y = event_325397.pageY;
				F.line = 439;
				redraw_325279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325411(event_325413) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 444;
				set_325294(keyboard_304390[0], 2, event_325413);
				F.line = 445;
				hard_redraw_325240();
				if (!((keyboard_304390[0].state == 0))) {
				F.line = 447;
				use_304766(keyboard_304390[0]);
				}
				else {
					F.line = 449;
				event_325413.preventDefault();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325432(event_325434) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 454;
				set_325294(keyboard_304390[0], 1, event_325434);
				F.line = 455;
				hard_redraw_325240();
				if (!((keyboard_304390[0].state == 0))) {
				F.line = 457;
				use_304766(keyboard_304390[0]);
				}
				else {
					F.line = 459;
				event_325434.preventDefault();
				}
				
			framePtr = F.prev;

			
		}

function is_text_tag_325453(node_325455) {
		var Tmp1;

	var result_325456 = false;

	var F={procname:"startFidget.isTextTag",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 472;
		if ((node_325455.nodeName == "TEXTAREA")) Tmp1 = true; else {			Tmp1 = (node_325455.nodeName == "INPUT");		}		result_325456 = Tmp1;
	framePtr = F.prev;

	return result_325456;

}

		function HEX3Aanonymous_325470(event_325472) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				if (is_text_tag_325453(document.activeElement)) {
				F.line = 477;
				keyboard_304390[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI44040);
				F.line = 478;
				keyboard_304390[0].inputFocusIdPath = nimCopy(null, cstrToNimstr(document.activeElement.id), NTI44040);
				F.line = 479;
				keyboard_304390[0].state = 4;
				F.line = 480;
				redraw_325279();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325486(event_325488) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				if (is_text_tag_325453(document.activeElement)) {
				F.line = 487;
				keyboard_304390[0].input = nimCopy(null, cstrToNimstr(document.activeElement.value), NTI44040);
				F.line = 488;
				keyboard_304390[0].inputFocusIdPath = nimCopy(null, cstrToNimstr(document.activeElement.id), NTI44040);
				F.line = 489;
				redraw_325279();
				}
				
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325502(event_325504) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 495;
				keyboard_304390[0].input = nimCopy(null, [], NTI44040);
				F.line = 496;
				keyboard_304390[0].inputFocusIdPath = nimCopy(null, [], NTI44040);
				F.line = 497;
				redraw_325279();
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_325518(event_325520) {
			var F={procname:"startFidget.:anonymous",prev:framePtr,filename:"backendhtml.nim",line:0};
			framePtr = F;
				F.line = 501;
				redraw_325279();
			framePtr = F.prev;

			
		}

	var F={procname:"backendhtml.startFidget",prev:framePtr,filename:"backendhtml.nim",line:0};
	framePtr = F;
		F.line = 402;
		window_304379[0].innerUrl = nimCopy(null, cstrToNimstr(window.location.pathname), NTI44040);
		F.line = 404;
		window.addEventListener("load", HEX3Aanonymous_325315, false);
		F.line = 413;
		window.addEventListener("resize", HEX3Aanonymous_325331, false);
		F.line = 417;
		window.addEventListener("scroll", HEX3Aanonymous_325347, false);
		F.line = 421;
		window.addEventListener("mousedown", HEX3Aanonymous_325363, false);
		F.line = 430;
		window.addEventListener("mouseup", HEX3Aanonymous_325379, false);
		F.line = 435;
		window.addEventListener("mousemove", HEX3Aanonymous_325395, false);
		F.line = 441;
		window.addEventListener("keydown", HEX3Aanonymous_325411, false);
		F.line = 451;
		window.addEventListener("keyup", HEX3Aanonymous_325432, false);
		F.line = 474;
		window.addEventListener("input", HEX3Aanonymous_325470, false);
		F.line = 482;
		window.addEventListener("focusin", HEX3Aanonymous_325486, false);
		F.line = 491;
		window.addEventListener("focusout", HEX3Aanonymous_325502, false);
		F.line = 499;
		window.addEventListener("popstate", HEX3Aanonymous_325518, false);
	framePtr = F.prev;

	
}
draw_main_304393[0] = draw_main_frame_359851;
start_fidget_325313();

function set_possible_moves_349084(self_349086, moves_349113) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym350742_350803 = null;
		F.line = 3481;
		eHEX60gensym350742_350803 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 244;
		eHEX60gensym350742_350803.message = nimCopy(null, makeNimstrLit("set_possible_moves(OrderedTable) must be overridden"), NTI44040);
		F.line = 3474;
		eHEX60gensym350742_350803.parent = null;
		F.line = 244;
		raiseException(eHEX60gensym350742_350803, "FieldError");
	framePtr = F.prev;

	
}

function set_possible_moves_349114(self_349086, moves_349113) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 176;
		set_possible_moves_349084(self_349086, moves_349113);
	framePtr = F.prev;

	
}

function sys_fatal_68241(message_68245) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_68403 = null;
		F.line = 37;
		e_68403 = {m_type: NTI47486, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_68403.message = nimCopy(null, message_68245, NTI44040);
		F.line = 39;
		raiseException(e_68403, "NilAccessError");
	framePtr = F.prev;

	
}

function chckNilDisp(p_68239, p_68239_Idx) {
		if ((p_68239 == null && p_68239_Idx == 0)) {
		sys_fatal_68241(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function mk_digit_307042(v_307044, typ_307045) {
			var Tmp1;

	var result_307046 = null;

	var F={procname:"strformat.mkDigit",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if (!((v_307044 < 26))) {
		F.line = 270;
		failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/strformat.nim(270, 9) `v < 26` "));
		}
		
		if ((v_307044 < 10)) {
		F.line = 272;
		result_307046 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_307044), 0, 255)), NTI44040);
		}
		else {
			F.line = 274;
			if ((typ_307045 == 120)) {
			Tmp1 = 97;
			}
			else {
			Tmp1 = 65;
			}
			
			result_307046 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_307044), 10), 0, 255)), NTI44040);
		}
		
	framePtr = F.prev;

	return result_307046;

}

function format_int_354610(n_354613, radix_354614, spec_354615) {
		var Tmp7;

	var result_354616 = null;

	var F={procname:"formatInt.formatInt",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 318;
		var v_354801 = n_354613;
		F.line = 319;
		var negative_354802 = (v_354801 < 0);
		if (negative_354802) {
		F.line = 322;
		v_354801 = mulInt(v_354801, -1);
		}
		
		F.line = 324;
		var xx_354804 = [];
		if (spec_354615.alternateForm) {
		F.line = 326;
		switch (spec_354615.typ) {
		case 88:
			F.line = 327;
			xx_354804 = nimCopy(null, makeNimstrLit("0x"), NTI44040);
			break;
		case 120:
			F.line = 328;
			xx_354804 = nimCopy(null, makeNimstrLit("0x"), NTI44040);
			break;
		case 98:
			F.line = 329;
			xx_354804 = nimCopy(null, makeNimstrLit("0b"), NTI44040);
			break;
		case 111:
			F.line = 330;
			xx_354804 = nimCopy(null, makeNimstrLit("0o"), NTI44040);
			break;
		default: 
			break;
		}
		}
		
		if ((v_354801 == 0)) {
		F.line = 334;
		result_354616 = nimCopy(null, makeNimstrLit("0"), NTI44040);
		}
		else {
			F.line = 336;
			result_354616 = nimCopy(null, [], NTI44040);
			L1: do {
				F.line = 337;
					L2: while (true) {
					if (!(0 < v_354801)) break L2;
						F.line = 338;
						var d_354807 = modInt(v_354801, radix_354614);
						F.line = 339;
						v_354801 = divInt(v_354801, radix_354614);
						F.line = 340;
						if (result_354616 != null) { result_354616 = (result_354616).concat(mk_digit_307042(chckRange(d_354807, -2147483648, 2147483647), spec_354615.typ)); } else { result_354616 = mk_digit_307042(chckRange(d_354807, -2147483648, 2147483647), spec_354615.typ).slice(); };
					}
			} while(false);
			L3: do {
				F.line = 341;
				var idx_354816 = 0;
				F.line = 2737;
				var colontmp__366384 = 0;
				F.line = 341;
				colontmp__366384 = divInt((result_354616 != null ? result_354616.length : 0), 2);
				F.line = 2739;
				var i_366385 = 0;
				L4: do {
					F.line = 2740;
						L5: while (true) {
						if (!(i_366385 < colontmp__366384)) break L5;
							F.line = 341;
							idx_354816 = i_366385;
							F.line = 342;
							var Tmp6 = result_354616[chckIndx(idx_354816, 0, (result_354616 != null ? result_354616.length : 0)+0-1)-0]; result_354616[chckIndx(idx_354816, 0, (result_354616 != null ? result_354616.length : 0)+0-1)-0] = result_354616[chckIndx(subInt(subInt((result_354616 != null ? result_354616.length : 0), idx_354816), 1), 0, (result_354616 != null ? result_354616.length : 0)+0-1)-0]; result_354616[chckIndx(subInt(subInt((result_354616 != null ? result_354616.length : 0), idx_354816), 1), 0, (result_354616 != null ? result_354616.length : 0)+0-1)-0] = Tmp6;							F.line = 2742;
							i_366385 = addInt(i_366385, 1);
						}
				} while(false);
			} while(false);
		}
		
		if (spec_354615.padWithZero) {
		F.line = 344;
		if (negative_354802) Tmp7 = true; else {			Tmp7 = !((spec_354615.sign == 45));		}		var sign_354832 = Tmp7;
		F.line = 345;
		var to_fill_354837 = subInt(subInt(subInt(spec_354615.minimumWidth, (result_354616 != null ? result_354616.length : 0)), (xx_354804 != null ? xx_354804.length : 0)), (sign_354832 ? 1:0));
		if ((0 < to_fill_354837)) {
		F.line = 347;
		result_354616 = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_354837, 0, 2147483647)) || []).concat(result_354616 || []), NTI44040);
		}
		
		}
		
		if (negative_354802) {
		F.line = 350;
		result_354616 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_354804 || [],result_354616 || []), NTI44040);
		}
		else {
		if (!((spec_354615.sign == 45))) {
		F.line = 352;
		result_354616 = nimCopy(null, [spec_354615.sign].concat(xx_354804 || [],result_354616 || []), NTI44040);
		}
		else {
			F.line = 354;
			result_354616 = nimCopy(null, (xx_354804 || []).concat(result_354616 || []), NTI44040);
		}
		}
		if ((spec_354615.align == 60)) {
		L8: do {
			F.line = 357;
			var i_354845 = 0;
			F.line = 2737;
			var colontmp__366389 = 0;
			F.line = 2737;
			var colontmp__366390 = 0;
			F.line = 357;
			colontmp__366389 = (result_354616 != null ? result_354616.length : 0);
			F.line = 357;
			colontmp__366390 = spec_354615.minimumWidth;
			F.line = 2739;
			var i_366391 = colontmp__366389;
			L9: do {
				F.line = 2740;
					L10: while (true) {
					if (!(i_366391 < colontmp__366390)) break L10;
						F.line = 357;
						i_354845 = i_366391;
						F.line = 358;
						if (result_354616 != null) { addChar(result_354616, spec_354615.fill); } else { result_354616 = [spec_354615.fill]; };
						F.line = 2742;
						i_366391 = addInt(i_366391, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			F.line = 360;
			var to_fill_354846 = subInt(spec_354615.minimumWidth, (result_354616 != null ? result_354616.length : 0));
			if ((spec_354615.align == 94)) {
			F.line = 362;
			var half_354847 = divInt(to_fill_354846, 2);
			F.line = 363;
			result_354616 = nimCopy(null, (nsuRepeatChar(spec_354615.fill, chckRange(half_354847, 0, 2147483647)) || []).concat(result_354616 || [],nsuRepeatChar(spec_354615.fill, chckRange(subInt(to_fill_354846, half_354847), 0, 2147483647)) || []), NTI44040);
			}
			else {
				if ((0 < to_fill_354846)) {
				F.line = 366;
				result_354616 = nimCopy(null, (nsuRepeatChar(spec_354615.fill, chckRange(to_fill_354846, 0, 2147483647)) || []).concat(result_354616 || []), NTI44040);
				}
				
			}
			
		}
		
	framePtr = F.prev;

	return result_354616;

}

function format_value_354499(result_354502, result_354502_Idx, value_354503, specifier_354504) {
	var F={procname:"formatValue.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((specifier_354504 != null ? specifier_354504.length : 0) == 0)) {
		F.line = 426;
		if (result_354502[result_354502_Idx] != null) { result_354502[result_354502_Idx] = (result_354502[result_354502_Idx]).concat(cstrToNimstr((value_354503)+"")); } else { result_354502[result_354502_Idx] = cstrToNimstr((value_354503)+"").slice(); };
		F.line = 427;
		break BeforeRet;
		}
		
		F.line = 428;
		var spec_354505 = parse_standard_format_specifier_307324(specifier_354504, 0, false);
		F.line = 429;
		var radix_354507 = 10;
		F.line = 430;
		switch (spec_354505.typ) {
		case 120:
		case 88:
			F.line = 431;
			radix_354507 = 16;
			break;
		case 100:
		case 0:
			break;
		case 98:
			F.line = 433;
			radix_354507 = 2;
			break;
		case 111:
			F.line = 434;
			radix_354507 = 8;
			break;
		default: 
			F.line = 3478;
			var eHEX60gensym354509_354603 = null;
			F.line = 3481;
			eHEX60gensym354509_354603 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 438;
			eHEX60gensym354509_354603.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_354505.typ]), NTI44040);
			F.line = 3474;
			eHEX60gensym354509_354603.parent = null;
			F.line = 436;
			raiseException(eHEX60gensym354509_354603, "ValueError");
			break;
		}
		F.line = 439;
		if (result_354502[result_354502_Idx] != null) { result_354502[result_354502_Idx] = (result_354502[result_354502_Idx]).concat(format_int_354610(value_354503, radix_354507, spec_354505)); } else { result_354502[result_354502_Idx] = format_int_354610(value_354503, radix_354507, spec_354505).slice(); };
	} while (false);
	framePtr = F.prev;

	
}

function set_possible_moves_354474(self_354476, moves_354479, moves_354479_Idx) {
	var F={procname:"game_logic.set_possible_moves",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 56;
			var y_354488 = 0;
			F.line = 2699;
			var colontmp__366374 = 0;
			F.line = 56;
			colontmp__366374 = subInt(self_354476.size, 1);
			F.line = 2710;
			var res_366375 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366375 <= colontmp__366374)) break L3;
						F.line = 56;
						y_354488 = res_366375;
						L4: do {
							F.line = 57;
							var x_354497 = 0;
							F.line = 2699;
							var colontmp__366368 = 0;
							F.line = 57;
							colontmp__366368 = subInt(self_354476.size, 1);
							F.line = 2710;
							var res_366369 = 0;
							L5: do {
								F.line = 2711;
									L6: while (true) {
									if (!(res_366369 <= colontmp__366368)) break L6;
										F.line = 57;
										x_354497 = res_366369;
										if ((self_354476.field[chckIndx(x_354497, 0, (self_354476.field != null ? self_354476.field.length : 0)+0-1)-0][chckIndx(y_354488, 0, (self_354476.field[chckIndx(x_354497, 0, (self_354476.field != null ? self_354476.field.length : 0)+0-1)-0] != null ? self_354476.field[chckIndx(x_354497, 0, (self_354476.field != null ? self_354476.field.length : 0)+0-1)-0].length : 0)+0-1)-0] == 0)) {
										F.line = 59;
										F.line = 59;
										var fmt_res_354498 = [mnewString(0)];
										F.line = 59;
										format_value_354499(fmt_res_354498, 0, addInt(x_354497, 1), []);
										F.line = 59;
										if (fmt_res_354498[0] != null) { fmt_res_354498[0] = (fmt_res_354498[0]).concat(makeNimstrLit(".")); } else { fmt_res_354498[0] = makeNimstrLit("."); };
										F.line = 59;
										format_value_354499(fmt_res_354498, 0, addInt(y_354488, 1), []);
										var Tmp7 = nimCopy(null, fmt_res_354498[0], NTI44040);
										if (moves_354479[moves_354479_Idx] != null) { moves_354479[moves_354479_Idx].push(Tmp7); } else { moves_354479[moves_354479_Idx] = [Tmp7]; };
										}
										
										F.line = 2713;
										res_366369 = addInt(res_366369, 1);
									}
							} while(false);
						} while(false);
						F.line = 2713;
						res_366375 = addInt(res_366375, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function set_possible_moves_349116(self_349118, moves_349121, moves_349121_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 238;
		moves_349121[moves_349121_Idx] = nimCopy(null, [], NTI350714);
	framePtr = F.prev;

	
}

function set_possible_moves_349122(self_349118, moves_349121, moves_349121_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 510;
		chckNilDisp(self_349118);
		if (isObj(self_349118.m_type, NTI354020)) {
		F.line = 177;
		set_possible_moves_354474(self_349118, moves_349121, moves_349121_Idx);
		}
		else {
		if (isObj(self_349118.m_type, NTI349047)) {
		F.line = 177;
		set_possible_moves_349116(self_349118, moves_349121, moves_349121_Idx);
		}
		else {
		if (isObj(self_349118.m_type, NTI349047)) {
		F.line = 177;
		set_possible_moves_349116(self_349118, moves_349121, moves_349121_Idx);
		}
		}}
	framePtr = F.prev;

	
}

function invalid_format_string_209939() {
	var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym209943_210003 = null;
		F.line = 3481;
		eHEX60gensym209943_210003 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2634;
		eHEX60gensym209943_210003.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI44040);
		F.line = 3474;
		eHEX60gensym209943_210003.parent = null;
		F.line = 2634;
		raiseException(eHEX60gensym209943_210003, "ValueError");
	framePtr = F.prev;

	
}

function nsuCmpIgnoreStyle(a_201649, b_201650) {
					var Tmp7;
					var Tmp8;

	var result_201651 = 0;

	BeforeRet: do {
		var i_201653 = 0;
		var j_201655 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_201653 < (a_201649 != null ? a_201649.length : 0)) && (a_201649[i_201653] == 95))) break L4;
								i_201653 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_201655 < (b_201650 != null ? b_201650.length : 0)) && (b_201650[j_201655] == 95))) break L6;
								j_201655 += 1;
							}
					} while(false);
					if ((i_201653 < (a_201649 != null ? a_201649.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_201649[i_201653]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_201668 = Tmp7;
					if ((j_201655 < (b_201650 != null ? b_201650.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_201650[j_201655]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_201669 = Tmp8;
					result_201651 = (aa_201668 - bb_201669);
					if (!((result_201651 == 0))) {
					break BeforeRet;
					}
					
					if (((a_201649 != null ? a_201649.length : 0) <= i_201653)) {
					if (((b_201650 != null ? b_201650.length : 0) <= j_201655)) {
					result_201651 = 0;
					break BeforeRet;
					}
					
					result_201651 = -1;
					break BeforeRet;
					}
					else {
					if (((b_201650 != null ? b_201650.length : 0) <= j_201655)) {
					result_201651 = 1;
					break BeforeRet;
					}
					}
					i_201653 += 1;
					j_201655 += 1;
				}
		} while(false);
	} while (false);

	return result_201651;

}

function find_normalized_209906(x_209908, in_array_209910) {
	var result_209911 = 0;

	var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2626;
		var i_209913 = 0;
		L1: do {
			F.line = 2627;
				L2: while (true) {
				if (!(i_209913 < (in_array_209910 != null ? (in_array_209910.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_209908, in_array_209910[chckIndx(i_209913, 0, (in_array_209910 != null ? in_array_209910.length : 0)+0-1)-0]) == 0)) {
					F.line = 2628;
					result_209911 = i_209913;
					break BeforeRet;
					}
					
					F.line = 2629;
					i_209913 = addInt(i_209913, 2);
				}
		} while(false);
		F.line = 2631;
		result_209911 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_209911;

}

function nsuAddf(s_210026, s_210026_Idx, formatstr_210027, a_210029) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

	var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2640;
		var i_210033 = 0;
		F.line = 2641;
		var num_210035 = 0;
		L1: do {
			F.line = 2642;
				L2: while (true) {
				if (!(i_210033 < (formatstr_210027 != null ? formatstr_210027.length : 0))) break L2;
					if (((formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0] == 36) && (addInt(i_210033, 1) < (formatstr_210027 != null ? formatstr_210027.length : 0)))) {
					F.line = 2644;
					switch (formatstr_210027[chckIndx(addInt(i_210033, 1), 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]) {
					case 35:
						if (((a_210029 != null ? (a_210029.length-1) : -1) < num_210035)) {
						F.line = 2646;
						invalid_format_string_209939();
						}
						
						F.line = 2647;
						if (s_210026[s_210026_Idx] != null) { s_210026[s_210026_Idx] = (s_210026[s_210026_Idx]).concat(a_210029[chckIndx(num_210035, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = a_210029[chckIndx(num_210035, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0].slice(); };
						F.line = 2648;
						i_210033 = addInt(i_210033, 2);
						F.line = 2649;
						num_210035 = addInt(num_210035, 1);
						break;
					case 36:
						F.line = 2651;
						if (s_210026[s_210026_Idx] != null) { addChar(s_210026[s_210026_Idx], 36); } else { s_210026[s_210026_Idx] = [36]; };
						F.line = 2652;
						i_210033 = addInt(i_210033, 2);
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						F.line = 2654;
						var j_210060 = 0;
						F.line = 2655;
						i_210033 = addInt(i_210033, 1);
						F.line = 2656;
						var negative_210067 = (formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0] == 45);
						if (negative_210067) {
						F.line = 2657;
						i_210033 = addInt(i_210033, 1);
						}
						
						L3: do {
							F.line = 2658;
								L4: while (true) {
									if (!(i_210033 < (formatstr_210027 != null ? formatstr_210027.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet21[formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]] != undefined);									}								if (!Tmp5) break L4;
									F.line = 2659;
									j_210060 = subInt(addInt(mulInt(j_210060, 10), formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]), 48);
									F.line = 2660;
									i_210033 = addInt(i_210033, 1);
								}
						} while(false);
						F.line = 2661;
						if (!(negative_210067)) {
						Tmp6 = subInt(j_210060, 1);
						}
						else {
						Tmp6 = subInt((a_210029 != null ? a_210029.length : 0), j_210060);
						}
						
						var idx_210098 = Tmp6;
							if ((idx_210098 < 0)) Tmp7 = true; else {								Tmp7 = ((a_210029 != null ? (a_210029.length-1) : -1) < idx_210098);							}						if (Tmp7) {
						F.line = 2662;
						invalid_format_string_209939();
						}
						
						F.line = 2663;
						if (s_210026[s_210026_Idx] != null) { s_210026[s_210026_Idx] = (s_210026[s_210026_Idx]).concat(a_210029[chckIndx(idx_210098, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = a_210029[chckIndx(idx_210098, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0].slice(); };
						break;
					case 123:
						F.line = 2665;
						var j_210104 = addInt(i_210033, 2);
						F.line = 2666;
						var k_210106 = 0;
						F.line = 2667;
						var negative_210107 = (formatstr_210027[chckIndx(j_210104, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0] == 45);
						if (negative_210107) {
						F.line = 2668;
						j_210104 = addInt(j_210104, 1);
						}
						
						F.line = 2669;
						var is_number_210115 = 0;
						L8: do {
							F.line = 2670;
								L9: while (true) {
								if (!((j_210104 < (formatstr_210027 != null ? formatstr_210027.length : 0)) && !((ConstSet22[formatstr_210027[chckIndx(j_210104, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]] != undefined)))) break L9;
									if ((ConstSet23[formatstr_210027[chckIndx(j_210104, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]] != undefined)) {
									F.line = 2672;
									k_210106 = subInt(addInt(mulInt(k_210106, 10), formatstr_210027[chckIndx(j_210104, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]), 48);
									if ((is_number_210115 == 0)) {
									F.line = 2673;
									is_number_210115 = 1;
									}
									
									}
									else {
										F.line = 2675;
										is_number_210115 = -1;
									}
									
									F.line = 2676;
									j_210104 = addInt(j_210104, 1);
								}
						} while(false);
						if ((is_number_210115 == 1)) {
						F.line = 2678;
						if (!(negative_210107)) {
						Tmp10 = subInt(k_210106, 1);
						}
						else {
						Tmp10 = subInt((a_210029 != null ? a_210029.length : 0), k_210106);
						}
						
						var idx_210148 = Tmp10;
							if ((idx_210148 < 0)) Tmp11 = true; else {								Tmp11 = ((a_210029 != null ? (a_210029.length-1) : -1) < idx_210148);							}						if (Tmp11) {
						F.line = 2679;
						invalid_format_string_209939();
						}
						
						F.line = 2680;
						if (s_210026[s_210026_Idx] != null) { s_210026[s_210026_Idx] = (s_210026[s_210026_Idx]).concat(a_210029[chckIndx(idx_210148, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = a_210029[chckIndx(idx_210148, 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0].slice(); };
						}
						else {
							F.line = 2682;
							var x_210154 = find_normalized_209906(substr_74422(formatstr_210027, addInt(i_210033, 2), subInt(j_210104, 1)), a_210029);
								if (!(0 <= x_210154)) Tmp12 = false; else {									Tmp12 = (x_210154 < (a_210029 != null ? (a_210029.length-1) : -1));								}							if (Tmp12) {
							F.line = 2683;
							if (s_210026[s_210026_Idx] != null) { s_210026[s_210026_Idx] = (s_210026[s_210026_Idx]).concat(a_210029[chckIndx(addInt(x_210154, 1), 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = a_210029[chckIndx(addInt(x_210154, 1), 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0].slice(); };
							}
							else {
								F.line = 2684;
							invalid_format_string_209939();
							}
							
						}
						
						F.line = 2685;
						i_210033 = addInt(j_210104, 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						F.line = 2687;
						var j_210161 = addInt(i_210033, 1);
						L13: do {
							F.line = 2688;
								L14: while (true) {
									if (!(j_210161 < (formatstr_210027 != null ? formatstr_210027.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet24[formatstr_210027[chckIndx(j_210161, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]] != undefined);									}								if (!Tmp15) break L14;
									F.line = 2688;
									j_210161 = addInt(j_210161, 1);
								}
						} while(false);
						F.line = 2689;
						var x_210174 = find_normalized_209906(substr_74422(formatstr_210027, addInt(i_210033, 1), subInt(j_210161, 1)), a_210029);
							if (!(0 <= x_210174)) Tmp16 = false; else {								Tmp16 = (x_210174 < (a_210029 != null ? (a_210029.length-1) : -1));							}						if (Tmp16) {
						F.line = 2690;
						if (s_210026[s_210026_Idx] != null) { s_210026[s_210026_Idx] = (s_210026[s_210026_Idx]).concat(a_210029[chckIndx(addInt(x_210174, 1), 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = a_210029[chckIndx(addInt(x_210174, 1), 0, (a_210029 != null ? a_210029.length : 0)+0-1)-0].slice(); };
						}
						else {
							F.line = 2691;
						invalid_format_string_209939();
						}
						
						F.line = 2692;
						i_210033 = j_210161;
						break;
					default: 
						F.line = 2694;
						invalid_format_string_209939();
						break;
					}
					}
					else {
						F.line = 2696;
						if (s_210026[s_210026_Idx] != null) { addChar(s_210026[s_210026_Idx], formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]); } else { s_210026[s_210026_Idx] = [formatstr_210027[chckIndx(i_210033, 0, (formatstr_210027 != null ? formatstr_210027.length : 0)+0-1)-0]]; };
						F.line = 2697;
						i_210033 = addInt(i_210033, 1);
					}
					
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuFormatVarargs(formatstr_210254, a_210256) {
	var result_210257 = [null];

	var F={procname:"strutils.format",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2762;
		result_210257[0] = nimCopy(null, mnewString(0), NTI44040);
		F.line = 2763;
		nsuAddf(result_210257, 0, formatstr_210254, a_210256);
	framePtr = F.prev;

	return result_210257[0];

}

function status_355711(self_355713) {
	var result_355714 = null;

	var F={procname:"game_logic.status",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 148;
		var top_line_355715 = [];
		L1: do {
			F.line = 149;
			var i_355724 = 0;
			F.line = 2699;
			var colontmp__366395 = 0;
			F.line = 149;
			colontmp__366395 = self_355713.size;
			F.line = 2710;
			var res_366396 = 1;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366396 <= colontmp__366395)) break L3;
						F.line = 149;
						i_355724 = res_366396;
						F.line = 150;
						F.line = 150;
						var fmt_res_355725 = [mnewString(0)];
						F.line = 150;
						if (fmt_res_355725[0] != null) { fmt_res_355725[0] = (fmt_res_355725[0]).concat(makeNimstrLit("  ")); } else { fmt_res_355725[0] = makeNimstrLit("  "); };
						F.line = 150;
						format_value_354499(fmt_res_355725, 0, i_355724, []);
						if (top_line_355715 != null) { top_line_355715 = (top_line_355715).concat(fmt_res_355725[0]); } else { top_line_355715 = fmt_res_355725[0].slice(); };
						F.line = 2713;
						res_366396 = addInt(res_366396, 1);
					}
			} while(false);
		} while(false);
		F.line = 151;
		rawEcho(top_line_355715);
		L4: do {
			F.line = 152;
			var y_355744 = 0;
			F.line = 2699;
			var colontmp__366409 = 0;
			F.line = 152;
			colontmp__366409 = subInt(self_355713.size, 1);
			F.line = 2710;
			var res_366410 = 0;
			L5: do {
				F.line = 2711;
					L6: while (true) {
					if (!(res_366410 <= colontmp__366409)) break L6;
						F.line = 152;
						y_355744 = res_366410;
						F.line = 153;
						var line_355745 = cstrToNimstr((addInt(y_355744, 1))+"");
						L7: do {
							F.line = 154;
							var x_355754 = 0;
							F.line = 2699;
							var colontmp__366403 = 0;
							F.line = 154;
							colontmp__366403 = subInt(self_355713.size, 1);
							F.line = 2710;
							var res_366404 = 0;
							L8: do {
								F.line = 2711;
									L9: while (true) {
									if (!(res_366404 <= colontmp__366403)) break L9;
										F.line = 154;
										x_355754 = res_366404;
										F.line = 155;
										if (line_355745 != null) { line_355745 = (line_355745).concat(nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_354085[chckIndx(self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0][chckIndx(y_355744, 0, (self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0] != null ? self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0].length : 0)+0-1)-0], 0, (desc_354085 != null ? desc_354085.length : 0)+0-1)-0], NTI44040)])); } else { line_355745 = nsuFormatVarargs(makeNimstrLit("[$1]"), [nimCopy(null, desc_354085[chckIndx(self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0][chckIndx(y_355744, 0, (self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0] != null ? self_355713.field[chckIndx(x_355754, 0, (self_355713.field != null ? self_355713.field.length : 0)+0-1)-0].length : 0)+0-1)-0], 0, (desc_354085 != null ? desc_354085.length : 0)+0-1)-0], NTI44040)]).slice(); };
										F.line = 2713;
										res_366404 = addInt(res_366404, 1);
									}
							} while(false);
						} while(false);
						F.line = 156;
						rawEcho(line_355745);
						F.line = 2713;
						res_366410 = addInt(res_366410, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_355714;

}

function is_over_351026(self_351028) {
	var result_351029 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 289;
		result_351029 = !((self_351028.winner_player_number == 0));
	framePtr = F.prev;

	return result_351029;

}

function is_over_351043(self_351028) {
	var result_351045 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 288;
		result_351045 = is_over_351026(self_351028);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_351045;

}

function status_349124(self_349126) {
	var result_351049 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_351043(self_349126)) {
		F.line = 298;
		result_351049 = nimCopy(null, makeNimstrLit("game is over"), NTI44040);
		break BeforeRet;
		}
		else {
			F.line = 300;
			result_351049 = nimCopy(null, makeNimstrLit("game is active"), NTI44040);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_351049;

}

function status_349127(self_349126) {
	var result_351049 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 510;
		chckNilDisp(self_349126);
		if (isObj(self_349126.m_type, NTI354020)) {
		F.line = 178;
		result_351049 = status_355711(self_349126);
		break BeforeRet;
		}
		else {
		if (isObj(self_349126.m_type, NTI349047)) {
		F.line = 178;
		result_351049 = status_349124(self_349126);
		break BeforeRet;
		}
		else {
		if (isObj(self_349126.m_type, NTI349047)) {
		F.line = 178;
		result_351049 = status_349124(self_349126);
		break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_351049;

}

function display_349129(self_349131, msg_349132) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 188;
		rawEcho(msg_349132);
	framePtr = F.prev;

	
}

function display_349150(self_349131, msg_349132) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 187;
		display_349129(self_349131, msg_349132);
	framePtr = F.prev;

	
}

function get_lines_354924(self_354926) {
										var Tmp7;
										var Tmp8;
										var Tmp9;
										var Tmp10;

	var result_354929 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 68;
		var s_354930 = subInt(self_354926.size, 1);
		F.line = 69;
		var v_line_354932 = null;
		F.line = 70;
		var h_line_354934 = null;
		F.line = 71;
		var s_line1_354936 = null;
		F.line = 72;
		var s_line2_354938 = null;
		F.line = 73;
		var s_line3_354940 = null;
		F.line = 74;
		var s_line4_354942 = null;
		L1: do {
			F.line = 75;
			var i_354951 = 0;
			F.line = 2710;
			var res_366444 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366444 <= s_354930)) break L3;
						F.line = 75;
						i_354951 = res_366444;
						F.line = 76;
						v_line_354932 = nimCopy(null, [], NTI354966);
						F.line = 77;
						h_line_354934 = nimCopy(null, [], NTI354981);
						F.line = 78;
						s_line1_354936 = nimCopy(null, [], NTI354996);
						F.line = 79;
						s_line2_354938 = nimCopy(null, [], NTI355011);
						F.line = 80;
						s_line3_354940 = nimCopy(null, [], NTI355026);
						F.line = 81;
						s_line4_354942 = nimCopy(null, [], NTI355041);
						L4: do {
							F.line = 82;
							var j_355050 = 0;
							F.line = 2710;
							var res_366439 = 0;
							L5: do {
								F.line = 2711;
									L6: while (true) {
									if (!(res_366439 <= s_354930)) break L6;
										F.line = 82;
										j_355050 = res_366439;
										F.line = 84;
										if (v_line_354932 != null) { v_line_354932.push(self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0][chckIndx(j_355050, 0, (self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0] != null ? self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0].length : 0)+0-1)-0]); } else { v_line_354932 = [self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0][chckIndx(j_355050, 0, (self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0] != null ? self_354926.field[chckIndx(i_354951, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0].length : 0)+0-1)-0]]; };
										F.line = 86;
										if (h_line_354934 != null) { h_line_354934.push(self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0][chckIndx(i_354951, 0, (self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0] != null ? self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0].length : 0)+0-1)-0]); } else { h_line_354934 = [self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0][chckIndx(i_354951, 0, (self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0] != null ? self_354926.field[chckIndx(j_355050, 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0].length : 0)+0-1)-0]]; };
										if ((addInt(i_354951, j_355050) <= s_354930)) {
										F.line = 89;
										if (s_line1_354936 != null) { s_line1_354936.push((Tmp7 = self_354926.field[chckIndx(addInt(i_354951, j_355050), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp7)[chckIndx(j_355050, 0, (Tmp7 != null ? Tmp7.length : 0)+0-1)-0]); } else { s_line1_354936 = [(Tmp7 = self_354926.field[chckIndx(addInt(i_354951, j_355050), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp7)[chckIndx(j_355050, 0, (Tmp7 != null ? Tmp7.length : 0)+0-1)-0]]; };
										F.line = 90;
										if (s_line2_354938 != null) { s_line2_354938.push((Tmp8 = self_354926.field[chckIndx(addInt(i_354951, j_355050), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp8)[chckIndx(subInt(s_354930, j_355050), 0, (Tmp8 != null ? Tmp8.length : 0)+0-1)-0]); } else { s_line2_354938 = [(Tmp8 = self_354926.field[chckIndx(addInt(i_354951, j_355050), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp8)[chckIndx(subInt(s_354930, j_355050), 0, (Tmp8 != null ? Tmp8.length : 0)+0-1)-0]]; };
										if ((0 < i_354951)) {
										F.line = 92;
										if (s_line3_354940 != null) { s_line3_354940.push((Tmp9 = self_354926.field[chckIndx(subInt(s_354930, addInt(i_354951, j_355050)), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp9)[chckIndx(j_355050, 0, (Tmp9 != null ? Tmp9.length : 0)+0-1)-0]); } else { s_line3_354940 = [(Tmp9 = self_354926.field[chckIndx(subInt(s_354930, addInt(i_354951, j_355050)), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp9)[chckIndx(j_355050, 0, (Tmp9 != null ? Tmp9.length : 0)+0-1)-0]]; };
										F.line = 93;
										if (s_line4_354942 != null) { s_line4_354942.push((Tmp10 = self_354926.field[chckIndx(subInt(s_354930, addInt(i_354951, j_355050)), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp10)[chckIndx(subInt(s_354930, j_355050), 0, (Tmp10 != null ? Tmp10.length : 0)+0-1)-0]); } else { s_line4_354942 = [(Tmp10 = self_354926.field[chckIndx(subInt(s_354930, addInt(i_354951, j_355050)), 0, (self_354926.field != null ? self_354926.field.length : 0)+0-1)-0], Tmp10)[chckIndx(subInt(s_354930, j_355050), 0, (Tmp10 != null ? Tmp10.length : 0)+0-1)-0]]; };
										}
										
										}
										
										F.line = 2713;
										res_366439 = addInt(res_366439, 1);
									}
							} while(false);
						} while(false);
						if ((self_354926.winCount <= (h_line_354934 != null ? h_line_354934.length : 0))) {
						F.line = 95;
						var Tmp11 = nimCopy(null, h_line_354934, NTI354933);
						if (result_354929 != null) { result_354929.push(Tmp11); } else { result_354929 = [Tmp11]; };
						}
						
						if ((self_354926.winCount <= (v_line_354932 != null ? v_line_354932.length : 0))) {
						F.line = 97;
						var Tmp12 = nimCopy(null, v_line_354932, NTI354931);
						if (result_354929 != null) { result_354929.push(Tmp12); } else { result_354929 = [Tmp12]; };
						}
						
						if ((self_354926.winCount <= (s_line1_354936 != null ? s_line1_354936.length : 0))) {
						F.line = 99;
						var Tmp13 = nimCopy(null, s_line1_354936, NTI354935);
						if (result_354929 != null) { result_354929.push(Tmp13); } else { result_354929 = [Tmp13]; };
						}
						
						if ((self_354926.winCount <= (s_line2_354938 != null ? s_line2_354938.length : 0))) {
						F.line = 101;
						var Tmp14 = nimCopy(null, s_line2_354938, NTI354937);
						if (result_354929 != null) { result_354929.push(Tmp14); } else { result_354929 = [Tmp14]; };
						}
						
						if ((0 < i_354951)) {
						if ((self_354926.winCount <= (s_line3_354940 != null ? s_line3_354940.length : 0))) {
						F.line = 104;
						var Tmp15 = nimCopy(null, s_line3_354940, NTI354939);
						if (result_354929 != null) { result_354929.push(Tmp15); } else { result_354929 = [Tmp15]; };
						}
						
						if ((self_354926.winCount <= (s_line4_354942 != null ? s_line4_354942.length : 0))) {
						F.line = 106;
						var Tmp16 = nimCopy(null, s_line4_354942, NTI354941);
						if (result_354929 != null) { result_354929.push(Tmp16); } else { result_354929 = [Tmp16]; };
						}
						
						}
						
						F.line = 2713;
						res_366444 = addInt(res_366444, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_354929;

}

function get_lines_355182(self_354926) {
	var result_355184 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 67;
		result_355184 = get_lines_354924(self_354926);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_355184;

}

function max_line_length_355185(line_355188) {
	var result_355190 = {Field0: 0, Field1: 0};

	var F={procname:"game_logic.maxLineLength",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 112;
		result_355190["Field1"] = line_355188[chckIndx(0, 0, (line_355188 != null ? line_355188.length : 0)+0-1)-0];
		L1: do {
			F.line = 113;
			var field_355414 = 0;
			F.line = 184;
			var i_366451 = 0;
			F.line = 185;
			var l_366452 = (line_355188 != null ? line_355188.length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_366451 < l_366452)) break L3;
						F.line = 113;
						field_355414 = line_355188[chckIndx(i_366451, 0, (line_355188 != null ? line_355188.length : 0)+0-1)-0];
						if (!((field_355414 == 0))) {
						if ((field_355414 == result_355190["Field1"])) {
						F.line = 117;
						result_355190["Field0"] = addInt(result_355190["Field0"], 1);
						}
						else {
							F.line = 120;
							result_355190["Field0"] = 1;
							F.line = 121;
							result_355190["Field1"] = field_355414;
						}
						
						}
						
						F.line = 188;
						i_366451 = addInt(i_366451, 1);
						if (!(((line_355188 != null ? line_355188.length : 0) == l_366452))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_355190;

}

function scoring_355844(self_355846) {
	var result_355847 = [0.0];

	var F={procname:"game_logic.scoring",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 169;
			var line_355854 = null;
			F.line = 182;
			var colontmp__366432 = null;
			F.line = 169;
			colontmp__366432 = get_lines_355182(self_355846);
			F.line = 184;
			var i_366434 = 0;
			F.line = 185;
			var l_366435 = (colontmp__366432 != null ? colontmp__366432.length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_366434 < l_366435)) break L3;
						F.line = 169;
						line_355854 = colontmp__366432[chckIndx(i_366434, 0, (colontmp__366432 != null ? colontmp__366432.length : 0)+0-1)-0];
						F.line = 170;
						var max_len_355855 = max_line_length_355185(line_355854);
						if ((self_355846.winCount <= max_len_355855["Field0"])) {
						if ((self_355846.current_player_number == max_len_355855["Field1"])) {
						F.line = 173;
						HEX2BHEX3D_209861(result_355847, 0, 1.0000000000000000e+06);
						}
						else {
							F.line = 175;
						HEX2DHEX3D_324615(result_355847, 0, 1.0000000000000000e+06);
						}
						
						}
						else {
							if ((1 < max_len_355855["Field0"])) {
							if ((self_355846.current_player_number == max_len_355855["Field1"])) {
							F.line = 179;
							HEX2BHEX3D_209861(result_355847, 0, (1.0000000000000000e+03 * max_len_355855["Field0"]));
							}
							else {
								F.line = 181;
							HEX2DHEX3D_324615(result_355847, 0, (1.0000000000000000e+03 * max_len_355855["Field0"]));
							}
							
							}
							
						}
						
						F.line = 188;
						i_366434 = addInt(i_366434, 1);
						if (!(((colontmp__366432 != null ? colontmp__366432.length : 0) == l_366435))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_355847[0];

}

function scoring_351225(self_351227) {
	var result_351228 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym351231_351403 = null;
		F.line = 3481;
		eHEX60gensym351231_351403 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 321;
		eHEX60gensym351231_351403.message = nimCopy(null, makeNimstrLit("scoring() must be overridden (if used)"), NTI44040);
		F.line = 3474;
		eHEX60gensym351231_351403.parent = null;
		F.line = 321;
		raiseException(eHEX60gensym351231_351403, "FieldError");
	framePtr = F.prev;

	return result_351228;

}

function scoring_351423(self_351227) {
	var result_351425 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 510;
		chckNilDisp(self_351227);
		if (isObj(self_351227.m_type, NTI354020)) {
		F.line = 316;
		result_351425 = scoring_355844(self_351227);
		break BeforeRet;
		}
		else {
		if (isObj(self_351227.m_type, NTI349047)) {
		F.line = 316;
		result_351425 = scoring_351225(self_351227);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_351425;

}

function abs_56449(x_56451) {
		var Tmp1;

	var result_56452 = 0.0;

		if ((x_56451 < 0.0)) {
		Tmp1 = -(x_56451);
		}
		else {
		Tmp1 = x_56451;
		}
		
		result_56452 = Tmp1;

	return result_56452;

}

function get_state_355774(self_355776) {
	var result_355777 = null;

	var F={procname:"game_logic.get_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 159;
			var y_355786 = 0;
			F.line = 2699;
			var colontmp__366462 = 0;
			F.line = 159;
			colontmp__366462 = subInt(self_355776.size, 1);
			F.line = 2710;
			var res_366463 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366463 <= colontmp__366462)) break L3;
						F.line = 159;
						y_355786 = res_366463;
						L4: do {
							F.line = 160;
							var x_355795 = 0;
							F.line = 2699;
							var colontmp__366456 = 0;
							F.line = 160;
							colontmp__366456 = subInt(self_355776.size, 1);
							F.line = 2710;
							var res_366457 = 0;
							L5: do {
								F.line = 2711;
									L6: while (true) {
									if (!(res_366457 <= colontmp__366456)) break L6;
										F.line = 160;
										x_355795 = res_366457;
										F.line = 161;
										if (result_355777 != null) { result_355777 = (result_355777).concat(cstrToNimstr((self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0][chckIndx(y_355786, 0, (self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0] != null ? self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0].length : 0)+0-1)-0])+"")); } else { result_355777 = cstrToNimstr((self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0][chckIndx(y_355786, 0, (self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0] != null ? self_355776.field[chckIndx(x_355795, 0, (self_355776.field != null ? self_355776.field.length : 0)+0-1)-0].length : 0)+0-1)-0])+"").slice(); };
										F.line = 2713;
										res_366457 = addInt(res_366457, 1);
									}
							} while(false);
						} while(false);
						F.line = 2713;
						res_366463 = addInt(res_366463, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_355777;

}

function get_state_351426(self_351428) {
	var result_351429 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym351432_351603 = null;
		F.line = 3481;
		eHEX60gensym351432_351603 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 330;
		eHEX60gensym351432_351603.message = nimCopy(null, makeNimstrLit("get_state() must be overridden (if used)"), NTI44040);
		F.line = 3474;
		eHEX60gensym351432_351603.parent = null;
		F.line = 330;
		raiseException(eHEX60gensym351432_351603, "FieldError");
	framePtr = F.prev;

	return result_351429;

}

function get_state_351623(self_351428) {
	var result_351625 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 510;
		chckNilDisp(self_351428);
		if (isObj(self_351428.m_type, NTI354020)) {
		F.line = 324;
		result_351625 = get_state_355774(self_351428);
		break BeforeRet;
		}
		else {
		if (isObj(self_351428.m_type, NTI349047)) {
		F.line = 324;
		result_351625 = get_state_351426(self_351428);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_351625;

}

function integer_out_of_range_error_115418() {
	var F={procname:"parseutils.integerOutOfRangeError",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym115422_115603 = null;
		F.line = 3481;
		eHEX60gensym115422_115603 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 402;
		eHEX60gensym115422_115603.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI44040);
		F.line = 3474;
		eHEX60gensym115422_115603.parent = null;
		F.line = 402;
		raiseException(eHEX60gensym115422_115603, "ValueError");
	framePtr = F.prev;

	
}

function raw_parse_int_115801(s_115803, b_115805, b_115805_Idx, start_115806) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_115808 = 0;

	var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 410;
		var sign_115810 = -1;
		F.line = 411;
		var i_115811 = start_115806;
		if ((i_115811 < (s_115803 != null ? s_115803.length : 0))) {
		if ((s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0] == 43)) {
		F.line = 413;
		i_115811 += 1;
		}
		else {
		if ((s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0] == 45)) {
		F.line = 415;
		i_115811 += 1;
		F.line = 416;
		sign_115810 = 1;
		}
		}
		}
		
			if (!(i_115811 < (s_115803 != null ? s_115803.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet25[s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 418;
		b_115805[b_115805_Idx] = 0;
		L2: do {
			F.line = 419;
				L3: while (true) {
					if (!(i_115811 < (s_115803 != null ? s_115803.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet26[s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 420;
					var c_115846 = (s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0] - 48);
					if ((Math.trunc((-9223372036854775808 + c_115846) / 10) <= b_115805[b_115805_Idx])) {
					F.line = 422;
					b_115805[b_115805_Idx] = ((b_115805[b_115805_Idx] * 10) - c_115846);
					}
					else {
						F.line = 424;
					integer_out_of_range_error_115418();
					}
					
					F.line = 425;
					i_115811 += 1;
					L5: do {
						F.line = 426;
							L6: while (true) {
							if (!((i_115811 < (s_115803 != null ? s_115803.length : 0)) && (s_115803[chckIndx(i_115811, 0, (s_115803 != null ? s_115803.length : 0)+0-1)-0] == 95))) break L6;
								F.line = 426;
								i_115811 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_115810 == -1)) Tmp7 = false; else {				Tmp7 = (b_115805[b_115805_Idx] == -9223372036854775808);			}		if (Tmp7) {
		F.line = 428;
		integer_out_of_range_error_115418();
		}
		else {
			F.line = 430;
			b_115805[b_115805_Idx] = (b_115805[b_115805_Idx] * sign_115810);
			F.line = 431;
			result_115808 = (i_115811 - start_115806);
		}
		
		}
		
	framePtr = F.prev;

	return result_115808;

}

function npuParseBiggestInt(s_116003, number_116005, number_116005_Idx, start_116006) {
	var result_116008 = 0;

	var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 445;
		var res_116009 = [0];
		F.line = 448;
		result_116008 = raw_parse_int_115801(s_116003, res_116009, 0, start_116006);
		if (!((result_116008 == 0))) {
		F.line = 450;
		number_116005[number_116005_Idx] = res_116009[0];
		}
		
	framePtr = F.prev;

	return result_116008;

}

function npuParseInt(s_116026, number_116028, number_116028_Idx, start_116029) {
			var Tmp1;

	var result_116031 = 0;

	var F={procname:"parseutils.parseInt",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 463;
		var res_116032 = [0];
		F.line = 464;
		result_116031 = npuParseBiggestInt(s_116026, res_116032, 0, start_116029);
			if ((res_116032[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_116032[0]);			}		if (Tmp1) {
		F.line = 467;
		integer_out_of_range_error_115418();
		}
		
		if (!((result_116031 == 0))) {
		F.line = 469;
		number_116028[number_116028_Idx] = chckRange(res_116032[0], -2147483648, 2147483647);
		}
		
	framePtr = F.prev;

	return result_116031;

}

function nsuParseInt(s_203442) {
			var Tmp1;

	var result_203443 = [0];

	var F={procname:"strutils.parseInt",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1098;
		var l_203445 = npuParseInt(s_203442, result_203443, 0, 0);
			if (!((l_203445 == (s_203442 != null ? s_203442.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_203445 == 0);			}		if (Tmp1) {
		F.line = 3478;
		var eHEX60gensym203448_203603 = null;
		F.line = 3481;
		eHEX60gensym203448_203603 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 1100;
		eHEX60gensym203448_203603.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_203442 || []), NTI44040);
		F.line = 3474;
		eHEX60gensym203448_203603.parent = null;
		F.line = 1100;
		raiseException(eHEX60gensym203448_203603, "ValueError");
		}
		
	framePtr = F.prev;

	return result_203443[0];

}

function make_move_354904(self_354906, move_354907) {
		var Tmp1;
		var Tmp2;
		var Tmp3;

	var result_354908 = null;

	var F={procname:"game_logic.make_move",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 63;
		(Tmp3 = self_354906.field[chckIndx(subInt(nsuParseInt((Tmp1 = nsuSplitChar(move_354907, 46, -1), Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0]), 1), 0, (self_354906.field != null ? self_354906.field.length : 0)+0-1)-0], Tmp3)[chckIndx(subInt(nsuParseInt((Tmp2 = nsuSplitChar(move_354907, 46, -1), Tmp2)[chckIndx(1, 0, (Tmp2 != null ? Tmp2.length : 0)+0-1)-0]), 1), 0, (Tmp3 != null ? Tmp3.length : 0)+0-1)-0] = self_354906.current_player_number;
		F.line = 64;
		result_354908 = nimCopy(null, (makeNimstrLit("set mark at ") || []).concat(move_354907 || []), NTI44040);
	framePtr = F.prev;

	return result_354908;

}

function make_move_350923(self_350925, move_350926) {
	var result_350927 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym350930_351003 = null;
		F.line = 3481;
		eHEX60gensym350930_351003 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 285;
		eHEX60gensym350930_351003.message = nimCopy(null, makeNimstrLit("make_move() must be overridden"), NTI44040);
		F.line = 3474;
		eHEX60gensym350930_351003.parent = null;
		F.line = 285;
		raiseException(eHEX60gensym350930_351003, "FieldError");
	framePtr = F.prev;

	return result_350927;

}

function make_move_351023(self_350925, move_350926) {
	var result_351025 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 510;
		chckNilDisp(self_350925);
		if (isObj(self_350925.m_type, NTI354020)) {
		F.line = 277;
		result_351025 = make_move_354904(self_350925, move_350926);
		break BeforeRet;
		}
		else {
		if (isObj(self_350925.m_type, NTI349047)) {
		F.line = 277;
		result_351025 = make_move_350923(self_350925, move_350926);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_351025;

}

function next_player_number_350880(self_350882) {
	var result_350883 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 265;
		result_350883 = addInt((self_350882.current_player_number % self_350882.player_count), 1);
	framePtr = F.prev;

	return result_350883;

}

function next_player_number_350902(self_350882) {
	var result_350904 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 264;
		result_350904 = next_player_number_350880(self_350882);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_350904;

}

function finish_turn_350905(self_350907) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 274;
		self_350907.current_player_number = next_player_number_350902(self_350907);
	framePtr = F.prev;

	
}

function finish_turn_350921(self_350907) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 269;
		finish_turn_350905(self_350907);
	framePtr = F.prev;

	
}

function restore_state_355809(self_355811, state_355812) {
	var F={procname:"game_logic.restore_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 164;
			var y_355821 = 0;
			F.line = 2699;
			var colontmp__366484 = 0;
			F.line = 164;
			colontmp__366484 = subInt(self_355811.size, 1);
			F.line = 2710;
			var res_366485 = 0;
			L2: do {
				F.line = 2711;
					L3: while (true) {
					if (!(res_366485 <= colontmp__366484)) break L3;
						F.line = 164;
						y_355821 = res_366485;
						L4: do {
							F.line = 165;
							var x_355830 = 0;
							F.line = 2699;
							var colontmp__366478 = 0;
							F.line = 165;
							colontmp__366478 = subInt(self_355811.size, 1);
							F.line = 2710;
							var res_366479 = 0;
							L5: do {
								F.line = 2711;
									L6: while (true) {
									if (!(res_366479 <= colontmp__366478)) break L6;
										F.line = 165;
										x_355830 = res_366479;
										F.line = 166;
										self_355811.field[chckIndx(x_355830, 0, (self_355811.field != null ? self_355811.field.length : 0)+0-1)-0][chckIndx(y_355821, 0, (self_355811.field[chckIndx(x_355830, 0, (self_355811.field != null ? self_355811.field.length : 0)+0-1)-0] != null ? self_355811.field[chckIndx(x_355830, 0, (self_355811.field != null ? self_355811.field.length : 0)+0-1)-0].length : 0)+0-1)-0] = nsuParseInt(nimCharToStr(state_355812[chckIndx(addInt(mulInt(y_355821, self_355811.size), x_355830), 0, (state_355812 != null ? state_355812.length : 0)+0-1)-0]));
										F.line = 2713;
										res_366479 = addInt(res_366479, 1);
									}
							} while(false);
						} while(false);
						F.line = 2713;
						res_366485 = addInt(res_366485, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function restore_state_351626(self_351628, state_351629) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym351632_351803 = null;
		F.line = 3481;
		eHEX60gensym351632_351803 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 338;
		eHEX60gensym351632_351803.message = nimCopy(null, makeNimstrLit("restore_state() must be overridden (if used)"), NTI44040);
		F.line = 3474;
		eHEX60gensym351632_351803.parent = null;
		F.line = 338;
		raiseException(eHEX60gensym351632_351803, "FieldError");
	framePtr = F.prev;

	
}

function restore_state_351823(self_351628, state_351629) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 510;
		chckNilDisp(self_351628);
		if (isObj(self_351628.m_type, NTI354020)) {
		F.line = 333;
		restore_state_355809(self_351628, state_351629);
		}
		else {
		if (isObj(self_351628.m_type, NTI349047)) {
		F.line = 333;
		restore_state_351626(self_351628, state_351629);
		}
		}
	framePtr = F.prev;

	
}

function negamax_core_353029(game_353032, game_353032_Idx, ai_choice_353034, ai_choice_353034_Idx, depth_353035, orig_depth_353036, alpha_in_353037, beta_in_353038) {
			var Tmp1;
			var Tmp2;

	var result_353039 = 0.0;

	var F={procname:"negamax.negamax_core",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 112;
		var possible_moves_353056 = [[]];
		F.line = 113;
		var starting_state_353057 = null;
		F.line = 114;
		var move_alpha_353058 = 0.0;
		F.line = 115;
		var alpha_353059 = alpha_in_353037;
		F.line = 116;
		var beta_353060 = beta_in_353038;
		F.line = 119;
		set_possible_moves_349122(game_353032[game_353032_Idx], possible_moves_353056, 0);
			if ((depth_353035 == 0)) Tmp2 = true; else {				Tmp2 = is_over_351043(game_353032[game_353032_Idx]);			}			if (Tmp2) Tmp1 = true; else {				Tmp1 = ((possible_moves_353056[0] != null ? possible_moves_353056[0].length : 0) == 0);			}		if (Tmp1) {
		F.line = 124;
		var score_353067 = scoring_351423(game_353032[game_353032_Idx]);
		if ((score_353067 == 0.0)) {
		F.line = 127;
		result_353039 = score_353067;
		break BeforeRet;
		}
		else {
			F.line = 129;
			result_353039 = (score_353067 - (((1.0000000000000000e-02 * depth_353035) * abs_56449(score_353067)) / score_353067));
			break BeforeRet;
		}
		
		}
		
		F.line = 133;
		starting_state_353057 = nimCopy(null, get_state_351623(game_353032[game_353032_Idx]), NTI44040);
		F.line = 138;
		var best_move_353068 = nimCopy(null, possible_moves_353056[0][chckIndx(0, 0, (possible_moves_353056[0] != null ? possible_moves_353056[0].length : 0)+0-1)-0], NTI44040);
		F.line = 139;
		var best_value_353069 = -Infinity;
		L3: do {
			F.line = 141;
			var move_353076 = null;
			F.line = 184;
			var i_366426 = 0;
			F.line = 185;
			var l_366427 = (possible_moves_353056[0] != null ? possible_moves_353056[0].length : 0);
			L4: do {
				F.line = 186;
					L5: while (true) {
					if (!(i_366426 < l_366427)) break L5;
						F.line = 141;
						move_353076 = possible_moves_353056[0][chckIndx(i_366426, 0, (possible_moves_353056[0] != null ? possible_moves_353056[0].length : 0)+0-1)-0];
						F.line = 145;
						make_move_351023(game_353032[game_353032_Idx], move_353076);
						F.line = 146;
						finish_turn_350921(game_353032[game_353032_Idx]);
						F.line = 150;
						move_alpha_353058 = -(negamax_core_353029(game_353032, game_353032_Idx, ai_choice_353034, ai_choice_353034_Idx, subInt(depth_353035, 1), orig_depth_353036, -(beta_353060), -(alpha_353059)));
						F.line = 159;
						restore_state_351823(game_353032[game_353032_Idx], starting_state_353057);
						if ((best_value_353069 < move_alpha_353058)) {
						F.line = 164;
						best_value_353069 = move_alpha_353058;
						F.line = 165;
						best_move_353068 = nimCopy(null, move_353076, NTI44040);
						}
						
						if ((alpha_353059 < move_alpha_353058)) {
						F.line = 167;
						alpha_353059 = move_alpha_353058;
						if ((depth_353035 == orig_depth_353036)) {
						F.line = 169;
						ai_choice_353034[ai_choice_353034_Idx] = nimCopy(null, best_move_353068, NTI44040);
						}
						
						if ((beta_353060 <= alpha_353059)) {
						F.line = 171;
						break L3;
						}
						
						}
						
						F.line = 188;
						i_366426 = addInt(i_366426, 1);
						if (!(((possible_moves_353056[0] != null ? possible_moves_353056[0].length : 0) == l_366427))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 173;
		result_353039 = best_value_353069;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_353039;

}

function negamax_353090(game_353093, game_353093_Idx, depth_353094) {
	var result_353095 = null;

	var F={procname:"negamax.negamax",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 188;
		var alpha_353096 = 0.0;
		F.line = 189;
		var beta_353097 = 0.0;
		F.line = 190;
		var ai_choice_353098 = [null];
		F.line = 191;
		var possible_moves_353115 = [[]];
		F.line = 193;
		alpha_353096 = -Infinity;
		F.line = 194;
		beta_353097 = Infinity;
		F.line = 198;
		set_possible_moves_349122(game_353093[game_353093_Idx], possible_moves_353115, 0);
		if (((possible_moves_353115[0] != null ? possible_moves_353115[0].length : 0) == 0)) {
		F.line = 200;
		result_353095 = nimCopy(null, [], NTI44040);
		break BeforeRet;
		}
		
		F.line = 201;
		ai_choice_353098[0] = nimCopy(null, possible_moves_353115[0][chckIndx(0, 0, (possible_moves_353115[0] != null ? possible_moves_353115[0].length : 0)+0-1)-0], NTI44040);
		F.line = 203;
		alpha_353096 = negamax_core_353029(game_353093, game_353093_Idx, ai_choice_353098, 0, depth_353094, depth_353094, alpha_353096, beta_353097);
		F.line = 211;
		result_353095 = nimCopy(null, ai_choice_353098[0], NTI44040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_353095;

}

function get_move_353144(self_353146, game_353147) {
	var result_353148 = null;

	var F={procname:"negamax.get_move",prev:framePtr,filename:"negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 224;
		var new_game_353149 = [null];
		F.line = 226;
		new_game_353149[0] = game_353147;
		F.line = 229;
		var choice_353202 = negamax_353090(new_game_353149, 0, self_353146.depth);
		F.line = 230;
		result_353148 = nimCopy(null, choice_353202, NTI44040);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_353148;

}

function nsuIndent(s_206107, count_206108, padding_206109) {
						var Tmp6;

	var result_206110 = null;

	var F={procname:"strutils.indent",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1430;
		result_206110 = nimCopy(null, [], NTI44040);
		F.line = 1431;
		var i_206112 = 0;
		L1: do {
			F.line = 1432;
			var line_206113 = null;
			F.line = 659;
			var first_366516 = 0;
			F.line = 660;
			var last_366517 = 0;
			F.line = 661;
			var eolpos_366518 = 0;
			L2: do {
				F.line = 662;
					L3: while (true) {
					if (!true) break L3;
						L4: do {
							F.line = 663;
								L5: while (true) {
								if (!((last_366517 < (s_206107 != null ? s_206107.length : 0)) && !((ConstSet27[s_206107[chckIndx(last_366517, 0, (s_206107 != null ? s_206107.length : 0)+0-1)-0]] != undefined)))) break L5;
									F.line = 663;
									last_366517 = addInt(last_366517, 1);
								}
						} while(false);
						F.line = 665;
						eolpos_366518 = last_366517;
						if ((last_366517 < (s_206107 != null ? s_206107.length : 0))) {
						if ((s_206107[chckIndx(last_366517, 0, (s_206107 != null ? s_206107.length : 0)+0-1)-0] == 10)) {
						F.line = 667;
						last_366517 = addInt(last_366517, 1);
						}
						else {
						if ((s_206107[chckIndx(last_366517, 0, (s_206107 != null ? s_206107.length : 0)+0-1)-0] == 13)) {
						F.line = 669;
						last_366517 = addInt(last_366517, 1);
						if (((last_366517 < (s_206107 != null ? s_206107.length : 0)) && (s_206107[chckIndx(last_366517, 0, (s_206107 != null ? s_206107.length : 0)+0-1)-0] == 10))) {
						F.line = 670;
						last_366517 = addInt(last_366517, 1);
						}
						
						}
						}
						}
						
						F.line = 1432;
						if (false) {
						Tmp6 = subInt(last_366517, 1);
						}
						else {
						Tmp6 = subInt(eolpos_366518, 1);
						}
						
						line_206113 = substr_74422(s_206107, first_366516, Tmp6);
						if (!((i_206112 == 0))) {
						F.line = 1434;
						if (result_206110 != null) { result_206110 = (result_206110).concat(makeNimstrLit("\x0A")); } else { result_206110 = makeNimstrLit("\x0A"); };
						}
						
						L7: do {
							F.line = 1435;
							var j_206122 = 0;
							F.line = 2699;
							var colontmp__366508 = 0;
							F.line = 1435;
							colontmp__366508 = count_206108;
							F.line = 2710;
							var res_366509 = 1;
							L8: do {
								F.line = 2711;
									L9: while (true) {
									if (!(res_366509 <= colontmp__366508)) break L9;
										F.line = 1435;
										j_206122 = res_366509;
										F.line = 1436;
										if (result_206110 != null) { result_206110 = (result_206110).concat(padding_206109); } else { result_206110 = padding_206109.slice(); };
										F.line = 2713;
										res_366509 = addInt(res_366509, 1);
									}
							} while(false);
						} while(false);
						F.line = 1437;
						if (result_206110 != null) { result_206110 = (result_206110).concat(line_206113); } else { result_206110 = line_206113.slice(); };
						F.line = 1438;
						i_206112 = addInt(i_206112, 1);
						if ((eolpos_366518 == last_366517)) {
						F.line = 676;
						break L2;
						}
						
						F.line = 678;
						first_366516 = last_366517;
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_206110;

}

function len_349334(t_349339) {
	var result_349340 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1474;
		result_349340 = t_349339.counter;
	framePtr = F.prev;

	return result_349340;

}

function find_350609(a_350613, item_350614) {
	var result_350615 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 3169;
			var i_350621 = null;
			F.line = 3;
			var i_366523 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_366523 < (a_350613 != null ? a_350613.length : 0))) break L3;
						F.line = 3169;
						i_350621 = a_350613[chckIndx(i_366523, 0, (a_350613 != null ? a_350613.length : 0)+0-1)-0];
						if (eqStrings(i_350621, item_350614)) {
						F.line = 3170;
						break BeforeRet;
						}
						
						F.line = 3171;
						result_350615 = addInt(result_350615, 1);
						F.line = 6;
						i_366523 = addInt(i_366523, 1);
					}
			} while(false);
		} while(false);
		F.line = 3172;
		result_350615 = -1;
	} while (false);
	framePtr = F.prev;

	return result_350615;

}

function contains_350602(a_350606, item_350607) {
	var result_350608 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 3186;
		result_350608 = (0 <= find_350609(a_350606, item_350607));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_350608;

}

function get_move_349152(self_349154, game_349155) {
	var result_349156 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 192;
		var move_list_349173 = [[]];
		F.line = 193;
		var descriptive_move_list_349181 = [{data: null, counter: 0, first: 0, last: 0}];
		F.line = 194;
		var compact_description_349182 = false;
		F.line = 195;
		rawEcho([]);
		F.line = 196;
		rawEcho(makeNimstrLit("   Status:"));
		F.line = 197;
		rawEcho(nsuIndent(status_349127(game_349155), 2, makeNimstrLit("   ")));
		F.line = 198;
		set_possible_moves_349122(game_349155, move_list_349173, 0);
		if ((0 < (move_list_349173[0] != null ? move_list_349173[0].length : 0))) {
		F.line = 200;
		compact_description_349182 = true;
		}
		else {
			F.line = 202;
			set_possible_moves_349114(game_349155, descriptive_move_list_349181[0]);
			L1: do {
				F.line = 203;
				var key_350214 = null;
				F.line = 203;
				var value_350215 = null;
				F.line = 1647;
				var l_366492 = len_349334(descriptive_move_list_349181[0]);
				if ((0 < descriptive_move_list_349181[0].counter)) {
				F.line = 1258;
				var h_366493 = descriptive_move_list_349181[0].first;
				L2: do {
					F.line = 1259;
						L3: while (true) {
						if (!(0 <= h_366493)) break L3;
							F.line = 1260;
							var nxt_366495 = descriptive_move_list_349181[0].data[chckIndx(h_366493, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field1;
							if (is_filled_110018(descriptive_move_list_349181[0].data[chckIndx(h_366493, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field0)) {
							F.line = 203;
							key_350214 = descriptive_move_list_349181[0].data[chckIndx(h_366493, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field2;
							F.line = 1649;
							value_350215 = descriptive_move_list_349181[0].data[chckIndx(h_366493, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field3;
							F.line = 204;
							var Tmp4 = nimCopy(null, key_350214, NTI44040);
							if (move_list_349173[0] != null) { move_list_349173[0].push(Tmp4); } else { move_list_349173[0] = [Tmp4]; };
							if (!((len_349334(descriptive_move_list_349181[0]) == l_366492))) {
							F.line = 1650;
							failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tables.nim(1650, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							F.line = 1263;
							h_366493 = nxt_366495;
						}
				} while(false);
				}
				
			} while(false);
		}
		
		L5: do {
			F.line = 205;
				L6: while (true) {
				if (!true) break L6;
					F.line = 206;
					rawEcho(makeNimstrLit("   Possible moves:"));
					if (compact_description_349182) {
					F.line = 208;
					var disp_350226 = makeNimstrLit("      ");
					L7: do {
						F.line = 209;
						var key_350414 = null;
						F.line = 184;
						var i_366498 = 0;
						F.line = 185;
						var l_366499 = (move_list_349173[0] != null ? move_list_349173[0].length : 0);
						L8: do {
							F.line = 186;
								L9: while (true) {
								if (!(i_366498 < l_366499)) break L9;
									F.line = 209;
									key_350414 = move_list_349173[0][chckIndx(i_366498, 0, (move_list_349173[0] != null ? move_list_349173[0].length : 0)+0-1)-0];
									F.line = 210;
									if (disp_350226 != null) { disp_350226 = (disp_350226).concat(nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_350414, NTI44040)])); } else { disp_350226 = nsuFormatVarargs(makeNimstrLit("[$#] "), [nimCopy(null, key_350414, NTI44040)]).slice(); };
									F.line = 188;
									i_366498 = addInt(i_366498, 1);
									if (!(((move_list_349173[0] != null ? move_list_349173[0].length : 0) == l_366499))) {
									F.line = 189;
									failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					F.line = 211;
					rawEcho(disp_350226);
					}
					else {
						L10: do {
							F.line = 213;
							var key_350428 = null;
							F.line = 213;
							var value_350429 = null;
							F.line = 1647;
							var l_366502 = len_349334(descriptive_move_list_349181[0]);
							if ((0 < descriptive_move_list_349181[0].counter)) {
							F.line = 1258;
							var h_366503 = descriptive_move_list_349181[0].first;
							L11: do {
								F.line = 1259;
									L12: while (true) {
									if (!(0 <= h_366503)) break L12;
										F.line = 1260;
										var nxt_366505 = descriptive_move_list_349181[0].data[chckIndx(h_366503, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field1;
										if (is_filled_110018(descriptive_move_list_349181[0].data[chckIndx(h_366503, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field0)) {
										F.line = 213;
										key_350428 = descriptive_move_list_349181[0].data[chckIndx(h_366503, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field2;
										F.line = 1649;
										value_350429 = descriptive_move_list_349181[0].data[chckIndx(h_366503, 0, (descriptive_move_list_349181[0].data != null ? descriptive_move_list_349181[0].data.length : 0)+0-1)-0].Field3;
										F.line = 214;
										rawEcho((makeNimstrLit("      ") || []).concat(nsuFormatVarargs(makeNimstrLit("[$key]: $value"), [makeNimstrLit("key"), nimCopy(null, key_350428, NTI44040), makeNimstrLit("value"), nimCopy(null, value_350429, NTI44040)]) || []));
										if (!((len_349334(descriptive_move_list_349181[0]) == l_366502))) {
										F.line = 1650;
										failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/pure/collections/tables.nim(1650, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										F.line = 1263;
										h_366503 = nxt_366505;
									}
							} while(false);
							}
							
						} while(false);
					}
					
					F.line = 215;
					rawEcho(makeNimstrLit("   Enter move (or \'quit\'): "));
					F.line = 216;
					var response_350442 = null;
					F.line = 219;
					response_350442 = nimCopy(null, makeNimstrLit("When compiling for Javascript, you cannot use this procedure."), NTI44040);
					if (contains_350602(move_list_349173[0], response_350442)) {
					F.line = 223;
					result_349156 = nimCopy(null, response_350442, NTI44040);
					break BeforeRet;
					}
					
					if (eqStrings(response_350442, makeNimstrLit("quit"))) {
					F.line = 225;
					result_349156 = nimCopy(null, [], NTI44040);
					break BeforeRet;
					}
					
					F.line = 226;
					rawEcho(makeNimstrLit("   BAD ENTRY. Try again."));
				}
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_349156;

}

function get_move_350691(self_349154, game_349155) {
	var result_350693 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 510;
		chckNilDisp(self_349154);
		if (isObj(self_349154.m_type, NTI353138)) {
		F.line = 191;
		result_350693 = get_move_353144(self_349154, game_349155);
		break BeforeRet;
		}
		else {
		if (isObj(self_349154.m_type, NTI349054)) {
		F.line = 191;
		result_350693 = get_move_349152(self_349154, game_349155);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_350693;

}

function current_player_350823(self_350825) {
	var result_350826 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 248;
		result_350826 = self_350825.players[chckIndx(subInt(self_350825.current_player_number, 1), 0, (self_350825.players != null ? self_350825.players.length : 0)+0-1)-0];
	framePtr = F.prev;

	return result_350826;

}

function current_player_350855(self_350825) {
	var result_350857 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 247;
		result_350857 = current_player_350823(self_350825);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_350857;

}

function winning_player_350858(self_350860) {
	var result_350861 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((0 < self_350860.winner_player_number)) {
		F.line = 257;
		result_350861 = self_350860.players[chckIndx(subInt(self_350860.winner_player_number, 1), 0, (self_350860.players != null ? self_350860.players.length : 0)+0-1)-0];
		break BeforeRet;
		}
		else {
		if ((self_350860.winner_player_number == 0)) {
		F.line = 259;
		result_350861 = {name: makeNimstrLit("NO WINNER YET"), m_type: NTI349054};
		break BeforeRet;
		}
		else {
			F.line = 261;
			result_350861 = {name: makeNimstrLit("STALEMATE OR TIE"), m_type: NTI349054};
			break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_350861;

}

function winning_player_350877(self_350860) {
	var result_350879 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 252;
		result_350879 = winning_player_350858(self_350860);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_350879;

}

function determine_winner_351063(self_351065) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym351068_351203 = null;
		F.line = 3481;
		eHEX60gensym351068_351203 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 313;
		eHEX60gensym351068_351203.message = nimCopy(null, makeNimstrLit("determine_winner() must be overridden"), NTI44040);
		F.line = 3474;
		eHEX60gensym351068_351203.parent = null;
		F.line = 313;
		raiseException(eHEX60gensym351068_351203, "FieldError");
	framePtr = F.prev;

	
}

function determine_winner_351223(self_351065) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 303;
		determine_winner_351063(self_351065);
	framePtr = F.prev;

	
}

function default_setup_352025(self_352027, players_352029) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 361;
		self_352027.players = nimCopy(null, players_352029, NTI352028);
		F.line = 362;
		self_352027.player_count = (self_352027.players != null ? self_352027.players.length : 0);
		F.line = 363;
		self_352027.current_player_number = 1;
		F.line = 364;
		self_352027.winner_player_number = 0;
	framePtr = F.prev;

	
}

function default_setup_352063(self_352027, players_352029) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 348;
		default_setup_352025(self_352027, players_352029);
	framePtr = F.prev;

	
}

function new_seq_354199(len_354202) {
	var result_354204 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_354204 = new Array(len_354202); for (var i=0;i<len_354202;++i) {result_354204[i]=null;}	framePtr = F.prev;

	return result_354204;

}

function new_seq_354164(len_354167) {
	var result_354169 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 997;
		result_354169 = new Array(len_354167); for (var i=0;i<len_354167;++i) {result_354169[i]=0;}	framePtr = F.prev;

	return result_354169;

}

function reset_field_354156(self_354158) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 42;
		F.line = 896;
		var resultHEX60gensym354159_354225 = new_seq_354199(chckRange(self_354158.size, 0, 2147483647));
		L1: do {
			F.line = 897;
			var iHEX60gensym354160_354233 = 0;
			F.line = 2737;
			var colontmp__366528 = 0;
			F.line = 42;
			colontmp__366528 = self_354158.size;
			F.line = 2739;
			var i_366529 = 0;
			L2: do {
				F.line = 2740;
					L3: while (true) {
					if (!(i_366529 < colontmp__366528)) break L3;
						F.line = 897;
						iHEX60gensym354160_354233 = i_366529;
						F.line = 42;
						resultHEX60gensym354159_354225[chckIndx(iHEX60gensym354160_354233, 0, (resultHEX60gensym354159_354225 != null ? resultHEX60gensym354159_354225.length : 0)+0-1)-0] = nimCopy(null, new_seq_354164(chckRange(self_354158.size, 0, 2147483647)), NTI354168);
						F.line = 2742;
						i_366529 = addInt(i_366529, 1);
					}
			} while(false);
		} while(false);
		self_354158.field = nimCopy(null, resultHEX60gensym354159_354225, NTI354203);
	framePtr = F.prev;

	
}

function reset_field_354280(self_354158) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 41;
		reset_field_354156(self_354158);
	framePtr = F.prev;

	
}

function new_354286() {
	var result_354290 = null;

	var F={procname:"new.new",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1749;
		var r_354401 = null;
		F.line = 1752;
		r_354401 = {sum: new Int32Array(3), history: null};
		F.line = 1753;
		result_354290 = r_354401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_354290;

}

function reset_leaderboard_354282(self_354284) {
	var F={procname:"game_logic.resetLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 46;
		self_354284.leaderboard = new_354286();
	framePtr = F.prev;

	
}

function reset_leaderboard_354449(self_354284) {
	var F={procname:"game_logic.resetLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 45;
		reset_leaderboard_354282(self_354284);
	framePtr = F.prev;

	
}

function setup_354451(self_354453, players_354455) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 49;
		default_setup_352063(self_354453, players_354455);
		F.line = 50;
		reset_field_354280(self_354453);
		if ((self_354453.leaderboard == null)) {
		F.line = 52;
		reset_leaderboard_354449(self_354453);
		}
		
	framePtr = F.prev;

	
}

function setup_351825(self_351827, players_351829) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 3478;
		var eHEX60gensym351832_352003 = null;
		F.line = 3481;
		eHEX60gensym351832_352003 = {m_type: NTI47460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 345;
		eHEX60gensym351832_352003.message = nimCopy(null, makeNimstrLit("setup() must be overridden"), NTI44040);
		F.line = 3474;
		eHEX60gensym351832_352003.parent = null;
		F.line = 345;
		raiseException(eHEX60gensym351832_352003, "FieldError");
	framePtr = F.prev;

	
}

function setup_352023(self_351827, players_351829) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 510;
		chckNilDisp(self_351827);
		if (isObj(self_351827.m_type, NTI354020)) {
		F.line = 341;
		setup_354451(self_351827, players_351829);
		}
		else {
		if (isObj(self_351827.m_type, NTI349047)) {
		F.line = 341;
		setup_351825(self_351827, players_351829);
		}
		}
	framePtr = F.prev;

	
}

function play_352065(self_352067) {
	var result_352069 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 370;
		result_352069 = nimCopy(null, [], NTI352084);
		F.line = 371;
		var move_352085 = [];
		L1: do {
			F.line = 372;
				L2: while (true) {
				if (!!(is_over_351043(self_352067))) break L2;
					F.line = 373;
					display_349150(current_player_350855(self_352067), makeNimstrLit("-----------------"));
					F.line = 374;
					display_349150(current_player_350855(self_352067), nsuFormatVarargs(makeNimstrLit("$1\'s Turn"), [nimCopy(null, current_player_350855(self_352067).name, NTI44040)]));
					F.line = 375;
					move_352085 = nimCopy(null, get_move_350691(current_player_350855(self_352067), self_352067), NTI44040);
					if (eqStrings(move_352085, [])) {
					F.line = 377;
					break L1;
					}
					
					F.line = 378;
					var Tmp3 = nimCopy(null, move_352085, NTI44040);
					if (result_352069 != null) { result_352069.push(Tmp3); } else { result_352069 = [Tmp3]; };
					F.line = 379;
					display_349150(current_player_350855(self_352067), []);
					F.line = 380;
					display_349150(current_player_350855(self_352067), (makeNimstrLit("   ") || []).concat(make_move_351023(self_352067, move_352085) || []));
					F.line = 381;
					determine_winner_351223(self_352067);
					if (is_over_351043(self_352067)) {
					F.line = 383;
					display_349150(current_player_350855(self_352067), []);
					if ((self_352067.winner_player_number == -1)) {
					F.line = 385;
					display_349150(current_player_350855(self_352067), makeNimstrLit("STALEMATE."));
					}
					else {
						F.line = 387;
					display_349150(current_player_350855(self_352067), nsuFormatVarargs(makeNimstrLit("WINNER IS $#"), [nimCopy(null, winning_player_350877(self_352067).name, NTI44040)]));
					}
					
					F.line = 388;
					break L1;
					}
					
					F.line = 389;
					self_352067.current_player_number = next_player_number_350902(self_352067);
				}
		} while(false);
	framePtr = F.prev;

	return result_352069;

}

function play_352113(self_352067) {
	var result_352115 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 367;
		result_352115 = play_352065(self_352067);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_352115;

}

function get_leaderboard_354103(self_354105) {
	var result_354106 = null;

	var F={procname:"game_logic.getLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 31;
		result_354106 = self_354105.leaderboard;
	framePtr = F.prev;

	return result_354106;

}

function get_leaderboard_354135(self_354105) {
	var result_354137 = null;

	var F={procname:"game_logic.getLeaderboard",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 31;
		result_354137 = get_leaderboard_354103(self_354105);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_354137;

}

function set_default_354138(self_354140) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 35;
		self_354140.name1 = nimCopy(null, makeNimstrLit("X"), NTI44040);
		F.line = 36;
		self_354140.name2 = nimCopy(null, makeNimstrLit("O"), NTI44040);
		F.line = 37;
		self_354140.size = 3;
		F.line = 38;
		self_354140.winCount = 3;
	framePtr = F.prev;

	
}

function set_default_354154(self_354140) {
	var F={procname:"game_logic.setDefault",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 33;
		set_default_354138(self_354140);
	framePtr = F.prev;

	
}

function setup_355903(self_355905, s_355906) {
		var Tmp1;

	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 185;
		self_355905.size = s_355906.size;
		F.line = 186;
		if ((s_355906.winCount == 0)) {
		Tmp1 = s_355906.size;
		}
		else {
		Tmp1 = s_355906.winCount;
		}
		
		self_355905.winCount = Tmp1;
		if (s_355906.ai) {
		F.line = 188;
		setup_352023(self_355905, [{name: nimCopy(null, s_355906.name1, NTI44040), m_type: NTI349054}, {name: nimCopy(null, s_355906.name2, NTI44040), depth: 3, m_type: NTI353138}]);
		}
		else {
			F.line = 190;
		setup_352023(self_355905, [{name: nimCopy(null, s_355906.name1, NTI44040), m_type: NTI349054}, {name: nimCopy(null, s_355906.name2, NTI44040), m_type: NTI349054}]);
		}
		
	framePtr = F.prev;

	
}

function setup_355942(self_355905, s_355906) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 184;
		setup_355903(self_355905, s_355906);
	framePtr = F.prev;

	
}

function play_on_cli_355944(self_355946) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		play_352113(self_355946);
	framePtr = F.prev;

	
}

function play_on_cli_355960(self_355946) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 192;
		play_on_cli_355944(self_355946);
	framePtr = F.prev;

	
}

function field_355962(self_355964) {
	var result_355967 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 196;
		result_355967 = nimCopy(null, self_355964.field, NTI354021);
	framePtr = F.prev;

	return result_355967;

}

function field_355981(self_355964) {
	var result_355983 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 195;
		result_355983 = field_355962(self_355964);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_355983;

}

function size_355984(self_355986) {
	var result_355987 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 199;
		result_355987 = self_355986.size;
	framePtr = F.prev;

	return result_355987;

}

function size_356001(self_355986) {
	var result_356003 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 198;
		result_356003 = size_355984(self_355986);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_356003;

}

function win_count_356004(self_356006) {
	var result_356007 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 202;
		result_356007 = self_356006.winCount;
	framePtr = F.prev;

	return result_356007;

}

function win_count_356021(self_356006) {
	var result_356023 = 0;

	var F={procname:"game_logic.winCount",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 201;
		result_356023 = win_count_356004(self_356006);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_356023;

}

function get_player_name_356024(self_356026) {
		var Tmp1;

	var result_356027 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 206;
		if ((current_player_350855(self_356026) == null)) {
		Tmp1 = makeNimstrLit("Game is not setup yet");
		}
		else {
		Tmp1 = current_player_350855(self_356026).name;
		}
		
		result_356027 = nimCopy(null, Tmp1, NTI44040);
	framePtr = F.prev;

	return result_356027;

}

function get_player_name_356049(self_356026) {
	var result_356051 = null;

	var F={procname:"game_logic.getPlayerName",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 205;
		result_356051 = get_player_name_356024(self_356026);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_356051;

}

function all_355632(s_355636, pred_355639) {
	var result_355640 = false;

	var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 539;
			var i_355671 = null;
			F.line = 3;
			var i_366546 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_366546 < (s_355636 != null ? s_355636.length : 0))) break L3;
						F.line = 539;
						i_355671 = s_355636[chckIndx(i_366546, 0, (s_355636 != null ? s_355636.length : 0)+0-1)-0];
						if (!(pred_355639(i_355671))) {
						F.line = 541;
						result_355640 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_366546 = addInt(i_366546, 1);
					}
			} while(false);
		} while(false);
		F.line = 542;
		result_355640 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_355640;

}

function all_355459(s_355463, pred_355466) {
	var result_355467 = false;

	var F={procname:"all.all",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 539;
			var i_355473 = 0;
			F.line = 3;
			var i_366550 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_366550 < (s_355463 != null ? s_355463.length : 0))) break L3;
						F.line = 539;
						i_355473 = s_355463[chckIndx(i_366550, 0, (s_355463 != null ? s_355463.length : 0)+0-1)-0];
						if (!(pred_355466(i_355473))) {
						F.line = 541;
						result_355467 = false;
						break BeforeRet;
						}
						
						F.line = 6;
						i_366550 = addInt(i_366550, 1);
					}
			} while(false);
		} while(false);
		F.line = 542;
		result_355467 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_355467;

}

function field_full_355434(field_355436) {
	var result_355437 = false;

	var F={procname:"game_logic.fieldFull",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 125;
		result_355437 = !((field_355436 == 0));
	framePtr = F.prev;

	return result_355437;

}

function line_full_355451(line_355454) {
	var result_355455 = false;

	var F={procname:"game_logic.lineFull",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 128;
		result_355455 = all_355459(line_355454, field_full_355434);
	framePtr = F.prev;

	return result_355455;

}

function determine_winner_355500(self_355502) {
	var F={procname:"game_logic.determine_winner",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((self_355502.winner_player_number == 0))) {
		F.line = 132;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 133;
			var line_355614 = null;
			F.line = 182;
			var colontmp__366540 = null;
			F.line = 133;
			colontmp__366540 = get_lines_355182(self_355502);
			F.line = 184;
			var i_366541 = 0;
			F.line = 185;
			var l_366542 = (colontmp__366540 != null ? colontmp__366540.length : 0);
			L2: do {
				F.line = 186;
					L3: while (true) {
					if (!(i_366541 < l_366542)) break L3;
						F.line = 133;
						line_355614 = colontmp__366540[chckIndx(i_366541, 0, (colontmp__366540 != null ? colontmp__366540.length : 0)+0-1)-0];
						F.line = 135;
						var max_length_355615 = max_line_length_355185(line_355614);
						if ((self_355502.winCount <= max_length_355615["Field0"])) {
						F.line = 137;
						self_355502.winner_player_number = max_length_355615["Field1"];
						F.line = 138;
						self_355502.leaderboard.sum[chckIndx(self_355502.winner_player_number, 0, (self_355502.leaderboard.sum != null ? self_355502.leaderboard.sum.length : 0)+0-1)-0] = addInt(self_355502.leaderboard.sum[chckIndx(self_355502.winner_player_number, 0, (self_355502.leaderboard.sum != null ? self_355502.leaderboard.sum.length : 0)+0-1)-0], 1);
						F.line = 139;
						var Tmp4 = nimCopy(null, chckRange(self_355502.winner_player_number, 0, 2), NTI354041);
						if (self_355502.leaderboard.history != null) { self_355502.leaderboard.history.push(Tmp4); } else { self_355502.leaderboard.history = [Tmp4]; };
						F.line = 140;
						break BeforeRet;
						}
						
						F.line = 188;
						i_366541 = addInt(i_366541, 1);
						if (!(((colontmp__366540 != null ? colontmp__366540.length : 0) == l_366542))) {
						F.line = 189;
						failed_assert_impl_59066(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-1.0.6/lib/system/iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (all_355632(self_355502.field, line_full_355451)) {
		F.line = 143;
		self_355502.winner_player_number = -1;
		F.line = 144;
		self_355502.leaderboard.sum[chckIndx(0, 0, (self_355502.leaderboard.sum != null ? self_355502.leaderboard.sum.length : 0)+0-1)-0] = addInt(self_355502.leaderboard.sum[chckIndx(0, 0, (self_355502.leaderboard.sum != null ? self_355502.leaderboard.sum.length : 0)+0-1)-0], 1);
		F.line = 145;
		if (self_355502.leaderboard.history != null) { self_355502.leaderboard.history.push(0); } else { self_355502.leaderboard.history = [0]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function make_turn_356052(self_356054, move_356055) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_351043(self_356054)) {
		F.line = 214;
		break BeforeRet;
		}
		
		F.line = 215;
		make_move_351023(self_356054, move_356055);
		F.line = 216;
		determine_winner_355500(self_356054);
		if (is_over_351043(self_356054)) {
		F.line = 218;
		break BeforeRet;
		}
		
		F.line = 219;
		finish_turn_350921(self_356054);
		if (isObj(current_player_350855(self_356054).m_type, NTI353138)) {
		F.line = 222;
		make_move_351023(self_356054, get_move_350691(current_player_350855(self_356054), self_356054));
		F.line = 223;
		finish_turn_350921(self_356054);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function make_turn_356077(self_356054, move_356055) {
	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 212;
		make_turn_356052(self_356054, move_356055);
	framePtr = F.prev;

	
}

function finished_356079(self_356081) {
	var result_356082 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 227;
		result_356082 = is_over_351043(self_356081);
	framePtr = F.prev;

	return result_356082;

}

function finished_356096(self_356081) {
	var result_356098 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 226;
		result_356098 = finished_356079(self_356081);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_356098;

}
