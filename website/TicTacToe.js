/* Generated by the Nim Compiler v0.19.4 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI163020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168148 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168101 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162971 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168362 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168360 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168358 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168356 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168352 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168354 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168465 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168435 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168420 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168405 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168390 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI161160 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI164068 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI164138 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI164164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3886 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI168058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI172772 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI183211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI183207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI183209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI171884 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI171878 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI145441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145437 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145433 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145425 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145417 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145413 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI145204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI145276 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI145274 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI145220 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI145519 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI145517 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI145515 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI145224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI145222 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI149083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI149084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI171952 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171948 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171363 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI171904 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI171892 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171913 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171911 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI171241 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI171905 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI171896 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI171939 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171935 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171930 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171925 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171921 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI171919 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI171898 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI183213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI193231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI193085 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI193080 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI15346 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3918 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3912 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI161025 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI161020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI161018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI168020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168019 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI168018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
NTI168020.base = NTI104;
NTI168019.base = NTI168020;
var NNI168018 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "field", len: 0, typ: NTI168019, name: "field", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI104, name: "size", sons: null}, 
{kind: 1, offset: "winCount", len: 0, typ: NTI104, name: "winCount", sons: null}]};
NTI168018.node = NNI168018;
var NNI161025 = {kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null};
NTI161025.node = NNI161025;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI161025.base = NTI3808;
NTI161017.base = NTI161025;
NTI161020.base = NTI161017;
var NNI161018 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "player_count", len: 0, typ: NTI104, name: "player_count", sons: null}, 
{kind: 1, offset: "players", len: 0, typ: NTI161020, name: "players", sons: null}, 
{kind: 1, offset: "current_player_number", len: 0, typ: NTI104, name: "current_player_number", sons: null}, 
{kind: 1, offset: "winner_player_number", len: 0, typ: NTI104, name: "winner_player_number", sons: null}]};
NTI161018.node = NNI161018;
NTI161018.base = NTI3808;
NTI168018.base = NTI161018;
NTI3912.base = NTI3826;
NTI3918.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3912, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI114, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3918, name: "up", sons: null}]};
NTI3826.node = NNI3826;
NTI3826.base = NTI3808;
var NNI15346 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15346.node = NNI15346;
var NNI171241 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI171241, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI171241, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI171241, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI171241, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI171241, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI171241, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI171241, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI171241, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI171241, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI171241, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI171241, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI171241, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI171241, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI171241, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI171241, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI171241, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI171241, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI171241, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI171241, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI171241, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI171241, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI171241, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI171241, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI171241, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI171241, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI171241, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI171241, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI171241, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI171241, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI171241, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI171241, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI171241, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI171241, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI171241, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI171241, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI171241, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI171241, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI171241, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI171241, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI171241, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI171241, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI171241, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI171241, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI171241, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI171241, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI171241, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI171241, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI171241, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI171241, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI171241, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI171241, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI171241, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI171241, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI171241, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI171241, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI171241, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI171241, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI171241, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI171241, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI171241, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI171241, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI171241, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI171241, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI171241, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI171241, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI171241, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI171241, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI171241, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI171241, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI171241, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI171241, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI171241, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI171241, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI171241, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI171241, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI171241, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI171241, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI171241, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI171241, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI171241, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI171241, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI171241, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI171241, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI171241, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI171241, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI171241, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI171241, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI171241, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI171241, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI171241, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI171241, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI171241, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI171241, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI171241, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI171241, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI171241, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI171241, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI171241, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI171241, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI171241, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI171241, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI171241, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI171241, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI171241, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI171241, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI171241, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI171241, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI171241, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI171241, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI171241, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI171241, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI171241, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI171241, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI171241, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI171241, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI171241, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI171241, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI171241, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI171241, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI171241, name: "menu", len: 0, sons: null}}};
NTI171241.node = NNI171241;
NTI171911.base = NTI171896;
NTI171913.base = NTI140;
var NNI171363 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI171363, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI171363, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI171363, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI171363, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI171363, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI171363, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI171363, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI171363, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI171363, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI171363, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI171363, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI171363, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI171363, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI171363, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI171363, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI171363, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI171363, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI171363, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI171363, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI171363, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI171363, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI171363, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI171363, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI171363, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI171363, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI171363, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI171363, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI171363, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI171363, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI171363, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI171363, name: "onkeyuplater", len: 0, sons: null}}};
NTI171363.node = NNI171363;
var NNI171904 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI171363, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI171948, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI171952, name: "Field2", sons: null}]};
NTI171904.node = NNI171904;
NTI171892.base = NTI171904;
var NNI149083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI149083.node = NNI149083;
NTI149084.base = NTI149083;
NTI145515.base = NTI145222;
NTI145517.base = NTI145222;
NTI145519.base = NTI145222;
var NNI145220 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI145220, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI145220, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI145220, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI145220, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI145220, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI145220, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI145220, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI145220, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI145220, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI145220, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI145220, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI145220, name: "NotationNode", len: 0, sons: null}}};
NTI145220.node = NNI145220;
var NNI145276 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI145276.node = NNI145276;
NTI145276.base = NTI3808;
NTI145274.base = NTI145276;
var NNI145224 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI145515, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI145517, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI145519, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI145222, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI145222, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI145222, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI145220, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI145222, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI145222, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI145274, name: "style", sons: null}]};
NTI145224.node = NNI145224;
var NNI145204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI145365, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI145369, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI145373, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI145377, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI145381, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI145385, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI145389, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI145393, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI145397, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI145401, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI145405, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI145409, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI145413, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI145417, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI145421, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI145425, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI145429, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI145433, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI145437, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI145441, name: "onunload", sons: null}]};
NTI145204.node = NNI145204;
NTI145204.base = NTI3808;
NTI145224.base = NTI145204;
NTI145222.base = NTI145224;
var NNI171905 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI171241, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI171911, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI171913, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI171892, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI149084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI145222, name: "dom", sons: null}]};
NTI171905.node = NNI171905;
NTI171905.base = NTI3808;
NTI171896.base = NTI171905;
var NNI171919 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI140, name: "key", sons: null}, 
{kind: 1, offset: "renderImpl", len: 0, typ: NTI171921, name: "renderImpl", sons: null}, 
{kind: 1, offset: "changedImpl", len: 0, typ: NTI171925, name: "changedImpl", sons: null}, 
{kind: 1, offset: "updatedImpl", len: 0, typ: NTI171930, name: "updatedImpl", sons: null}, 
{kind: 1, offset: "onAttachImpl", len: 0, typ: NTI171935, name: "onAttachImpl", sons: null}, 
{kind: 1, offset: "onDetachImpl", len: 0, typ: NTI171939, name: "onDetachImpl", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI104, name: "version", sons: null}, 
{kind: 1, offset: "renderedVersion", len: 0, typ: NTI104, name: "renderedVersion", sons: null}, 
{kind: 1, offset: "expanded", len: 0, typ: NTI171896, name: "expanded", sons: null}, 
{kind: 1, offset: "debugId", len: 0, typ: NTI104, name: "debugId", sons: null}]};
NTI171919.node = NNI171919;
NTI171919.base = NTI171905;
NTI171898.base = NTI171919;
var NNI183213 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldNode", len: 0, typ: NTI171898, name: "oldNode", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI171898, name: "newNode", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI145222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI145222, name: "current", sons: null}]};
NTI183213.node = NNI183213;
NTI193231.base = NTI183213;
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3828.base = NTI3826;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;
NTI171878.base = NTI140;
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
NTI3858.base = NTI3828;
NTI171884.base = NTI140;
var NNI183207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI183207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI183207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI183207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI183207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI183207, name: "pkDetach", len: 0, sons: null}}};
NTI183207.node = NNI183207;
var NNI183209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI183207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI145222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI145222, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI171896, name: "n", sons: null}]};
NTI183209.node = NNI183209;
var NNI183211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI171896, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI171896, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI183211.node = NNI183211;
NTI172772.base = NTI140;
NTI168058.base = NTI138;
var NNI3860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3860.node = NNI3860;
NTI3860.base = NTI3828;
var NNI3886 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3886.node = NNI3886;
NTI3886.base = NTI3828;
NTI162561.base = NTI138;
var NNI3852 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3852.node = NNI3852;
NTI3852.base = NTI3828;
var NNI3862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3862.node = NNI3862;
NTI3862.base = NTI3828;
var NNI164164 = {kind: 1, offset: "depth", len: 0, typ: NTI104, name: "depth", sons: null};
NTI164164.node = NNI164164;
NTI164164.base = NTI161025;
NTI164138.base = NTI138;
NTI164068.base = NTI138;
NTI161160.base = NTI138;
NTI168390.base = NTI104;
NTI168405.base = NTI104;
NTI168420.base = NTI104;
NTI168435.base = NTI104;
NTI168450.base = NTI104;
NTI168465.base = NTI104;
NTI168354.base = NTI104;
NTI168352.base = NTI104;
NTI168356.base = NTI104;
NTI168358.base = NTI104;
NTI168360.base = NTI104;
NTI168362.base = NTI104;
NTI162971.base = NTI161017;
NTI168101.base = NTI104;
NTI168148.base = NTI168101;
NTI163020.base = NTI138;

function cstrToNimstr(c_16242) {
		  var ln = c_16242.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16242.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16242.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17230, src_17231, ti_17232) {
	var result_17655 = null;

		switch (ti_17232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17201(ti_17232))) {
			result_17655 = src_17231;
			}
			else {
				result_17655 = [src_17231[0], src_17231[1]];
			}
			
			break;
		case 19:
			      if (dest_17230 === null || dest_17230 === undefined) {
        dest_17230 = {};
      }
      else {
        for (var key in dest_17230) { delete dest_17230[key]; }
      }
      for (var key in src_17231) { dest_17230[key] = src_17231[key]; }
      result_17655 = dest_17230;
    
			break;
		case 18:
		case 17:
			if (!((ti_17232.base == null))) {
			result_17655 = nimCopy(dest_17230, src_17231, ti_17232.base);
			}
			else {
			if ((ti_17232.kind == 17)) {
			result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {m_type: ti_17232} : dest_17230;
			}
			else {
				result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {} : dest_17230;
			}
			}
			nimCopyAux(result_17655, src_17231, ti_17232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17231 === null) {
        result_17655 = null;
      }
      else {
        if (dest_17230 === null || dest_17230 === undefined) {
          dest_17230 = new Array(src_17231.length);
        }
        else {
          dest_17230.length = src_17231.length;
        }
        result_17655 = dest_17230;
        for (var i = 0; i < src_17231.length; ++i) {
          result_17655[i] = nimCopy(result_17655[i], src_17231[i], ti_17232.base);
        }
      }
    
			break;
		case 28:
			      if (src_17231 !== null) {
        result_17655 = src_17231.slice(0);
      }
    
			break;
		default: 
			result_17655 = src_17231;
			break;
		}

	return result_17655;

}

function makeNimstrLit(c_16225) {
		  var ln = c_16225.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_16225.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_17716, value_17717, typ_17718) {
		    var result = new Array(len_17716);
    for (var i = 0; i < len_17716; ++i) result[i] = nimCopy(null, value_17717, typ_17718);
    return result;
  

	
}

function toJSStr(s_16259) {
		  if (s_16259 === null) return "";
  var len = s_16259.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16259[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16259[i] < 128)
      asciiPart[i] = fcc(s_16259[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_15818, ename_15819) {
		e_15818.name = ename_15819;
		if ((excHandler == 0)) {
		unhandledException(e_15818);
		}
		
		e_15818.trace = nimCopy(null, raw_write_stack_trace_15655(), NTI138);
		throw e_15818;

	
}

function addInt(a_16603, b_16604) {
		    var result = a_16603 + b_16604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_171875 = nimCopy(null, ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"], NTI171878);

function chckIndx(i_17735, a_17736, b_17737) {
			var Tmp1;

	var result_17738 = 0;

	BeforeRet: do {
			if (!(a_17736 <= i_17735)) Tmp1 = false; else {				Tmp1 = (i_17735 <= b_17737);			}		if (Tmp1) {
		result_17738 = i_17735;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_17738;

}

function subInt(a_16621, b_16622) {
		    var result = a_16621 - b_16622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_171881 = nimCopy(null, ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"], NTI171884);

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_16940, b_16941) {
		var Tmp1;

	var result_16942 = 0;

	BeforeRet: do {
		if ((a_16940 <= b_16941)) {
		Tmp1 = a_16940;
		}
		else {
		Tmp1 = b_16941;
		}
		
		result_16942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16942;

}

function eqStrings(a_16454, b_16455) {
		    if (a_16454 == b_16455) return true;
    if (a_16454 === null && b_16455.length == 0) return true;
    if (b_16455 === null && a_16454.length == 0) return true;
    if ((!a_16454) || (!b_16455)) return false;
    var alen = a_16454.length;
    if (alen != b_16455.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16454[i] != b_16455[i]) return false;
    return true;
  

	
}

function mnewString(len_16276) {
		    return new Array(len_16276);
  

	
}
										var desc_168046 = nimCopy(null, [makeNimstrLit(" "), makeNimstrLit("X"), makeNimstrLit("0")], NTI168058);

function isObj(obj_17838, subclass_17839) {
	var result_17840 = false;

	BeforeRet: do {
		var x_17841 = obj_17838;
		if ((x_17841 == subclass_17839)) {
		result_17840 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_17841 == subclass_17839))) break L2;
					if ((x_17841 == null)) {
					result_17840 = false;
					break BeforeRet;
					}
					
					x_17841 = x_17841.base;
				}
		} while(false);
		result_17840 = true;
		break BeforeRet;
	} while (false);

	return result_17840;

}

function addChar(x_17889, c_17890) {
		x_17889.push(c_17890);

	
}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr(0, 125);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([65, 90]);

function chckRange(i_17754, a_17755, b_17756) {
			var Tmp1;

	var result_17757 = 0;

	BeforeRet: do {
			if (!(a_17755 <= i_17754)) Tmp1 = false; else {				Tmp1 = (i_17754 <= b_17756);			}		if (Tmp1) {
		result_17757 = i_17754;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_17757;

}

function nimMax(a_16958, b_16959) {
		var Tmp1;

	var result_16960 = 0;

	BeforeRet: do {
		if ((b_16959 <= a_16958)) {
		Tmp1 = a_16958;
		}
		else {
		Tmp1 = b_16959;
		}
		
		result_16960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16960;

}
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([48, 57]);

function mulInt(a_16639, b_16640) {
		    var result = a_16639 * b_16640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function nimCharToStr(x_15262) {
	var result_15263 = null;

		result_15263 = nimCopy(null, mnewString(1), NTI138);
		result_15263[0] = x_15262;

	return result_15263;

}
var ConstSet9 = setConstr(13, 10);
var nimvm_7173 = false;
var nim_program_result = 0;
var global_raise_hook_13418 = [null];
var local_raise_hook_13423 = [null];
var out_of_mem_hook_13426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_154246 = [0];
var gid_172672 = [0];
var vcomponents_176240 = [{}];
var kxi_183324 = [null];

function new_196003() {
	var result_196008 = null;

	var F={procname:"new.new",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 208;
		var r_196201 = null;
		F.line = 211;
		r_196201 = {m_type: NTI168018, field: null, size: 0, winCount: 0, player_count: 0, players: null, current_player_number: 0, winner_player_number: 0};
		F.line = 212;
		result_196008 = r_196201;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196008;

}

function new_196229() {
	var result_196234 = null;

	var F={procname:"new.new",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 208;
		var r_196401 = null;
		F.line = 211;
		r_196401 = {name1: null, name2: null, ai: false, size: 0, winCount: 0};
		F.line = 212;
		result_196234 = r_196401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_196234;

}
var game_196223 = new_196003();
var state_196225 = [0];
var message_196226 = ["Welcome"];
var settings_196423 = new_196229();

function is_fat_pointer_17201(ti_17203) {
	var result_17204 = false;

	BeforeRet: do {
		result_17204 = !((ConstSet1[ti_17203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17204;

}

function nimCopyAux(dest_17235, src_17236, n_17238) {
		switch (n_17238.kind) {
		case 0:
			break;
		case 1:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
    
			break;
		case 2:
			L1: do {
				var i_17628 = 0;
				var colontmp__17630 = 0;
				colontmp__17630 = (n_17238.len - 1);
				var res_17633 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_17633 <= colontmp__17630)) break L3;
							i_17628 = res_17633;
							nimCopyAux(dest_17235, src_17236, n_17238.sons[i_17628]);
							res_17633 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
      for (var i = 0; i < n_17238.sons.length; ++i) {
        nimCopyAux(dest_17235, src_17236, n_17238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_13438(x_13441, x_13441_Idx, y_13442) {
		      if (x_13441[x_13441_Idx] === null) { x_13441[x_13441_Idx] = []; }
      var off = x_13441[x_13441_Idx].length;
      x_13441[x_13441_Idx].length += y_13442.length;
      for (var i = 0; i < y_13442.length; ++i) {
        x_13441[x_13441_Idx][off+i] = y_13442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_15341(f_15343) {
					var Tmp3;

	var result_15344 = [null];

		var it_15352 = f_15343;
		var i_15354 = 0;
		var total_15356 = 0;
		var temp_frames_15363 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15346);
		L1: do {
				L2: while (true) {
					if (!!((it_15352 == null))) Tmp3 = false; else {						Tmp3 = (i_15354 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15363[i_15354].Field0 = it_15352.procname;
					temp_frames_15363[i_15354].Field1 = it_15352.line;
					i_15354 += 1;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15352 == null))) break L5;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		result_15344[0] = nimCopy(null, [], NTI138);
		if (!((total_15356 == i_15354))) {
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("(")); } else { result_15344[0] = makeNimstrLit("("); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr(((total_15356 - i_15354))+"")); } else { result_15344[0] = cstrToNimstr(((total_15356 - i_15354))+"").slice(); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15344[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_15628 = 0;
			var colontmp__15635 = 0;
			colontmp__15635 = (i_15354 - 1);
			var res_15638 = colontmp__15635;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_15638)) break L8;
						j_15628 = res_15638;
						add_13438(result_15344, 0, temp_frames_15363[j_15628].Field0);
						if ((0 < temp_frames_15363[j_15628].Field1)) {
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(", line: ")); } else { result_15344[0] = makeNimstrLit(", line: "); };
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr((temp_frames_15363[j_15628].Field1)+"")); } else { result_15344[0] = cstrToNimstr((temp_frames_15363[j_15628].Field1)+"").slice(); };
						}
						
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("\x0A")); } else { result_15344[0] = makeNimstrLit("\x0A"); };
						res_15638 -= 1;
					}
			} while(false);
		} while(false);

	return result_15344[0];

}

function raw_write_stack_trace_15655() {
	var result_15657 = null;

		if (!((framePtr == null))) {
		result_15657 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_15341(framePtr)), NTI138);
		}
		else {
			result_15657 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_15657;

}

function unhandledException(e_15719) {
		var buf_15720 = [[]];
		if (!(((e_15719.message != null ? e_15719.message.length : 0) == 0))) {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(e_15719.message); } else { buf_15720[0] = e_15719.message.slice(); };
		}
		else {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit(" [")); } else { buf_15720[0] = makeNimstrLit(" ["); };
		add_13438(buf_15720, 0, e_15719.name);
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("]\x0A")); } else { buf_15720[0] = makeNimstrLit("]\x0A"); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(raw_write_stack_trace_15655()); } else { buf_15720[0] = raw_write_stack_trace_15655().slice(); };
		var cbuf_15801 = toJSStr(buf_15720[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_15801);
  }
  else {
    throw cbuf_15801;
  }
  

	
}

function new_seq_193127(len_193131) {
	var result_193133 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 763;
		result_193133 = new Array(len_193131); for (var i=0;i<len_193131;++i) {result_193133[i]={k: 0, parent: null, current: null, n: null};}	framePtr = F.prev;

	return result_193133;

}

function new_seq_193179(len_193183) {
	var result_193185 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 763;
		result_193185 = new Array(len_193183); for (var i=0;i<len_193183;++i) {result_193185[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_193185;

}

function raiseOverflow() {
		var e_16065 = null;
		e_16065 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16065.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_16065.parent = null;
		raiseException(e_16065, "OverflowError");

	
}

function sys_fatal_20437(message_20443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2915;
		var e_20445 = null;
		F.line = 2916;
		e_20445 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2917;
		e_20445.message = nimCopy(null, message_20443, NTI138);
		F.line = 2918;
		raiseException(e_20445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20432(msg_20434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3872;
		sys_fatal_20437(msg_20434);
	framePtr = F.prev;

	
}

function failed_assert_impl_20481(msg_20483) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 3879;
		raise_assert_20432(msg_20483);
	framePtr = F.prev;

	
}

function raiseIndexError() {
		var e_16155 = null;
		e_16155 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16155.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_16155.parent = null;
		raiseException(e_16155, "IndexError");

	
}

function valueHEX3D_172030(n_172032, v_172033) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_172032.text = v_172033;
	framePtr = F.prev;

	
}

function value_172013(n_172015) {
	var result_172016 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_172016 = n_172015.text;
	framePtr = F.prev;

	return result_172016;

}

function wrap_event_183377(d_183379, n_183380, k_183381, action_183382) {

			function later_wrapper_183830() {

					function HEX3Aanonymous_183836(ev_183838) {

							function wrapper_183839() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_183844 = ev_183838.target.value;
									F.line = 73;
									valueHEX3D_172030(n_183834, v_183844);
									if (!(!((action_183833 == null)))) {
									F.line = 74;
									failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `\x0Anot (action == nil)` "));
									}
									
									F.line = 75;
									action_183833(ev_183838, n_183834);
									if (!((value_172013(n_183834) == v_183844))) {
									F.line = 77;
									ev_183838.target.value = value_172013(n_183834);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
							if (!((timer_183835 == null))) {
							F.line = 103;
							clearTimeout(timer_183835);
							}
							
							F.line = 104;
							timer_183835 = setTimeout(wrapper_183839, 400);
						framePtr = F.prev;

						
					}

				var result_183832 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_183833 = action_183382;
					F.line = 99;
					var n_183834 = n_183380;
					F.line = 100;
					var timer_183835 = null;
					F.line = 101;
					result_183832 = HEX3Aanonymous_183836;
				framePtr = F.prev;

				return result_183832;

			}

			function enter_wrapper_183629() {

					function HEX3Aanonymous_183634(ev_183636) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
							if ((ev_183636.keyCode == 13)) {
							F.line = 72;
							var v_183640 = ev_183636.target.value;
							F.line = 73;
							valueHEX3D_172030(n_183633, v_183640);
							if (!(!((action_183632 == null)))) {
							F.line = 74;
							failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `\x0Anot (action == nil)` "));
							}
							
							F.line = 75;
							action_183632(ev_183636, n_183633);
							if (!((value_172013(n_183633) == v_183640))) {
							F.line = 77;
							ev_183636.target.value = value_172013(n_183633);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_183631 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_183632 = action_183382;
					F.line = 93;
					var n_183633 = n_183380;
					F.line = 94;
					result_183631 = HEX3Aanonymous_183634;
				framePtr = F.prev;

				return result_183631;

			}

			function std_wrapper_183384() {

					function HEX3Aanonymous_183389(ev_183391) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
						framePtr = F;
								if ((n_183388.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_183388.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_183388.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var v_183422 = ev_183391.target.value;
							F.line = 73;
							valueHEX3D_172030(n_183388, v_183422);
							if (!(!((action_183387 == null)))) {
							F.line = 74;
							failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `\x0Anot (action == nil)` "));
							}
							
							F.line = 75;
							action_183387(ev_183391, n_183388);
							if (!((value_172013(n_183388) == v_183422))) {
							F.line = 77;
							ev_183391.target.value = value_172013(n_183388);
							}
							
							}
							else {
								F.line = 89;
							action_183387(ev_183391, n_183388);
							}
							
						framePtr = F.prev;

						
					}

				var result_183386 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_183387 = action_183382;
					F.line = 85;
					var n_183388 = n_183380;
					F.line = 86;
					result_183386 = HEX3Aanonymous_183389;
				framePtr = F.prev;

				return result_183386;

			}

	var result_183383 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_183381) {
		case 30:
			F.line = 108;
			result_183383 = later_wrapper_183830();
			F.line = 109;
			d_183379.addEventListener("keyup", result_183383, false);
			break;
		case 29:
			F.line = 111;
			result_183383 = enter_wrapper_183629();
			F.line = 112;
			d_183379.addEventListener("keyup", result_183383, false);
			break;
		default: 
			F.line = 114;
			result_183383 = std_wrapper_183384();
			F.line = 115;
			d_183379.addEventListener(to_event_name_171881[chckIndx(k_183381, 0, to_event_name_171881.length+0-1)-0], result_183383, false);
			break;
		}
	framePtr = F.prev;

	return result_183383;

}

function apply_events_184078(n_184080) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_184081 = n_184080.dom;
		L1: do {
			F.line = 128;
			var i_184098 = 0;
			F.line = 3616;
			var colontmp__184100 = 0;
			F.line = 128;
			colontmp__184100 = (n_184080.events != null ? n_184080.events.length : 0);
			F.line = 3617;
			var i_184103 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_184103 < colontmp__184100)) break L3;
						F.line = 3619;
						i_184098 = i_184103;
						F.line = 129;
						n_184080.events[chckIndx(i_184098, 0, n_184080.events.length+0-1)-0]["Field2"] = wrap_event_183377(dest_184081, n_184080, n_184080.events[chckIndx(i_184098, 0, n_184080.events.length+0-1)-0]["Field0"], n_184080.events[chckIndx(i_184098, 0, n_184080.events.length+0-1)-0]["Field1"]);
						F.line = 3620;
						i_184103 = addInt(i_184103, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_152027(n_152029, s_152030) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_152029.style = {};
		L1: do {
			F.line = 300;
			var i_152073 = 0;
			F.line = 2088;
			var colontmp__152107 = 0;
			F.line = 300;
			colontmp__152107 = subInt(s_152030.length, 1);
			F.line = 2094;
			var res_152110 = 0;
			L2: do {
				F.line = 2095;
					L3: while (true) {
					if (!(res_152110 <= colontmp__152107)) break L3;
						F.line = 2096;
						i_152073 = res_152110;
						F.line = 301;
						n_152029.style[s_152030[i_152073]] = s_152030[addInt(i_152073, 1)];
						F.line = 2097;
						res_152110 = addInt(res_152110, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function vnode_to_dom_184177(n_184179, kxi_184180) {
			var Tmp9;
			var Tmp10;

	var result_184181 = null;

	var F={procname:"karax.vnodeToDom",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_184179.kind == 0)) {
		F.line = 139;
		result_184181 = document.createTextNode(n_184179.text);
		F.line = 123;
		n_184179.dom = result_184181;
		if (!((n_184179.id == null))) {
		F.line = 124;
		kxi_183324[0].byId[n_184179.id] = n_184179;
		}
		
		}
		else {
		if ((n_184179.kind == 6)) {
		F.line = 142;
		result_184181 = document.createElement("div");
		F.line = 143;
		result_184181.innerHTML = n_184179.text;
		F.line = 123;
		n_184179.dom = result_184181;
		if (!((n_184179.id == null))) {
		F.line = 124;
		kxi_183324[0].byId[n_184179.id] = n_184179;
		}
		
		F.line = 145;
		break BeforeRet;
		}
		else {
		if ((n_184179.kind == 3)) {
		F.line = 147;
		var x_184264 = vcomponents_176240[0][n_184179.text](n_184179.kids);
		F.line = 148;
		result_184181 = vnode_to_dom_184177(x_184264, kxi_184180);
		F.line = 123;
		n_184179.dom = result_184181;
		if (!((n_184179.id == null))) {
		F.line = 124;
		kxi_183324[0].byId[n_184179.id] = n_184179;
		}
		
		F.line = 151;
		break BeforeRet;
		}
		else {
		if ((n_184179.kind == 4)) {
		F.line = 153;
		result_184181 = n_184179.dom;
		if (!(!((result_184181 == null)))) {
		F.line = 154;
		failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(154, 12) `\x0Anot (result == nil)` "));
		}
		
		F.line = 123;
		n_184179.dom = result_184181;
		if (!((n_184179.id == null))) {
		F.line = 124;
		kxi_183324[0].byId[n_184179.id] = n_184179;
		}
		
		F.line = 157;
		break BeforeRet;
		}
		else {
		if ((n_184179.kind == 5)) {
		F.line = 159;
		var x_184429 = n_184179;
		if (!((x_184429.onAttachImpl == null))) {
		F.line = 160;
		x_184429.onAttachImpl(x_184429);
		}
		
		if (!(!((x_184429.renderImpl == null)))) {
		F.line = 161;
		failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(161, 12) `\x0Anot (x.renderImpl == nil)` "));
		}
		
		if ((x_184429.expanded == null)) {
		F.line = 163;
		x_184429.expanded = x_184429.renderImpl(x_184429);
		}
		
		if (!(!((x_184429.expanded == null)))) {
		F.line = 165;
		failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(165, 12) `\x0Anot (x.expanded == nil)` "));
		}
		
		F.line = 166;
		result_184181 = vnode_to_dom_184177(x_184429.expanded, kxi_184180);
		F.line = 123;
		n_184179.dom = result_184181;
		if (!((n_184179.id == null))) {
		F.line = 124;
		kxi_183324[0].byId[n_184179.id] = n_184179;
		}
		
		F.line = 168;
		break BeforeRet;
		}
		else {
			F.line = 170;
			result_184181 = document.createElement(to_tag_171875[chckIndx(n_184179.kind, 0, to_tag_171875.length+0-1)-0]);
			F.line = 123;
			n_184179.dom = result_184181;
			if (!((n_184179.id == null))) {
			F.line = 124;
			kxi_183324[0].byId[n_184179.id] = n_184179;
			}
			
			L1: do {
				F.line = 172;
				var k_184839 = null;
				L2: do {
					F.line = 282;
					var i_184881 = 0;
					F.line = 3616;
					var colontmp__184883 = 0;
					F.line = 282;
					colontmp__184883 = (n_184179.kids != null ? n_184179.kids.length : 0);
					F.line = 3617;
					var i_184885 = 0;
					L3: do {
						F.line = 3618;
							L4: while (true) {
							if (!(i_184885 < colontmp__184883)) break L4;
								F.line = 3619;
								i_184881 = i_184885;
								F.line = 282;
								k_184839 = n_184179.kids[chckIndx(i_184881, 0, n_184179.kids.length+0-1)-0];
								F.line = 173;
								result_184181.appendChild(vnode_to_dom_184177(k_184839, kxi_184180));
								F.line = 3620;
								i_184885 = addInt(i_184885, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_184179.text == null))) {
			F.line = 176;
			result_184181.value = n_184179.text;
			}
			
		}
		}}}}
		if (!((n_184179.id == null))) {
		F.line = 178;
		result_184181.id = n_184179.id;
		}
		
		if (!((n_184179.class == null))) {
		F.line = 180;
		result_184181.className = n_184179.class;
		}
		
		L5: do {
			F.line = 183;
			var k_184840 = null;
			F.line = 183;
			var v_184841 = null;
			L6: do {
				F.line = 285;
				var i_184890 = 0;
				F.line = 2088;
				var colontmp__184892 = 0;
				F.line = 285;
				colontmp__184892 = subInt((n_184179.attrs != null ? n_184179.attrs.length : 0), 2);
				F.line = 2094;
				var res_184894 = 0;
				L7: do {
					F.line = 2095;
						L8: while (true) {
						if (!(res_184894 <= colontmp__184892)) break L8;
							F.line = 2096;
							i_184890 = res_184894;
							F.line = 286;
							k_184840 = n_184179.attrs[chckIndx(i_184890, 0, n_184179.attrs.length+0-1)-0];
							F.line = 286;
							v_184841 = n_184179.attrs[chckIndx(addInt(i_184890, 1), 0, n_184179.attrs.length+0-1)-0];
							if (!((v_184841 == null))) {
							F.line = 185;
							result_184181.setAttribute(k_184840, v_184841);
							}
							
							F.line = 2097;
							res_184894 = addInt(res_184894, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 186;
		apply_events_184078(n_184179);
			if (!!((kxi_184180 == null))) Tmp10 = false; else {				Tmp10 = (n_184179 == kxi_184180.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_184180.toFocus === null);			}		if (Tmp9) {
		F.line = 188;
		kxi_184180.toFocus = result_184181;
		}
		
		if (!((n_184179.style === null))) {
		F.line = 189;
		apply_style_152027(result_184181, n_184179.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_184181;

}

function replace_by_id_185035(id_185037, new_tree_185038) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 213;
		var x_185039 = document.getElementById(id_185037);
		F.line = 214;
		x_185039.parentNode.replaceChild(new_tree_185038, x_185039);
		F.line = 215;
		new_tree_185038.id = id_185037;
	framePtr = F.prev;

	
}

function len_172917(x_172919) {
	var result_172920 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_172920 = (x_172919.kids != null ? x_172919.kids.length : 0);
	framePtr = F.prev;

	return result_172920;

}

function HEX5BHEX5D_172941(x_172943, idx_172944) {
	var result_172945 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_172945 = x_172943.kids[chckIndx(idx_172944, 0, x_172943.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_172945;

}

function same_184912(n_184914, e_184915, nesting_184916) {
			var Tmp1;
			var Tmp2;

	var result_184918 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_183324[0].orphans.hasOwnProperty(n_184914.id)) {
		F.line = 192;
		result_184918 = true;
		break BeforeRet;
		}
		
		if ((n_184914.kind == 5)) {
		F.line = 194;
		result_184918 = same_184912(n_184914.expanded, e_184915, addInt(nesting_184916, 1));
		}
		else {
		if ((n_184914.kind == 6)) {
		F.line = 196;
		result_184918 = true;
		}
		else {
			if ((n_184914.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_184914.kind == 4);			}		if (Tmp1) {
		F.line = 199;
		result_184918 = true;
		}
		else {
		if ((to_tag_171875[chckIndx(n_184914.kind, 0, to_tag_171875.length+0-1)-0] == e_184915.nodeName)) {
		F.line = 201;
		result_184918 = true;
		if (!((n_184914.kind == 0))) {
			if (!!((e_184915.childNodes.length == len_172917(n_184914)))) Tmp2 = false; else {				Tmp2 = !((n_184914.kind == 111));			}		if (Tmp2) {
		F.line = 205;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_172917(n_184914))+""), makeNimstrLit(" real "), cstrToNimstr((e_184915.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_171875[chckIndx(n_184914.kind, 0, to_tag_171875.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_184916)+""));
		F.line = 206;
		result_184918 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 207;
			var i_185011 = 0;
			F.line = 3616;
			var colontmp__185017 = 0;
			F.line = 207;
			colontmp__185017 = len_172917(n_184914);
			F.line = 3617;
			var i_185020 = 0;
			L4: do {
				F.line = 3618;
					L5: while (true) {
					if (!(i_185020 < colontmp__185017)) break L5;
						F.line = 3619;
						i_185011 = i_185020;
						if (!(same_184912(HEX5BHEX5D_172941(n_184914, i_185011), e_184915.childNodes[i_185011], addInt(nesting_184916, 1)))) {
						F.line = 208;
						result_184918 = false;
						break BeforeRet;
						}
						
						F.line = 3620;
						i_185020 = addInt(i_185020, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 210;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_171875[chckIndx(n_184914.kind, 0, to_tag_171875.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_184915.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_184918;

}

function eq_150814(a_150816, b_150817) {
	var result_150818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_150816 === null)) {
		if ((b_150817 === null)) {
		F.line = 229;
		result_150818 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_150818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_150817 === null)) {
		F.line = 231;
		result_150818 = false;
		break BeforeRet;
		}
		}
		if (!((a_150816.length == b_150817.length))) {
		F.line = 232;
		result_150818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_150942 = 0;
			F.line = 3616;
			var colontmp__150976 = 0;
			F.line = 233;
			colontmp__150976 = a_150816.length;
			F.line = 3617;
			var i_150979 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_150979 < colontmp__150976)) break L3;
						F.line = 3619;
						i_150942 = i_150979;
						if (!((a_150816[i_150942] == b_150817[i_150942]))) {
						F.line = 234;
						result_150818 = false;
						break BeforeRet;
						}
						
						F.line = 3620;
						i_150979 = addInt(i_150979, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_150818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_150818;

}

function same_attrs_174705(a_174707, b_174708) {
	var result_174709 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_174707.attrs != null ? a_174707.attrs.length : 0) == (b_174708.attrs != null ? b_174708.attrs.length : 0))) {
		F.line = 290;
		result_174709 = true;
		L1: do {
			F.line = 291;
			var i_174740 = 0;
			F.line = 3616;
			var colontmp__174742 = 0;
			F.line = 291;
			colontmp__174742 = (a_174707.attrs != null ? a_174707.attrs.length : 0);
			F.line = 3617;
			var i_174745 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_174745 < colontmp__174742)) break L3;
						F.line = 3619;
						i_174740 = i_174745;
						if (!((a_174707.attrs[chckIndx(i_174740, 0, a_174707.attrs.length+0-1)-0] == b_174708.attrs[chckIndx(i_174740, 0, b_174708.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_174709 = false;
						break BeforeRet;
						}
						
						F.line = 3620;
						i_174745 = addInt(i_174745, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_174709;

}

function eq_185214(a_185216, b_185217) {
			var Tmp4;
			var Tmp5;

	var result_185218 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_185216.kind == b_185217.kind))) {
		F.line = 237;
		result_185218 = 1;
		break BeforeRet;
		}
		
		if (!((a_185216.id == b_185217.id))) {
		F.line = 240;
		result_185218 = 1;
		break BeforeRet;
		}
		
		F.line = 241;
		result_185218 = 3;
		if (!((a_185216.index == b_185217.index))) {
		F.line = 244;
		result_185218 = 1;
		break BeforeRet;
		}
		
		if ((a_185216.kind == 0)) {
		if (!((a_185216.text == b_185217.text))) {
		F.line = 248;
		result_185218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_185216.kind == 3)) {
		if (!((a_185216.text == b_185217.text))) {
		F.line = 250;
		result_185218 = 1;
		break BeforeRet;
		}
		
		if (!((len_172917(a_185216) == len_172917(b_185217)))) {
		F.line = 251;
		result_185218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 252;
			var i_186019 = 0;
			F.line = 3616;
			var colontmp__186602 = 0;
			F.line = 252;
			colontmp__186602 = len_172917(a_185216);
			F.line = 3617;
			var i_186605 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_186605 < colontmp__186602)) break L3;
						F.line = 3619;
						i_186019 = i_186605;
						if ((eq_185214(HEX5BHEX5D_172941(a_185216, i_186019), HEX5BHEX5D_172941(b_185217, i_186019)) == 1)) {
						F.line = 253;
						result_185218 = 1;
						break BeforeRet;
						}
						
						F.line = 3620;
						i_186605 = addInt(i_186605, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_185216.kind == 4)) {
		F.line = 255;
		result_185218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_185216.kind == 6)) {
		if (!((a_185216.text == b_185217.text))) {
		F.line = 258;
		result_185218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_185217.kind == 5)) {
		if (!((a_185216.text == b_185217.text))) {
		F.line = 263;
		result_185218 = 1;
		break BeforeRet;
		}
		
		if (!((a_185216.key == b_185217.key))) {
		F.line = 269;
		result_185218 = 1;
		break BeforeRet;
		}
		
		F.line = 270;
		result_185218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_185216.class == b_185217.class))) Tmp5 = true; else {				Tmp5 = !(eq_150814(a_185216.style, b_185217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_174705(a_185216, b_185217));			}		if (Tmp4) {
		F.line = 276;
		result_185218 = 2;
		break BeforeRet;
		}
		
		F.line = 278;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_185218;

}

function update_styles_186620(new_node_186622, old_node_186623) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_186623.dom == null))) {
		if (!((new_node_186622.style == null))) {
		F.line = 283;
		apply_style_152027(old_node_186623.dom, new_node_186622.style);
		}
		else {
			F.line = 284;
			old_node_186623.dom.style = {m_type: NTI145276, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 285;
		old_node_186623.dom.className = new_node_186622.class;
		}
		
		F.line = 286;
		old_node_186623.style = new_node_186622.style;
		F.line = 287;
		old_node_186623.class = new_node_186622.class;
	framePtr = F.prev;

	
}

function take_over_attr_172878(new_node_172880, old_node_172881) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_172881.attrs = new_node_172880.attrs;
	framePtr = F.prev;

	
}

function update_attributes_186660(new_node_186662, old_node_186663) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_186663.dom == null))) {
		L1: do {
			F.line = 292;
			var k_186675 = null;
			F.line = 292;
			var __186676 = null;
			L2: do {
				F.line = 285;
				var i_186683 = 0;
				F.line = 2088;
				var colontmp__186685 = 0;
				F.line = 285;
				colontmp__186685 = subInt((old_node_186663.attrs != null ? old_node_186663.attrs.length : 0), 2);
				F.line = 2094;
				var res_186687 = 0;
				L3: do {
					F.line = 2095;
						L4: while (true) {
						if (!(res_186687 <= colontmp__186685)) break L4;
							F.line = 2096;
							i_186683 = res_186687;
							F.line = 286;
							k_186675 = old_node_186663.attrs[chckIndx(i_186683, 0, old_node_186663.attrs.length+0-1)-0];
							F.line = 286;
							__186676 = old_node_186663.attrs[chckIndx(addInt(i_186683, 1), 0, old_node_186663.attrs.length+0-1)-0];
							F.line = 293;
							old_node_186663.dom.removeAttribute(k_186675);
							F.line = 2097;
							res_186687 = addInt(res_186687, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 294;
			var k_186677 = null;
			F.line = 294;
			var v_186678 = null;
			L6: do {
				F.line = 285;
				var i_186694 = 0;
				F.line = 2088;
				var colontmp__186696 = 0;
				F.line = 285;
				colontmp__186696 = subInt((new_node_186662.attrs != null ? new_node_186662.attrs.length : 0), 2);
				F.line = 2094;
				var res_186698 = 0;
				L7: do {
					F.line = 2095;
						L8: while (true) {
						if (!(res_186698 <= colontmp__186696)) break L8;
							F.line = 2096;
							i_186694 = res_186698;
							F.line = 286;
							k_186677 = new_node_186662.attrs[chckIndx(i_186694, 0, new_node_186662.attrs.length+0-1)-0];
							F.line = 286;
							v_186678 = new_node_186662.attrs[chckIndx(addInt(i_186694, 1), 0, new_node_186662.attrs.length+0-1)-0];
							if (!((v_186678 == null))) {
							F.line = 296;
							old_node_186663.dom.setAttribute(k_186677, v_186678);
							}
							
							F.line = 2097;
							res_186698 = addInt(res_186698, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 297;
		take_over_attr_172878(new_node_186662, old_node_186663);
	framePtr = F.prev;

	
}

function merge_events_186714(new_node_186716, old_node_186717, kxi_186718) {
						var Tmp4;

	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 300;
		var d_186719 = old_node_186717.dom;
		L1: do {
			F.line = 301;
			var i_186736 = 0;
			F.line = 3616;
			var colontmp__186742 = 0;
			F.line = 301;
			colontmp__186742 = (old_node_186717.events != null ? old_node_186717.events.length : 0);
			F.line = 3617;
			var i_186745 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_186745 < colontmp__186742)) break L3;
						F.line = 3619;
						i_186736 = i_186745;
						F.line = 302;
						var k_186737 = old_node_186717.events[chckIndx(i_186736, 0, old_node_186717.events.length+0-1)-0]["Field0"];
						F.line = 303;
						F.line = 303;
						switch (k_186737) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_171881[chckIndx(k_186737, 0, to_event_name_171881.length+0-1)-0];
							break;
						}
						var name_186740 = Tmp4;
						F.line = 306;
						d_186719.removeEventListener(name_186740, old_node_186717.events[chckIndx(i_186736, 0, old_node_186717.events.length+0-1)-0]["Field2"]);
						F.line = 3620;
						i_186745 = addInt(i_186745, 1);
					}
			} while(false);
		} while(false);
		F.line = 307;
		old_node_186717.events = new_node_186716.events;
		F.line = 308;
		apply_events_184078(old_node_186717);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_172959(x_172961, idx_172962, y_172963) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_172961.kids[chckIndx(idx_172962, 0, x_172961.kids.length+0-1)-0] = y_172963;
	framePtr = F.prev;

	
}

function add_patch_v_186862(kxi_186864, parent_186865, pos_186866, new_child_186867) {
	var F={procname:"karax.addPatchV",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 337;
		var l_186868 = kxi_186864.patchLenV;
		if (((kxi_186864.patchesV != null ? kxi_186864.patchesV.length : 0) <= l_186868)) {
		F.line = 340;
		if (kxi_186864.patchesV != null) { kxi_186864.patchesV.push({parent: parent_186865, newChild: new_child_186867, pos: pos_186866}); } else { kxi_186864.patchesV = [{parent: parent_186865, newChild: new_child_186867, pos: pos_186866}]; };
		}
		else {
			F.line = 342;
			kxi_186864.patchesV[chckIndx(l_186868, 0, kxi_186864.patchesV.length+0-1)-0].parent = parent_186865;
			F.line = 343;
			kxi_186864.patchesV[chckIndx(l_186868, 0, kxi_186864.patchesV.length+0-1)-0].newChild = new_child_186867;
			F.line = 344;
			kxi_186864.patchesV[chckIndx(l_186868, 0, kxi_186864.patchesV.length+0-1)-0].pos = pos_186866;
		}
		
		F.line = 345;
		kxi_186864.patchLenV = addInt(kxi_186864.patchLenV, 1);
	framePtr = F.prev;

	
}

function add_patch_186814(kxi_186816, ka_186817, parenta_186818, currenta_186819, na_186820) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 325;
		var l_186821 = kxi_186816.patchLen;
		if (((kxi_186816.patches != null ? kxi_186816.patches.length : 0) <= l_186821)) {
		F.line = 328;
		if (kxi_186816.patches != null) { kxi_186816.patches.push({k: ka_186817, parent: parenta_186818, current: currenta_186819, n: na_186820}); } else { kxi_186816.patches = [{k: ka_186817, parent: parenta_186818, current: currenta_186819, n: na_186820}]; };
		}
		else {
			F.line = 330;
			kxi_186816.patches[chckIndx(l_186821, 0, kxi_186816.patches.length+0-1)-0].k = ka_186817;
			F.line = 331;
			kxi_186816.patches[chckIndx(l_186821, 0, kxi_186816.patches.length+0-1)-0].parent = parenta_186818;
			F.line = 332;
			kxi_186816.patches[chckIndx(l_186821, 0, kxi_186816.patches.length+0-1)-0].current = currenta_186819;
			F.line = 333;
			kxi_186816.patches[chckIndx(l_186821, 0, kxi_186816.patches.length+0-1)-0].n = na_186820;
		}
		
		F.line = 334;
		kxi_186816.patchLen = addInt(kxi_186816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_187027(new_node_187029, old_node_187030, parent_187031, current_187032, kxi_187033) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_187034 = 0;

	var F={procname:"karax.diff",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 389;
		result_187034 = eq_185214(new_node_187029, old_node_187030);
		F.line = 390;
		switch (result_187034) {
		case 0:
			F.line = 392;
			if (kxi_187033.components != null) { kxi_187033.components.push({oldNode: old_node_187030, newNode: new_node_187029, parent: parent_187031, current: current_187032}); } else { kxi_187033.components = [{oldNode: old_node_187030, newNode: new_node_187029, parent: parent_187031, current: current_187032}]; };
			break;
		case 3:
		case 2:
			F.line = 397;
			new_node_187029.dom = old_node_187030.dom;
			if ((result_187034 == 2)) {
			F.line = 399;
			update_styles_186620(new_node_187029, old_node_187030);
			F.line = 400;
			update_attributes_186660(new_node_187029, old_node_187030);
			if ((old_node_187030.kind == 0)) {
			F.line = 402;
			old_node_187030.text = new_node_187029.text;
			F.line = 403;
			old_node_187030.dom.nodeValue = new_node_187029.text;
			}
			
			}
			
				if (!(((new_node_187029.events != null ? new_node_187029.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_187030.events != null ? old_node_187030.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 406;
			merge_events_186714(new_node_187029, old_node_187030, kxi_187033);
			}
			
			F.line = 413;
			var new_length_187401 = len_172917(new_node_187029);
			F.line = 414;
			var old_length_187402 = len_172917(old_node_187030);
			if (((new_length_187401 == 0) && (old_length_187402 == 0))) {
			F.line = 415;
			break BeforeRet;
			}
			
			F.line = 416;
			var min_length_187403 = nimMin(new_length_187401, old_length_187402);
			if (!((old_node_187030.kind == new_node_187029.kind))) {
			F.line = 418;
			failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 419;
			var common_prefix_187602 = 0;
			F.line = 420;
			if ((old_node_187030.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_187030.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_187030.kind == 4);			}			var is_special_187630 = Tmp2;
			L4: do {
				F.line = 449;
					L5: while (true) {
					if (!(common_prefix_187602 < min_length_187403)) break L5;
						F.line = 425;
						var old_len_187662 = kxi_187033.patchLen;
						F.line = 426;
						var old_len_v_187664 = kxi_187033.patchLenV;
						if (!((common_prefix_187602 < len_172917(new_node_187029)))) {
						F.line = 427;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `commonPrefix < len(newNode)` "));
						}
						
						if (!((common_prefix_187602 < len_172917(old_node_187030)))) {
						F.line = 428;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `commonPrefix < len(oldNode)` "));
						}
						
						F.line = 429;
						if (is_special_187630) {
						Tmp6 = diff_187027(HEX5BHEX5D_172941(new_node_187029, common_prefix_187602), HEX5BHEX5D_172941(old_node_187030, common_prefix_187602), parent_187031, current_187032, kxi_187033);
						}
						else {
						Tmp6 = diff_187027(HEX5BHEX5D_172941(new_node_187029, common_prefix_187602), HEX5BHEX5D_172941(old_node_187030, common_prefix_187602), current_187032, current_187032.childNodes[chckIndx(common_prefix_187602, 0, current_187032.childNodes.length+0-1)-0], kxi_187033);
						}
						
						var r_188006 = Tmp6;
						F.line = 450;
						switch (r_188006) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_172959(new_node_187029, common_prefix_187602, HEX5BHEX5D_172941(old_node_187030, common_prefix_187602));
							F.line = 451;
							common_prefix_187602 = addInt(common_prefix_187602, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_186862(kxi_187033, old_node_187030, common_prefix_187602, HEX5BHEX5D_172941(new_node_187029, common_prefix_187602));
							F.line = 451;
							common_prefix_187602 = addInt(common_prefix_187602, 1);
							F.line = 441;
							result_187034 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_187033.patchLen = old_len_187662;
							F.line = 445;
							kxi_187033.patchLenV = old_len_v_187664;
							if (!((result_187034 == 1))) {
							F.line = 446;
							result_187034 = r_188006;
							}
							
							F.line = 447;
							break L4;
							break;
						}
					}
			} while(false);
			F.line = 454;
			var old_pos_188033 = subInt(old_length_187402, 1);
			F.line = 455;
			var new_pos_188034 = subInt(new_length_187401, 1);
			L7: do {
				F.line = 456;
					L8: while (true) {
						if (!(common_prefix_187602 <= old_pos_188033)) Tmp9 = false; else {							Tmp9 = (common_prefix_187602 <= new_pos_188034);						}					if (!Tmp9) break L8;
						F.line = 425;
						var old_len_188042 = kxi_187033.patchLen;
						F.line = 426;
						var old_len_v_188044 = kxi_187033.patchLenV;
						if (!((new_pos_188034 < len_172917(new_node_187029)))) {
						F.line = 427;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(427, 14) `newPos < len(newNode)` "));
						}
						
						if (!((old_pos_188033 < len_172917(old_node_187030)))) {
						F.line = 428;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(428, 14) `oldPos < len(oldNode)` "));
						}
						
						F.line = 429;
						if (is_special_187630) {
						Tmp10 = diff_187027(HEX5BHEX5D_172941(new_node_187029, new_pos_188034), HEX5BHEX5D_172941(old_node_187030, old_pos_188033), parent_187031, current_187032, kxi_187033);
						}
						else {
						Tmp10 = diff_187027(HEX5BHEX5D_172941(new_node_187029, new_pos_188034), HEX5BHEX5D_172941(old_node_187030, old_pos_188033), current_187032, current_187032.childNodes[chckIndx(old_pos_188033, 0, current_187032.childNodes.length+0-1)-0], kxi_187033);
						}
						
						var r_188406 = Tmp10;
						F.line = 457;
						switch (r_188406) {
						case 3:
						case 0:
						case 2:
							F.line = 435;
							HEX5BHEX5DHEX3D_172959(new_node_187029, new_pos_188034, HEX5BHEX5D_172941(old_node_187030, old_pos_188033));
							F.line = 458;
							old_pos_188033 = subInt(old_pos_188033, 1);
							F.line = 459;
							new_pos_188034 = subInt(new_pos_188034, 1);
							break;
						case 4:
							F.line = 438;
							add_patch_v_186862(kxi_187033, old_node_187030, old_pos_188033, HEX5BHEX5D_172941(new_node_187029, new_pos_188034));
							F.line = 458;
							old_pos_188033 = subInt(old_pos_188033, 1);
							F.line = 459;
							new_pos_188034 = subInt(new_pos_188034, 1);
							F.line = 441;
							result_187034 = 4;
							break;
						case 1:
							F.line = 444;
							kxi_187033.patchLen = old_len_188042;
							F.line = 445;
							kxi_187033.patchLenV = old_len_v_188044;
							if (!((result_187034 == 1))) {
							F.line = 446;
							result_187034 = r_188406;
							}
							
							F.line = 447;
							break L7;
							break;
						}
					}
			} while(false);
			F.line = 461;
			var pos_188451 = addInt(nimMin(old_pos_188033, new_pos_188034), 1);
			L11: do {
				F.line = 463;
				var i_188460 = 0;
				F.line = 2104;
				var colontmp__188805 = 0;
				F.line = 463;
				colontmp__188805 = subInt(pos_188451, 1);
				F.line = 2107;
				var res_188808 = common_prefix_187602;
				L12: do {
					F.line = 2108;
						L13: while (true) {
						if (!(res_188808 <= colontmp__188805)) break L13;
							F.line = 2109;
							i_188460 = res_188808;
							F.line = 464;
							var r_188461 = diff_187027(HEX5BHEX5D_172941(new_node_187029, i_188460), HEX5BHEX5D_172941(old_node_187030, i_188460), current_187032, current_187032.childNodes[chckIndx(i_188460, 0, current_187032.childNodes.length+0-1)-0], kxi_187033);
							if ((r_188461 == 4)) {
							F.line = 467;
							add_patch_v_186862(kxi_187033, old_node_187030, i_188460, HEX5BHEX5D_172941(new_node_187029, i_188460));
							}
							else {
							if (!((r_188461 == 1))) {
							F.line = 469;
							HEX5BHEX5DHEX3D_172959(new_node_187029, i_188460, HEX5BHEX5D_172941(old_node_187030, i_188460));
							}
							}
							F.line = 2110;
							res_188808 = addInt(res_188808, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_188033, 1) == old_length_187402)) {
			L14: do {
				F.line = 474;
				var i_188486 = 0;
				F.line = 2107;
				var res_188815 = pos_188451;
				L15: do {
					F.line = 2108;
						L16: while (true) {
						if (!(res_188815 <= new_pos_188034)) break L16;
							F.line = 2109;
							i_188486 = res_188815;
							F.line = 475;
							add_patch_186814(kxi_187033, 2, current_187032, null, HEX5BHEX5D_172941(new_node_187029, i_188486));
							F.line = 476;
							result_187034 = 4;
							F.line = 2110;
							res_188815 = addInt(res_188815, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 478;
				var before_188487 = current_187032.childNodes[chckIndx(addInt(old_pos_188033, 1), 0, current_187032.childNodes.length+0-1)-0];
				L17: do {
					F.line = 479;
					var i_188496 = 0;
					F.line = 2107;
					var res_188822 = pos_188451;
					L18: do {
						F.line = 2108;
							L19: while (true) {
							if (!(res_188822 <= new_pos_188034)) break L19;
								F.line = 2109;
								i_188496 = res_188822;
								F.line = 480;
								add_patch_186814(kxi_187033, 3, current_187032, before_188487, HEX5BHEX5D_172941(new_node_187029, i_188496));
								F.line = 481;
								result_187034 = 4;
								F.line = 2110;
								res_188822 = addInt(res_188822, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				F.line = 483;
				var i_188505 = 0;
				F.line = 2107;
				var res_188829 = pos_188451;
				L21: do {
					F.line = 2108;
						L22: while (true) {
						if (!(res_188829 <= old_pos_188033)) break L22;
							F.line = 2109;
							i_188505 = res_188829;
							F.line = 484;
							add_patch_186814(kxi_183324[0], 4, null, null, HEX5BHEX5D_172941(old_node_187030, i_188505));
							F.line = 486;
							add_patch_186814(kxi_187033, 1, current_187032, current_187032.childNodes[chckIndx(i_188505, 0, current_187032.childNodes.length+0-1)-0], null);
							F.line = 487;
							result_187034 = 4;
							F.line = 2110;
							res_188829 = addInt(res_188829, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 489;
			add_patch_186814(kxi_183324[0], 4, null, null, old_node_187030);
			F.line = 490;
			add_patch_186814(kxi_187033, 0, parent_187031, current_187032, new_node_187029);
			break;
		case 4:
			if (true) {
			F.line = 491;
			failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_187034;

}

function apply_components_188846(kxi_188848) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 499;
		var i_188850 = 0;
		L1: do {
			F.line = 502;
				L2: while (true) {
				if (!(i_188850 < (kxi_188848.components != null ? kxi_188848.components.length : 0))) break L2;
					F.line = 503;
					var x_188858 = kxi_188848.components[chckIndx(i_188850, 0, kxi_188848.components.length+0-1)-0].oldNode;
					F.line = 504;
					var new_node_188859 = kxi_188848.components[chckIndx(i_188850, 0, kxi_188848.components.length+0-1)-0].newNode;
						if (!!((x_188858.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_188858.changedImpl(x_188858, new_node_188859);						}					if (Tmp3) {
					F.line = 510;
					var current_189201 = kxi_188848.components[chckIndx(i_188850, 0, kxi_188848.components.length+0-1)-0].current;
					F.line = 511;
					var parent_189202 = kxi_188848.components[chckIndx(i_188850, 0, kxi_188848.components.length+0-1)-0].parent;
					F.line = 512;
					x_188858.updatedImpl(x_188858, new_node_188859);
					F.line = 513;
					var old_expanded_189203 = x_188858.expanded;
					F.line = 514;
					x_188858.expanded = x_188858.renderImpl(x_188858);
					F.line = 517;
					x_188858.renderedVersion = x_188858.version;
					if ((old_expanded_189203 == null)) {
					F.line = 519;
					add_patch_186814(kxi_183324[0], 4, null, null, x_188858);
					F.line = 520;
					add_patch_186814(kxi_188848, 0, parent_189202, current_189201, x_188858.expanded);
					}
					else {
						F.line = 524;
						var res_189601 = diff_187027(x_188858.expanded, old_expanded_189203, parent_189202, current_189201, kxi_188848);
						if ((res_189601 == 4)) {
						}
						else {
						if (!((res_189601 == 1))) {
						F.line = 532;
						x_188858.expanded = old_expanded_189203;
						if (!(!((old_expanded_189203.dom == null)))) {
						F.line = 533;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(533, 18) `\x0Anot (oldExpanded.dom == nil)` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_188858.expanded.dom == null)))) {
							F.line = 537;
							failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(537, 18) `\x0Anot (x.expanded.dom == nil)` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					F.line = 538;
					i_188850 = addInt(i_188850, 1);
				}
		} while(false);
		F.line = 539;
		if (kxi_188848.components.length < 0) { for (var i=kxi_188848.components.length;i<0;++i) kxi_188848.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_188848.components.length = 0; };
	framePtr = F.prev;

	
}

function apply_patch_186909(kxi_186911) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 348;
			var i_186921 = 0;
			F.line = 3616;
			var colontmp__187002 = 0;
			F.line = 348;
			colontmp__187002 = kxi_186911.patchLen;
			F.line = 3617;
			var i_187005 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_187005 < colontmp__187002)) break L3;
						F.line = 3619;
						i_186921 = i_187005;
						F.line = 349;
						var p_186922 = nimCopy(null, kxi_186911.patches[chckIndx(i_186921, 0, kxi_186911.patches.length+0-1)-0], NTI183209);
						F.line = 350;
						switch (p_186922.k) {
						case 0:
							F.line = 352;
							var nn_186923 = vnode_to_dom_184177(p_186922.n, kxi_186911);
							if ((p_186922.parent == null)) {
							F.line = 354;
							replace_by_id_185035(kxi_186911.rootId, nn_186923);
							}
							else {
								F.line = 356;
							p_186922.parent.replaceChild(nn_186923, p_186922.current);
							}
							
							break;
						case 1:
							F.line = 358;
							p_186922.parent.removeChild(p_186922.current);
							break;
						case 2:
							F.line = 360;
							var nn_186935 = vnode_to_dom_184177(p_186922.n, kxi_186911);
							F.line = 361;
							p_186922.parent.appendChild(nn_186935);
							break;
						case 3:
							F.line = 363;
							var nn_186936 = vnode_to_dom_184177(p_186922.n, kxi_186911);
							F.line = 364;
							p_186922.parent.insertBefore(nn_186936, p_186922.current);
							break;
						case 4:
							F.line = 366;
							var n_186937 = p_186922.n;
							if (!((n_186937.id == null))) {
							F.line = 367;
							delete kxi_186911.byId[n_186937.id];
							}
							
							if ((n_186937.kind == 5)) {
							F.line = 369;
							var x_186961 = n_186937;
							if (!((x_186961.onDetachImpl == null))) {
							F.line = 370;
							x_186961.onDetachImpl(x_186961);
							}
							
							}
							
							if (!(kxi_186911.surpressRedraws)) {
							F.line = 372;
							n_186937.dom = null;
							}
							
							break;
						}
						F.line = 3620;
						i_187005 = addInt(i_187005, 1);
					}
			} while(false);
		} while(false);
		F.line = 373;
		kxi_186911.patchLen = 0;
		L4: do {
			F.line = 374;
			var i_186979 = 0;
			F.line = 3616;
			var colontmp__187008 = 0;
			F.line = 374;
			colontmp__187008 = kxi_186911.patchLenV;
			F.line = 3617;
			var i_187011 = 0;
			L5: do {
				F.line = 3618;
					L6: while (true) {
					if (!(i_187011 < colontmp__187008)) break L6;
						F.line = 3619;
						i_186979 = i_187011;
						F.line = 375;
						var p_186980 = nimCopy(null, kxi_186911.patchesV[chckIndx(i_186979, 0, kxi_186911.patchesV.length+0-1)-0], NTI183211);
						F.line = 376;
						HEX5BHEX5DHEX3D_172959(p_186980.parent, p_186980.pos, p_186980.newChild);
						if (!(!((p_186980.newChild.dom == null)))) {
						F.line = 377;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(377, 12) `\x0Anot (p.newChild.dom == nil)` "));
						}
						
						F.line = 3620;
						i_187011 = addInt(i_187011, 1);
					}
			} while(false);
		} while(false);
		F.line = 378;
		kxi_186911.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_191631(kxi_191633) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_191633.renderer === null)) {
		F.line = 587;
		break BeforeRet;
		}
		
		F.line = 588;
		var rdata_191640 = {hashPart: window.location.hash};
		F.line = 589;
		var newtree_191641 = kxi_191633.renderer(rdata_191640);
		F.line = 590;
		kxi_191633.runCount = addInt(kxi_191633.runCount, 1);
		F.line = 591;
		newtree_191641.id = kxi_191633.rootId;
		F.line = 592;
		kxi_191633.toFocus = null;
		if ((kxi_191633.currentTree == null)) {
		F.line = 594;
		var asdom_191662 = vnode_to_dom_184177(newtree_191641, kxi_191633);
		F.line = 595;
		replace_by_id_185035(kxi_191633.rootId, asdom_191662);
		}
		else {
			if (!(same_184912(kxi_191633.currentTree, document.getElementById(kxi_191633.rootId), 0))) {
			F.line = 597;
			failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(597, 14) `same(kxi.currentTree, getElementById(document, kxi.rootId), 0)` "));
			}
			
			F.line = 598;
			var olddom_191801 = document.getElementById(kxi_191633.rootId);
			F.line = 599;
			diff_187027(newtree_191641, kxi_191633.currentTree, null, olddom_191801, kxi_191633);
		}
		
		F.line = 604;
		apply_components_188846(kxi_191633);
		F.line = 609;
		apply_patch_186909(kxi_191633);
		F.line = 610;
		kxi_191633.currentTree = newtree_191641;
		if (!(same_184912(kxi_191633.currentTree, document.getElementById(kxi_191633.rootId), 0))) {
		F.line = 611;
		failed_assert_impl_20481(makeNimstrLit("/home/manuel/.nimble/pkgs/karax-1.1.0/karax/karax.nim(611, 12) `same(kxi.currentTree, getElementById(document, kxi.rootId), 0)` "));
		}
		
		if (!((kxi_191633.postRenderCallback === null))) {
		F.line = 614;
		kxi_191633.postRenderCallback(rdata_191640);
		}
		
		if (!((kxi_191633.toFocus == null))) {
		F.line = 618;
		kxi_191633.toFocus.focus();
		}
		
		F.line = 619;
		kxi_191633.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_193046(ev_193048) {

		function HEX3Aanonymous_193049() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 644;
				dodraw_191631(kxi_183324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 644;
		kxi_183324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_193049);
	framePtr = F.prev;

	
}

function redraw_192814(kxi_192816) {

		function HEX3Aanonymous_193001() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 637;
				dodraw_191631(kxi_192816);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if ((kxi_192816.renderId == 0)) {
		F.line = 637;
		kxi_192816.renderId = window.requestAnimationFrame(HEX3Aanonymous_193001);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_193078(renderer_193083, root_193084, client_post_render_callback_193088) {

		function HEX3Aanonymous_193248() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 667;
				redraw_192814(kxi_183324[0]);
			framePtr = F.prev;

			
		}

	var result_193089 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_193084) === null)) {
		F.line = 653;
		var msg_193097 = (("Could not find a <div> with id=" + root_193084) + ". Karax needs it as its rendering target.");
		F.line = 2895;
		var e_193104 = null;
		F.line = 2896;
		e_193104 = {m_type: NTI3826, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 655;
		e_193104.message = nimCopy(null, cstrToNimstr(msg_193097), NTI138);
		F.line = 2891;
		e_193104.parent = null;
		F.line = 655;
		raiseException(e_193104, "Exception");
		}
		
		F.line = 657;
		result_193089 = {rootId: root_193084, renderer: nimCopy(null, renderer_193083, NTI193080), postRenderCallback: nimCopy(null, client_post_render_callback_193088, NTI193085), patches: new_seq_193127(60), patchesV: new_seq_193179(30), components: nimCopy(null, [], NTI193231), surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 665;
		kxi_183324[0] = result_193089;
		F.line = 666;
		window.onload = init_193046;
		F.line = 667;
		window.onhashchange = HEX3Aanonymous_193248;
	framePtr = F.prev;

	return result_193089;

}

function set_renderer_193277(renderer_193281, root_193282, client_post_render_callback_193285) {

		function wrap_renderer_193287(data_193289) {
			var result_193290 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 672;
				result_193290 = renderer_193281();
			framePtr = F.prev;

			return result_193290;

		}

		function wrap_post_render_193304(data_193306) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_193285 == null))) {
				F.line = 674;
				client_post_render_callback_193285();
				}
				
			framePtr = F.prev;

			
		}

	var result_193286 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 671;
		result_193286 = set_renderer_193078(wrap_renderer_193287, root_193282, wrap_post_render_193304);
	framePtr = F.prev;

	return result_193286;

}

function new_vnode_174229(kind_174231) {
	var result_174232 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_174232 = {kind: kind_174231, index: -1, m_type: NTI171905, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_174232;

}

function add_172977(parent_172979, kid_172980) {
	var F={procname:"vdom.add",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_172979.kids != null) { parent_172979.kids.push(kid_172980); } else { parent_172979.kids = [kid_172980]; };
	framePtr = F.prev;

	
}

function tree_174248(kind_174250, kids_174252) {
	var result_174253 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_174253 = new_vnode_174229(kind_174250);
		L1: do {
			F.line = 263;
			var k_174292 = null;
			F.line = 2247;
			var i_174296 = 0;
			L2: do {
				F.line = 2248;
					L3: while (true) {
					if (!(i_174296 < (kids_174252 != null ? kids_174252.length : 0))) break L3;
						F.line = 2249;
						k_174292 = kids_174252[chckIndx(i_174296, 0, kids_174252.length+0-1)-0];
						F.line = 263;
						add_172977(result_174253, k_174292);
						F.line = 2250;
						i_174296 = addInt(i_174296, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_174253;

}

function text_174375(s_174377) {
	var result_174378 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_174378 = {kind: 0, text: toJSStr(s_174377), index: -1, m_type: NTI171905, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_174378;

}

function add_event_listener_174760(n_174762, event_174763, handler_174764) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 295;
		if (n_174762.events != null) { n_174762.events.push({Field0: event_174763, Field1: handler_174764, Field2: null}); } else { n_174762.events = [{Field0: event_174763, Field1: handler_174764, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_193454(n_193456, k_193457, action_193458, kxi_193459) {

		function wrapper_193460(ev_193462, n_193463) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 700;
				action_193458(ev_193462, n_193463);
				if (!(kxi_193459.surpressRedraws)) {
				F.line = 701;
				redraw_192814(kxi_193459);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 702;
		add_event_listener_174760(n_193456, k_193457, wrapper_193460);
	framePtr = F.prev;

	
}

function input_handler_196439(ev_196441, n_196442) {
	var F={procname:"karax_client.inputHandler",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 18;
		switch (toJSStr(cstrToNimstr(n_196442.id))) {
		case "name1":
			F.line = 20;
			settings_196423.name1 = nimCopy(null, cstrToNimstr(value_172013(n_196442)), NTI138);
			break;
		case "name2":
			F.line = 22;
			settings_196423.name2 = nimCopy(null, cstrToNimstr(value_172013(n_196442)), NTI138);
			break;
		case "AI":
			F.line = 24;
			settings_196423.ai = eqStrings(cstrToNimstr(value_172013(n_196442)), makeNimstrLit("on"));
			break;
		case "fieldSize":
			F.line = 26;
			settings_196423.size = parseInt(value_172013(n_196442), 10);
			break;
		case "winCount":
			F.line = 28;
			settings_196423.winCount = parseInt(value_172013(n_196442), 10);
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	
}

function set_attr_172749(n_172751, key_172752, val_172753) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_172751.attrs != null ? n_172751.attrs.length : 0) == 0)) {
		F.line = 216;
		n_172751.attrs = nimCopy(null, [key_172752, val_172753], NTI172772);
		}
		else {
			L1: do {
				F.line = 218;
				var i_172791 = 0;
				F.line = 2088;
				var colontmp__172813 = 0;
				F.line = 218;
				colontmp__172813 = subInt((n_172751.attrs != null ? n_172751.attrs.length : 0), 2);
				F.line = 2094;
				var res_172816 = 0;
				L2: do {
					F.line = 2095;
						L3: while (true) {
						if (!(res_172816 <= colontmp__172813)) break L3;
							F.line = 2096;
							i_172791 = res_172816;
							if ((n_172751.attrs[chckIndx(i_172791, 0, n_172751.attrs.length+0-1)-0] == key_172752)) {
							F.line = 220;
							n_172751.attrs[chckIndx(addInt(i_172791, 1), 0, n_172751.attrs.length+0-1)-0] = val_172753;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2097;
							res_172816 = addInt(res_172816, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			var Tmp4 = nimCopy(null, key_172752, NTI140);
			if (n_172751.attrs != null) { n_172751.attrs.push(Tmp4); } else { n_172751.attrs = [Tmp4]; };
			F.line = 223;
			var Tmp5 = nimCopy(null, val_172753, NTI140);
			if (n_172751.attrs != null) { n_172751.attrs.push(Tmp5); } else { n_172751.attrs = [Tmp5]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function add_event_handler_193490(n_193492, k_193493, action_193496, kxi_193497) {

		function wrapper_193498(ev_193500, n_193501) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 712;
				action_193496();
				if (!(kxi_193497.surpressRedraws)) {
				F.line = 713;
				redraw_192814(kxi_193497);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 714;
		add_event_listener_174760(n_193492, k_193493, wrapper_193498);
	framePtr = F.prev;

	
}

function start_game_196458() {
	var F={procname:"karax_client.startGame",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 31;
		setup_169639(game_196223, settings_196423);
		F.line = 32;
		state_196225[0] = 2;
	framePtr = F.prev;

	
}

function setup_gui_196490() {
	var result_196492 = null;

	var F={procname:"karax_client.setupGUI",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 41;
		F.line = 41;
		var tmp_196515 = tree_174248(43, []);
		F.line = 41;
		tmp_196515.class = "center";
		F.line = 42;
		var tmp_196521 = tree_174248(43, []);
		F.line = 42;
		tmp_196521.class = "settings";
		F.line = 43;
		var tmp_196527 = tree_174248(104, []);
		F.line = 44;
		add_172977(tmp_196527, text_174375(makeNimstrLit("Player 1: ")));
		F.line = 45;
		var tmp_196533 = tree_174248(105, []);
		F.line = 45;
		valueHEX3D_172030(tmp_196533, "player 1");
		F.line = 45;
		tmp_196533.id = "name1";
		F.line = 45;
		add_event_handler_193454(tmp_196533, 8, input_handler_196439, kxi_183324[0]);
		F.line = 45;
		add_172977(tmp_196527, tmp_196533);
		F.line = 46;
		var tmp_196540 = tree_174248(71, []);
		F.line = 46;
		add_172977(tmp_196527, tmp_196540);
		F.line = 46;
		add_172977(tmp_196521, tmp_196527);
		F.line = 47;
		var tmp_196546 = tree_174248(104, []);
		F.line = 48;
		add_172977(tmp_196546, text_174375(makeNimstrLit("Player 2: ")));
		F.line = 49;
		var tmp_196552 = tree_174248(105, []);
		F.line = 49;
		valueHEX3D_172030(tmp_196552, "player 2");
		F.line = 49;
		tmp_196552.id = "name2";
		F.line = 49;
		add_event_handler_193454(tmp_196552, 8, input_handler_196439, kxi_183324[0]);
		F.line = 49;
		add_172977(tmp_196546, tmp_196552);
		F.line = 49;
		add_172977(tmp_196521, tmp_196546);
		F.line = 50;
		var tmp_196559 = tree_174248(104, []);
		F.line = 51;
		add_172977(tmp_196559, text_174375(makeNimstrLit("AI")));
		F.line = 52;
		var tmp_196565 = tree_174248(105, []);
		F.line = 52;
		set_attr_172749(tmp_196565, "type", "checkbox");
		F.line = 52;
		tmp_196565.id = "AI";
		F.line = 52;
		add_event_handler_193454(tmp_196565, 8, input_handler_196439, kxi_183324[0]);
		F.line = 52;
		add_172977(tmp_196559, tmp_196565);
		F.line = 53;
		var tmp_196572 = tree_174248(71, []);
		F.line = 53;
		add_172977(tmp_196559, tmp_196572);
		F.line = 53;
		add_172977(tmp_196521, tmp_196559);
		F.line = 54;
		var tmp_196578 = tree_174248(104, []);
		F.line = 55;
		add_172977(tmp_196578, text_174375(makeNimstrLit("Field size: ")));
		F.line = 56;
		var tmp_196584 = tree_174248(105, []);
		F.line = 56;
		tmp_196584.id = "fieldSize";
		F.line = 56;
		valueHEX3D_172030(tmp_196584, "3");
		F.line = 56;
		add_event_handler_193454(tmp_196584, 8, input_handler_196439, kxi_183324[0]);
		F.line = 56;
		add_172977(tmp_196578, tmp_196584);
		F.line = 57;
		var tmp_196591 = tree_174248(71, []);
		F.line = 57;
		add_172977(tmp_196578, tmp_196591);
		F.line = 57;
		add_172977(tmp_196521, tmp_196578);
		F.line = 58;
		var tmp_196597 = tree_174248(104, []);
		F.line = 59;
		add_172977(tmp_196597, text_174375(makeNimstrLit("line length to win: ")));
		F.line = 60;
		var tmp_196603 = tree_174248(105, []);
		F.line = 60;
		tmp_196603.id = "winCount";
		F.line = 60;
		valueHEX3D_172030(tmp_196603, "3");
		F.line = 60;
		add_event_handler_193454(tmp_196603, 8, input_handler_196439, kxi_183324[0]);
		F.line = 60;
		add_172977(tmp_196597, tmp_196603);
		F.line = 61;
		var tmp_196610 = tree_174248(71, []);
		F.line = 61;
		add_172977(tmp_196597, tmp_196610);
		F.line = 61;
		add_172977(tmp_196521, tmp_196597);
		F.line = 62;
		var tmp_196616 = tree_174248(106, []);
		F.line = 62;
		add_event_handler_193490(tmp_196616, 0, start_game_196458, kxi_183324[0]);
		F.line = 63;
		add_172977(tmp_196616, text_174375(makeNimstrLit("start Game")));
		F.line = 63;
		add_172977(tmp_196521, tmp_196616);
		F.line = 63;
		add_172977(tmp_196515, tmp_196521);
		result_196492 = tmp_196515;
	framePtr = F.prev;

	return result_196492;

}

function text_174401(s_174403) {
	var result_174404 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 272;
		result_174404 = {kind: 0, text: s_174403, index: -1, m_type: NTI171905, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_174404;

}

function click_field_196473(ev_196475, n_196476) {
	var F={procname:"karax_client.clickField",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 37;
		message_196226[0] = toJSStr(make_turn_169786(game_196223, cstrToNimstr(n_196476.id)));
	framePtr = F.prev;

	
}

function to_disabled_193773(disabled_193775) {
		var Tmp1;

	var result_193776 = null;

	var F={procname:"karax.toDisabled",prev:framePtr,filename:"../../../../.nimble/pkgs/karax-1.1.0/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 770;
		if (disabled_193775) {
		Tmp1 = "disabled";
		}
		else {
		Tmp1 = null;
		}
		
		result_193776 = Tmp1;
	framePtr = F.prev;

	return result_193776;

}

function play_gui_196648() {
										var Tmp7;
										var Tmp8;

		function HEX3Aanonymous_197015() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"karax_client.nim",line:0};
			framePtr = F;
				F.line = 83;
				state_196225[0] = 1;
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_197037() {
			var F={procname:"playGUI.:anonymous",prev:framePtr,filename:"karax_client.nim",line:0};
			framePtr = F;
				F.line = 87;
				setup_169639(game_196223, settings_196423);
			framePtr = F.prev;

			
		}

	var result_196650 = null;

	var F={procname:"karax_client.playGUI",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 67;
		F.line = 67;
		var tmp_196663 = tree_174248(43, []);
		F.line = 67;
		tmp_196663.class = "center";
		F.line = 68;
		var tmp_196669 = tree_174248(31, []);
		F.line = 68;
		tmp_196669.id = "status";
		F.line = 69;
		add_172977(tmp_196669, text_174401(message_196226[0]));
		F.line = 69;
		add_172977(tmp_196663, tmp_196669);
		F.line = 72;
		var tmp_196675 = tree_174248(43, []);
		F.line = 72;
		tmp_196675.class = "grid-container";
		L1: do {
			F.line = 73;
			var i_196722 = 0;
			F.line = 73;
			var line_196723 = null;
			F.line = 2352;
			var colontmp__197062 = null;
			F.line = 73;
			colontmp__197062 = field_169708(game_196223);
			F.line = 2354;
			var i_197065 = 0;
			L2: do {
				F.line = 2355;
					L3: while (true) {
					if (!(i_197065 < (colontmp__197062 != null ? colontmp__197062.length : 0))) break L3;
						F.line = 2356;
						i_196722 = i_197065;
						F.line = 2356;
						line_196723 = colontmp__197062[chckIndx(i_197065, 0, colontmp__197062.length+0-1)-0];
						L4: do {
							F.line = 74;
							var j_196770 = 0;
							F.line = 74;
							var field_196771 = 0;
							F.line = 2354;
							var i_197061 = 0;
							L5: do {
								F.line = 2355;
									L6: while (true) {
									if (!(i_197061 < (line_196723 != null ? line_196723.length : 0))) break L6;
										F.line = 2356;
										j_196770 = i_197061;
										F.line = 2356;
										field_196771 = line_196723[chckIndx(i_197061, 0, line_196723.length+0-1)-0];
										F.line = 76;
										var tmp_196777 = tree_174248(106, []);
										F.line = 76;
										tmp_196777.class = "grid-item";
										F.line = 76;
										F.line = 76;
										var fmt_res_196780 = mnewString(0);
										F.line = 270;
										if (fmt_res_196780 != null) { fmt_res_196780 = (fmt_res_196780).concat(cstrToNimstr((addInt(i_196722, 1))+"")); } else { fmt_res_196780 = cstrToNimstr((addInt(i_196722, 1))+"").slice(); };
										F.line = 270;
										if (fmt_res_196780 != null) { fmt_res_196780 = (fmt_res_196780).concat(cstrToNimstr((addInt(j_196770, 1))+"")); } else { fmt_res_196780 = cstrToNimstr((addInt(j_196770, 1))+"").slice(); };
										tmp_196777.id = toJSStr(fmt_res_196780);
										F.line = 76;
										add_event_handler_193454(tmp_196777, 0, click_field_196473, kxi_183324[0]);
										F.line = 77;
										if ((state_196225[0] == 0)) Tmp8 = true; else {											Tmp8 = !((field_196771 == 0));										}										if (Tmp8) Tmp7 = true; else {											Tmp7 = finished_170031(game_196223);										}										set_attr_172749(tmp_196777, "disabled", to_disabled_193773(Tmp7));
										F.line = 78;
										add_172977(tmp_196777, text_174375(desc_168046[chckIndx(field_196771, 0, desc_168046.length+0-1)-0]));
										F.line = 78;
										add_172977(tmp_196675, tmp_196777);
										F.line = 2357;
										i_197061 = addInt(i_197061, 1);
									}
							} while(false);
						} while(false);
						F.line = 2357;
						i_197065 = addInt(i_197065, 1);
					}
			} while(false);
		} while(false);
		F.line = 78;
		add_172977(tmp_196663, tmp_196675);
		F.line = 79;
		var tmp_197007 = tree_174248(43, []);
		F.line = 79;
		tmp_197007.class = "command_buttons";
		F.line = 80;
		var tmp_197013 = tree_174248(106, []);
		F.line = 80;
		tmp_197013.class = "start";
		F.line = 81;
		add_172977(tmp_197013, text_174375(makeNimstrLit("setup")));
		F.line = 82;
		add_event_handler_193490(tmp_197013, 0, HEX3Aanonymous_197015, kxi_183324[0]);
		F.line = 82;
		add_172977(tmp_197007, tmp_197013);
		F.line = 84;
		var tmp_197035 = tree_174248(106, []);
		F.line = 84;
		tmp_197035.class = "reset";
		F.line = 84;
		tmp_197035.id = "reset";
		F.line = 85;
		add_172977(tmp_197035, text_174375(makeNimstrLit("reset")));
		F.line = 86;
		add_event_handler_193490(tmp_197035, 0, HEX3Aanonymous_197037, kxi_183324[0]);
		F.line = 86;
		add_172977(tmp_197007, tmp_197035);
		F.line = 86;
		add_172977(tmp_196663, tmp_197007);
		result_196650 = tmp_196663;
	framePtr = F.prev;

	return result_196650;

}

function create_dom_197083() {
				var Tmp1;

	var result_197085 = null;

	var F={procname:"karax_client.createDom",prev:framePtr,filename:"karax_client.nim",line:0};
	framePtr = F;
		F.line = 91;
		switch (state_196225[0]) {
		case 1:
			F.line = 93;
			result_197085 = setup_gui_196490();
			F.line = 95;
			settings_196423.name1 = nimCopy(null, makeNimstrLit("player 1"), NTI138);
			F.line = 96;
			settings_196423.name2 = nimCopy(null, makeNimstrLit("player 2"), NTI138);
			F.line = 97;
			settings_196423.size = 3;
			F.line = 98;
			settings_196423.winCount = 3;
			break;
		case 0:
			F.line = 100;
			result_197085 = play_gui_196648();
			break;
		case 2:
				if (eqStrings(settings_196423.name1, [])) Tmp1 = true; else {					Tmp1 = eqStrings(settings_196423.name2, []);				}			if (Tmp1) {
			F.line = 103;
			window.alert("fill out player names");
			F.line = 104;
			state_196225[0] = 1;
			F.line = 105;
			result_197085 = setup_gui_196490();
			}
			else {
				F.line = 107;
				result_197085 = play_gui_196648();
			}
			
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_197085;

}
set_renderer_193277(create_dom_197083, "ROOT", null);

function set_possible_moves_161055(self_161057, moves_161092) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162593 = null;
		F.line = 2896;
		e_162593 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 241;
		e_162593.message = nimCopy(null, makeNimstrLit("set_possible_moves(OrderedTable) must be overridden"), NTI138);
		F.line = 2891;
		e_162593.parent = null;
		F.line = 241;
		raiseException(e_162593, "FieldError");
	framePtr = F.prev;

	
}

function set_possible_moves_161094(self_161057, moves_161092) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 173;
		set_possible_moves_161055(self_161057, moves_161092);
	framePtr = F.prev;

	
}

function sys_fatal_16979(message_16985) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 2915;
		var e_16987 = null;
		F.line = 2916;
		e_16987 = {m_type: NTI3886, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2917;
		e_16987.message = nimCopy(null, message_16985, NTI138);
		F.line = 2918;
		raiseException(e_16987, "NilAccessError");
	framePtr = F.prev;

	
}

function chckNilDisp(p_16976, p_16976_Idx) {
		if ((p_16976_Idx == 0)) {
		sys_fatal_16979(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function set_possible_moves_168253(self_168255, moves_168258, moves_168258_Idx) {
	var F={procname:"game_logic.set_possible_moves",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 34;
			var y_168270 = 0;
			F.line = 2104;
			var colontmp__168302 = 0;
			F.line = 34;
			colontmp__168302 = subInt(self_168255.size, 1);
			F.line = 2107;
			var res_168305 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_168305 <= colontmp__168302)) break L3;
						F.line = 2109;
						y_168270 = res_168305;
						L4: do {
							F.line = 35;
							var x_168282 = 0;
							F.line = 2104;
							var colontmp__168295 = 0;
							F.line = 35;
							colontmp__168295 = subInt(self_168255.size, 1);
							F.line = 2107;
							var res_168298 = 0;
							L5: do {
								F.line = 2108;
									L6: while (true) {
									if (!(res_168298 <= colontmp__168295)) break L6;
										F.line = 2109;
										x_168282 = res_168298;
										if ((self_168255.field[chckIndx(x_168282, 0, self_168255.field.length+0-1)-0][chckIndx(y_168270, 0, self_168255.field[chckIndx(x_168282, 0, self_168255.field.length+0-1)-0].length+0-1)-0] == 0)) {
										F.line = 37;
										if (moves_168258[moves_168258_Idx] != null) { moves_168258[moves_168258_Idx].push((cstrToNimstr((addInt(x_168282, 1))+"")).concat(cstrToNimstr((addInt(y_168270, 1))+""))); } else { moves_168258[moves_168258_Idx] = [(cstrToNimstr((addInt(x_168282, 1))+"")).concat(cstrToNimstr((addInt(y_168270, 1))+""))]; };
										}
										
										F.line = 2110;
										res_168298 = addInt(res_168298, 1);
									}
							} while(false);
						} while(false);
						F.line = 2110;
						res_168305 = addInt(res_168305, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function set_possible_moves_161096(self_161098, moves_161101, moves_161101_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 235;
		moves_161101[moves_161101_Idx] = nimCopy(null, [], NTI162561);
	framePtr = F.prev;

	
}

function set_possible_moves_161103(self_161098, moves_161101, moves_161101_Idx) {
	var F={procname:"turn_based_game.set_possible_moves",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 500;
		chckNilDisp(self_161098);
		if (isObj(self_161098.m_type, NTI168018)) {
		F.line = 174;
		set_possible_moves_168253(self_161098, moves_161101, moves_161101_Idx);
		}
		else {
		if (isObj(self_161098.m_type, NTI161018)) {
		F.line = 174;
		set_possible_moves_161096(self_161098, moves_161101, moves_161101_Idx);
		}
		else {
		if (isObj(self_161098.m_type, NTI161018)) {
		F.line = 174;
		set_possible_moves_161096(self_161098, moves_161101, moves_161101_Idx);
		}
		}}
	framePtr = F.prev;

	
}

function invalid_format_string_131000() {
		var e_131008 = null;
		e_131008 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_131008.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
		e_131008.parent = null;
		raiseException(e_131008, "ValueError");

	
}

function raiseRangeError() {
		var e_16125 = null;
		e_16125 = {m_type: NTI3862, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16125.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_16125.parent = null;
		raiseException(e_16125, "RangeError");

	
}

function nsuToLowerAsciiChar(c_123213) {
	var result_123214 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet5[c_123213] != undefined)) {
		F.line = 259;
		result_123214 = chckRange(addInt(c_123213, 32), 0, 255);
		}
		else {
			F.line = 261;
			result_123214 = c_123213;
		}
		
	framePtr = F.prev;

	return result_123214;

}

function nsuCmpIgnoreStyle(a_123561, b_123562) {
					var Tmp7;
					var Tmp8;

	var result_123563 = 0;

	BeforeRet: do {
		var i_123565 = 0;
		var j_123567 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_123565 < (a_123561 != null ? a_123561.length : 0)) && (a_123561[i_123565] == 95))) break L4;
								i_123565 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_123567 < (b_123562 != null ? b_123562.length : 0)) && (b_123562[j_123567] == 95))) break L6;
								j_123567 += 1;
							}
					} while(false);
					if ((i_123565 < (a_123561 != null ? a_123561.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_123561[i_123565]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_123586 = Tmp7;
					if ((j_123567 < (b_123562 != null ? b_123562.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_123562[j_123567]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_123587 = Tmp8;
					result_123563 = (aa_123586 - bb_123587);
					if (!((result_123563 == 0))) {
					break BeforeRet;
					}
					
					if (((a_123561 != null ? a_123561.length : 0) <= i_123565)) {
					if (((b_123562 != null ? b_123562.length : 0) <= j_123567)) {
					result_123563 = 0;
					break BeforeRet;
					}
					
					result_123563 = -1;
					break BeforeRet;
					}
					else {
					if (((b_123562 != null ? b_123562.length : 0) <= j_123567)) {
					result_123563 = 1;
					break BeforeRet;
					}
					}
					i_123565 += 1;
					j_123567 += 1;
				}
		} while(false);
	} while (false);

	return result_123563;

}

function find_normalized_130961(x_130963, in_array_130965) {
	var result_130966 = 0;

	BeforeRet: do {
		var i_130968 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_130968 < (in_array_130965 != null ? (in_array_130965.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_130963, in_array_130965[i_130968]) == 0)) {
					result_130966 = i_130968;
					break BeforeRet;
					}
					
					i_130968 += 2;
				}
		} while(false);
		result_130966 = -1;
		break BeforeRet;
	} while (false);

	return result_130966;

}

function substr_23422(s_23424, first_23425, last_23426) {
	var result_23427 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 4263;
		var first_23428 = nimMax(first_23425, 0);
		F.line = 4264;
		var l_23430 = nimMax(addInt(subInt(nimMin(last_23426, (s_23424 != null ? (s_23424.length-1) : -1)), first_23428), 1), 0);
		F.line = 4265;
		result_23427 = nimCopy(null, mnewString(chckRange(l_23430, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4266;
			var i_23442 = 0;
			F.line = 2104;
			var colontmp__23444 = 0;
			F.line = 4266;
			colontmp__23444 = subInt(l_23430, 1);
			F.line = 2107;
			var res_23447 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_23447 <= colontmp__23444)) break L3;
						F.line = 2109;
						i_23442 = res_23447;
						F.line = 4267;
						result_23427[chckIndx(i_23442, 0, result_23427.length+0-1)-0] = s_23424[chckIndx(addInt(i_23442, first_23428), 0, s_23424.length+0-1)-0];
						F.line = 2110;
						res_23447 = addInt(res_23447, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_23427;

}

function nsuAddf(s_131033, s_131033_Idx, formatstr_131034, a_131036) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

		var i_131040 = 0;
		var num_131042 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_131040 < (formatstr_131034 != null ? formatstr_131034.length : 0))) break L2;
					if (((formatstr_131034[i_131040] == 36) && ((i_131040 + 1) < (formatstr_131034 != null ? formatstr_131034.length : 0)))) {
					switch (formatstr_131034[(i_131040 + 1)]) {
					case 35:
						if (((a_131036 != null ? (a_131036.length-1) : -1) < num_131042)) {
						invalid_format_string_131000();
						}
						
						if (s_131033[s_131033_Idx] != null) { s_131033[s_131033_Idx] = (s_131033[s_131033_Idx]).concat(a_131036[num_131042]); } else { s_131033[s_131033_Idx] = a_131036[num_131042].slice(); };
						i_131040 += 2;
						num_131042 += 1;
						break;
					case 36:
						if (s_131033[s_131033_Idx] != null) { addChar(s_131033[s_131033_Idx], 36); } else { s_131033[s_131033_Idx] = [36]; };
						i_131040 += 2;
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						var j_131078 = 0;
						i_131040 += 1;
						var negative_131088 = (formatstr_131034[i_131040] == 45);
						if (negative_131088) {
						i_131040 += 1;
						}
						
						L3: do {
								L4: while (true) {
									if (!(i_131040 < (formatstr_131034 != null ? formatstr_131034.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet2[formatstr_131034[i_131040]] != undefined);									}								if (!Tmp5) break L4;
									j_131078 = (((j_131078 * 10) + formatstr_131034[i_131040]) - 48);
									i_131040 += 1;
								}
						} while(false);
						if (!(negative_131088)) {
						Tmp6 = (j_131078 - 1);
						}
						else {
						Tmp6 = ((a_131036 != null ? a_131036.length : 0) - j_131078);
						}
						
						var idx_131134 = Tmp6;
							if ((idx_131134 < 0)) Tmp7 = true; else {								Tmp7 = ((a_131036 != null ? (a_131036.length-1) : -1) < idx_131134);							}						if (Tmp7) {
						invalid_format_string_131000();
						}
						
						if (s_131033[s_131033_Idx] != null) { s_131033[s_131033_Idx] = (s_131033[s_131033_Idx]).concat(a_131036[idx_131134]); } else { s_131033[s_131033_Idx] = a_131036[idx_131134].slice(); };
						break;
					case 123:
						var j_131142 = (i_131040 + 2);
						var k_131144 = 0;
						var negative_131145 = (formatstr_131034[j_131142] == 45);
						if (negative_131145) {
						j_131142 += 1;
						}
						
						var is_number_131156 = 0;
						L8: do {
								L9: while (true) {
								if (!((j_131142 < (formatstr_131034 != null ? formatstr_131034.length : 0)) && !((ConstSet3[formatstr_131034[j_131142]] != undefined)))) break L9;
									if ((ConstSet4[formatstr_131034[j_131142]] != undefined)) {
									k_131144 = (((k_131144 * 10) + formatstr_131034[j_131142]) - 48);
									if ((is_number_131156 == 0)) {
									is_number_131156 = 1;
									}
									
									}
									else {
										is_number_131156 = -1;
									}
									
									j_131142 += 1;
								}
						} while(false);
						if ((is_number_131156 == 1)) {
						if (!(negative_131145)) {
						Tmp10 = (k_131144 - 1);
						}
						else {
						Tmp10 = ((a_131036 != null ? a_131036.length : 0) - k_131144);
						}
						
						var idx_131204 = Tmp10;
							if ((idx_131204 < 0)) Tmp11 = true; else {								Tmp11 = ((a_131036 != null ? (a_131036.length-1) : -1) < idx_131204);							}						if (Tmp11) {
						invalid_format_string_131000();
						}
						
						if (s_131033[s_131033_Idx] != null) { s_131033[s_131033_Idx] = (s_131033[s_131033_Idx]).concat(a_131036[idx_131204]); } else { s_131033[s_131033_Idx] = a_131036[idx_131204].slice(); };
						}
						else {
							var x_131212 = find_normalized_130961(substr_23422(formatstr_131034, (i_131040 + 2), (j_131142 - 1)), a_131036);
								if (!(0 <= x_131212)) Tmp12 = false; else {									Tmp12 = (x_131212 < (a_131036 != null ? (a_131036.length-1) : -1));								}							if (Tmp12) {
							if (s_131033[s_131033_Idx] != null) { s_131033[s_131033_Idx] = (s_131033[s_131033_Idx]).concat(a_131036[(x_131212 + 1)]); } else { s_131033[s_131033_Idx] = a_131036[(x_131212 + 1)].slice(); };
							}
							else {
							invalid_format_string_131000();
							}
							
						}
						
						i_131040 = (j_131142 + 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						var j_131221 = (i_131040 + 1);
						L13: do {
								L14: while (true) {
									if (!(j_131221 < (formatstr_131034 != null ? formatstr_131034.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet6[formatstr_131034[j_131221]] != undefined);									}								if (!Tmp15) break L14;
									j_131221 += 1;
								}
						} while(false);
						var x_131240 = find_normalized_130961(substr_23422(formatstr_131034, (i_131040 + 1), (j_131221 - 1)), a_131036);
							if (!(0 <= x_131240)) Tmp16 = false; else {								Tmp16 = (x_131240 < (a_131036 != null ? (a_131036.length-1) : -1));							}						if (Tmp16) {
						if (s_131033[s_131033_Idx] != null) { s_131033[s_131033_Idx] = (s_131033[s_131033_Idx]).concat(a_131036[(x_131240 + 1)]); } else { s_131033[s_131033_Idx] = a_131036[(x_131240 + 1)].slice(); };
						}
						else {
						invalid_format_string_131000();
						}
						
						i_131040 = j_131221;
						break;
					default: 
						invalid_format_string_131000();
						break;
					}
					}
					else {
						if (s_131033[s_131033_Idx] != null) { addChar(s_131033[s_131033_Idx], formatstr_131034[i_131040]); } else { s_131033[s_131033_Idx] = [formatstr_131034[i_131040]]; };
						i_131040 += 1;
					}
					
				}
		} while(false);

	
}

function nsuFormatVarargs(formatstr_131334, a_131336) {
	var result_131337 = [null];

		result_131337[0] = nimCopy(null, mnewString(0), NTI138);
		nsuAddf(result_131337, 0, formatstr_131334, a_131336);

	return result_131337[0];

}

function status_169218(self_169220) {
	var result_169221 = null;

	var F={procname:"game_logic.status",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 114;
		var top_line_169222 = [];
		L1: do {
			F.line = 115;
			var i_169234 = 0;
			F.line = 2104;
			var colontmp__169436 = 0;
			F.line = 115;
			colontmp__169436 = self_169220.size;
			F.line = 2107;
			var res_169439 = 1;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_169439 <= colontmp__169436)) break L3;
						F.line = 2109;
						i_169234 = res_169439;
						F.line = 116;
						F.line = 116;
						var fmt_res_169237 = mnewString(0);
						F.line = 116;
						if (fmt_res_169237 != null) { fmt_res_169237 = (fmt_res_169237).concat(makeNimstrLit("  ")); } else { fmt_res_169237 = makeNimstrLit("  "); };
						F.line = 270;
						if (fmt_res_169237 != null) { fmt_res_169237 = (fmt_res_169237).concat(cstrToNimstr((i_169234)+"")); } else { fmt_res_169237 = cstrToNimstr((i_169234)+"").slice(); };
						if (top_line_169222 != null) { top_line_169222 = (top_line_169222).concat(fmt_res_169237); } else { top_line_169222 = fmt_res_169237.slice(); };
						F.line = 2110;
						res_169439 = addInt(res_169439, 1);
					}
			} while(false);
		} while(false);
		F.line = 117;
		rawEcho(top_line_169222);
		L4: do {
			F.line = 118;
			var y_169415 = 0;
			F.line = 2104;
			var colontmp__169452 = 0;
			F.line = 118;
			colontmp__169452 = subInt(self_169220.size, 1);
			F.line = 2107;
			var res_169455 = 0;
			L5: do {
				F.line = 2108;
					L6: while (true) {
					if (!(res_169455 <= colontmp__169452)) break L6;
						F.line = 2109;
						y_169415 = res_169455;
						F.line = 119;
						var line_169416 = cstrToNimstr((addInt(y_169415, 1))+"");
						L7: do {
							F.line = 120;
							var x_169428 = 0;
							F.line = 2104;
							var colontmp__169445 = 0;
							F.line = 120;
							colontmp__169445 = subInt(self_169220.size, 1);
							F.line = 2107;
							var res_169448 = 0;
							L8: do {
								F.line = 2108;
									L9: while (true) {
									if (!(res_169448 <= colontmp__169445)) break L9;
										F.line = 2109;
										x_169428 = res_169448;
										F.line = 121;
										if (line_169416 != null) { line_169416 = (line_169416).concat(nsuFormatVarargs(makeNimstrLit("[$1]"), [desc_168046[chckIndx(self_169220.field[chckIndx(x_169428, 0, self_169220.field.length+0-1)-0][chckIndx(y_169415, 0, self_169220.field[chckIndx(x_169428, 0, self_169220.field.length+0-1)-0].length+0-1)-0], 0, desc_168046.length+0-1)-0]])); } else { line_169416 = nsuFormatVarargs(makeNimstrLit("[$1]"), [desc_168046[chckIndx(self_169220.field[chckIndx(x_169428, 0, self_169220.field.length+0-1)-0][chckIndx(y_169415, 0, self_169220.field[chckIndx(x_169428, 0, self_169220.field.length+0-1)-0].length+0-1)-0], 0, desc_168046.length+0-1)-0]]).slice(); };
										F.line = 2110;
										res_169448 = addInt(res_169448, 1);
									}
							} while(false);
						} while(false);
						F.line = 122;
						rawEcho(line_169416);
						F.line = 2110;
						res_169455 = addInt(res_169455, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_169221;

}

function is_over_162750(self_162752) {
	var result_162753 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 286;
		result_162753 = !((self_162752.winner_player_number == 0));
	framePtr = F.prev;

	return result_162753;

}

function is_over_162755(self_162752) {
	var result_162758 = false;

	var F={procname:"turn_based_game.is_over",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 285;
		result_162758 = is_over_162750(self_162752);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_162758;

}

function status_161105(self_161107) {
	var result_162775 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (is_over_162755(self_161107)) {
		F.line = 295;
		result_162775 = nimCopy(null, makeNimstrLit("game is over"), NTI138);
		break BeforeRet;
		}
		else {
			F.line = 297;
			result_162775 = nimCopy(null, makeNimstrLit("game is active"), NTI138);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_162775;

}

function status_161109(self_161107) {
	var result_162775 = null;

	var F={procname:"turn_based_game.status",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 500;
		chckNilDisp(self_161107);
		if (isObj(self_161107.m_type, NTI168018)) {
		F.line = 175;
		result_162775 = status_169218(self_161107);
		break BeforeRet;
		}
		else {
		if (isObj(self_161107.m_type, NTI161018)) {
		F.line = 175;
		result_162775 = status_161105(self_161107);
		break BeforeRet;
		}
		else {
		if (isObj(self_161107.m_type, NTI161018)) {
		F.line = 175;
		result_162775 = status_161105(self_161107);
		break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_162775;

}

function display_161111(self_161113, msg_161114) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 185;
		rawEcho(msg_161114);
	framePtr = F.prev;

	
}

function display_161116(self_161113, msg_161114) {
	var F={procname:"turn_based_game.display",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 184;
		display_161111(self_161113, msg_161114);
	framePtr = F.prev;

	
}

function scoring_169586(self_169588) {
	var result_169589 = 0.0;

	var F={procname:"game_logic.scoring",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 135;
			var line_169598 = null;
			F.line = 3909;
			var colontmp__169615 = null;
			F.line = 135;
			colontmp__169615 = self_169588.field;
			F.line = 3911;
			var i_169618 = 0;
			F.line = 3912;
			var l_169620 = (colontmp__169615 != null ? colontmp__169615.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_169618 < l_169620)) break L3;
						F.line = 3914;
						line_169598 = colontmp__169615[chckIndx(i_169618, 0, colontmp__169615.length+0-1)-0];
						L4: do {
							F.line = 136;
							var square_169607 = 0;
							F.line = 3911;
							var i_169612 = 0;
							F.line = 3912;
							var l_169614 = (line_169598 != null ? line_169598.length : 0);
							L5: do {
								F.line = 3913;
									L6: while (true) {
									if (!(i_169612 < l_169614)) break L6;
										F.line = 3914;
										square_169607 = line_169598[chckIndx(i_169612, 0, line_169598.length+0-1)-0];
										if ((square_169607 == self_169588.current_player_number)) {
										}
										
										F.line = 3915;
										i_169612 = addInt(i_169612, 1);
										if (!(((line_169598 != null ? line_169598.length : 0) == l_169614))) {
										F.line = 3916;
										failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 3915;
						i_169618 = addInt(i_169618, 1);
						if (!(((colontmp__169615 != null ? colontmp__169615.length : 0) == l_169620))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_169589;

}

function scoring_162823(self_162825) {
	var result_162826 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162838 = null;
		F.line = 2896;
		e_162838 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 313;
		e_162838.message = nimCopy(null, makeNimstrLit("scoring() must be overridden (if used)"), NTI138);
		F.line = 2891;
		e_162838.parent = null;
		F.line = 313;
		raiseException(e_162838, "FieldError");
	framePtr = F.prev;

	return result_162826;

}

function scoring_162828(self_162825) {
	var result_162831 = 0.0;

	var F={procname:"turn_based_game.scoring",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 500;
		chckNilDisp(self_162825);
		if (isObj(self_162825.m_type, NTI168018)) {
		F.line = 308;
		result_162831 = scoring_169586(self_162825);
		break BeforeRet;
		}
		else {
		if (isObj(self_162825.m_type, NTI161018)) {
		F.line = 308;
		result_162831 = scoring_162823(self_162825);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_162831;

}

function get_state_169472(self_169474) {
	var result_169475 = null;

	var F={procname:"game_logic.get_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 125;
			var y_169487 = 0;
			F.line = 2104;
			var colontmp__169509 = 0;
			F.line = 125;
			colontmp__169509 = subInt(self_169474.size, 1);
			F.line = 2107;
			var res_169512 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_169512 <= colontmp__169509)) break L3;
						F.line = 2109;
						y_169487 = res_169512;
						L4: do {
							F.line = 126;
							var x_169499 = 0;
							F.line = 2104;
							var colontmp__169502 = 0;
							F.line = 126;
							colontmp__169502 = subInt(self_169474.size, 1);
							F.line = 2107;
							var res_169505 = 0;
							L5: do {
								F.line = 2108;
									L6: while (true) {
									if (!(res_169505 <= colontmp__169502)) break L6;
										F.line = 2109;
										x_169499 = res_169505;
										F.line = 127;
										if (result_169475 != null) { result_169475 = (result_169475).concat(cstrToNimstr((self_169474.field[chckIndx(x_169499, 0, self_169474.field.length+0-1)-0][chckIndx(y_169487, 0, self_169474.field[chckIndx(x_169499, 0, self_169474.field.length+0-1)-0].length+0-1)-0])+"")); } else { result_169475 = cstrToNimstr((self_169474.field[chckIndx(x_169499, 0, self_169474.field.length+0-1)-0][chckIndx(y_169487, 0, self_169474.field[chckIndx(x_169499, 0, self_169474.field.length+0-1)-0].length+0-1)-0])+"").slice(); };
										F.line = 2110;
										res_169505 = addInt(res_169505, 1);
									}
							} while(false);
						} while(false);
						F.line = 2110;
						res_169512 = addInt(res_169512, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_169475;

}

function get_state_162860(self_162862) {
	var result_162863 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162875 = null;
		F.line = 2896;
		e_162875 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 322;
		e_162875.message = nimCopy(null, makeNimstrLit("get_state() must be overridden (if used)"), NTI138);
		F.line = 2891;
		e_162875.parent = null;
		F.line = 322;
		raiseException(e_162875, "FieldError");
	framePtr = F.prev;

	return result_162863;

}

function get_state_162865(self_162862) {
	var result_162868 = null;

	var F={procname:"turn_based_game.get_state",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 500;
		chckNilDisp(self_162862);
		if (isObj(self_162862.m_type, NTI168018)) {
		F.line = 316;
		result_162868 = get_state_169472(self_162862);
		break BeforeRet;
		}
		else {
		if (isObj(self_162862.m_type, NTI161018)) {
		F.line = 316;
		result_162868 = get_state_162860(self_162862);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_162868;

}

function raw_parse_int_27307(s_27309, b_27311, b_27311_Idx, start_27312) {
			var Tmp1;
					var Tmp4;

	var result_27314 = 0;

	var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 249;
		var sign_27316 = -1;
		F.line = 250;
		var i_27317 = start_27312;
		if ((i_27317 < (s_27309 != null ? s_27309.length : 0))) {
		if ((s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0] == 43)) {
		F.line = 252;
		i_27317 = addInt(i_27317, 1);
		}
		else {
		if ((s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0] == 45)) {
		F.line = 254;
		i_27317 = addInt(i_27317, 1);
		F.line = 255;
		sign_27316 = 1;
		}
		}
		}
		
			if (!(i_27317 < (s_27309 != null ? s_27309.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet7[s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 257;
		b_27311[b_27311_Idx] = 0;
		L2: do {
			F.line = 258;
				L3: while (true) {
					if (!(i_27317 < (s_27309 != null ? s_27309.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet8[s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 259;
					b_27311[b_27311_Idx] = subInt(mulInt(b_27311[b_27311_Idx], 10), subInt(s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0], 48));
					F.line = 260;
					i_27317 = addInt(i_27317, 1);
					L5: do {
						F.line = 261;
							L6: while (true) {
							if (!((i_27317 < (s_27309 != null ? s_27309.length : 0)) && (s_27309[chckIndx(i_27317, 0, s_27309.length+0-1)-0] == 95))) break L6;
								F.line = 261;
								i_27317 = addInt(i_27317, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 262;
		b_27311[b_27311_Idx] = mulInt(b_27311[b_27311_Idx], sign_27316);
		F.line = 263;
		result_27314 = subInt(i_27317, start_27312);
		}
		
	framePtr = F.prev;

	return result_27314;

}

function npuParseBiggestInt(s_27403, number_27405, number_27405_Idx, start_27406) {
	var result_27408 = 0;

	var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 271;
		var res_27409 = [0];
		F.line = 274;
		result_27408 = raw_parse_int_27307(s_27403, res_27409, 0, start_27406);
		F.line = 275;
		number_27405[number_27405_Idx] = res_27409[0];
	framePtr = F.prev;

	return result_27408;

}

function npuParseInt(s_27426, number_27428, number_27428_Idx, start_27429) {
			var Tmp1;
				var Tmp2;

	var result_27431 = 0;

	var F={procname:"parseutils.parseInt",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 282;
		var res_27432 = [0];
		F.line = 283;
		result_27431 = npuParseBiggestInt(s_27426, res_27432, 0, start_27429);
			if (!true) Tmp1 = false; else {				if ((res_27432[0] < -2147483648)) Tmp2 = true; else {					Tmp2 = (2147483647 < res_27432[0]);				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 2895;
		var e_27459 = null;
		F.line = 2896;
		e_27459 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 286;
		e_27459.message = nimCopy(null, makeNimstrLit("overflow"), NTI138);
		F.line = 2891;
		e_27459.parent = null;
		F.line = 286;
		raiseException(e_27459, "OverflowError");
		}
		else {
		if (!((result_27431 == 0))) {
		F.line = 288;
		number_27428[number_27428_Idx] = chckRange(res_27432[0], -2147483648, 2147483647);
		}
		}
	framePtr = F.prev;

	return result_27431;

}

function nsuParseInt(s_125490) {
			var Tmp1;

	var result_125491 = [0];

		var l_125493 = npuParseInt(s_125490, result_125491, 0, 0);
			if (!((l_125493 == (s_125490 != null ? s_125490.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_125493 == 0);			}		if (Tmp1) {
		var e_125500 = null;
		e_125500 = {m_type: NTI3852, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_125500.message = nimCopy(null, (makeNimstrLit("invalid integer: ")).concat(s_125490), NTI138);
		e_125500.parent = null;
		raiseException(e_125500, "ValueError");
		}
		

	return result_125491[0];

}

function make_move_168322(self_168324, move_168325) {
	var result_168326 = null;

	var F={procname:"game_logic.make_move",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 41;
		self_168324.field[chckIndx(subInt(nsuParseInt(nimCharToStr(move_168325[chckIndx(0, 0, move_168325.length+0-1)-0])), 1), 0, self_168324.field.length+0-1)-0][chckIndx(subInt(nsuParseInt(nimCharToStr(move_168325[chckIndx(1, 0, move_168325.length+0-1)-0])), 1), 0, self_168324.field[chckIndx(subInt(nsuParseInt(nimCharToStr(move_168325[chckIndx(0, 0, move_168325.length+0-1)-0])), 1), 0, self_168324.field.length+0-1)-0].length+0-1)-0] = self_168324.current_player_number;
		F.line = 42;
		result_168326 = nimCopy(null, (makeNimstrLit("set mark at ")).concat(move_168325), NTI138);
	framePtr = F.prev;

	return result_168326;

}

function make_move_162712(self_162714, move_162715) {
	var result_162716 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162728 = null;
		F.line = 2896;
		e_162728 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 282;
		e_162728.message = nimCopy(null, makeNimstrLit("make_move() must be overridden"), NTI138);
		F.line = 2891;
		e_162728.parent = null;
		F.line = 282;
		raiseException(e_162728, "FieldError");
	framePtr = F.prev;

	return result_162716;

}

function make_move_162718(self_162714, move_162715) {
	var result_162721 = null;

	var F={procname:"turn_based_game.make_move",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 500;
		chckNilDisp(self_162714);
		if (isObj(self_162714.m_type, NTI168018)) {
		F.line = 274;
		result_162721 = make_move_168322(self_162714, move_162715);
		break BeforeRet;
		}
		else {
		if (isObj(self_162714.m_type, NTI161018)) {
		F.line = 274;
		result_162721 = make_move_162712(self_162714, move_162715);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_162721;

}

function next_player_number_162663(self_162665) {
	var result_162666 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_162666 = addInt((self_162665.current_player_number % self_162665.player_count), 1);
	framePtr = F.prev;

	return result_162666;

}

function next_player_number_162668(self_162665) {
	var result_162671 = 0;

	var F={procname:"turn_based_game.next_player_number",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 261;
		result_162671 = next_player_number_162663(self_162665);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_162671;

}

function finish_turn_162693(self_162695) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 271;
		self_162695.current_player_number = next_player_number_162668(self_162695);
	framePtr = F.prev;

	
}

function finish_turn_162697(self_162695) {
	var F={procname:"turn_based_game.finish_turn",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 266;
		finish_turn_162693(self_162695);
	framePtr = F.prev;

	
}

function restore_state_169529(self_169531, state_169532) {
	var F={procname:"game_logic.restore_state",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 130;
			var y_169544 = 0;
			F.line = 2104;
			var colontmp__169566 = 0;
			F.line = 130;
			colontmp__169566 = subInt(self_169531.size, 1);
			F.line = 2107;
			var res_169569 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_169569 <= colontmp__169566)) break L3;
						F.line = 2109;
						y_169544 = res_169569;
						L4: do {
							F.line = 131;
							var x_169556 = 0;
							F.line = 2104;
							var colontmp__169559 = 0;
							F.line = 131;
							colontmp__169559 = subInt(self_169531.size, 1);
							F.line = 2107;
							var res_169562 = 0;
							L5: do {
								F.line = 2108;
									L6: while (true) {
									if (!(res_169562 <= colontmp__169559)) break L6;
										F.line = 2109;
										x_169556 = res_169562;
										F.line = 132;
										self_169531.field[chckIndx(x_169556, 0, self_169531.field.length+0-1)-0][chckIndx(y_169544, 0, self_169531.field[chckIndx(x_169556, 0, self_169531.field.length+0-1)-0].length+0-1)-0] = nsuParseInt(nimCharToStr(state_169532[chckIndx(addInt(mulInt(y_169544, 3), x_169556), 0, state_169532.length+0-1)-0]));
										F.line = 2110;
										res_169562 = addInt(res_169562, 1);
									}
							} while(false);
						} while(false);
						F.line = 2110;
						res_169569 = addInt(res_169569, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function restore_state_162897(self_162899, state_162900) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162910 = null;
		F.line = 2896;
		e_162910 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 330;
		e_162910.message = nimCopy(null, makeNimstrLit("restore_state() must be overridden (if used)"), NTI138);
		F.line = 2891;
		e_162910.parent = null;
		F.line = 330;
		raiseException(e_162910, "FieldError");
	framePtr = F.prev;

	
}

function restore_state_162902(self_162899, state_162900) {
	var F={procname:"turn_based_game.restore_state",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 500;
		chckNilDisp(self_162899);
		if (isObj(self_162899.m_type, NTI168018)) {
		F.line = 325;
		restore_state_169529(self_162899, state_162900);
		}
		else {
		if (isObj(self_162899.m_type, NTI161018)) {
		F.line = 325;
		restore_state_162897(self_162899, state_162900);
		}
		}
	framePtr = F.prev;

	
}

function negamax_core_164042(game_164045, game_164045_Idx, ai_choice_164047, ai_choice_164047_Idx, depth_164048, orig_depth_164049, alpha_in_164050, beta_in_164051) {
			var Tmp1;
			var Tmp2;

	var result_164052 = 0.0;

	var F={procname:"negamax.negamax_core",prev:framePtr,filename:"../../../../.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 9;
		var possible_moves_164069 = [nimCopy(null, [], NTI164068)];
		F.line = 10;
		var starting_state_164070 = null;
		F.line = 11;
		var move_alpha_164071 = 0.0;
		F.line = 12;
		var alpha_164072 = alpha_in_164050;
		F.line = 13;
		var beta_164073 = beta_in_164051;
		F.line = 16;
		set_possible_moves_161103(game_164045[game_164045_Idx], possible_moves_164069, 0);
			if ((depth_164048 == 0)) Tmp2 = true; else {				Tmp2 = is_over_162755(game_164045[game_164045_Idx]);			}			if (Tmp2) Tmp1 = true; else {				Tmp1 = ((possible_moves_164069[0] != null ? possible_moves_164069[0].length : 0) == 0);			}		if (Tmp1) {
		F.line = 21;
		var score_164082 = scoring_162828(game_164045[game_164045_Idx]);
		if ((score_164082 == 0.0)) {
		F.line = 24;
		result_164052 = score_164082;
		break BeforeRet;
		}
		else {
			F.line = 26;
			result_164052 = (score_164082 - (((1.0000000000000000e-02 * depth_164048) * Math.abs(score_164082)) / score_164082));
			break BeforeRet;
		}
		
		}
		
		F.line = 30;
		starting_state_164070 = nimCopy(null, get_state_162865(game_164045[game_164045_Idx]), NTI138);
		F.line = 35;
		var best_move_164083 = nimCopy(null, possible_moves_164069[0][chckIndx(0, 0, possible_moves_164069[0].length+0-1)-0], NTI138);
		F.line = 36;
		var best_value_164084 = -Infinity;
		L3: do {
			F.line = 38;
			var move_164093 = null;
			F.line = 3911;
			var i_164098 = 0;
			F.line = 3912;
			var l_164100 = (possible_moves_164069[0] != null ? possible_moves_164069[0].length : 0);
			L4: do {
				F.line = 3913;
					L5: while (true) {
					if (!(i_164098 < l_164100)) break L5;
						F.line = 3914;
						move_164093 = possible_moves_164069[0][chckIndx(i_164098, 0, possible_moves_164069[0].length+0-1)-0];
						F.line = 42;
						make_move_162718(game_164045[game_164045_Idx], move_164093);
						F.line = 43;
						finish_turn_162697(game_164045[game_164045_Idx]);
						F.line = 47;
						move_alpha_164071 = -(negamax_core_164042(game_164045, game_164045_Idx, ai_choice_164047, ai_choice_164047_Idx, subInt(depth_164048, 1), orig_depth_164049, -(beta_164073), -(alpha_164072)));
						F.line = 56;
						restore_state_162902(game_164045[game_164045_Idx], starting_state_164070);
						if ((best_value_164084 < move_alpha_164071)) {
						F.line = 61;
						best_value_164084 = move_alpha_164071;
						F.line = 62;
						best_move_164083 = nimCopy(null, move_164093, NTI138);
						}
						
						if ((alpha_164072 < move_alpha_164071)) {
						F.line = 64;
						alpha_164072 = move_alpha_164071;
						if ((depth_164048 == orig_depth_164049)) {
						F.line = 66;
						ai_choice_164047[ai_choice_164047_Idx] = nimCopy(null, best_move_164083, NTI138);
						}
						
						if ((beta_164073 <= alpha_164072)) {
						F.line = 68;
						break L3;
						}
						
						}
						
						F.line = 3915;
						i_164098 = addInt(i_164098, 1);
						if (!(((possible_moves_164069[0] != null ? possible_moves_164069[0].length : 0) == l_164100))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 70;
		result_164052 = best_value_164084;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_164052;

}

function negamax_164114(game_164117, game_164117_Idx, depth_164118) {
	var result_164119 = null;

	var F={procname:"negamax.negamax",prev:framePtr,filename:"../../../../.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 76;
		var alpha_164120 = 0.0;
		F.line = 77;
		var beta_164121 = 0.0;
		F.line = 78;
		var ai_choice_164122 = [null];
		F.line = 79;
		var possible_moves_164139 = [nimCopy(null, [], NTI164138)];
		F.line = 81;
		alpha_164120 = -Infinity;
		F.line = 82;
		beta_164121 = Infinity;
		F.line = 86;
		set_possible_moves_161103(game_164117[game_164117_Idx], possible_moves_164139, 0);
		if (((possible_moves_164139[0] != null ? possible_moves_164139[0].length : 0) == 0)) {
		F.line = 88;
		result_164119 = nimCopy(null, [], NTI138);
		break BeforeRet;
		}
		
		F.line = 89;
		ai_choice_164122[0] = nimCopy(null, possible_moves_164139[0][chckIndx(0, 0, possible_moves_164139[0].length+0-1)-0], NTI138);
		F.line = 91;
		alpha_164120 = negamax_core_164042(game_164117, game_164117_Idx, ai_choice_164122, 0, depth_164118, depth_164118, alpha_164120, beta_164121);
		F.line = 99;
		result_164119 = nimCopy(null, ai_choice_164122[0], NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_164119;

}

function get_move_164170(self_164172, game_164173) {
	var result_164174 = null;

	var F={procname:"negamax.get_move",prev:framePtr,filename:"../../../../.nimble/pkgs/negamax-0.0.2/negamax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 110;
		var new_game_164175 = [null];
		F.line = 112;
		new_game_164175[0] = game_164173;
		F.line = 115;
		var choice_164202 = negamax_164114(new_game_164175, 0, self_164172.depth);
		F.line = 116;
		result_164174 = nimCopy(null, choice_164202, NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_164174;

}

function nsuIndent(s_126663, count_126664, padding_126665) {
						var Tmp6;

	var result_126666 = null;

		result_126666 = nimCopy(null, [], NTI138);
		var i_126668 = 0;
		L1: do {
			var line_126669 = null;
			var first_126703 = 0;
			var last_126705 = 0;
			var eolpos_126707 = 0;
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						L4: do {
								L5: while (true) {
								if (!((last_126705 < (s_126663 != null ? s_126663.length : 0)) && !((ConstSet9[s_126663[last_126705]] != undefined)))) break L5;
									last_126705 += 1;
								}
						} while(false);
						eolpos_126707 = last_126705;
						if ((last_126705 < (s_126663 != null ? s_126663.length : 0))) {
						if ((s_126663[last_126705] == 10)) {
						last_126705 += 1;
						}
						else {
						if ((s_126663[last_126705] == 13)) {
						last_126705 += 1;
						if (((last_126705 < (s_126663 != null ? s_126663.length : 0)) && (s_126663[last_126705] == 10))) {
						last_126705 += 1;
						}
						
						}
						}
						}
						
						if (false) {
						Tmp6 = (last_126705 - 1);
						}
						else {
						Tmp6 = (eolpos_126707 - 1);
						}
						
						line_126669 = substr_23422(s_126663, first_126703, Tmp6);
						if (!((i_126668 == 0))) {
						if (result_126666 != null) { result_126666 = (result_126666).concat(makeNimstrLit("\x0A")); } else { result_126666 = makeNimstrLit("\x0A"); };
						}
						
						L7: do {
							var j_126681 = 0;
							var colontmp__126693 = 0;
							colontmp__126693 = count_126664;
							var res_126696 = 1;
							L8: do {
									L9: while (true) {
									if (!(res_126696 <= colontmp__126693)) break L9;
										j_126681 = res_126696;
										if (result_126666 != null) { result_126666 = (result_126666).concat(padding_126665); } else { result_126666 = padding_126665.slice(); };
										res_126696 += 1;
									}
							} while(false);
						} while(false);
						if (result_126666 != null) { result_126666 = (result_126666).concat(line_126669); } else { result_126666 = line_126669.slice(); };
						i_126668 += 1;
						if ((eolpos_126707 == last_126705)) {
						break L2;
						}
						
						first_126703 = last_126705;
					}
			} while(false);
		} while(false);

	return result_126666;

}

function is_filled_157491(hcode_157493) {
	var result_157494 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 18;
		result_157494 = !((hcode_157493 == 0));
	framePtr = F.prev;

	return result_157494;

}

function find_162413(a_162418, item_162420) {
	var result_162421 = 0;

	var F={procname:"find.find",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 2511;
			var i_162460 = null;
			F.line = 2247;
			var i_162476 = 0;
			L2: do {
				F.line = 2248;
					L3: while (true) {
					if (!(i_162476 < (a_162418 != null ? a_162418.length : 0))) break L3;
						F.line = 2249;
						i_162460 = a_162418[chckIndx(i_162476, 0, a_162418.length+0-1)-0];
						if (eqStrings(i_162460, item_162420)) {
						F.line = 2512;
						break BeforeRet;
						}
						
						F.line = 2513;
						result_162421 = addInt(result_162421, 1);
						F.line = 2250;
						i_162476 = addInt(i_162476, 1);
					}
			} while(false);
		} while(false);
		F.line = 2514;
		result_162421 = -1;
	} while (false);
	framePtr = F.prev;

	return result_162421;

}

function contains_162403(a_162408, item_162410) {
	var result_162411 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2519;
		result_162411 = (0 <= find_162413(a_162408, item_162410));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_162411;

}

function get_move_161135(self_161137, game_161138) {
	var result_161139 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 189;
		var move_list_161161 = [nimCopy(null, [], NTI161160)];
		F.line = 190;
		var descriptive_move_list_161169 = [{data: null, counter: 0, first: 0, last: 0}];
		F.line = 191;
		var compact_description_161170 = false;
		F.line = 192;
		rawEcho([]);
		F.line = 193;
		rawEcho(makeNimstrLit("   Status:"));
		F.line = 194;
		rawEcho(nsuIndent(status_161109(game_161138), 2, makeNimstrLit("   ")));
		F.line = 195;
		set_possible_moves_161103(game_161138, move_list_161161, 0);
		if ((0 < (move_list_161161[0] != null ? move_list_161161[0].length : 0))) {
		F.line = 197;
		compact_description_161170 = true;
		}
		else {
			F.line = 199;
			set_possible_moves_161094(game_161138, descriptive_move_list_161169[0]);
			L1: do {
				F.line = 200;
				var key_162086 = null;
				F.line = 200;
				var value_162087 = null;
				F.line = 540;
				var h_162512 = descriptive_move_list_161169[0].first;
				L2: do {
					F.line = 549;
						L3: while (true) {
						if (!(0 <= h_162512)) break L3;
							F.line = 542;
							var nxt_162514 = descriptive_move_list_161169[0].data[chckIndx(h_162512, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field1;
							if (is_filled_157491(descriptive_move_list_161169[0].data[chckIndx(h_162512, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field0)) {
							F.line = 550;
							key_162086 = descriptive_move_list_161169[0].data[chckIndx(h_162512, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field2;
							F.line = 550;
							value_162087 = descriptive_move_list_161169[0].data[chckIndx(h_162512, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field3;
							F.line = 201;
							var Tmp4 = nimCopy(null, key_162086, NTI138);
							if (move_list_161161[0] != null) { move_list_161161[0].push(Tmp4); } else { move_list_161161[0] = [Tmp4]; };
							}
							
							F.line = 544;
							h_162512 = nxt_162514;
						}
				} while(false);
			} while(false);
		}
		
		L5: do {
			F.line = 202;
				L6: while (true) {
				if (!true) break L6;
					F.line = 203;
					rawEcho(makeNimstrLit("   Possible moves:"));
					if (compact_description_161170) {
					F.line = 205;
					var disp_162101 = makeNimstrLit("      ");
					L7: do {
						F.line = 206;
						var key_162215 = null;
						F.line = 3911;
						var i_162519 = 0;
						F.line = 3912;
						var l_162521 = (move_list_161161[0] != null ? move_list_161161[0].length : 0);
						L8: do {
							F.line = 3913;
								L9: while (true) {
								if (!(i_162519 < l_162521)) break L9;
									F.line = 3914;
									key_162215 = move_list_161161[0][chckIndx(i_162519, 0, move_list_161161[0].length+0-1)-0];
									F.line = 207;
									if (disp_162101 != null) { disp_162101 = (disp_162101).concat(nsuFormatVarargs(makeNimstrLit("[$#] "), [key_162215])); } else { disp_162101 = nsuFormatVarargs(makeNimstrLit("[$#] "), [key_162215]).slice(); };
									F.line = 3915;
									i_162519 = addInt(i_162519, 1);
									if (!(((move_list_161161[0] != null ? move_list_161161[0].length : 0) == l_162521))) {
									F.line = 3916;
									failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
									}
									
								}
						} while(false);
					} while(false);
					F.line = 208;
					rawEcho(disp_162101);
					}
					else {
						L10: do {
							F.line = 210;
							var key_162231 = null;
							F.line = 210;
							var value_162232 = null;
							F.line = 540;
							var h_162525 = descriptive_move_list_161169[0].first;
							L11: do {
								F.line = 549;
									L12: while (true) {
									if (!(0 <= h_162525)) break L12;
										F.line = 542;
										var nxt_162527 = descriptive_move_list_161169[0].data[chckIndx(h_162525, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field1;
										if (is_filled_157491(descriptive_move_list_161169[0].data[chckIndx(h_162525, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field0)) {
										F.line = 550;
										key_162231 = descriptive_move_list_161169[0].data[chckIndx(h_162525, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field2;
										F.line = 550;
										value_162232 = descriptive_move_list_161169[0].data[chckIndx(h_162525, 0, descriptive_move_list_161169[0].data.length+0-1)-0].Field3;
										F.line = 211;
										rawEcho((makeNimstrLit("      ")).concat(nsuFormatVarargs(makeNimstrLit("[$key]: $value"), [makeNimstrLit("key"), key_162231, makeNimstrLit("value"), value_162232])));
										}
										
										F.line = 544;
										h_162525 = nxt_162527;
									}
							} while(false);
						} while(false);
					}
					
					F.line = 212;
					rawEcho(makeNimstrLit("   Enter move (or \'quit\'): "));
					F.line = 213;
					var response_162245 = null;
					F.line = 216;
					response_162245 = nimCopy(null, makeNimstrLit("When compiling for Javascript, you cannot use this procedure."), NTI138);
					if (contains_162403(move_list_161161[0], response_162245)) {
					F.line = 220;
					result_161139 = nimCopy(null, response_162245, NTI138);
					break BeforeRet;
					}
					
					if (eqStrings(response_162245, makeNimstrLit("quit"))) {
					F.line = 222;
					result_161139 = nimCopy(null, [], NTI138);
					break BeforeRet;
					}
					
					F.line = 223;
					rawEcho(makeNimstrLit("   BAD ENTRY. Try again."));
				}
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_161139;

}

function get_move_161141(self_161137, game_161138) {
	var result_161144 = null;

	var F={procname:"turn_based_game.get_move",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 500;
		chckNilDisp(self_161137);
		if (isObj(self_161137.m_type, NTI164164)) {
		F.line = 188;
		result_161144 = get_move_164170(self_161137, game_161138);
		break BeforeRet;
		}
		else {
		if (isObj(self_161137.m_type, NTI161025)) {
		F.line = 188;
		result_161144 = get_move_161135(self_161137, game_161138);
		break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_161144;

}

function current_player_162615(self_162617) {
	var result_162618 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 245;
		result_162618 = self_162617.players[chckIndx(subInt(self_162617.current_player_number, 1), 0, self_162617.players.length+0-1)-0];
	framePtr = F.prev;

	return result_162618;

}

function current_player_162620(self_162617) {
	var result_162623 = null;

	var F={procname:"turn_based_game.current_player",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 244;
		result_162623 = current_player_162615(self_162617);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_162623;

}

function winning_player_162637(self_162639) {
	var result_162640 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((0 < self_162639.winner_player_number)) {
		F.line = 254;
		result_162640 = self_162639.players[chckIndx(subInt(self_162639.winner_player_number, 1), 0, self_162639.players.length+0-1)-0];
		break BeforeRet;
		}
		else {
		if ((self_162639.winner_player_number == 0)) {
		F.line = 256;
		result_162640 = {name: makeNimstrLit("NO WINNER YET"), m_type: NTI161025};
		break BeforeRet;
		}
		else {
			F.line = 258;
			result_162640 = {name: makeNimstrLit("STALEMATE OR TIE"), m_type: NTI161025};
			break BeforeRet;
		}
		}
	} while (false);
	framePtr = F.prev;

	return result_162640;

}

function winning_player_162642(self_162639) {
	var result_162645 = null;

	var F={procname:"turn_based_game.winning_player",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 249;
		result_162645 = winning_player_162637(self_162639);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_162645;

}

function get_lines_168340(self_168342) {
	var result_168345 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 46;
		var s_168351 = subInt(self_168342.size, 1);
		F.line = 47;
		var v_line_168353 = null;
		F.line = 48;
		var h_line_168355 = null;
		F.line = 49;
		var s_line1_168357 = null;
		F.line = 50;
		var s_line2_168359 = null;
		F.line = 51;
		var s_line3_168361 = null;
		F.line = 52;
		var s_line4_168363 = null;
		L1: do {
			F.line = 53;
			var i_168375 = 0;
			F.line = 2107;
			var res_168612 = 0;
			L2: do {
				F.line = 2108;
					L3: while (true) {
					if (!(res_168612 <= s_168351)) break L3;
						F.line = 2109;
						i_168375 = res_168612;
						F.line = 54;
						v_line_168353 = nimCopy(null, [], NTI168390);
						F.line = 55;
						h_line_168355 = nimCopy(null, [], NTI168405);
						F.line = 56;
						s_line1_168357 = nimCopy(null, [], NTI168420);
						F.line = 57;
						s_line2_168359 = nimCopy(null, [], NTI168435);
						F.line = 58;
						s_line3_168361 = nimCopy(null, [], NTI168450);
						F.line = 59;
						s_line4_168363 = nimCopy(null, [], NTI168465);
						L4: do {
							F.line = 60;
							var j_168477 = 0;
							F.line = 2107;
							var res_168606 = 0;
							L5: do {
								F.line = 2108;
									L6: while (true) {
									if (!(res_168606 <= s_168351)) break L6;
										F.line = 2109;
										j_168477 = res_168606;
										F.line = 62;
										var Tmp7 = nimCopy(null, self_168342.field[chckIndx(i_168375, 0, self_168342.field.length+0-1)-0][chckIndx(j_168477, 0, self_168342.field[chckIndx(i_168375, 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (v_line_168353 != null) { v_line_168353.push(Tmp7); } else { v_line_168353 = [Tmp7]; };
										F.line = 64;
										var Tmp8 = nimCopy(null, self_168342.field[chckIndx(j_168477, 0, self_168342.field.length+0-1)-0][chckIndx(i_168375, 0, self_168342.field[chckIndx(j_168477, 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (h_line_168355 != null) { h_line_168355.push(Tmp8); } else { h_line_168355 = [Tmp8]; };
										if ((addInt(i_168375, j_168477) <= s_168351)) {
										F.line = 67;
										var Tmp9 = nimCopy(null, self_168342.field[chckIndx(addInt(i_168375, j_168477), 0, self_168342.field.length+0-1)-0][chckIndx(j_168477, 0, self_168342.field[chckIndx(addInt(i_168375, j_168477), 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (s_line1_168357 != null) { s_line1_168357.push(Tmp9); } else { s_line1_168357 = [Tmp9]; };
										F.line = 68;
										var Tmp10 = nimCopy(null, self_168342.field[chckIndx(addInt(i_168375, j_168477), 0, self_168342.field.length+0-1)-0][chckIndx(subInt(s_168351, j_168477), 0, self_168342.field[chckIndx(addInt(i_168375, j_168477), 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (s_line2_168359 != null) { s_line2_168359.push(Tmp10); } else { s_line2_168359 = [Tmp10]; };
										if ((0 < i_168375)) {
										F.line = 70;
										var Tmp11 = nimCopy(null, self_168342.field[chckIndx(subInt(s_168351, addInt(i_168375, j_168477)), 0, self_168342.field.length+0-1)-0][chckIndx(j_168477, 0, self_168342.field[chckIndx(subInt(s_168351, addInt(i_168375, j_168477)), 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (s_line3_168361 != null) { s_line3_168361.push(Tmp11); } else { s_line3_168361 = [Tmp11]; };
										F.line = 71;
										var Tmp12 = nimCopy(null, self_168342.field[chckIndx(subInt(s_168351, addInt(i_168375, j_168477)), 0, self_168342.field.length+0-1)-0][chckIndx(subInt(s_168351, j_168477), 0, self_168342.field[chckIndx(subInt(s_168351, addInt(i_168375, j_168477)), 0, self_168342.field.length+0-1)-0].length+0-1)-0], NTI104);
										if (s_line4_168363 != null) { s_line4_168363.push(Tmp12); } else { s_line4_168363 = [Tmp12]; };
										}
										
										}
										
										F.line = 2110;
										res_168606 = addInt(res_168606, 1);
									}
							} while(false);
						} while(false);
						F.line = 72;
						var Tmp13 = nimCopy(null, h_line_168355, NTI168354);
						if (result_168345 != null) { result_168345.push(Tmp13); } else { result_168345 = [Tmp13]; };
						F.line = 73;
						var Tmp14 = nimCopy(null, v_line_168353, NTI168352);
						if (result_168345 != null) { result_168345.push(Tmp14); } else { result_168345 = [Tmp14]; };
						F.line = 74;
						var Tmp15 = nimCopy(null, s_line1_168357, NTI168356);
						if (result_168345 != null) { result_168345.push(Tmp15); } else { result_168345 = [Tmp15]; };
						F.line = 75;
						var Tmp16 = nimCopy(null, s_line2_168359, NTI168358);
						if (result_168345 != null) { result_168345.push(Tmp16); } else { result_168345 = [Tmp16]; };
						if ((0 < i_168375)) {
						F.line = 77;
						var Tmp17 = nimCopy(null, s_line3_168361, NTI168360);
						if (result_168345 != null) { result_168345.push(Tmp17); } else { result_168345 = [Tmp17]; };
						F.line = 78;
						var Tmp18 = nimCopy(null, s_line4_168363, NTI168362);
						if (result_168345 != null) { result_168345.push(Tmp18); } else { result_168345 = [Tmp18]; };
						}
						
						F.line = 2110;
						res_168612 = addInt(res_168612, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_168345;

}

function get_lines_168347(self_168342) {
	var result_168350 = null;

	var F={procname:"game_logic.getLines",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 45;
		result_168350 = get_lines_168340(self_168342);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_168350;

}

function max_line_length_168629(line_168632) {
	var result_168634 = {Field0: 0, Field1: 0};

	var F={procname:"game_logic.maxLineLength",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 84;
		result_168634["Field1"] = line_168632[chckIndx(0, 0, line_168632.length+0-1)-0];
		L1: do {
			F.line = 85;
			var field_168815 = 0;
			F.line = 3911;
			var i_168828 = 0;
			F.line = 3912;
			var l_168830 = (line_168632 != null ? line_168632.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_168828 < l_168830)) break L3;
						F.line = 3914;
						field_168815 = line_168632[chckIndx(i_168828, 0, line_168632.length+0-1)-0];
						if (!((field_168815 == 0))) {
						if ((field_168815 == result_168634["Field1"])) {
						F.line = 89;
						result_168634["Field0"] = addInt(result_168634["Field0"], 1);
						}
						else {
							F.line = 92;
							result_168634["Field0"] = 1;
							F.line = 93;
							result_168634["Field1"] = field_168815;
						}
						
						}
						
						F.line = 3915;
						i_168828 = addInt(i_168828, 1);
						if (!(((line_168632 != null ? line_168632.length : 0) == l_168830))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_168634;

}

function all_169130(s_169135, pred_169140) {
	var result_169141 = false;

	var F={procname:"all.all",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/collections/sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 455;
			var i_169180 = null;
			F.line = 2247;
			var i_169184 = 0;
			L2: do {
				F.line = 2248;
					L3: while (true) {
					if (!(i_169184 < (s_169135 != null ? s_169135.length : 0))) break L3;
						F.line = 2249;
						i_169180 = s_169135[chckIndx(i_169184, 0, s_169135.length+0-1)-0];
						if (!(pred_169140(i_169180))) {
						F.line = 457;
						result_169141 = false;
						break BeforeRet;
						}
						
						F.line = 2250;
						i_169184 = addInt(i_169184, 1);
					}
			} while(false);
		} while(false);
		F.line = 458;
		result_169141 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169141;

}

function all_169045(s_169050, pred_169055) {
	var result_169056 = false;

	var F={procname:"all.all",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/pure/collections/sequtils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 455;
			var i_169095 = 0;
			F.line = 2247;
			var i_169099 = 0;
			L2: do {
				F.line = 2248;
					L3: while (true) {
					if (!(i_169099 < (s_169050 != null ? s_169050.length : 0))) break L3;
						F.line = 2249;
						i_169095 = s_169050[chckIndx(i_169099, 0, s_169050.length+0-1)-0];
						if (!(pred_169055(i_169095))) {
						F.line = 457;
						result_169056 = false;
						break BeforeRet;
						}
						
						F.line = 2250;
						i_169099 = addInt(i_169099, 1);
					}
			} while(false);
		} while(false);
		F.line = 458;
		result_169056 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169056;

}

function determine_winner_168844(self_168846) {

			function HEX3Aanonymous_169018(line_169021) {

					function HEX3Aanonymous_169024(x_169026) {
						var result_169027 = false;

						var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"game_logic.nim",line:0};
						framePtr = F;
							F.line = 109;
							result_169027 = !((x_169026 == 0));
						framePtr = F.prev;

						return result_169027;

					}

				var result_169022 = false;

				var F={procname:"determine_winner.:anonymous",prev:framePtr,filename:"game_logic.nim",line:0};
				framePtr = F;
					F.line = 108;
					result_169022 = all_169045(line_169021, HEX3Aanonymous_169024);
				framePtr = F.prev;

				return result_169022;

			}

	var F={procname:"game_logic.determine_winner",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((self_168846.winner_player_number == 0))) {
		F.line = 98;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 99;
			var line_169015 = null;
			F.line = 3909;
			var colontmp__169199 = null;
			F.line = 99;
			colontmp__169199 = get_lines_168347(self_168846);
			F.line = 3911;
			var i_169202 = 0;
			F.line = 3912;
			var l_169204 = (colontmp__169199 != null ? colontmp__169199.length : 0);
			L2: do {
				F.line = 3913;
					L3: while (true) {
					if (!(i_169202 < l_169204)) break L3;
						F.line = 3914;
						line_169015 = colontmp__169199[chckIndx(i_169202, 0, colontmp__169199.length+0-1)-0];
						F.line = 101;
						var max_length_169016 = max_line_length_168629(line_169015);
						if ((self_168846.winCount <= max_length_169016["Field0"])) {
						F.line = 103;
						self_168846.winner_player_number = max_length_169016["Field1"];
						F.line = 104;
						break BeforeRet;
						}
						
						F.line = 3915;
						i_169202 = addInt(i_169202, 1);
						if (!(((colontmp__169199 != null ? colontmp__169199.length : 0) == l_169204))) {
						F.line = 3916;
						failed_assert_impl_20481(makeNimstrLit("/home/manuel/.choosenim/toolchains/nim-0.19.4/lib/system.nim(3916, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (all_169130(self_168846.field, HEX3Aanonymous_169018)) {
		F.line = 110;
		self_168846.winner_player_number = -1;
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function determine_winner_162789(self_162791) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162801 = null;
		F.line = 2896;
		e_162801 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 305;
		e_162801.message = nimCopy(null, makeNimstrLit("determine_winner() must be overridden"), NTI138);
		F.line = 2891;
		e_162801.parent = null;
		F.line = 305;
		raiseException(e_162801, "FieldError");
	framePtr = F.prev;

	
}

function determine_winner_162793(self_162791) {
	var F={procname:"turn_based_game.determine_winner",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 500;
		chckNilDisp(self_162791);
		if (isObj(self_162791.m_type, NTI168018)) {
		F.line = 300;
		determine_winner_168844(self_162791);
		}
		else {
		if (isObj(self_162791.m_type, NTI161018)) {
		F.line = 300;
		determine_winner_162789(self_162791);
		}
		}
	framePtr = F.prev;

	
}

function default_setup_162968(self_162970, players_162972) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 353;
		self_162970.players = nimCopy(null, players_162972, NTI162971);
		F.line = 354;
		self_162970.player_count = (self_162970.players != null ? self_162970.players.length : 0);
		F.line = 355;
		self_162970.current_player_number = 1;
		F.line = 356;
		self_162970.winner_player_number = 0;
	framePtr = F.prev;

	
}

function default_setup_162974(self_162970, players_162972) {
	var F={procname:"turn_based_game.default_setup",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 340;
		default_setup_162968(self_162970, players_162972);
	framePtr = F.prev;

	
}

function new_seq_168143(len_168147) {
	var result_168149 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 763;
		result_168149 = new Array(len_168147); for (var i=0;i<len_168147;++i) {result_168149[i]=null;}	framePtr = F.prev;

	return result_168149;

}

function new_seq_168096(len_168100) {
	var result_168102 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"../../../../.choosenim/toolchains/nim-0.19.4/lib/system.nim",line:0};
	framePtr = F;
		F.line = 763;
		result_168102 = new Array(len_168100); for (var i=0;i<len_168100;++i) {result_168102[i]=0;}	framePtr = F.prev;

	return result_168102;

}

function reset_field_168072(self_168074) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 25;
		F.line = 731;
		var result_168174 = new_seq_168143(chckRange(self_168074.size, 0, 2147483647));
		L1: do {
			F.line = 732;
			var i_168185 = 0;
			F.line = 3616;
			var colontmp__168217 = 0;
			F.line = 25;
			colontmp__168217 = self_168074.size;
			F.line = 3617;
			var i_168220 = 0;
			L2: do {
				F.line = 3618;
					L3: while (true) {
					if (!(i_168220 < colontmp__168217)) break L3;
						F.line = 3619;
						i_168185 = i_168220;
						F.line = 25;
						result_168174[chckIndx(i_168185, 0, result_168174.length+0-1)-0] = nimCopy(null, new_seq_168096(chckRange(self_168074.size, 0, 2147483647)), NTI168101);
						F.line = 3620;
						i_168220 = addInt(i_168220, 1);
					}
			} while(false);
		} while(false);
		self_168074.field = nimCopy(null, result_168174, NTI168148);
	framePtr = F.prev;

	
}

function reset_field_168076(self_168074) {
	var F={procname:"game_logic.resetField",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 24;
		reset_field_168072(self_168074);
	framePtr = F.prev;

	
}

function setup_168235(self_168237, players_168239) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 29;
		default_setup_162974(self_168237, players_168239);
		F.line = 30;
		reset_field_168076(self_168237);
	framePtr = F.prev;

	
}

function setup_162932(self_162934, players_162936) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 2895;
		var e_162946 = null;
		F.line = 2896;
		e_162946 = {m_type: NTI3860, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 337;
		e_162946.message = nimCopy(null, makeNimstrLit("setup() must be overridden"), NTI138);
		F.line = 2891;
		e_162946.parent = null;
		F.line = 337;
		raiseException(e_162946, "FieldError");
	framePtr = F.prev;

	
}

function setup_162938(self_162934, players_162936) {
	var F={procname:"turn_based_game.setup",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 500;
		chckNilDisp(self_162934);
		if (isObj(self_162934.m_type, NTI168018)) {
		F.line = 333;
		setup_168235(self_162934, players_162936);
		}
		else {
		if (isObj(self_162934.m_type, NTI161018)) {
		F.line = 333;
		setup_162932(self_162934, players_162936);
		}
		}
	framePtr = F.prev;

	
}

function play_162996(self_162998) {
	var result_163000 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
		F.line = 362;
		result_163000 = nimCopy(null, [], NTI163020);
		F.line = 363;
		var move_163021 = [];
		L1: do {
			F.line = 364;
				L2: while (true) {
				if (!!(is_over_162755(self_162998))) break L2;
					F.line = 365;
					display_161116(current_player_162620(self_162998), makeNimstrLit("-----------------"));
					F.line = 366;
					display_161116(current_player_162620(self_162998), nsuFormatVarargs(makeNimstrLit("$1\'s Turn"), [current_player_162620(self_162998).name]));
					F.line = 367;
					move_163021 = nimCopy(null, get_move_161141(current_player_162620(self_162998), self_162998), NTI138);
					if (eqStrings(move_163021, [])) {
					F.line = 369;
					break L1;
					}
					
					F.line = 370;
					var Tmp3 = nimCopy(null, move_163021, NTI138);
					if (result_163000 != null) { result_163000.push(Tmp3); } else { result_163000 = [Tmp3]; };
					F.line = 371;
					display_161116(current_player_162620(self_162998), []);
					F.line = 372;
					display_161116(current_player_162620(self_162998), (makeNimstrLit("   ")).concat(make_move_162718(self_162998, move_163021)));
					F.line = 373;
					determine_winner_162793(self_162998);
					if (is_over_162755(self_162998)) {
					F.line = 375;
					display_161116(current_player_162620(self_162998), []);
					if ((self_162998.winner_player_number == -1)) {
					F.line = 377;
					display_161116(current_player_162620(self_162998), makeNimstrLit("STALEMATE."));
					}
					else {
						F.line = 379;
					display_161116(current_player_162620(self_162998), nsuFormatVarargs(makeNimstrLit("WINNER IS $#"), [winning_player_162642(self_162998).name]));
					}
					
					F.line = 380;
					break L1;
					}
					
					F.line = 381;
					self_162998.current_player_number = next_player_number_162668(self_162998);
				}
		} while(false);
	framePtr = F.prev;

	return result_163000;

}

function play_163002(self_162998) {
	var result_163005 = null;

	var F={procname:"turn_based_game.play",prev:framePtr,filename:"../../../../.nimble/pkgs/turn_based_game-1.1.3/turn_based_game.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 359;
		result_163005 = play_162996(self_162998);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_163005;

}

function setup_169634(self_169636, s_169637) {
		var Tmp1;

	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 143;
		self_169636.size = s_169637.size;
		F.line = 144;
		if ((s_169637.winCount == 0)) {
		Tmp1 = s_169637.size;
		}
		else {
		Tmp1 = s_169637.winCount;
		}
		
		self_169636.winCount = Tmp1;
		if (s_169637.ai) {
		F.line = 146;
		setup_162938(self_169636, [{name: nimCopy(null, s_169637.name1, NTI138), m_type: NTI161025}, {name: nimCopy(null, s_169637.name2, NTI138), m_type: NTI164164, depth: 0}]);
		}
		else {
			F.line = 148;
		setup_162938(self_169636, [{name: nimCopy(null, s_169637.name1, NTI138), m_type: NTI161025}, {name: nimCopy(null, s_169637.name2, NTI138), m_type: NTI161025}]);
		}
		
	framePtr = F.prev;

	
}

function setup_169639(self_169636, s_169637) {
	var F={procname:"game_logic.setup",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 142;
		setup_169634(self_169636, s_169637);
	framePtr = F.prev;

	
}

function play_on_cli_169682(self_169684) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		play_163002(self_169684);
	framePtr = F.prev;

	
}

function play_on_cli_169686(self_169684) {
	var F={procname:"game_logic.playOnCli",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 150;
		play_on_cli_169682(self_169684);
	framePtr = F.prev;

	
}

function field_169701(self_169703) {
	var result_169706 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 154;
		result_169706 = nimCopy(null, self_169703.field, NTI168019);
	framePtr = F.prev;

	return result_169706;

}

function field_169708(self_169703) {
	var result_169711 = null;

	var F={procname:"game_logic.field",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 153;
		result_169711 = field_169701(self_169703);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169711;

}

function size_169725(self_169727) {
	var result_169728 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 157;
		result_169728 = self_169727.size;
	framePtr = F.prev;

	return result_169728;

}

function size_169730(self_169727) {
	var result_169733 = 0;

	var F={procname:"game_logic.size",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 156;
		result_169733 = size_169725(self_169727);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169733;

}

function get_player_169747(self_169749) {
		var Tmp1;

	var result_169750 = null;

	var F={procname:"game_logic.getPlayer",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 161;
		if ((current_player_162620(self_169749) == null)) {
		Tmp1 = makeNimstrLit("Game is not setup yet");
		}
		else {
		Tmp1 = current_player_162620(self_169749).name;
		}
		
		result_169750 = nimCopy(null, Tmp1, NTI138);
	framePtr = F.prev;

	return result_169750;

}

function get_player_169752(self_169749) {
	var result_169755 = null;

	var F={procname:"game_logic.getPlayer",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 160;
		result_169755 = get_player_169747(self_169749);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169755;

}

function make_turn_169780(self_169782, move_169783) {
	var result_169784 = null;

	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 168;
		result_169784 = nimCopy(null, makeNimstrLit("playing"), NTI138);
		if (is_over_162755(self_169782)) {
		F.line = 170;
		result_169784 = nimCopy(null, makeNimstrLit("Game is Over"), NTI138);
		break BeforeRet;
		}
		
		F.line = 171;
		make_move_162718(self_169782, move_169783);
		F.line = 172;
		determine_winner_162793(self_169782);
		if (is_over_162755(self_169782)) {
		if ((self_169782.winner_player_number == -1)) {
		F.line = 175;
		result_169784 = nimCopy(null, makeNimstrLit("It\'s a tie"), NTI138);
		}
		else {
			F.line = 177;
			F.line = 177;
			var fmt_res_169792 = mnewString(0);
			F.line = 177;
			if (fmt_res_169792 != null) { fmt_res_169792 = (fmt_res_169792).concat(makeNimstrLit("Winner is ")); } else { fmt_res_169792 = makeNimstrLit("Winner is "); };
			F.line = 260;
			if (fmt_res_169792 != null) { fmt_res_169792 = (fmt_res_169792).concat(winning_player_162642(self_169782).name); } else { fmt_res_169792 = winning_player_162642(self_169782).name.slice(); };
			result_169784 = nimCopy(null, fmt_res_169792, NTI138);
		}
		
		F.line = 178;
		break BeforeRet;
		}
		
		F.line = 179;
		finish_turn_162697(self_169782);
		if (isObj(current_player_162620(self_169782).m_type, NTI164164)) {
		F.line = 182;
		make_move_162718(self_169782, get_move_161141(current_player_162620(self_169782), self_169782));
		F.line = 183;
		finish_turn_162697(self_169782);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_169784;

}

function make_turn_169786(self_169782, move_169783) {
	var result_169789 = null;

	var F={procname:"game_logic.make_turn",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 167;
		result_169789 = make_turn_169780(self_169782, move_169783);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_169789;

}

function finished_170026(self_170028) {
	var result_170029 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
		F.line = 187;
		result_170029 = is_over_162755(self_170028);
	framePtr = F.prev;

	return result_170029;

}

function finished_170031(self_170028) {
	var result_170034 = false;

	var F={procname:"game_logic.finished",prev:framePtr,filename:"game_logic.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 186;
		result_170034 = finished_170026(self_170028);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_170034;

}
